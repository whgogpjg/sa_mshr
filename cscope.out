cscope 15 $HOME/simplescalar               0001588174
	@bitmap.h

52 #i‚de‡
BITMAP_H


53 
	#BITMAP_H


	)

61 
	#BITMAP_SIZE
(
BITS
Ë(((BITS)+31)/32)

	)

62 
	#BITMAP_TYPE
(
BITS
, 
NAME
Ë(NAME)[
	`BITMAP_SIZE
(BITS)]

	)

64 
	tBITMAP_ENT_TYPE
;

65 *
	tBITMAP_PTR_TYPE
;

68 
	#BITMAP_SET_MAP
(
BMAP
, 
SZ
) \

69 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0xffffffff; }

	)

72 
	#BITMAP_CLEAR_MAP
(
BMAP
, 
SZ
) \

73 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0; }

	)

76 
	#BITMAP_SET
(
BMAP
, 
SZ
, 
BIT
) \

77 (((
BMAP
)[(
BIT
)/32] |(1 << ((BITË% 32))), (BMAP))

	)

80 
	#BITMAP_CLEAR
(
BMAP
, 
SZ
, 
BIT
) \

81 (((
BMAP
)[(
BIT
)/32] &~(1 << ((BITË% 32))), (BMAP))

	)

84 
	#BITMAP_COPY
(
DESTMAP
, 
SRCMAP
, 
SZ
) \

85 { 
i
; i=0; i<(
SZ
); i++Ë(
DESTMAP
)[i] = (
SRCMAP
)[i]; }

	)

88 
	#__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, 
OP
) \

89 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = (
B2
)[i] 
	`OP
 (
B3
)[i]; }

	)

92 
	#BITMAP_IOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

93 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, |)

	)

96 
	#BITMAP_XOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

97 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, ^)

	)

100 
	#BITMAP_AND
(
B1
, 
B2
, 
B3
, 
SZ
) \

101 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, &)

	)

104 
	#BITMAP_NOT
(
B1
, 
B2
, 
SZ
) \

105 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = ~((
B2
)[i]); }

	)

108 
	#BITMAP_EMPTY_P
(
BMAP
, 
SZ
) \

109 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
BMAP
)[i]; !ªs; })

	)

112 
	#BITMAP_DISJOINT_P
(
B1
, 
B2
, 
SZ
) \

113 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
B1
)[i] & (
B2
)[i]; !ªs; })

	)

116 
	#BITMAP_SET_P
(
BMAP
, 
SZ
, 
BIT
) \

117 (((
BMAP
)[(
BIT
)/32] & (1 << ((BITË% 32))Ë!0)

	)

120 
	#BITMAP_CLEAR_P
(
BMAP
, 
SZ
, 
BIT
) \

121 (!
	`BMAP_SET_P
((
BMAP
), (
SZ
), (
BIT
)))

	)

124 
	#BITMAP_COUNT_ONES
(
BMAP
, 
SZ
) \

126 
i
, 
j
, 
n
 = 0; \

127 
i
 = 0; i < (
SZ
) ; i++) \

129 
w‹d
 = (
BMAP
)[
i
]; \

130 
j
=0; j < (()*8); j++) \

132 
√w_vÆ
, 
ﬁd_vÆ
 = 
w‹d
; \

133 
w‹d
 >>= 1; \

134 
√w_vÆ
 = 
w‹d
 << 1; \

135 i‡(
ﬁd_vÆ
 !
√w_vÆ
) \

136 
n
++; \

139 
n
; \

140 })

	)

	@bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"b¥ed.h
"

66 
b¥ed_t
 *

67 
	$b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

68 
bimod_size
,

69 
l1size
,

70 
l2size
,

71 
mëa_size
,

72 
shi·_width
,

73 
x‹
,

74 
btb_£ts
,

75 
btb_assoc
,

76 
ªt°ack_size
)

78 
b¥ed_t
 *
¥ed
;

80 i‡(!(
¥ed
 = 
	`ˇŒoc
(1, (
b¥ed_t
))))

81 
	`Áèl
("out of virtual memory");

83 
¥ed
->
˛ass
 = class;

85 
˛ass
) {

86 
BPªdComb
:

88 
¥ed
->
dú¥ed
.
bimod
 =

89 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
bimod_size
, 0, 0, 0);

92 
¥ed
->
dú¥ed
.
twﬁev
 =

93 
	`b¥ed_dú_¸óã
(
BPªd2Levñ
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

96 
¥ed
->
dú¥ed
.
mëa
 =

97 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
mëa_size
, 0, 0, 0);

101 
BPªd2Levñ
:

102 
¥ed
->
dú¥ed
.
twﬁev
 =

103 
	`b¥ed_dú_¸óã
(
˛ass
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

107 
BPªd2bô
:

108 
¥ed
->
dú¥ed
.
bimod
 =

109 
	`b¥ed_dú_¸óã
(
˛ass
, 
bimod_size
, 0, 0, 0);

111 
BPªdTakí
:

112 
BPªdNŸTakí
:

117 
	`∑nic
("bogusÖredictor class");

121 
˛ass
) {

122 
BPªdComb
:

123 
BPªd2Levñ
:

124 
BPªd2bô
:

126 
i
;

129 i‡(!
btb_£ts
 || (btb_sets & (btb_sets-1)) != 0)

130 
	`Áèl
("number of BTB sets must beÇon-zeroándáÖower ofÅwo");

131 i‡(!
btb_assoc
 || (btb_assoc & (btb_assoc-1)) != 0)

132 
	`Áèl
("BTBássociativity must beÇon-zeroándáÖower ofÅwo");

134 i‡(!(
¥ed
->
btb
.
btb_d©a
 = 
	`ˇŒoc
(
btb_£ts
 * 
btb_assoc
,

135 (
b¥ed_btb_ít_t
))))

136 
	`Áèl
("cannotállocate BTB");

138 
¥ed
->
btb
.
£ts
 = 
btb_£ts
;

139 
¥ed
->
btb
.
assoc
 = 
btb_assoc
;

141 i‡(
¥ed
->
btb
.
assoc
 > 1)

142 
i
=0; i < (
¥ed
->
btb
.
assoc
*¥ed->btb.
£ts
); i++)

144 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

145 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = &pred->btb.btb_data[i+1];

147 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = 
NULL
;

149 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

150 
¥ed
->
btb
.
btb_d©a
[
i
+1].
¥ev
 = &pred->btb.btb_data[i];

154 i‡((
ªt°ack_size
 & (retstack_size-1)) != 0)

155 
	`Áèl
("Return-address-stack size must be zero oráÖower ofÅwo");

157 
¥ed
->
ªt°ack
.
size
 = 
ªt°ack_size
;

158 i‡(
ªt°ack_size
)

159 i‡(!(
¥ed
->
ªt°ack
.
°ack
 = 
	`ˇŒoc
(
ªt°ack_size
,

160 (
b¥ed_btb_ít_t
))))

161 
	`Áèl
("cannotállocateÑeturn-address-stack");

162 
¥ed
->
ªt°ack
.
tos
 = 
ªt°ack_size
 - 1;

167 
BPªdTakí
:

168 
BPªdNŸTakí
:

173 
	`∑nic
("bogusÖredictor class");

176  
¥ed
;

177 
	}
}

180 
b¥ed_dú_t
 *

181 
	$b¥ed_dú_¸óã
 (

182 
b¥ed_˛ass
 
˛ass
,

183 
l1size
,

184 
l2size
,

185 
shi·_width
,

186 
x‹
)

188 
b¥ed_dú_t
 *
¥ed_dú
;

189 
˙t
;

190 
ÊùÊ›
;

192 i‡(!(
¥ed_dú
 = 
	`ˇŒoc
(1, (
b¥ed_dú_t
))))

193 
	`Áèl
("out of virtual memory");

195 
¥ed_dú
->
˛ass
 = class;

197 
˙t
 = -1;

198 
˛ass
) {

199 
BPªd2Levñ
:

201 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

202 
	`Áèl
("level-1 size, `%d', must beÇon-zeroándáÖower ofÅwo",

203 
l1size
);

204 
¥ed_dú
->
c⁄fig
.
two
.
l1size
 =Ü1size;

206 i‡(!
l2size
 || (l2size & (l2size-1)) != 0)

207 
	`Áèl
("level-2 size, `%d', must beÇon-zeroándáÖower ofÅwo",

208 
l2size
);

209 
¥ed_dú
->
c⁄fig
.
two
.
l2size
 =Ü2size;

211 i‡(!
shi·_width
 || shift_width > 30)

212 
	`Áèl
("shiftÑegister width, `%d', must beÇon-zeroándÖositive",

213 
shi·_width
);

214 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
 = shift_width;

216 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 = xor;

217 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
 = 
	`ˇŒoc
(
l1size
, ());

218 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
)

219 
	`Áèl
("cannotállocate shiftÑegisterÅable");

221 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
 = 
	`ˇŒoc
(
l2size
, ());

222 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
)

223 
	`Áèl
("cannotállocate secondÜevelÅable");

226 
ÊùÊ›
 = 1;

227 
˙t
 = 0; c¡ < 
l2size
; cnt++)

229 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
˙t
] = 
ÊùÊ›
;

230 
ÊùÊ›
 = 3 - flipflop;

236 
BPªd2bô
:

237 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

238 
	`Áèl
("2bitÅable size, `%d', must beÇon-zeroándáÖower ofÅwo",

239 
l1size
);

240 
¥ed_dú
->
c⁄fig
.
bimod
.
size
 = 
l1size
;

241 i‡(!(
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
 =

242 
	`ˇŒoc
(
l1size
, ())))

243 
	`Áèl
("cannotállocate 2bit storage");

245 
ÊùÊ›
 = 1;

246 
˙t
 = 0; c¡ < 
l1size
; cnt++)

248 
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

249 
ÊùÊ›
 = 3 - flipflop;

254 
BPªdTakí
:

255 
BPªdNŸTakí
:

260 
	`∑nic
("bogus branch directionÖredictor class");

263  
¥ed_dú
;

264 
	}
}

268 
	$b¥ed_dú_c⁄fig
(

269 
b¥ed_dú_t
 *
¥ed_dú
,

270 
«me
[],

271 
FILE
 *
°ªam
)

273 
¥ed_dú
->
˛ass
) {

274 
BPªd2Levñ
:

275 
	`Ârötf
(
°ªam
,

277 
«me
, 
¥ed_dú
->
c⁄fig
.
two
.
l1size
,Öªd_dú->c⁄fig.two.
shi·_width
,

278 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 ? "" : "no",Öªd_dú->c⁄fig.two.
l2size
);

281 
BPªd2bô
:

282 
	`Ârötf
(
°ªam
, "pred_dir: %s: 2-bit: %dÉntries, direct-mapped\n",

283 
«me
, 
¥ed_dú
->
c⁄fig
.
bimod
.
size
);

286 
BPªdTakí
:

287 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘Åakí\n", 
«me
);

290 
BPªdNŸTakí
:

291 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘ÇŸÅakí\n", 
«me
);

295 
	`∑nic
("bogus branch directionÖredictor class");

297 
	}
}

301 
	$b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

302 
FILE
 *
°ªam
)

304 
¥ed
->
˛ass
) {

305 
BPªdComb
:

306 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

307 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

308 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
mëa
, "mëa", 
°ªam
);

309 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

310 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

311 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

314 
BPªd2Levñ
:

315 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

316 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

317 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

318 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

321 
BPªd2bô
:

322 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

323 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

324 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

325 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

328 
BPªdTakí
:

329 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "èkí", 
°ªam
);

331 
BPªdNŸTakí
:

332 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "nŸèkí", 
°ªam
);

336 
	`∑nic
("bogus branchÖredictor class");

338 
	}
}

342 
	$b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

343 
FILE
 *
°ªam
)

345 
	`Ârötf
(
°ªam
, "pred:áddr-predictionÑate = %f\n",

346 ()
¥ed
->
addr_hôs
/()’ªd->addr_hôs+¥ed->
mis£s
));

347 
	`Ârötf
(
°ªam
, "pred: dir-predictionÑate = %f\n",

348 ()
¥ed
->
dú_hôs
/()’ªd->dú_hôs+¥ed->
mis£s
));

349 
	}
}

353 
	$b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

354 
°©_sdb_t
 *
sdb
)

356 
buf
[512], 
buf1
[512], *
«me
;

359 
¥ed
->
˛ass
)

361 
BPªdComb
:

362 
«me
 = "bpred_comb";

364 
BPªd2Levñ
:

365 
«me
 = "bpred_2lev";

367 
BPªd2bô
:

368 
«me
 = "bpred_bimod";

370 
BPªdTakí
:

371 
«me
 = "bpred_taken";

373 
BPªdNŸTakí
:

374 
«me
 = "bpred_nottaken";

377 
	`∑nic
("bogus branchÖredictor class");

380 
	`•rötf
(
buf
, "%s.lookups", 
«me
);

381 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of bpredÜookups",

382 &
¥ed
->
lookups
, 0, 
NULL
);

383 
	`•rötf
(
buf
, "%s.upd©es", 
«me
);

384 
	`•rötf
(
buf1
, "%s.dú_hô†+ %s.mis£s", 
«me
,Çame);

385 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡upd©es", 
buf1
, "%12.0f");

386 
	`•rötf
(
buf
, "%s.addr_hôs", 
«me
);

387 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofáddress-predicted hits",

388 &
¥ed
->
addr_hôs
, 0, 
NULL
);

389 
	`•rötf
(
buf
, "%s.dú_hôs", 
«me
);

390 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

393 &
¥ed
->
dú_hôs
, 0, 
NULL
);

394 i‡(
¥ed
->
˛ass
 =
BPªdComb
)

396 
	`•rötf
(
buf
, "%s.u£d_bimod", 
«me
);

397 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

399 &
¥ed
->
u£d_bimod
, 0, 
NULL
);

400 
	`•rötf
(
buf
, "%s.u£d_2Àv", 
«me
);

401 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

403 &
¥ed
->
u£d_2Àv
, 0, 
NULL
);

405 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

406 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
¥ed
->
mis£s
, 0, 
NULL
);

407 
	`•rötf
(
buf
, "%s.jr_hôs", 
«me
);

408 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

410 &
¥ed
->
jr_hôs
, 0, 
NULL
);

411 
	`•rötf
(
buf
, "%s.jr_£í", 
«me
);

412 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

414 &
¥ed
->
jr_£í
, 0, 
NULL
);

415 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_hôs.PP", 
«me
);

416 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

418 &
¥ed
->
jr_n⁄_øs_hôs
, 0, 
NULL
);

419 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_£í.PP", 
«me
);

420 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

422 &
¥ed
->
jr_n⁄_øs_£í
, 0, 
NULL
);

423 
	`•rötf
(
buf
, "%s.b¥ed_addr_øã", 
«me
);

424 
	`•rötf
(
buf1
, "%s.addr_hô†/ %s.upd©es", 
«me
,Çame);

425 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

427 
buf1
, "%9.4f");

428 
	`•rötf
(
buf
, "%s.b¥ed_dú_øã", 
«me
);

429 
	`•rötf
(
buf1
, "%s.dú_hô†/ %s.upd©es", 
«me
,Çame);

430 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

432 
buf1
, "%9.4f");

433 
	`•rötf
(
buf
, "%s.b¥ed_jr_øã", 
«me
);

434 
	`•rötf
(
buf1
, "%s.jr_hô†/ %s.jr_£í", 
«me
,Çame);

435 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

437 
buf1
, "%9.4f");

438 
	`•rötf
(
buf
, "%s.b¥ed_jr_n⁄_øs_øã.PP", 
«me
);

439 
	`•rötf
(
buf1
, "%s.jr_n⁄_øs_hôs.PP / %s.jr_n⁄_øs_£í.PP", 
«me
,Çame);

440 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

442 
buf1
, "%9.4f");

443 
	`•rötf
(
buf
, "%s.ªt°ack_pushes", 
«me
);

444 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

446 &
¥ed
->
ªt°ack_pushes
, 0, 
NULL
);

447 
	`•rötf
(
buf
, "%s.ªt°ack_p›s", 
«me
);

448 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

450 &
¥ed
->
ªt°ack_p›s
, 0, 
NULL
);

451 
	`•rötf
(
buf
, "%s.u£d_øs.PP", 
«me
);

452 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

454 &
¥ed
->
u£d_øs
, 0, 
NULL
);

455 
	`•rötf
(
buf
, "%s.øs_hôs.PP", 
«me
);

456 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

458 &
¥ed
->
øs_hôs
, 0, 
NULL
);

459 
	`•rötf
(
buf
, "%s.øs_øã.PP", 
«me
);

460 
	`•rötf
(
buf1
, "%s.øs_hôs.PP / %s.u£d_øs.PP", 
«me
,Çame);

461 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

463 
buf1
, "%9.4f");

464 
	}
}

467 
	$b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
)

469 i‡(
b¥ed
 =
NULL
)

472 
b¥ed
->
lookups
 = 0;

473 
b¥ed
->
addr_hôs
 = 0;

474 
b¥ed
->
dú_hôs
 = 0;

475 
b¥ed
->
u£d_øs
 = 0;

476 
b¥ed
->
u£d_bimod
 = 0;

477 
b¥ed
->
u£d_2Àv
 = 0;

478 
b¥ed
->
jr_hôs
 = 0;

479 
b¥ed
->
jr_£í
 = 0;

480 
b¥ed
->
mis£s
 = 0;

481 
b¥ed
->
ªt°ack_p›s
 = 0;

482 
b¥ed
->
ªt°ack_pushes
 = 0;

483 
b¥ed
->
øs_hôs
 = 0;

484 
	}
}

486 
	#BIMOD_HASH
(
PRED
, 
ADDR
) \

487 ((((
ADDR
Ë>> 19Ë^ ((ADDRË>> 
MD_BR_SHIFT
)Ë& ((
PRED
)->
c⁄fig
.
bimod
.
size
-1))

	)

492 
	$b¥ed_dú_lookup
(
b¥ed_dú_t
 *
¥ed_dú
,

493 
md_addr_t
 
baddr
)

495 *
p
 = 
NULL
;

498 
¥ed_dú
->
˛ass
) {

499 
BPªd2Levñ
:

501 
l1ödex
, 
l2ödex
;

504 
l1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed_dú
->
c⁄fig
.
two
.
l1size
 - 1);

505 
l2ödex
 = 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
];

506 i‡(
¥ed_dú
->
c⁄fig
.
two
.
x‹
)

513 
l2ödex
 = ((÷2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
))

514 & ((1 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
) - 1))

515 | ((
baddr
 >> 
MD_BR_SHIFT
)

516 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
));

518 
l2ödex
 =Ü2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
);

523 
l2ödex
 =

524 
l2ödex


525 | ((
baddr
 >> 
MD_BR_SHIFT
Ë<< 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
);

527 
l2ödex
 =Ü2ödex & (
¥ed_dú
->
c⁄fig
.
two
.
l2size
 - 1);

530 
p
 = &
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
l2ödex
];

533 
BPªd2bô
:

534 
p
 = &
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
	`BIMOD_HASH
’ªd_dú, 
baddr
)];

536 
BPªdTakí
:

537 
BPªdNŸTakí
:

540 
	`∑nic
("bogus branch directionÖredictor class");

543  (*)
p
;

544 
	}
}

553 
md_addr_t


554 
	$b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

555 
md_addr_t
 
baddr
,

556 
md_addr_t
 
bèrgë
,

557 
md_›code
 
›
,

558 
is_ˇŒ
,

559 
is_ªtu∫
,

560 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

561 *
°ack_ªcovî_idx
)

564 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

565 
ödex
, 
i
;

567 i‡(!
dú_upd©e_±r
)

568 
	`∑nic
("no bpred updateÑecord");

571 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

574 
¥ed
->
lookups
++;

576 
dú_upd©e_±r
->
dú
.
øs
 = 
FALSE
;

577 
dú_upd©e_±r
->
pdú1
 = 
NULL
;

578 
dú_upd©e_±r
->
pdú2
 = 
NULL
;

579 
dú_upd©e_±r
->
pmëa
 = 
NULL
;

581 
¥ed
->
˛ass
) {

582 
BPªdComb
:

583 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

585 *
bimod
, *
twﬁev
, *
mëa
;

586 
bimod
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.bimod, 
baddr
);

587 
twﬁev
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.twﬁev, 
baddr
);

588 
mëa
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.mëa, 
baddr
);

589 
dú_upd©e_±r
->
pmëa
 = 
mëa
;

590 
dú_upd©e_±r
->
dú
.
mëa
 = (*meta >= 2);

591 
dú_upd©e_±r
->
dú
.
bimod
 = (*bimod >= 2);

592 
dú_upd©e_±r
->
dú
.
twﬁev
 = (*twolev >= 2);

593 i‡(*
mëa
 >= 2)

595 
dú_upd©e_±r
->
pdú1
 = 
twﬁev
;

596 
dú_upd©e_±r
->
pdú2
 = 
bimod
;

600 
dú_upd©e_±r
->
pdú1
 = 
bimod
;

601 
dú_upd©e_±r
->
pdú2
 = 
twﬁev
;

605 
BPªd2Levñ
:

606 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

608 
dú_upd©e_±r
->
pdú1
 =

609 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
);

612 
BPªd2bô
:

613 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

615 
dú_upd©e_±r
->
pdú1
 =

616 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

619 
BPªdTakí
:

620  
bèrgë
;

621 
BPªdNŸTakí
:

622 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

624  
baddr
 + (
md_ö°_t
);

628  
bèrgë
;

631 
	`∑nic
("bogusÖredictor class");

642 i‡(
¥ed
->
ªt°ack
.
size
)

643 *
°ack_ªcovî_idx
 = 
¥ed
->
ªt°ack
.
tos
;

645 *
°ack_ªcovî_idx
 = 0;

648 i‡(
is_ªtu∫
 && 
¥ed
->
ªt°ack
.
size
)

650 
md_addr_t
 
èrgë
 = 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].target;

651 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+Öªd->ªt°ack.
size
 - 1)

652 % 
¥ed
->
ªt°ack
.
size
;

653 
¥ed
->
ªt°ack_p›s
++;

654 
dú_upd©e_±r
->
dú
.
øs
 = 
TRUE
;

655  
èrgë
;

658 #i‚de‡
RAS_BUG_COMPATIBLE


660 i‡(
is_ˇŒ
 && 
¥ed
->
ªt°ack
.
size
)

662 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

663 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

664 
baddr
 + (
md_ö°_t
);

665 
¥ed
->
ªt°ack_pushes
++;

670 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

672 i‡(
¥ed
->
btb
.
assoc
 > 1)

674 
ödex
 *
¥ed
->
btb
.
assoc
;

677 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

678 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

681 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

687 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

688 i‡(
pbtb
->
addr
 !
baddr
)

689 
pbtb
 = 
NULL
;

697 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) == (F_CTRL|F_UNCOND))

699  (
pbtb
 ?Öbtb->
èrgë
 : 1);

703 i‡(
pbtb
 =
NULL
)

706  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

713  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

714 ? 
pbtb
->
èrgë


717 
	}
}

724 
	$b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

725 
md_addr_t
 
baddr
,

726 
°ack_ªcovî_idx
)

729 i‡(
¥ed
 =
NULL
)

732 
¥ed
->
ªt°ack
.
tos
 = 
°ack_ªcovî_idx
;

733 
	}
}

744 
	$b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

745 
md_addr_t
 
baddr
,

746 
md_addr_t
 
bèrgë
,

747 
èkí
,

748 
¥ed_èkí
,

749 
c‹ª˘
,

750 
md_›code
 
›
,

751 
b¥ed_upd©e_t
 *
dú_upd©e_±r
)

753 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

754 
b¥ed_btb_ít_t
 *
Ãuhód
 = 
NULL
, *
Ãuôem
 = NULL;

755 
ödex
, 
i
;

759 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

764 i‡(
c‹ª˘
)

765 
¥ed
->
addr_hôs
++;

767 i‡(!!
¥ed_èkí
 =!!
èkí
)

768 
¥ed
->
dú_hôs
++;

770 
¥ed
->
mis£s
++;

772 i‡(
dú_upd©e_±r
->
dú
.
øs
)

774 
¥ed
->
u£d_øs
++;

775 i‡(
c‹ª˘
)

776 
¥ed
->
øs_hôs
++;

778 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_COND
)) == (F_CTRL|F_COND))

780 i‡(
dú_upd©e_±r
->
dú
.
mëa
)

781 
¥ed
->
u£d_2Àv
++;

783 
¥ed
->
u£d_bimod
++;

788 i‡(
	`MD_IS_INDIR
(
›
))

790 
¥ed
->
jr_£í
++;

791 i‡(
c‹ª˘
)

792 
¥ed
->
jr_hôs
++;

794 i‡(!
dú_upd©e_±r
->
dú
.
øs
)

796 
¥ed
->
jr_n⁄_øs_£í
++;

797 i‡(
c‹ª˘
)

798 
¥ed
->
jr_n⁄_øs_hôs
++;

808 i‡(
¥ed
->
˛ass
 =
BPªdNŸTakí
 ||Öªd->˛as†=
BPªdTakí
)

816 #ifde‡
RAS_BUG_COMPATIBLE


818 i‡(
	`MD_IS_CALL
(
›
Ë&& 
¥ed
->
ªt°ack
.
size
)

820 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

821 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

822 
baddr
 + (
md_ö°_t
);

823 
¥ed
->
ªt°ack_pushes
++;

829 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND) &&

830 (
¥ed
->
˛ass
 =
BPªd2Levñ
 ||Öªd->˛as†=
BPªdComb
))

832 
l1ödex
, 
shi·_ªg
;

835 
l1ödex
 =

836 (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
l1size
 - 1);

837 
shi·_ªg
 =

838 (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

839 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] =

840 
shi·_ªg
 & ((1 << 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·_width
) - 1);

844 i‡(
èkí
)

846 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

848 i‡(
¥ed
->
btb
.
assoc
 > 1)

850 
ödex
 *
¥ed
->
btb
.
assoc
;

854 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

856 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

859 
	`as£π
(!
pbtb
);

860 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

863 
	`das£π
(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev


864 !
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
);

865 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev
 =
NULL
)

868 
	`das£π
(
Ãuhód
 =
NULL
);

869 
Ãuhód
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

871 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 =
NULL
)

874 
	`das£π
(
Ãuôem
 =
NULL
);

875 
Ãuôem
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

878 
	`das£π
(
Ãuhód
 && 
Ãuôem
);

880 i‡(!
pbtb
)

882 
pbtb
 = 
Ãuôem
;

888 i‡(
pbtb
 !
Ãuhód
)

891 i‡(
pbtb
->
¥ev
)

892 
pbtb
->
¥ev
->
√xt
 =Öbtb->next;

893 i‡(
pbtb
->
√xt
)

894 
pbtb
->
√xt
->
¥ev
 =Öbtb->prev;

896 
pbtb
->
√xt
 = 
Ãuhód
;

897 
pbtb
->
¥ev
 = 
NULL
;

898 
Ãuhód
->
¥ev
 = 
pbtb
;

899 
	`das£π
(
pbtb
->
¥ev
 ||Öbtb->
√xt
);

900 
	`das£π
(
pbtb
->
¥ev
 !pbtb->
√xt
);

905 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

915 i‡(
dú_upd©e_±r
->
pdú1
)

917 i‡(
èkí
)

919 i‡(*
dú_upd©e_±r
->
pdú1
 < 3)

920 ++*
dú_upd©e_±r
->
pdú1
;

924 i‡(*
dú_upd©e_±r
->
pdú1
 > 0)

925 --*
dú_upd©e_±r
->
pdú1
;

931 i‡(
dú_upd©e_±r
->
pdú2
)

933 i‡(
èkí
)

935 i‡(*
dú_upd©e_±r
->
pdú2
 < 3)

936 ++*
dú_upd©e_±r
->
pdú2
;

940 i‡(*
dú_upd©e_±r
->
pdú2
 > 0)

941 --*
dú_upd©e_±r
->
pdú2
;

946 i‡(
dú_upd©e_±r
->
pmëa
)

948 i‡(
dú_upd©e_±r
->
dú
.
bimod
 !dú_upd©e_±r->dú.
twﬁev
)

951 i‡(
dú_upd©e_±r
->
dú
.
twﬁev
 =()
èkí
)

954 i‡(*
dú_upd©e_±r
->
pmëa
 < 3)

955 ++*
dú_upd©e_±r
->
pmëa
;

960 i‡(*
dú_upd©e_±r
->
pmëa
 > 0)

961 --*
dú_upd©e_±r
->
pmëa
;

967 i‡(
pbtb
)

970 
	`das£π
(
èkí
);

972 i‡(
pbtb
->
addr
 =
baddr
)

974 i‡(!
c‹ª˘
)

975 
pbtb
->
èrgë
 = 
bèrgë
;

980 
pbtb
->
addr
 = 
baddr
;

981 
pbtb
->
›
 = op;

982 
pbtb
->
èrgë
 = 
bèrgë
;

985 
	}
}

	@bpred.h

52 #i‚de‡
BPRED_H


53 
	#BPRED_H


	)

55 
	#das£π
(
a
Ë
	`as£π
◊)

	)

57 
	~<°dio.h
>

59 
	~"ho°.h
"

60 
	~"misc.h
"

61 
	~"machöe.h
"

62 
	~"°©s.h
"

101 
	eb¥ed_˛ass
 {

102 
	mBPªdComb
,

103 
	mBPªd2Levñ
,

104 
	mBPªd2bô
,

105 
	mBPªdTakí
,

106 
	mBPªdNŸTakí
,

107 
	mBPªd_NUM


111 
	sb¥ed_btb_ít_t
 {

112 
md_addr_t
 
	maddr
;

113 
md_›code
 
	m›
;

114 
md_addr_t
 
	mèrgë
;

115 
b¥ed_btb_ít_t
 *
	m¥ev
, *
	m√xt
;

119 
	sb¥ed_dú_t
 {

120 
b¥ed_˛ass
 
	m˛ass
;

123 
	msize
;

124 *
	mèbÀ
;

125 } 
	mbimod
;

127 
	ml1size
;

128 
	ml2size
;

129 
	mshi·_width
;

130 
	mx‹
;

131 *
	mshi·ªgs
;

132 *
	ml2èbÀ
;

133 } 
	mtwo
;

134 } 
	mc⁄fig
;

138 
	sb¥ed_t
 {

139 
b¥ed_˛ass
 
	m˛ass
;

141 
b¥ed_dú_t
 *
	mbimod
;

142 
b¥ed_dú_t
 *
	mtwﬁev
;

143 
b¥ed_dú_t
 *
	mmëa
;

144 } 
	mdú¥ed
;

147 
	m£ts
;

148 
	massoc
;

149 
b¥ed_btb_ít_t
 *
	mbtb_d©a
;

150 } 
	mbtb
;

153 
	msize
;

154 
	mtos
;

155 
b¥ed_btb_ít_t
 *
	m°ack
;

156 } 
	mªt°ack
;

159 
cou¡î_t
 
	maddr_hôs
;

160 
cou¡î_t
 
	mdú_hôs
;

161 
cou¡î_t
 
	mu£d_øs
;

162 
cou¡î_t
 
	mu£d_bimod
;

163 
cou¡î_t
 
	mu£d_2Àv
;

164 
cou¡î_t
 
	mjr_hôs
;

165 
cou¡î_t
 
	mjr_£í
;

166 
cou¡î_t
 
	mjr_n⁄_øs_hôs
;

167 
cou¡î_t
 
	mjr_n⁄_øs_£í
;

168 
cou¡î_t
 
	mmis£s
;

170 
cou¡î_t
 
	mlookups
;

171 
cou¡î_t
 
	mªt°ack_p›s
;

172 
cou¡î_t
 
	mªt°ack_pushes
;

173 
cou¡î_t
 
	møs_hôs
;

177 
	sb¥ed_upd©e_t
 {

178 *
	mpdú1
;

179 *
	mpdú2
;

180 *
	mpmëa
;

182 
	møs
 : 1;

183 
	mbimod
 : 1;

184 
	mtwﬁev
 : 1;

185 
	mmëa
 : 1;

186 } 
	mdú
;

190 
b¥ed_t
 *

191 
b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

192 
bimod_size
,

193 
l1size
,

194 
l2size
,

195 
mëa_size
,

196 
shi·_width
,

197 
x‹
,

198 
btb_£ts
,

199 
btb_assoc
,

200 
ªt°ack_size
);

203 
b¥ed_dú_t
 *

204 
b¥ed_dú_¸óã
 (

205 
b¥ed_˛ass
 
˛ass
,

206 
l1size
,

207 
l2size
,

208 
shi·_width
,

209 
x‹
);

213 
b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

214 
FILE
 *
°ªam
);

218 
b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

219 
FILE
 *
°ªam
);

223 
b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

224 
°©_sdb_t
 *
sdb
);

227 
b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
);

236 
md_addr_t


237 
b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

238 
md_addr_t
 
baddr
,

239 
md_addr_t
 
bèrgë
,

240 
md_›code
 
›
,

241 
is_ˇŒ
,

242 
is_ªtu∫
,

243 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

244 *
°ack_ªcovî_idx
);

252 
b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

253 
md_addr_t
 
baddr
,

254 
°ack_ªcovî_idx
);

266 
b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

267 
md_addr_t
 
baddr
,

268 
md_addr_t
 
bèrgë
,

269 
èkí
,

270 
¥ed_èkí
,

271 
c‹ª˘
,

272 
md_›code
 
›
,

273 
b¥ed_upd©e_t
 *
dú_upd©e_±r
);

	@cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ˇche.h
"

62 
	#CACHE_TAG
(
˝
, 
addr
Ë(◊ddrË>> (˝)->
èg_shi·
)

	)

63 
	#CACHE_SET
(
˝
, 
addr
Ë((◊ddrË>> (˝)->
£t_shi·
Ë& (˝)->
£t_mask
)

	)

64 
	#CACHE_BLK
(
˝
, 
addr
Ë(◊ddrË& (˝)->
blk_mask
)

	)

67 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

68 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
) \

69 (((
èg
Ë<< (
˝
)->
èg_shi·
)|((
£t
Ë<< (˝)->
£t_shi·
))

	)

72 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
) \

73 ((
ˇche_blk_t
 *)(((*)(
blks
)) + \

74 (
i
)*((
ˇche_blk_t
) + \

75 ((
˝
)->
bÆloc
 \

76 ? (
˝
)->
bsize
*(
byã_t
Ë: 0))))

	)

79 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
) \

80 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

	)

83 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

84 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

85 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

86 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

87 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

92 
	#CACHE_HASH
(
˝
, 
key
) \

93 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

	)

96 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
) \

97 i‡(
cmd
 =
Ród
) \

99 
nbyãs
) { \

101 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

103 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

105 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

108 
w‹ds
 = 
nbyãs
 >> 2; \

109 
w‹ds
-- > 0) \

111 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

112 
p
 +4; 
bofs
 += 4; \

119 
nbyãs
) { \

121 
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

123 
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

125 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

128 
w‹ds
 = 
nbyãs
 >> 2; \

129 
w‹ds
-- > 0) \

131 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

132 
p
 +4; 
bofs
 += 4; \

136 }

	)

139 
	#BOUND_POS
(
N
Ë(()(
	`MIN
(
	`MAX
(0, (N)), 2147483647)))

	)

143 
	$u∆ök_hèb_ít
(
ˇche_t
 *
˝
,

144 
ˇche_£t_t
 *
£t
,

145 
ˇche_blk_t
 *
blk
)

147 
ˇche_blk_t
 *
¥ev
, *
ít
;

148 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

151 
¥ev
=
NULL
,
ít
=
£t
->
hash
[
ödex
];

152 
ít
;

153 
¥ev
=
ít
,ítÛ¡->
hash_√xt
)

155 i‡(
ít
 =
blk
)

158 
	`as£π
(
ít
);

161 i‡(!
¥ev
)

164 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

169 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

171 
ít
->
hash_√xt
 = 
NULL
;

172 
	}
}

176 
	$lök_hèb_ít
(
ˇche_t
 *
˝
,

177 
ˇche_£t_t
 *
£t
,

178 
ˇche_blk_t
 *
blk
)

180 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

183 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

184 
£t
->
hash
[
ödex
] = 
blk
;

185 
	}
}

188 
	eli°_loc_t
 { 
	mHód
, 
	mTaû
 };

192 
	$upd©e_way_li°
(
ˇche_£t_t
 *
£t
,

193 
ˇche_blk_t
 *
blk
,

194 
li°_loc_t
 
whîe
)

197 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

200 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

205 i‡(!
blk
->
way_¥ev
)

207 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

208 i‡(
whîe
 =
Hód
)

214 
£t
->
way_hód
 = 
blk
->
way_√xt
;

215 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

217 i‡(!
blk
->
way_√xt
)

220 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

221 i‡(
whîe
 =
Taû
)

226 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

227 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

232 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

233 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

234 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

238 i‡(
whîe
 =
Hód
)

241 
blk
->
way_√xt
 = 
£t
->
way_hód
;

242 
blk
->
way_¥ev
 = 
NULL
;

243 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

244 
£t
->
way_hód
 = 
blk
;

246 i‡(
whîe
 =
Taû
)

249 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

250 
blk
->
way_√xt
 = 
NULL
;

251 
£t
->
way_èû
->
way_√xt
 = 
blk
;

252 
£t
->
way_èû
 = 
blk
;

255 
	`∑nic
("bogus WHERE designator");

256 
	}
}

259 
ˇche_t
 *

260 
	$ˇche_¸óã
(*
«me
,

261 
n£ts
,

262 
bsize
,

263 
bÆloc
,

264 
usize
,

265 
assoc
,

266 
ˇche_pﬁicy
 
pﬁicy
,

268 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

269 
md_addr_t
 
baddr
, 
bsize
,

270 
ˇche_blk_t
 *
blk
,

271 
tick_t
 
now
),

272 
hô_œãncy
)

274 
ˇche_t
 *
˝
;

275 
ˇche_blk_t
 *
blk
;

276 
i
, 
j
, 
bödex
;

279 i‡(
n£ts
 <= 0)

280 
	`Áèl
("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

281 i‡((
n£ts
 & (nsets-1)) != 0)

282 
	`Áèl
("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

284 i‡(
bsize
 < 8)

285 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

286 i‡((
bsize
 & (bsize-1)) != 0)

287 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

288 i‡(
usize
 < 0)

289 
	`Áèl
("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

290 i‡(
assoc
 <= 0)

291 
	`Áèl
("ˇchêassocütivôy `%d' mu° bên⁄-zîÿ™dÖosôive", 
assoc
);

292 i‡((
assoc
 & (assoc-1)) != 0)

293 
	`Áèl
("ˇchêassocütivôy `%d' mu° bê®powî o‡two", 
assoc
);

294 i‡(!
blk_ac˚ss_‚
)

295 
	`Áèl
("must specify miss/replacement functions");

298 
˝
 = (
ˇche_t
 *)

299 
	`ˇŒoc
(1, (
ˇche_t
Ë+ (
n£ts
-1)*(
ˇche_£t_t
));

300 i‡(!
˝
)

301 
	`Áèl
("out of virtual memory");

304 
˝
->
«me
 = 
	`my°rdup
(name);

305 
˝
->
n£ts
 =Çsets;

306 
˝
->
bsize
 = bsize;

307 
˝
->
bÆloc
 = balloc;

308 
˝
->
usize
 = usize;

309 
˝
->
assoc
 =ássoc;

310 
˝
->
pﬁicy
 =Öolicy;

311 
˝
->
hô_œãncy
 = hit_latency;

314 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

317 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
(˝Ë? (
assoc
 >> 2) : 0;

318 
˝
->
blk_mask
 = 
bsize
-1;

319 
˝
->
£t_shi·
 = 
	`log_ba£2
(
bsize
);

320 
˝
->
£t_mask
 = 
n£ts
-1;

321 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
(
n£ts
);

322 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
))-1;

323 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

324 
˝
->
bus_‰ì
 = 0;

327 
	`debug
("%s: cp->hsizê = %d", 
˝
->
«me
, cp->
hsize
);

328 
	`debug
("%s: cp->blk_mask = 0x%08x", 
˝
->
«me
, cp->
blk_mask
);

329 
	`debug
("%s: cp->£t_shi· = %d", 
˝
->
«me
, cp->
£t_shi·
);

330 
	`debug
("%s: cp->£t_mask = 0x%08x", 
˝
->
«me
, cp->
£t_mask
);

331 
	`debug
("%s: cp->èg_shi· = %d", 
˝
->
«me
, cp->
èg_shi·
);

332 
	`debug
("%s: cp->èg_mask = 0x%08x", 
˝
->
«me
, cp->
èg_mask
);

335 
˝
->
hôs
 = 0;

336 
˝
->
mis£s
 = 0;

337 
˝
->
ª∂a˚míts
 = 0;

338 
˝
->
wrôebacks
 = 0;

339 
˝
->
övÆid©i⁄s
 = 0;

342 
˝
->
œ°_èg£t
 = 0;

343 
˝
->
œ°_blk
 = 
NULL
;

346 
˝
->
d©a
 = (
byã_t
 *)
	`ˇŒoc
(
n£ts
 * 
assoc
,

347 (
ˇche_blk_t
) +

348 (
˝
->
bÆloc
 ? (
bsize
*(
byã_t
)) : 0));

349 i‡(!
˝
->
d©a
)

350 
	`Áèl
("out of virtual memory");

353 
bödex
=0,
i
=0; i<
n£ts
; i++)

355 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

356 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

358 i‡(
˝
->
hsize
)

360 
˝
->
£ts
[
i
].
hash
 =

361 (
ˇche_blk_t
 **)
	`ˇŒoc
(
˝
->
hsize
,

362 (
ˇche_blk_t
 *));

363 i‡(!
˝
->
£ts
[
i
].
hash
)

364 
	`Áèl
("out of virtual memory");

369 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
(˝, cp->
d©a
, 
bödex
);

373 
j
=0; j<
assoc
; j++)

376 
blk
 = 
	`CACHE_BINDEX
(
˝
, cp->
d©a
, 
bödex
);

377 
bödex
++;

380 
blk
->
°©us
 = 0;

381 
blk
->
èg
 = 0;

382 
blk
->
ªady
 = 0;

383 
blk
->
u£r_d©a
 = (
usize
 != 0

384 ? (
byã_t
 *)
	`ˇŒoc
(
usize
, (byã_t)Ë: 
NULL
);

387 i‡(
˝
->
hsize
)

388 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
i
], 
blk
);

391 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

392 
blk
->
way_¥ev
 = 
NULL
;

393 i‡(
˝
->
£ts
[
i
].
way_hód
)

394 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

395 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

396 i‡(!
˝
->
£ts
[
i
].
way_èû
)

397 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

400  
˝
;

401 
	}
}

404 
ˇche_pﬁicy


405 
	$ˇche_ch¨2pﬁicy
(
c
)

407 
c
) {

408 'l':  
LRU
;

409 'r':  
R™dom
;

410 'f':  
FIFO
;

411 : 
	`Áèl
("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

413 
	}
}

417 
	$ˇche_c⁄fig
(
ˇche_t
 *
˝
,

418 
FILE
 *
°ªam
)

420 
	`Ârötf
(
°ªam
,

422 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

423 
	`Ârötf
(
°ªam
,

425 
˝
->
«me
, cp->
assoc
,

426 
˝
->
pﬁicy
 =
LRU
 ? "LRU"

427 : 
˝
->
pﬁicy
 =
R™dom
 ? "Random"

428 : 
˝
->
pﬁicy
 =
FIFO
 ? "FIFO"

429 : (
	`ab‹t
(), ""));

430 
	}
}

434 
	$ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

435 
°©_sdb_t
 *
sdb
)

437 
buf
[512], 
buf1
[512], *
«me
;

440 i‡(!
˝
->
«me
 || !cp->name[0])

441 
«me
 = "<unknown>";

443 
«me
 = 
˝
->name;

445 
	`•rötf
(
buf
, "%s.ac˚s£s", 
«me
);

446 
	`•rötf
(
buf1
, "%s.hô†+ %s.mis£s", 
«me
,Çame);

447 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡ac˚s£s", 
buf1
, "%12.0f");

448 
	`•rötf
(
buf
, "%s.hôs", 
«me
);

449 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
, 0, 
NULL
);

450 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

451 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
, 0, 
NULL
);

452 
	`•rötf
(
buf
, "%s.ª∂a˚míts", 
«me
);

453 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÑeplacements",

454 &
˝
->
ª∂a˚míts
, 0, 
NULL
);

455 
	`•rötf
(
buf
, "%s.wrôebacks", 
«me
);

456 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of writebacks",

457 &
˝
->
wrôebacks
, 0, 
NULL
);

458 
	`•rötf
(
buf
, "%s.övÆid©i⁄s", 
«me
);

459 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of invalidations",

460 &
˝
->
övÆid©i⁄s
, 0, 
NULL
);

461 
	`•rötf
(
buf
, "%s.miss_øã", 
«me
);

462 
	`•rötf
(
buf1
, "%s.mis£†/ %s.ac˚s£s", 
«me
,Çame);

463 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "mis†øã (i.e., mis£s/ªf)", 
buf1
, 
NULL
);

464 
	`•rötf
(
buf
, "%s.ª∂_øã", 
«me
);

465 
	`•rötf
(
buf1
, "%s.ª∂a˚mít†/ %s.ac˚s£s", 
«me
,Çame);

466 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "ª∂a˚míàøã (i.e.,Ñïls/ªf)", 
buf1
, 
NULL
);

467 
	`•rötf
(
buf
, "%s.wb_øã", 
«me
);

468 
	`•rötf
(
buf1
, "%s.wrôeback†/ %s.ac˚s£s", 
«me
,Çame);

469 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "wrôebackÑ©ê(i.e., wrbks/ªf)", 
buf1
, 
NULL
);

470 
	`•rötf
(
buf
, "%s.öv_øã", 
«me
);

471 
	`•rötf
(
buf1
, "%s.övÆid©i⁄†/ %s.ac˚s£s", 
«me
,Çame);

472 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "övÆid©i⁄Ñ©ê(i.e., invs/ªf)", 
buf1
, 
NULL
);

473 
	}
}

477 
	$ˇche_°©s
(
ˇche_t
 *
˝
,

478 
FILE
 *
°ªam
)

480 
sum
 = ()(
˝
->
hôs
 + cp->
mis£s
);

482 
	`Ârötf
(
°ªam
,

484 
˝
->
«me
, ()˝->
hôs
, ()˝->
mis£s
,

485 ()
˝
->
ª∂a˚míts
, ()˝->
övÆid©i⁄s
);

486 
	`Ârötf
(
°ªam
,

488 
˝
->
«me
,

489 ()
˝
->
mis£s
/
sum
, ()()˝->
ª∂a˚míts
/sum,

490 ()
˝
->
övÆid©i⁄s
/
sum
);

491 
	}
}

499 
	$ˇche_ac˚ss
(
ˇche_t
 *
˝
,

500 
mem_cmd
 
cmd
,

501 
md_addr_t
 
addr
,

502 *
vp
,

503 
nbyãs
,

504 
tick_t
 
now
,

505 
byã_t
 **
ud©a
,

506 
md_addr_t
 *
ª∂_addr
)

508 
byã_t
 *
p
 = 
vp
;

509 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

510 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

511 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
(
˝
, 
addr
);

512 
ˇche_blk_t
 *
blk
, *
ª∂
;

513 
œt
 = 0;

516 i‡(
ª∂_addr
)

517 *
ª∂_addr
 = 0;

532 i‡(
	`IS_CACHE_FAST_HIT
(
˝
, 
addr
Ë&& (˝->
œ°_blk
 !
NULL
))

535 
blk
 = 
˝
->
œ°_blk
;

536 
ˇche_Á°_hô
;

539 i‡(
˝
->
hsize
)

542 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

544 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

545 
blk
;

546 
blk
=blk->
hash_√xt
)

548 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

549 
ˇche_hô
;

555 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

556 
blk
;

557 
blk
=blk->
way_√xt
)

559 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

560 
ˇche_hô
;

567 
˝
->
mis£s
++;

571 
˝
->
pﬁicy
) {

572 
LRU
:

573 
FIFO
:

574 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

575 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
);

577 
R™dom
:

579 
bödex
 = 
	`myønd
(Ë& (
˝
->
assoc
 - 1);

580 
ª∂
 = 
	`CACHE_BINDEX
(
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

584 
	`∑nic
("bogusÑeplacementÖolicy");

588 i‡(
˝
->
hsize
)

589 
	`u∆ök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

592 
˝
->
œ°_èg£t
 = 0;

593 
˝
->
œ°_blk
 = 
NULL
;

596 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

598 
˝
->
ª∂a˚míts
++;

600 i‡(
ª∂_addr
)

601 *
ª∂_addr
 = 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
);

604 
œt
 +
	`BOUND_POS
(
ª∂
->
ªady
 - 
now
);

607 
œt
 +
	`BOUND_POS
(
˝
->
bus_‰ì
 - (
now
 +Üat));

610 
˝
->
bus_‰ì
 = 
	`MAX
(˝->bus_‰ì, (
now
 + 
œt
)) + 1;

612 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

615 
˝
->
wrôebacks
++;

616 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

617 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
),

618 
˝
->
bsize
, 
ª∂
, 
now
+
œt
);

623 
ª∂
->
èg
 =Åag;

624 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

627 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Ród
, 
	`CACHE_BADDR
(˝, 
addr
), cp->
bsize
,

628 
ª∂
, 
now
+
œt
);

631 i‡(
˝
->
bÆloc
)

633 
	`CACHE_BCOPY
(
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

637 i‡(
cmd
 =
Wrôe
)

638 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

641 i‡(
ud©a
)

642 *
ud©a
 = 
ª∂
->
u£r_d©a
;

645 
ª∂
->
ªady
 = 
now
+
œt
;

648 i‡(
˝
->
hsize
)

649 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

652  
œt
;

655 
ˇche_hô
:

658 
˝
->
hôs
++;

661 i‡(
˝
->
bÆloc
)

663 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

667 i‡(
cmd
 =
Wrôe
)

668 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

671 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

674 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

680 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

681 
˝
->
œ°_blk
 = 
blk
;

684 i‡(
ud©a
)

685 *
ud©a
 = 
blk
->
u£r_d©a
;

688  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

690 
ˇche_Á°_hô
:

693 
˝
->
hôs
++;

696 i‡(
˝
->
bÆloc
)

698 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

702 i‡(
cmd
 =
Wrôe
)

703 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

710 i‡(
ud©a
)

711 *
ud©a
 = 
blk
->
u£r_d©a
;

714 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

715 
˝
->
œ°_blk
 = 
blk
;

718  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

719 
	}
}

725 
	$ˇche_¥obe
(
ˇche_t
 *
˝
,

726 
md_addr_t
 
addr
)

728 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

729 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

730 
ˇche_blk_t
 *
blk
;

734 i‡(
˝
->
hsize
)

737 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

739 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

740 
blk
;

741 
blk
=blk->
hash_√xt
)

743 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

744  
TRUE
;

750 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

751 
blk
;

752 
blk
=blk->
way_√xt
)

754 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

755  
TRUE
;

760  
FALSE
;

761 
	}
}

765 
	$ˇche_Êush
(
ˇche_t
 *
˝
,

766 
tick_t
 
now
)

768 
i
, 
œt
 = 
˝
->
hô_œãncy
;

769 
ˇche_blk_t
 *
blk
;

772 
˝
->
œ°_èg£t
 = 0;

773 
˝
->
œ°_blk
 = 
NULL
;

776 
i
=0; i<
˝
->
n£ts
; i++)

778 
blk
=
˝
->
£ts
[
i
].
way_hód
; blk; blk=blk->
way_√xt
)

780 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

782 
˝
->
övÆid©i⁄s
++;

783 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

785 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

788 
˝
->
wrôebacks
++;

789 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

790 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
i
),

791 
˝
->
bsize
, 
blk
, 
now
+
œt
);

798  
œt
;

799 
	}
}

804 
	$ˇche_Êush_addr
(
ˇche_t
 *
˝
,

805 
md_addr_t
 
addr
,

806 
tick_t
 
now
)

808 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

809 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

810 
ˇche_blk_t
 *
blk
;

811 
œt
 = 
˝
->
hô_œãncy
;

813 i‡(
˝
->
hsize
)

816 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

818 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

819 
blk
;

820 
blk
=blk->
hash_√xt
)

822 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

829 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

830 
blk
;

831 
blk
=blk->
way_√xt
)

833 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

838 i‡(
blk
)

840 
˝
->
övÆid©i⁄s
++;

841 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

844 
˝
->
œ°_èg£t
 = 0;

845 
˝
->
œ°_blk
 = 
NULL
;

847 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

850 
˝
->
wrôebacks
++;

851 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

852 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
£t
),

853 
˝
->
bsize
, 
blk
, 
now
+
œt
);

856 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Taû
);

860  
œt
;

861 
	}
}

	@cache.h

52 #i‚de‡
CACHE_H


53 
	#CACHE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"mem‹y.h
"

61 
	~"°©s.h
"

99 
	#CACHE_HIGHLY_ASSOC
(
˝
Ë((˝)->
assoc
 > 4)

	)

102 
	#CACHE_TAGSET
(
˝
, 
addr
Ë(◊ddrË& (˝)->
èg£t_mask
)

	)

103 
	#IS_CACHE_FAST_HIT
(
˝
, 
addr
Ë(
	`CACHE_TAGSET
(˝,áddrË=˝->
œ°_èg£t
)

	)

106 
	eˇche_pﬁicy
 {

107 
	mLRU
,

108 
	mR™dom
,

109 
	mFIFO


113 
	#CACHE_BLK_VALID
 0x00000001

	)

114 
	#CACHE_BLK_DIRTY
 0x00000002

	)

117 
	sˇche_blk_t


119 
ˇche_blk_t
 *
	mway_√xt
;

121 
ˇche_blk_t
 *
	mway_¥ev
;

122 
ˇche_blk_t
 *
	mhash_√xt
;

126 
md_addr_t
 
	mèg
;

127 
	m°©us
;

128 
tick_t
 
	mªady
;

130 
byã_t
 *
	mu£r_d©a
;

135 
byã_t
 
	md©a
[1];

140 
	sˇche_£t_t


142 
ˇche_blk_t
 **
	mhash
;

144 
ˇche_blk_t
 *
	mway_hód
;

145 
ˇche_blk_t
 *
	mway_èû
;

146 
ˇche_blk_t
 *
	mblks
;

152 
	sˇche_t


155 *
	m«me
;

156 
	mn£ts
;

157 
	mbsize
;

158 
	mbÆloc
;

159 
	musize
;

160 
	massoc
;

161 
ˇche_pﬁicy
 
	mpﬁicy
;

162 
	mhô_œãncy
;

174 (*
	mblk_ac˚ss_‚
)(
mem_cmd
 
	mcmd
,

175 
md_addr_t
 
	mbaddr
,

176 
	mbsize
,

177 
ˇche_blk_t
 *
	mblk
,

178 
tick_t
 
	mnow
);

181 
	mhsize
;

182 
md_addr_t
 
	mblk_mask
;

183 
	m£t_shi·
;

184 
md_addr_t
 
	m£t_mask
;

185 
	mèg_shi·
;

186 
md_addr_t
 
	mèg_mask
;

187 
md_addr_t
 
	mèg£t_mask
;

190 
tick_t
 
	mbus_‰ì
;

200 
cou¡î_t
 
	mhôs
;

201 
cou¡î_t
 
	mmis£s
;

202 
cou¡î_t
 
	mª∂a˚míts
;

203 
cou¡î_t
 
	mwrôebacks
;

204 
cou¡î_t
 
	mövÆid©i⁄s
;

207 
md_addr_t
 
	mœ°_èg£t
;

208 
ˇche_blk_t
 *
	mœ°_blk
;

211 
byã_t
 *
	md©a
;

215 
ˇche_£t_t
 
	m£ts
[1];

219 
ˇche_t
 *

220 
ˇche_¸óã
(*
«me
,

221 
n£ts
,

222 
bsize
,

223 
bÆloc
,

224 
usize
,

225 
assoc
,

226 
ˇche_pﬁicy
 
pﬁicy
,

228 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

229 
md_addr_t
 
baddr
, 
bsize
,

230 
ˇche_blk_t
 *
blk
,

231 
tick_t
 
now
),

232 
hô_œãncy
);

235 
ˇche_pﬁicy


236 
	`ˇche_ch¨2pﬁicy
(
c
);

240 
	`ˇche_c⁄fig
(
ˇche_t
 *
˝
,

241 
FILE
 *
°ªam
);

245 
	`ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

246 
°©_sdb_t
 *
sdb
);

250 
	`ˇche_°©s
(
ˇche_t
 *
˝
,

251 
FILE
 *
°ªam
);

254 
	`ˇche_°©s
(
ˇche_t
 *
˝
, 
FILE
 *
°ªam
);

262 
	`ˇche_ac˚ss
(
ˇche_t
 *
˝
,

263 
mem_cmd
 
cmd
,

264 
md_addr_t
 
addr
,

265 *
vp
,

266 
nbyãs
,

267 
tick_t
 
now
,

268 
byã_t
 **
ud©a
,

269 
md_addr_t
 *
ª∂_addr
);

273 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

274 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

275 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

276 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

277 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

278 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

279 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

280 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

281 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

282 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

283 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

284 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

290 
	`ˇche_¥obe
(
ˇche_t
 *
˝
,

291 
md_addr_t
 
addr
);

295 
	`ˇche_Êush
(
ˇche_t
 *
˝
,

296 
tick_t
 
now
);

301 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

302 
md_addr_t
 
addr
,

303 
tick_t
 
now
);

	@dlite.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<˘y≥.h
>

56 #i‡
deföed
(
__CYGWIN32__
)

57 
	~<î∫o.h
>

60 
	~"ho°.h
"

61 
	~"misc.h
"

62 
	~"machöe.h
"

63 
	~"vîsi⁄.h
"

64 
	~"evÆ.h
"

65 
	~"ªgs.h
"

66 
	~"mem‹y.h
"

67 
	~"sim.h
"

68 
	~"symbﬁ.h
"

69 
	~"lﬂdî.h
"

70 
	~"›ti⁄s.h
"

71 
	~"°©s.h
"

72 
	~"ønge.h
"

73 
	~"dlôe.h
"

76 
dlôe_ªg_obj_t
 
	gf_dlôe_ªg_obj
 = 
NULL
;

77 
dlôe_mem_obj_t
 
	gf_dlôe_mem_obj
 = 
NULL
;

78 
dlôe_m°©e_obj_t
 
	gf_dlôe_m°©e_obj
 = 
NULL
;

81 
	gdlôe_a˘ive
 = 
FALSE
;

84 
	gdlôe_check
 = 
FALSE
;

87 
	gdlôe_ªtu∫
 = 
FALSE
;

90 
	#MOD_BYTE
 0x0001

	)

91 
	#MOD_HALF
 0x0002

	)

92 
	#MOD_WORD
 0x0004

	)

93 
	#MOD_QWORD
 0x0008

	)

94 
	#MOD_FLOAT
 0x0010

	)

95 
	#MOD_DOUBLE
 0x0020

	)

96 
	#MOD_CHAR
 0x0040

	)

97 
	#MOD_STRING
 0x0080

	)

99 
	#MOD_SIZES
 \

100 (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
 \

101 |
MOD_FLOAT
|
MOD_DOUBLE
|
MOD_CHAR
|
MOD_STRING
)

	)

104 
	#MOD_DECIMAL
 0x0100

	)

105 
	#MOD_UNSIGNED
 0x0200

	)

106 
	#MOD_OCTAL
 0x0400

	)

107 
	#MOD_HEX
 0x0800

	)

108 
	#MOD_BINARY
 0x1000

	)

110 
	#MOD_FORMATS
 \

111 (
MOD_DECIMAL
|
MOD_UNSIGNED
|
MOD_OCTAL
|
MOD_HEX
|
MOD_BINARY
)

	)

116 
	$modifõr_∑r£r
(*
p
,

117 **
ídp
,

118 *
pmod
)

120 
modifõrs
 = 0;

123 *
pmod
 = 0;

126 i‡(*
p
 == '/')

128 
p
++;

130 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

132 *
p
)

135 
modifõrs
 |
MOD_BYTE
;

138 
modifõrs
 |
MOD_HALF
;

141 
modifõrs
 |
MOD_WORD
;

144 
modifõrs
 |
MOD_QWORD
;

147 
modifõrs
 |
MOD_DECIMAL
;

150 
modifõrs
 |
MOD_UNSIGNED
;

153 
modifõrs
 |
MOD_OCTAL
;

156 
modifõrs
 |
MOD_HEX
;

159 
modifõrs
 |
MOD_BINARY
;

162 
modifõrs
 |
MOD_FLOAT
;

165 
modifõrs
 |
MOD_DOUBLE
;

168 
modifõrs
 |
MOD_CHAR
;

171 
modifõrs
 |
MOD_STRING
;

176 
p
++;

181 *
ídp
 = 
p
;

182 *
pmod
 = 
modifõrs
;

183  
NULL
;

184 
	}
}

187 
evÆ_°©e_t
 *
	gdlôe_evÆu©‹
 = 
NULL
;

188 
ªgs_t
 *
	gloˇl_ªgs
 = 
NULL
;

193 
evÆ_vÆue_t


194 
	$idít_evÆu©‹
(
evÆ_°©e_t
 *
es
)

196 
i
;

197 *
îr_°r
;

198 
evÆ_vÆue_t
 
vÆ
;

199 
°©_°©_t
 *
°©
;

200 
sym_sym_t
 *
sym
;

201 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

204 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

206 i‡(!
	`my°ricmp
(
es
->
tok_buf
, 
md_ªg_«mes
[
i
].
°r
))

208 
îr_°r
 =

209 
	`f_dlôe_ªg_obj
(
loˇl_ªgs
, 
FALSE
,

210 
md_ªg_«mes
[
i
].
fûe
, md_ªg_«mes[i].
ªg
, &
vÆ
);

211 i‡(
îr_°r
)

213 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

214 
vÆ
 = 
îr_vÆue
;

216  
vÆ
;

221 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
TRUE
);

222 
sym
 = 
	`sym_böd_«me
(
es
->
tok_buf
, 
NULL
, 
sdb_™y
);

223 i‡(
sym
)

226 
vÆ
.
ty≥
 = 
ë_addr
;

227 
vÆ
.
vÆue
.
as_addr
 = 
sym
->
addr
;

228  
vÆ
;

232 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
es
->
tok_buf
);

233 i‡(
°©
)

236 
°©
->
sc
)

238 
sc_öt
:

239 
vÆ
.
ty≥
 = 
ë_öt
;

240 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

242 
sc_uöt
:

243 
vÆ
.
ty≥
 = 
ë_uöt
;

244 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

246 #ifde‡
HOST_HAS_QWORD


247 
sc_qw‹d
:

248 
vÆ
.
ty≥
 = 
ë_qw‹d
;

249 
vÆ
.
vÆue
.
as_qw‹d
 = *
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

251 
sc_sqw‹d
:

252 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

253 
vÆ
.
vÆue
.
as_sqw‹d
 = *
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
;

256 
sc_Êﬂt
:

257 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

258 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

260 
sc_doubÀ
:

261 
vÆ
.
ty≥
 = 
ë_doubÀ
;

262 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

264 
sc_di°
:

265 
sc_sdi°
:

266 
evÆ_îr‹
 = 
ERR_BADEXPR
;

267 
vÆ
 = 
îr_vÆue
;

269 
sc_f‹muœ
:

272 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
sim_sdb
);

273 *
ídp
;

275 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

276 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

279 
vÆ
 = 
îr_vÆue
;

282 
	`evÆ_dñëe
(
es
);

286 
	`∑nic
("bogus stat class");

288  
vÆ
;

293 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

294 
vÆ
 = 
îr_vÆue
;

295  
vÆ
;

296 
	}
}

299 
	#MAX_ARGS
 4

	)

302 
	#MAX_STR
 128

	)

305 
	u¨g_vÆ_t
 {

306 
	mas_modifõr
;

307 
evÆ_vÆue_t
 
	mas_vÆue
;

308 
	mas_ac˚ss
;

309 
	mas_°r
[
MAX_STR
];

314 (*
	tcmd_‚_t
)(
	t«rgs
,

315 
	t¨g_vÆ_t
 
	t¨gs
[],

316 
	tªgs_t
 *
	tªgs
,

317 
	tmem_t
 *
	tmem
);

321 
	sdlôe_cmd_t
 {

322 *
	mcmd_°r
;

323 *
	m¨g_°rs
[
MAX_ARGS
];

331 
cmd_‚_t
 
	mcmd_‚
;

332 *
	mhñp_°r
;

337 
dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

338 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

340 
dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

341 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

343 
dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

344 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

346 
dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

347 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

349 
dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

350 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

352 
dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

353 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

355 
dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

356 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

358 
dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

359 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

361 
dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

362 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

364 
dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

365 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

367 
dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

368 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

370 
dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

371 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

373 
dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

374 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

376 
dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

377 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

379 
dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

380 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

382 
dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

383 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

385 
dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

386 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

388 
dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

389 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

391 
dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

392 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

394 
dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

395 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

397 
dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

398 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

400 
dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

401 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

403 
dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

404 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

406 
dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

407 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

409 
dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

410 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

412 
dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

413 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

415 
dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

416 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

418 
dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

419 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

421 
dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

422 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

424 
dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

425 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

430 
dlôe_cmd_t
 
	gcmd_db
[] =

432 { "hñp", { "s?", 
NULL
 }, 
dlôe_hñp
,

434 { "vîsi⁄", { 
NULL
 }, 
dlôe_vîsi⁄
,

436 { "ãrmö©e", { 
NULL
 }, 
dlôe_ãrmö©e
,

438 { "quô", { 
NULL
 }, 
dlôe_quô
,

440 { "c⁄t", { "a?", 
NULL
 }, 
dlôe_c⁄t
,

442 { "°ï", { 
NULL
 }, 
dlôe_°ï
,

445 { "√xt", { 
NULL
 }, 
dlôe_√xt
,

448 { "¥öt", { "m?", "e", 
NULL
 }, 
dlôe_¥öt
,

450 { "›ti⁄s", { 
NULL
 }, 
dlôe_›ti⁄s
,

452 { "›ti⁄", { "s", 
NULL
 }, 
dlôe_›ti⁄
,

454 { "°©s", { 
NULL
 }, 
dlôe_°©s
,

456 { "°©", { "s", 
NULL
 }, 
dlôe_°©
,

458 { "wh©is", { "e", 
NULL
 }, 
dlôe_wh©is
,

460 { "---", { 
NULL
 }, NULL, NULL },

461 { "ªgs", { 
NULL
 }, 
dlôe_ªgs
,

463 { "úegs", { 
NULL
 }, 
dlôe_úegs
,

465 { "Âªgs", { 
NULL
 }, 
dlôe_Âªgs
,

467 { "¸egs", { 
NULL
 }, 
dlôe_¸egs
,

469 { "m°©e", { "s?", 
NULL
 }, 
dlôe_m°©e
,

471 { "di•œy", { "m?", "a", 
NULL
 }, 
dlôe_di•œy
,

473 { "dump", { "a?", "c?", 
NULL
 }, 
dlôe_dump
,

475 { "dis", { "a?", "c?", 
NULL
 }, 
dlôe_dis
,

477 { "bªak", { "a", 
NULL
 }, 
dlôe_bªak
,

479 { "dbªak", { "a", "t?", 
NULL
 }, 
dlôe_dbªak
,

482 { "rbªak", { "s", "t?", 
NULL
 }, 
dlôe_rbªak
,

485 { "bªaks", { 
NULL
 }, 
dlôe_bªaks
,

487 { "dñëe", { "i", 
NULL
 }, 
dlôe_dñëe
,

489 { "˛ór", { 
NULL
 }, 
dlôe_˛ór
,

491 { "---", { 
NULL
 }, NULL, NULL },

492 { "symbﬁs", { 
NULL
 }, 
dlôe_symbﬁs
,

494 { "tsymbﬁs", { 
NULL
 }, 
dlôe_tsymbﬁs
,

496 { "dsymbﬁs", { 
NULL
 }, 
dlôe_dsymbﬁs
,

498 { "symbﬁ", { "s", 
NULL
 }, 
dlôe_symbﬁ
,

500 { "---", { 
NULL
 }, NULL, NULL },

502 { 
NULL
, { NULL }, NULL, NULL }

506 *
	gdlôe_hñp_èû
 =

521 #ifde‡
HOST_HAS_QWORD


537 
	$dlôe_exec
(*
cmd_°r
,

538 
ªgs_t
 *
ªgs
,

539 
mem_t
 *
mem
)

541 
i
, 
¨g_˙t
;

542 
dlôe_cmd_t
 *
cmd
;

543 
cmd_buf
[512], *
p
, *
q
, *
ídp
;

544 
¨g_vÆ_t
 
¨gs
[
MAX_ARGS
];

546 
p
 = 
cmd_°r
;

547 
q
 = 
cmd_buf
;

550 *
p
 == ' ' || *p == '\t' || *p == '\n')

551 
p
++;

554 i‡(*
p
 == '\0')

557  
NULL
;

561 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t' && *p != '/')

562 *
q
++ = *
p
++;

563 *
q
 = '\0';

566 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

568 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
cmd_buf
))

571 i‡(
cmd
->
cmd_°r
 =
NULL
)

575 
i
=0, 
¨g_˙t
=0; i<
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++,árg_cnt++)

577 
›ti⁄Æ
, 
ac˚ss
, 
modifõrs
;

578 *
¨g
, 
¨g_ty≥
, *
îr_°r
;

579 
evÆ_vÆue_t
 
vÆ
;

582 *
p
 == ' ' || *p == '\t' || *p == '\n')

583 
p
++;

585 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

586 
¨g_ty≥
 = 
¨g
[0];

587 
›ti⁄Æ
 = (
¨g
[1] == '?');

589 i‡(*
p
 == '\0')

591 i‡(
›ti⁄Æ
)

600 
ídp
 = 
p
;

601 
¨g_ty≥
)

604 
îr_°r
 = 
	`modifõr_∑r£r
(
p
, &
ídp
, &
modifõrs
);

605 i‡(
îr_°r
)

606  
îr_°r
;

607 
¨gs
[
¨g_˙t
].
as_modifõr
 = 
modifõrs
;

610 
loˇl_ªgs
 = 
ªgs
;

611 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

612 i‡(
evÆ_îr‹
)

613  
evÆ_îr_°r
[
evÆ_îr‹
];

614 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

617 
loˇl_ªgs
 = 
ªgs
;

618 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

619 i‡(
evÆ_îr‹
)

620  
evÆ_îr_°r
[
evÆ_îr‹
];

621 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

624 
loˇl_ªgs
 = 
ªgs
;

625 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

626 i‡(
evÆ_îr‹
)

627  
evÆ_îr_°r
[
evÆ_îr‹
];

628 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

631 
ac˚ss
 = 0;

632 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

634 *
p
)

637 
ac˚ss
 |
ACCESS_READ
;

640 
ac˚ss
 |
ACCESS_WRITE
;

643 
ac˚ss
 |
ACCESS_EXEC
;

648 
p
++;

650 
ídp
 = 
p
;

651 
¨gs
[
¨g_˙t
].
as_ac˚ss
 = 
ac˚ss
;

654 
loˇl_ªgs
 = 
ªgs
;

655 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

656 i‡(
evÆ_îr‹
)

657  
evÆ_îr_°r
[
evÆ_îr‹
];

658 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

661 
q
 = 
¨gs
[
¨g_˙t
].
as_°r
;

662 *
p
 != ' ' && *p != '\t' && *p != '\0')

663 *
q
++ = *
p
++;

664 *
q
 = '\0';

665 
ídp
 = 
p
;

668 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

670 
p
 = 
ídp
;

675 *
p
 == ' ' || *p == '\t' || *p == '\n')

676 
p
++;

679 i‡(*
p
 != '\0')

683  
cmd
->
	`cmd_‚
(
¨g_˙t
, 
¨gs
, 
ªgs
, 
mem
);

684 
	}
}

688 
	$¥öt_vÆ
(
modifõrs
,

689 
evÆ_vÆue_t
 
vÆ
)

691 *
f‹m©
 = "", *
¥efix
 = "", 
ødix
, 
buf
[512];

694 i‡((
modifõrs
 & 
MOD_SIZES
) == 0)

697 
vÆ
.
ty≥
)

699 
ë_öt
: 
modifõrs
 |
MOD_WORD
; ;

700 
ë_uöt
: 
modifõrs
 |
MOD_WORD
; ;

701 
ë_addr
:

702 #ifde‡
HOST_HAS_QWORD


703 i‡((
md_addr_t
) > 4)

704 
modifõrs
 |
MOD_QWORD
;

707 
modifõrs
 |
MOD_WORD
;

709 #ifde‡
HOST_HAS_QWORD


710 
ë_qw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

711 
ë_sqw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

713 
ë_Êﬂt
: 
modifõrs
 |
MOD_FLOAT
; ;

714 
ë_doubÀ
: 
modifõrs
 |
MOD_DOUBLE
; ;

715 
ë_symbﬁ
:

719 i‡(((
modifõrs
 & 
MOD_SIZES
) & ((modifiers & MOD_SIZES) - 1)) != 0)

723 i‡((
modifõrs
 & 
MOD_FORMATS
) == 0)

726 
vÆ
.
ty≥
)

728 
ë_öt
: 
modifõrs
 |
MOD_DECIMAL
; ;

729 
ë_uöt
: 
modifõrs
 |
MOD_UNSIGNED
; ;

730 
ë_addr
: 
modifõrs
 |
MOD_HEX
; ;

731 #ifde‡
HOST_HAS_QWORD


732 
ë_qw‹d
: 
modifõrs
 |
MOD_UNSIGNED
; ;

733 
ë_sqw‹d
: 
modifõrs
 |
MOD_DECIMAL
; ;

735 
ë_Êﬂt
: ;

736 
ë_doubÀ
: ;

737 
ë_symbﬁ
:

741 i‡(((
modifõrs
 & 
MOD_FORMATS
) & ((modifiers & MOD_FORMATS) - 1)) != 0)

745 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
))

747 i‡(
modifõrs
 & 
MOD_DECIMAL
)

748 
ødix
 = 'd';

749 i‡(
modifõrs
 & 
MOD_UNSIGNED
)

750 
ødix
 = 'u';

751 i‡(
modifõrs
 & 
MOD_OCTAL
)

752 
ødix
 = 'o';

753 i‡(
modifõrs
 & 
MOD_HEX
)

754 
ødix
 = 'x';

755 i‡(
modifõrs
 & 
MOD_BINARY
)

758 
	`∑nic
("no default integer format");

760 i‡(
modifõrs
 & 
MOD_BYTE
)

762 i‡(
modifõrs
 & 
MOD_OCTAL
)

764 
¥efix
 = "0";

765 
f‹m©
 = "03";

767 i‡(
modifõrs
 & 
MOD_HEX
)

769 
¥efix
 = "0x";

770 
f‹m©
 = "02";

774 
¥efix
 = "";

775 
f‹m©
 = "";

778 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

779 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

781 i‡(
modifõrs
 & 
MOD_HALF
)

783 i‡(
modifõrs
 & 
MOD_OCTAL
)

785 
¥efix
 = "0";

786 
f‹m©
 = "06";

788 i‡(
modifõrs
 & 
MOD_HEX
)

790 
¥efix
 = "0x";

791 
f‹m©
 = "04";

795 
¥efix
 = "";

796 
f‹m©
 = "";

799 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

800 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

802 i‡(
modifõrs
 & 
MOD_WORD
)

804 i‡(
modifõrs
 & 
MOD_OCTAL
)

806 
¥efix
 = "0";

807 
f‹m©
 = "011";

809 i‡(
modifõrs
 & 
MOD_HEX
)

811 
¥efix
 = "0x";

812 
f‹m©
 = "08";

816 
¥efix
 = "";

817 
f‹m©
 = "";

820 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

821 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

823 #ifde‡
HOST_HAS_QWORD


824 i‡(
modifõrs
 & 
MOD_QWORD
)

826 i‡(
modifõrs
 & 
MOD_OCTAL
)

828 
¥efix
 = "0";

829 
f‹m©
 = "022";

831 i‡(
modifõrs
 & 
MOD_HEX
)

833 
¥efix
 = "0x";

834 
f‹m©
 = "016";

838 
¥efix
 = "";

839 
f‹m©
 = "";

842 
	`•rötf
(
buf
, "%s%%%¶%c", 
¥efix
, 
f‹m©
, 
ødix
);

843 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_qw‹d
(
vÆ
));

847 i‡(
modifõrs
 & 
MOD_FLOAT
)

848 
	`Ârötf
(
°dout
, "%f", ()
	`evÆ_as_Êﬂt
(
vÆ
));

849 i‡(
modifõrs
 & 
MOD_DOUBLE
)

850 
	`Ârötf
(
°dout
, "%f", 
	`evÆ_as_doubÀ
(
vÆ
));

851 i‡(
modifõrs
 & 
MOD_CHAR
)

852 
	`Ârötf
(
°dout
, "`%c'", 
	`evÆ_as_uöt
(
vÆ
));

853 i‡(
modifõrs
 & 
MOD_STRING
)

856 
	`∑nic
("no default format");

859  
NULL
;

860 
	}
}

864 
	$dlôe_mem_obj
(
mem_t
 *
mem
,

865 
is_wrôe
,

866 
md_addr_t
 
addr
,

867 *
p
,

868 
nbyãs
)

870 
mem_cmd
 
cmd
;

872 i‡(!
is_wrôe
)

873 
cmd
 = 
Ród
;

875 
cmd
 = 
Wrôe
;

878 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

881  
NULL
;

882 
	}
}

886 
	$dlôe_m°©e_obj
(
FILE
 *
°ªam
,

887 *
cmd
,

888 
ªgs_t
 *
ªgs
,

889 
mem_t
 *
mem
)

892 
	`Ârötf
(
°ªam
, "No machine state.\n");

895  
NULL
;

896 
	}
}

900 
	$dlôe_∑u£
()

902 
buf
[512];

903 
	`Ârötf
(
°dout
, "Press <return>Åo continue...");

904 
	`fÊush
(
°dout
);

905 
	`fgës
(
buf
, 512, 
°dö
);

906 
	}
}

910 
	$¥öt_hñp
(
dlôe_cmd_t
 *
cmd
)

912 
i
;

915 
	`Ârötf
(
°dout
, " %†", 
cmd
->
cmd_°r
);

918 
i
=0; i < 
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++)

920 
›ti⁄Æ
;

921 *
¨g
, 
¨g_ty≥
;

923 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

924 
¨g_ty≥
 = 
¨g
[0];

925 
›ti⁄Æ
 = (
¨g
[1] == '?');

927 i‡(
›ti⁄Æ
)

928 
	`Ârötf
(
°dout
, "{");

930 
	`Ârötf
(
°dout
, "<");

932 
¨g_ty≥
)

935 
	`Ârötf
(
°dout
, "/modifiers");

938 
	`Ârötf
(
°dout
, "addr");

941 
	`Ârötf
(
°dout
, "count");

944 
	`Ârötf
(
°dout
, "expr");

947 
	`Ârötf
(
°dout
, "r|w|x");

950 
	`Ârötf
(
°dout
, "id");

953 
	`Ârötf
(
°dout
, "string");

956 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

959 i‡(
›ti⁄Æ
)

960 
	`Ârötf
(
°dout
, "}");

962 
	`Ârötf
(
°dout
, ">");

964 
	`Ârötf
(
°dout
, " ");

966 
	`Ârötf
(
°dout
, "\n");

969 
	`Ârötf
(
°dout
, " %s\n", 
cmd
->
hñp_°r
);

970 
	}
}

974 
	$dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

975 
ªgs_t
 *
ªgs
,

976 
mem_t
 *
mem
)

978 
dlôe_cmd_t
 *
cmd
;

980 i‡(
«rgs
 != 0 &&Çargs != 1)

983 i‡(
«rgs
 == 1)

986 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

988 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
¨gs
[0].
as_°r
))

991 i‡(!
cmd
->
cmd_°r
)

994 
	`¥öt_hñp
(
cmd
);

999 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

1002 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, "---"))

1003 
	`dlôe_∑u£
();

1005 
	`¥öt_hñp
(
cmd
);

1008 
	`Ârötf
 (
°dout
, "\n");

1009 i‡(
dlôe_hñp_èû
)

1010 
	`Ârötf
 (
°dout
, "%s\n", 
dlôe_hñp_èû
);

1014  
NULL
;

1015 
	}
}

1019 
	$dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1020 
ªgs_t
 *
ªgs
,

1021 
mem_t
 *
mem
)

1023 i‡(
«rgs
 != 0)

1027 
	`Ârötf
(
°dout
, "The SimpleScalar/%s Tool Set, version %d.%d of %s.\n",

1028 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

1029 
	`Ârötf
(
°dout
,

1033  
NULL
;

1034 
	}
}

1038 
	$dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1039 
ªgs_t
 *
ªgs
,

1040 
mem_t
 *
mem
)

1042 i‡(
«rgs
 != 0)

1045 
	`Ârötf
(
°dout
, "DLite:Åerminating simulation...\n");

1046 
	`l⁄gjmp
(
sim_exô_buf
, 1);

1049  
NULL
;

1050 
	}
}

1054 
	$dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1055 
ªgs_t
 *
ªgs
,

1056 
mem_t
 *
mem
)

1058 i‡(
«rgs
 != 0)

1061 
	`Ârötf
(
°dout
, "DLite:Éxiting simulator...\n");

1062 
	`exô
(1);

1065  
NULL
;

1066 
	}
}

1070 
	$dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1071 
ªgs_t
 *
ªgs
,

1072 
mem_t
 *
mem
)

1074 
evÆ_vÆue_t
 
vÆ
;

1075 *
îr_°r
;

1077 i‡(!
f_dlôe_ªg_obj
 || !
f_dlôe_mem_obj
)

1078 
	`∑nic
("DLite isÇot configured");

1080 i‡(
«rgs
 != 0 &&Çargs != 1)

1083 i‡(
«rgs
 == 1)

1086 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1090 
vÆ
.
ty≥
 = 
ë_addr
;

1091 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1092 
îr_°r
 = 
	`f_dlôe_ªg_obj
(
ªgs
, 
TRUE
, 
π_PC
, 0, &
vÆ
);

1093 i‡(
îr_°r
 !
NULL
) Érr_str;

1094 
	`myÂrötf
(
°dout
, "DLite: continuingÉxecution @ 0x%08p...\n",

1095 
vÆ
.
vÆue
.
as_addr
);

1099 
dlôe_a˘ive
 = 
FALSE
;

1100 
dlôe_ªtu∫
 = 
TRUE
;

1103  
NULL
;

1104 
	}
}

1108 
	$dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1109 
ªgs_t
 *
ªgs
,

1110 
mem_t
 *
mem
)

1112 i‡(
«rgs
 != 0)

1116 
dlôe_a˘ive
 = 
TRUE
;

1117 
dlôe_ªtu∫
 = 
TRUE
;

1120  
NULL
;

1121 
	}
}

1126 
	$dlôe_√xt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[])

1128 i‡(
«rgs
 != 0)

1132 
dlôe_°ï_˙t
 = 1;

1133 
dlôe_°ï_öto
 = 
FALSE
;

1136  
NULL
;

1137 
	}
}

1142 
	$dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1143 
ªgs_t
 *
ªgs
,

1144 
mem_t
 *
mem
)

1146 
modifõrs
 = 0;

1147 *
îr_°r
;

1148 
evÆ_vÆue_t
 
vÆ
;

1150 i‡(
«rgs
 != 1 &&Çargs != 2)

1153 i‡(
«rgs
 == 2)

1156 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1157 
vÆ
 = 
¨gs
[1].
as_vÆue
;

1162 
vÆ
 = 
¨gs
[0].
as_vÆue
;

1166 
îr_°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1167 i‡(
îr_°r
)

1168  
îr_°r
;

1169 
	`Ârötf
(
°dout
, "\n");

1172  
NULL
;

1173 
	}
}

1177 
	$dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1178 
ªgs_t
 *
ªgs
,

1179 
mem_t
 *
mem
)

1181 i‡(
«rgs
 != 0)

1185 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dout
, 
TRUE
, 
FALSE
);

1188  
NULL
;

1189 
	}
}

1193 
	$dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1194 
ªgs_t
 *
ªgs
,

1195 
mem_t
 *
mem
)

1197 
›t_›t_t
 *
›t
;

1199 i‡(
«rgs
 != 1)

1203 
›t
 = 
	`›t_föd_›ti⁄
(
sim_odb
, 
¨gs
[0].
as_°r
);

1204 i‡(!
›t
)

1208 
	`Ârötf
(
°dout
, "%-16† ", 
›t
->
«me
);

1209 
	`›t_¥öt_›ti⁄
(
›t
, 
°dout
);

1210 i‡(
›t
->
desc
)

1211 
	`Ârötf
(
°dout
, " # %s", 
›t
->
desc
);

1212 
	`Ârötf
(
°dout
, "\n");

1215  
NULL
;

1216 
	}
}

1220 
	$dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1221 
ªgs_t
 *
ªgs
,

1222 
mem_t
 *
mem
)

1224 i‡(
«rgs
 != 0)

1228 
	`°©_¥öt_°©s
(
sim_sdb
, 
°dout
);

1229 
	`sim_aux_°©s
(
°dout
);

1232  
NULL
;

1233 
	}
}

1237 
	$dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1238 
ªgs_t
 *
ªgs
,

1239 
mem_t
 *
mem
)

1241 
°©_°©_t
 *
°©
;

1243 i‡(
«rgs
 != 1)

1247 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
¨gs
[0].
as_°r
);

1248 i‡(!
°©
)

1252 
	`°©_¥öt_°©
(
sim_sdb
, 
°©
, 
°dout
);

1255  
NULL
;

1256 
	}
}

1260 
	$dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1261 
ªgs_t
 *
ªgs
,

1262 
mem_t
 *
mem
)

1264 i‡(
«rgs
 != 1)

1267 
	`Ârötf
(
°dout
, "ty≥ =`%s'\n", 
evÆ_ty≥_°r
[
¨gs
[0].
as_vÆue
.
ty≥
]);

1270  
NULL
;

1271 
	}
}

1275 
	$dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1276 
ªgs_t
 *
ªgs
,

1277 
mem_t
 *
mem
)

1279 *
îr_°r
;

1281 i‡(
«rgs
 != 0)

1285 
	`myÂrötf
(
°dout
, "PC (address ofÜast committed instruction): 0x%08p\n",

1286 
ªgs
->
ªgs_PC
);

1287 
	`myÂrötf
(
°dout
, "NPC (address ofÇext instructionÅo commit): 0x%08p\n",

1288 
ªgs
->
ªgs_NPC
);

1289 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1290  
îr_°r
;

1291 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1294  
NULL
;

1295 
	}
}

1299 
	$dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1300 
ªgs_t
 *
ªgs
,

1301 
mem_t
 *
mem
)

1304 
	`md_¥öt_Âªgs
(
ªgs
->
ªgs_F
, 
°dout
);

1307  
NULL
;

1308 
	}
}

1312 
	$dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1313 
ªgs_t
 *
ªgs
,

1314 
mem_t
 *
mem
)

1317 
	`md_¥öt_¸egs
(
ªgs
->
ªgs_C
, 
°dout
);

1320  
NULL
;

1321 
	}
}

1325 
	$dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1326 
ªgs_t
 *
ªgs
,

1327 
mem_t
 *
mem
)

1329 *
îr_°r
;

1331 
	`myÂrötf
(
°dout
, "PC (address ofÜast committed instruction): 0x%08p\n",

1332 
ªgs
->
ªgs_PC
);

1333 
	`myÂrötf
(
°dout
, "NPC (address ofÇext instructionÅo commit): 0x%08p\n",

1334 
ªgs
->
ªgs_NPC
);

1335 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1336  
îr_°r
;

1337 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1338 
	`dlôe_∑u£
();

1339 i‡((
îr_°r
 = 
	`dlôe_Âªgs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1340  
îr_°r
;

1343  
NULL
;

1344 
	}
}

1348 
	$dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1349 
ªgs_t
 *
ªgs
,

1350 
mem_t
 *
mem
)

1352 *
îr°r
;

1354 i‡(
«rgs
 != 0 &&Çargs != 1)

1357 i‡(
f_dlôe_m°©e_obj
)

1359 i‡(
«rgs
 == 0)

1361 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
NULL
, 
ªgs
, 
mem
);

1362 i‡(
îr°r
)

1363  
îr°r
;

1367 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
¨gs
[0].
as_°r
, 
ªgs
, 
mem
);

1368 i‡(
îr°r
)

1369  
îr°r
;

1374  
NULL
;

1375 
	}
}

1379 
	$dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1380 
ªgs_t
 *
ªgs
,

1381 
mem_t
 *
mem
)

1383 
modifõrs
, 
size
;

1384 
md_addr_t
 
addr
;

1385 
buf
[512];

1386 
evÆ_vÆue_t
 
vÆ
;

1387 *
îr°r
;

1389 i‡(
«rgs
 != 1 &&Çargs != 2)

1392 i‡(
«rgs
 == 1)

1395 
modifõrs
 = 0;

1398 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1402 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1404 i‡(
«rgs
 == 2)

1406 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1409 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1413 
addr
 = 
	`evÆ_as_addr
(
¨gs
[1].
as_vÆue
);

1417 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1418 
size
 = 1;

1419 i‡(
modifõrs
 & 
MOD_HALF
)

1420 
size
 = 2;

1421 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1422 
size
 = 8;

1424 
size
 = 4;

1427 
îr°r
 = 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
, 
addr
, (*)
buf
, 
size
);

1428 i‡(
îr°r
)

1429  
îr°r
;

1432 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1435 
vÆ
.
ty≥
 = 
ë_öt
;

1436 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1438 i‡(
modifõrs
 & 
MOD_HALF
)

1441 
vÆ
.
ty≥
 = 
ë_öt
;

1442 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1444 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1447 
vÆ
.
ty≥
 = 
ë_doubÀ
;

1448 
vÆ
.
vÆue
.
as_doubÀ
 = *(*)
buf
;

1453 
vÆ
.
ty≥
 = 
ë_uöt
;

1454 
vÆ
.
vÆue
.
as_uöt
 = *(*)
buf
;

1458 
îr°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1459 i‡(
îr°r
)

1460  
îr°r
;

1461 
	`Ârötf
(
°dout
, "\n");

1464  
NULL
;

1465 
	}
}

1468 
	#BYTES_PER_LINE
 16

	)

1469 
	#LINES_PER_SCREEN
 4

	)

1473 
	$dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1474 
ªgs_t
 *
ªgs
,

1475 
mem_t
 *
mem
)

1477 
i
, 
j
;

1478 
cou¡
 = 
LINES_PER_SCREEN
 * 
BYTES_PER_LINE
, 
i_cou¡
, 
fmt_cou¡
, 
fmt_löes
;

1479 
md_addr_t
 
fmt_addr
, 
i_addr
;

1480 
md_addr_t
 
addr
 = 0;

1481 
byã
;

1482 
buf
[512];

1483 *
îr°r
;

1485 i‡(
«rgs
 < 0 ||Çargs > 2)

1488 i‡(
«rgs
 == 1)

1491 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1495 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1497 i‡(
«rgs
 == 2)

1500 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1504 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1507 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1510 i‡(
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
) > 1024)

1514 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1519 
fmt_addr
 = 
addr
 & ~(
BYTES_PER_LINE
 - 1);

1520 
fmt_cou¡
 = (
cou¡
 + (
BYTES_PER_LINE
 - 1)) & ~(BYTES_PER_LINE - 1);

1521 
fmt_löes
 = 
fmt_cou¡
 / 
BYTES_PER_LINE
;

1523 i‡(
fmt_löes
 < 1)

1524 
	`∑nic
("no outputÜines");

1527 i‡(
fmt_löes
 == 1)

1530 
i_addr
 = 
fmt_addr
;

1531 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1532 
i
=0; i < 
cou¡
; i++)

1534 
îr°r
 =

1535 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1536 
i_addr
, (*)&
byã
, 1);

1537 i‡(
îr°r
)

1538  
îr°r
;

1539 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1540 i‡(
	`i•röt
(
byã
))

1541 
buf
[
i
] = 
byã
;

1543 
buf
[
i
] = '.';

1544 
i_addr
++;

1545 
addr
++;

1547 
buf
[
i
] = '\0';

1550 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1554 
i_cou¡
 = 0;

1555 
i_addr
 = 
fmt_addr
;

1556 
i
=0; i < 
fmt_löes
; i++)

1558 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1561 
j
=0; j < 
BYTES_PER_LINE
; j++)

1563 i‡(
i_addr
 >
addr
 && 
i_cou¡
 <
cou¡
)

1565 
îr°r
 =

1566 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1567 
i_addr
, (*)&
byã
, 1);

1568 i‡(
îr°r
)

1569  
îr°r
;

1570 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1571 i‡(
	`i•röt
(
byã
))

1572 
buf
[
j
] = 
byã
;

1574 
buf
[
j
] = '.';

1575 
i_cou¡
++;

1576 
addr
++;

1580 
	`Ârötf
(
°dout
, " ");

1581 
buf
[
j
] = ' ';

1583 
i_addr
++;

1585 
buf
[
j
] = '\0';

1588 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1593  
NULL
;

1594 
	}
}

1597 
	#INSTS_PER_SCREEN
 16

	)

1601 
	$dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1602 
ªgs_t
 *
ªgs
,

1603 
mem_t
 *
mem
)

1605 
i
;

1606 
cou¡
 = 
INSTS_PER_SCREEN
;

1607 
md_addr_t
 
addr
 = 0;

1608 
md_ö°_t
 
ö°
;

1609 *
îr°r
;

1611 i‡(
«rgs
 < 0 ||Çargs > 2)

1614 i‡(
«rgs
 == 1)

1617 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1621 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1623 i‡(
«rgs
 == 2)

1626 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1630 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1633 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1637 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1639 i‡(
cou¡
 < 0 || count > 1024)

1644 i‡((
addr
 % (
md_ö°_t
)) != 0)

1648 
i
=0; i<
cou¡
; i++)

1651 
	`myÂrötf
(
°dout
, " 0x%08p: ", 
addr
);

1652 
îr°r
 =

1653 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1654 
addr
, (*)&
ö°
, (inst));

1655 
ö°
 = 
	`MD_SWAPI
(inst);

1656 i‡(
îr°r
)

1657  
îr°r
;

1658 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
°dout
);

1659 
	`Ârötf
(
°dout
, "\n");

1662 
addr
 +(
md_ö°_t
);

1666  
NULL
;

1667 
	}
}

1670 
	sdlôe_bªak_t
 {

1671 
dlôe_bªak_t
 *
	m√xt
;

1672 
	mid
;

1673 
	m_˛ass
;

1674 
ønge_ønge_t
 
	mønge
;

1678 
dlôe_bªak_t
 *
	gdlôe_bps
 = 
NULL
;

1681 
	gbªak_id
 = 1;

1685 
	$bp_˛ass_°r
(
_˛ass
)

1687 i‡(
_˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
))

1689 i‡(
_˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
))

1691 i‡(
_˛ass
 =(
ACCESS_WRITE
|
ACCESS_EXEC
))

1693 i‡(
_˛ass
 =(
ACCESS_READ
|
ACCESS_EXEC
))

1695 i‡(
_˛ass
 =
ACCESS_READ
)

1697 i‡(
_˛ass
 =
ACCESS_WRITE
)

1699 i‡(
_˛ass
 =
ACCESS_EXEC
)

1702 
	`∑nic
("bogusáccess class");

1703 
	}
}

1707 
	$£t_bªak
(
_˛ass
,

1708 
ønge_ønge_t
 *
ønge
)

1710 
dlôe_bªak_t
 *
bp
;

1713 
bp
 = 
	`ˇŒoc
(1, (
dlôe_bªak_t
));

1714 i‡(!
bp
)

1715 
	`Áèl
("out of virtual memory");

1717 
bp
->
id
 = 
bªak_id
++;

1718 
bp
->
ønge
 = *range;

1719 
bp
->
_˛ass
 = _class;

1721 
bp
->
√xt
 = 
dlôe_bps
;

1722 
dlôe_bps
 = 
bp
;

1724 
	`Ârötf
(
°dout
, "bªakpoöà#%d së @ ", 
bp
->
id
);

1725 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1726 
	`Ârötf
(
°dout
, ", _˛ass: %s\n", 
	`bp_˛ass_°r
(
_˛ass
));

1729 
dlôe_check
 = 
TRUE
;

1732  
NULL
;

1733 
	}
}

1737 
	$dñëe_bªak
(
id
)

1739 
dlôe_bªak_t
 *
bp
, *
¥ev
;

1741 i‡(!
dlôe_bps
)

1744 
bp
=
dlôe_bps
,
¥ev
=
NULL
; b∞!NULL;Öªv=bp,bp=bp->
√xt
)

1746 i‡(
bp
->
id
 == id)

1749 i‡(!
bp
)

1752 i‡(!
¥ev
)

1755 
dlôe_bps
 = 
bp
->
√xt
;

1760 
¥ev
->
√xt
 = 
bp
->next;

1763 
	`Ârötf
(
°dout
, "bªakpoöà#%d dñëed @ ", 
bp
->
id
);

1764 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1765 
	`Ârötf
(
°dout
, ", _˛ass: %s\n", 
	`bp_˛ass_°r
(
bp
->
_˛ass
));

1767 
bp
->
√xt
 = 
NULL
;

1768 
	`‰ì
(
bp
);

1770 i‡(!
dlôe_bps
)

1773 
dlôe_check
 = 
FALSE
;

1778 
dlôe_check
 = 
TRUE
;

1782  
NULL
;

1783 
	}
}

1786 
	gbªak_ac˚ss
 = 0;

1790 
	$__check_bªak
(
md_addr_t
 
√xt_PC
,

1791 
ac˚ss
,

1792 
md_addr_t
 
addr
,

1793 
cou¡î_t
 
icou¡
,

1794 
cou¡î_t
 
cy˛e
)

1796 
dlôe_bªak_t
 *
bp
;

1798 i‡(
dlôe_a˘ive
)

1801 
bªak_ac˚ss
 = 0;

1802  
TRUE
;

1806 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

1808 
bp
->
ønge
.
°¨t
.
±y≥
)

1810 
±_addr
:

1811 i‡((
bp
->
_˛ass
 & 
ACCESS_EXEC
)

1812 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
√xt_PC
))

1815 
	`myÂrötf
(
°dout
,

1817 
bp
->
id
, 
√xt_PC
);

1818 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1819  
TRUE
;

1821 i‡((
bp
->
_˛ass
 & 
ACCESS_READ
)

1822 && ((
ac˚ss
 & 
ACCESS_READ
)

1823 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1826 
	`myÂrötf
(
°dout
,

1828 
bp
->
id
, 
addr
);

1829 
bªak_ac˚ss
 = 
ACCESS_READ
;

1830  
TRUE
;

1832 i‡((
bp
->
_˛ass
 & 
ACCESS_WRITE
)

1833 && ((
ac˚ss
 & 
ACCESS_WRITE
)

1834 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1837 
	`myÂrötf
(
°dout
,

1839 
bp
->
id
, 
addr
);

1840 
bªak_ac˚ss
 = 
ACCESS_WRITE
;

1841  
TRUE
;

1845 
±_ö°
:

1846 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
icou¡
))

1849 
	`Ârötf
(
°dout
,

1851 
bp
->
id
, ()
icou¡
);

1852 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1853  
TRUE
;

1857 
±_cy˛e
:

1858 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
cy˛e
))

1861 
	`Ârötf
(
°dout
,

1863 
bp
->
id
, ()
cy˛e
);

1864 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1865  
TRUE
;

1870 
	`∑nic
("bogusÑangeÅype");

1877 
bªak_ac˚ss
 = 0;

1878  
FALSE
;

1879 
	}
}

1883 
	$dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1884 
ªgs_t
 *
ªgs
,

1885 
mem_t
 *
mem
)

1887 
md_addr_t
 
addr
;

1888 
ønge_ønge_t
 
ønge
;

1890 i‡(
«rgs
 != 1)

1894 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1898 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1901 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1902 
ønge
.
°¨t
.
pos
 = 
addr
;

1903 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1904 #ifde‡
TARGET_ALPHA


1907 
ønge
.
íd
.
pos
 = 
addr
 + 9;

1909 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1913  
	`£t_bªak
(
ACCESS_EXEC
, &
ønge
);

1914 
	}
}

1918 
	$dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1919 
ªgs_t
 *
ªgs
,

1920 
mem_t
 *
mem
)

1922 
ac˚ss
;

1923 
md_addr_t
 
addr
;

1924 
ønge_ønge_t
 
ønge
;

1926 i‡(
«rgs
 != 1 &&Çargs != 2)

1929 i‡(
«rgs
 == 1)

1932 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1936 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1939 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
;

1941 i‡(
«rgs
 == 2)

1944 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1948 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1951 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1955 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1956 
ønge
.
°¨t
.
pos
 = 
addr
;

1957 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1958 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1961  
	`£t_bªak
(
ac˚ss
, &
ønge
);

1962 
	}
}

1966 
	$dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1967 
ªgs_t
 *
ªgs
,

1968 
mem_t
 *
mem
)

1970 
ac˚ss
;

1971 *
îr°r
;

1972 
ønge_ønge_t
 
ønge
;

1974 i‡(
«rgs
 != 1 &&Çargs != 2)

1977 i‡(
«rgs
 == 2)

1980 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1985 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
;

1989 
îr°r
 = 
	`ønge_∑r£_ønge
(
¨gs
[0].
as_°r
, &
ønge
);

1990 i‡(
îr°r
)

1991  
îr°r
;

1994 i‡(
ønge
.
°¨t
.
±y≥
 !ønge.
íd
.ptype)

1996 i‡(
ønge
.
°¨t
.
pos
 >Ñ™ge.
íd
.pos)

2000  
	`£t_bªak
(
ac˚ss
, &
ønge
);

2001 
	}
}

2005 
	$dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2006 
ªgs_t
 *
ªgs
,

2007 
mem_t
 *
mem
)

2009 
dlôe_bªak_t
 *
bp
;

2011 i‡(!
dlôe_bps
)

2013 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2016  
NULL
;

2019 
	`Ârötf
(
°dout
, "Active breakpoints:\n");

2020 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

2022 
	`Ârötf
(
°dout
, " bªakpoöà#%d @ ", 
bp
->
id
);

2023 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

2024 
	`Ârötf
(
°dout
, ", _˛ass: %s\n", 
	`bp_˛ass_°r
(
bp
->
_˛ass
));

2028  
NULL
;

2029 
	}
}

2033 
	$dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2034 
ªgs_t
 *
ªgs
,

2035 
mem_t
 *
mem
)

2037 
id
;

2039 i‡(
«rgs
 != 1)

2043 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2046 
id
 = 
	`evÆ_as_uöt
(
¨gs
[0].
as_vÆue
);

2047  
	`dñëe_bªak
(
id
);

2048 
	}
}

2052 
	$dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2053 
ªgs_t
 *
ªgs
,

2054 
mem_t
 *
mem
)

2056 i‡(!
dlôe_bps
)

2058 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2061  
NULL
;

2064 
dlôe_bps
 !
NULL
)

2067 
	`dñëe_bªak
(
dlôe_bps
->
id
);

2069 
	`Ârötf
(
°dout
, "All breakpoints cleared.\n");

2072  
NULL
;

2073 
	}
}

2077 
	$dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2078 
ªgs_t
 *
ªgs
,

2079 
mem_t
 *
mem
)

2081 
i
;

2083 i‡(
«rgs
 != 0)

2087 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2090 
i
=0; i<
sym_nsyms
; i++)

2091 
	`sym_dumpsym
(
sym_syms
[
i
], 
°dout
);

2094  
NULL
;

2095 
	}
}

2099 
	$dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2100 
ªgs_t
 *
ªgs
,

2101 
mem_t
 *
mem
)

2103 
i
;

2105 i‡(
«rgs
 != 0)

2109 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2112 
i
=0; i<
sym_¡extsyms
; i++)

2113 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
°dout
);

2116  
NULL
;

2117 
	}
}

2121 
	$dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2122 
ªgs_t
 *
ªgs
,

2123 
mem_t
 *
mem
)

2125 
i
;

2127 i‡(
«rgs
 != 0)

2131 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2134 
i
=0; i<
sym_nd©asyms
; i++)

2135 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
°dout
);

2138  
NULL
;

2139 
	}
}

2143 
	$dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2144 
ªgs_t
 *
ªgs
,

2145 
mem_t
 *
mem
)

2147 
ödex
;

2148 
sym_sym_t
 *
sym
;

2150 i‡(
«rgs
 != 1)

2154 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2157 
sym
 = 
	`sym_böd_«me
(
¨gs
[0].
as_°r
, &
ödex
, 
sdb_™y
);

2158 i‡(!
sym
)

2162 
	`sym_dumpsym
(
sym_syms_by_«me
[
ödex
], 
°dout
);

2165  
NULL
;

2166 
	}
}

2170 
	$dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

2171 
dlôe_mem_obj_t
 
mem_obj
,

2172 
dlôe_m°©e_obj_t
 
m°©e_obj
)

2175 
f_dlôe_ªg_obj
 = 
ªg_obj
;

2176 
f_dlôe_mem_obj
 = 
mem_obj
;

2177 
f_dlôe_m°©e_obj
 = 
m°©e_obj
;

2180 
dlôe_evÆu©‹
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
NULL
);

2181 
	}
}

2185 
	$dlôe_°©us
(
md_addr_t
 
ªgs_PC
,

2186 
md_addr_t
 
√xt_PC
,

2187 
cou¡î_t
 
cy˛e
,

2188 
dbªak
,

2189 
ªgs_t
 *
ªgs
,

2190 
mem_t
 *
mem
)

2192 
md_ö°_t
 
ö°
;

2193 *
îr°r
;

2195 i‡(
dbªak
)

2197 
	`Ârötf
(
°dout
, "\n");

2198 
	`Ârötf
(
°dout
, "Instruction (now finished)Åhat caused data break:\n");

2199 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
ªgs_PC
);

2200 
îr°r
 =

2201 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2202 
ªgs_PC
, (*)&
ö°
, (inst));

2203 
ö°
 = 
	`MD_SWAPI
(inst);

2204 i‡(
îr°r
)

2205 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2207 
	`md_¥öt_ö¢
(
ö°
, 
ªgs_PC
, 
°dout
);

2208 
	`Ârötf
(
°dout
, "\n");

2209 
	`Ârötf
(
°dout
, "\n");

2213 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
√xt_PC
);

2214 
îr°r
 =

2215 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2216 
√xt_PC
, (*)&
ö°
, (inst));

2217 
ö°
 = 
	`MD_SWAPI
(inst);

2218 i‡(
îr°r
)

2219 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2221 
	`md_¥öt_ö¢
(
ö°
, 
√xt_PC
, 
°dout
);

2222 
	`Ârötf
(
°dout
, "\n");

2223 
	}
}

2226 
	#DLITE_PROMPT
 "DLôe! > "

	)

2230 
	$dlôe_maö
(
md_addr_t
 
ªgs_PC
,

2231 
md_addr_t
 
√xt_PC
,

2232 
cou¡î_t
 
cy˛e
,

2233 
ªgs_t
 *
ªgs
,

2234 
mem_t
 *
mem
)

2236 
buf
[512], *
îr_°r
;

2237 
dbªak
 = (
bªak_ac˚ss
 & (
ACCESS_READ
|
ACCESS_WRITE
)) != 0;

2238 
cmd
[512] = "";

2240 
dlôe_a˘ive
 = 
TRUE
;

2241 
dlôe_ªtu∫
 = 
FALSE
;

2242 
	`dlôe_°©us
(
ªgs_PC
, 
√xt_PC
, 
cy˛e
, 
dbªak
, 
ªgs
, 
mem
);

2244 
dlôe_a˘ive
 && !
dlôe_ªtu∫
)

2246 
	`Ârötf
(
°dout
, 
DLITE_PROMPT
);

2247 
	`fÊush
(
°dout
);

2248 
	`fgës
(
buf
, 512, 
°dö
);

2251 i‡(
buf
[
	`°æí
(buf)-1] == '\n')

2252 
buf
[
	`°æí
(buf)-1] = '\0';

2254 i‡(
buf
[0] != '\0')

2257 
	`°r˝y
(
cmd
, 
buf
);

2261 
îr_°r
 = 
	`dlôe_exec
(
cmd
, 
ªgs
, 
mem
);

2262 i‡(
îr_°r
)

2263 
	`Ârötf
(
°dout
, "Dlôe:Éº‹: %s\n", 
îr_°r
);

2265 
	}
}

	@dlite.h

109 #i‚de‡
DLITE_H


110 
	#DLITE_H


	)

112 
	~<°dio.h
>

114 
	~"ho°.h
"

115 
	~"misc.h
"

116 
	~"machöe.h
"

117 
	~"ªgs.h
"

118 
	~"mem‹y.h
"

119 
	~"evÆ.h
"

124 (*
	tdlôe_ªg_obj_t
)(
	tªgs_t
 *
	tªgs
,

125 
	tis_wrôe
,

126 
	tmd_ªg_ty≥
 
	tπ
,

127 
	tªg
,

128 
	tevÆ_vÆue_t
 *
	tvÆ
);

133 (*
	tdlôe_mem_obj_t
)(
	tmem_t
 *
	tmem
,

134 
	tis_wrôe
,

135 
	tmd_addr_t
 
	taddr
,

136 *
	tp
,

137 
	tnbyãs
);

142 (*
	tdlôe_m°©e_obj_t
)(
	tFILE
 *
	t°ªam
,

143 *
	tcmd
,

144 
	tªgs_t
 *
	tªgs
,

145 
	tmem_t
 *
	tmem
);

149 
dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

150 
dlôe_mem_obj_t
 
mem_obj
,

151 
dlôe_m°©e_obj_t
 
m°©e_obj
);

159 
dlôe_mem_obj
(
mem_t
 *
mem
,

160 
is_wrôe
,

161 
md_addr_t
 
addr
,

162 *
p
,

163 
nbyãs
);

167 
dlôe_m°©e_obj
(
FILE
 *
°ªam
,

168 *
cmd
,

169 
ªgs_t
 *
ªgs
,

170 
mem_t
 *
mem
);

173 
	#ACCESS_READ
 0x01

	)

174 
	#ACCESS_WRITE
 0x02

	)

175 
	#ACCESS_EXEC
 0x04

	)

178 
md_addr_t
 
dlôe_Á°bªak
 ;

181 
dlôe_a˘ive
 ;

184 
dlôe_check
 ;

188 
__check_bªak
(
md_addr_t
 
√xt_PC
,

189 
ac˚ss
,

190 
md_addr_t
 
addr
,

191 
cou¡î_t
 
icou¡
,

192 
cou¡î_t
 
cy˛e
);

195 
	#dlôe_check_bªak
(
NPC
, 
ACCESS
, 
ADDR
, 
ICNT
, 
CYCLE
) \

196 ((
dlôe_check
 || 
dlôe_a˘ive
) \

197 ? 
	`__check_bªak
((
NPC
), (
ACCESS
), (
ADDR
), (
ICNT
), (
CYCLE
)) \

198 : 
FALSE
)

	)

202 
dlôe_maö
(
md_addr_t
 
ªgs_PC
,

203 
md_addr_t
 
√xt_PC
,

204 
cou¡î_t
 
cy˛e
,

205 
ªgs_t
 *
ªgs
,

206 
mem_t
 *
mem
);

	@eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #ifde‡
_MSC_VER


55 
	~<io.h
>

57 
	~<uni°d.h
>

60 
	~"ho°.h
"

61 
	~"misc.h
"

62 
	~"machöe.h
"

63 
	~"ªgs.h
"

64 
	~"mem‹y.h
"

65 
	~"lﬂdî.h
"

66 
	~"libexo/libexo.h
"

67 
	~"sysˇŒ.h
"

68 
	~"sim.h
"

69 
	~"ídün.h
"

70 
	~"eio.h
"

72 #ifde‡
_MSC_VER


73 
	#wrôe
 
_wrôe


	)

76 
	#EIO_FILE_HEADER
 \

77 "/* Thi†i†®Sim∂eSˇœ∏EIO fûê- DO NOT MOVE OR EDIT THIS LINE! */\n"

	)

94 
cou¡î_t
 
	geio_å™s_i˙t
 = -1;

96 
FILE
 *

97 
	$eio_¸óã
(*
‚ame
)

99 
FILE
 *
fd
;

100 
exo_ãrm_t
 *
exo
;

101 
èrgë_big_ídün
;

103 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

105 
fd
 = 
	`gz›í
(
‚ame
, "w");

106 i‡(!
fd
)

107 
	`Áèl
("u«bÀÅÿ¸óã EIO fûê`%s'", 
‚ame
);

110 
	`Ârötf
(
fd
, "%s\n", 
EIO_FILE_HEADER
);

111 
	`Ârötf
(
fd
, "/* file_format: %d, file_version: %d, big_endian: %d */\n",

112 
MD_EIO_FILE_FORMAT
, 
EIO_FILE_VERSION
, 
ld_èrgë_big_ídün
);

113 
exo
 = 
	`exo_√w
(
ec_li°
,

114 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
MD_EIO_FILE_FORMAT
),

115 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
EIO_FILE_VERSION
),

116 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
èrgë_big_ídün
),

117 
NULL
);

118 
	`exo_¥öt
(
exo
, 
fd
);

119 
	`exo_dñëe
(
exo
);

120 
	`Ârötf
(
fd
, "\n\n");

122  
fd
;

123 
	}
}

125 
FILE
 *

126 
	$eio_›í
(*
‚ame
)

128 
FILE
 *
fd
;

129 
exo_ãrm_t
 *
exo
;

130 
fûe_f‹m©
, 
fûe_vîsi⁄
, 
big_ídün
, 
èrgë_big_ídün
;

132 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

134 
fd
 = 
	`gz›í
(
‚ame
, "r");

135 i‡(!
fd
)

136 
	`Áèl
("u«bÀÅÿ›í EIO fûê`%s'", 
‚ame
);

139 
exo
 = 
	`exo_ªad
(
fd
);

140 i‡(!
exo


141 || 
exo
->
ec
 !
ec_li°


142 || !
exo
->
as_li°
.
hód


143 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


144 || !
exo
->
as_li°
.
hód
->
√xt


145 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


146 || !
exo
->
as_li°
.
hód
->
√xt
->next

147 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_öãgî


148 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

149 
	`Áèl
("couldÇotÑead EIO file header");

151 
fûe_f‹m©
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

152 
fûe_vîsi⁄
 = 
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

153 
big_ídün
 = 
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
;

154 
	`exo_dñëe
(
exo
);

156 i‡(
fûe_f‹m©
 !
MD_EIO_FILE_FORMAT
)

157 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ f‹m©", 
‚ame
);

159 i‡(
fûe_vîsi⁄
 !
EIO_FILE_VERSION
)

160 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ vîsi⁄", 
‚ame
);

162 i‡(!!
big_ídün
 !!!
èrgë_big_ídün
)

164 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

165 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

166 
	`w¨n
("****************************************");

167 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

168 
	`w¨n
("****************************************");

171  
fd
;

172 
	}
}

176 
	$eio_vÆid
(*
‚ame
)

178 
FILE
 *
fd
;

179 
buf
[512];

182 
fd
 = 
	`gz›í
(
‚ame
, "r");

183 i‡(!
fd
)

184  
FALSE
;

187 
	`fgës
(
buf
, 512, 
fd
);

190 i‡(
	`°rcmp
(
buf
, 
EIO_FILE_HEADER
))

191  
FALSE
;

194 
	`gz˛o£
(
fd
);

197  
TRUE
;

198 
	}
}

201 
	$eio_˛o£
(
FILE
 *
fd
)

203 
	`gz˛o£
(
fd
);

204 
	}
}

208 
cou¡î_t


209 
	$eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

210 
mem_t
 *
mem
,

211 
FILE
 *
fd
)

213 
i
;

214 
exo_ãrm_t
 *
exo
;

215 
mem_±e_t
 *
±e
;

217 
	`myÂrötf
(
fd
, "/* ** sèπ checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

219 
	`myÂrötf
(
fd
, "/* EIO fûêpoöãr: %n... */\n", 
eio_å™s_i˙t
);

220 
exo
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
eio_å™s_i˙t
);

221 
	`exo_¥öt
(
exo
, 
fd
);

222 
	`Ârötf
(
fd
, "\n\n");

223 
	`exo_dñëe
(
exo
);

226 
	`Ârötf
(
fd
, "/* miscÑegs icnt, PC, NPC,Étc... */\n");

227 
exo
 = 
	`MD_MISC_REGS_TO_EXO
(
ªgs
);

228 
	`exo_¥öt
(
exo
, 
fd
);

229 
	`Ârötf
(
fd
, "\n\n");

230 
	`exo_dñëe
(
exo
);

233 
	`Ârötf
(
fd
, "/* integerÑegs */\n");

234 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

235 
i
=0; i < 
MD_NUM_IREGS
; i++)

236 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

237 
	`exo_¥öt
(
exo
, 
fd
);

238 
	`Ârötf
(
fd
, "\n\n");

239 
	`exo_dñëe
(
exo
);

242 
	`Ârötf
(
fd
, "/* FPÑegs (integer format) */\n");

243 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

244 
i
=0; i < 
MD_NUM_FREGS
; i++)

245 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_FREG_TO_EXO
(
ªgs
, 
i
));

246 
	`exo_¥öt
(
exo
, 
fd
);

247 
	`Ârötf
(
fd
, "\n\n");

248 
	`exo_dñëe
(
exo
);

250 
	`Ârötf
(
fd
, "/* wrôög `%d' mem‹yÖages... */\n", ()
mem
->
∑ge_cou¡
);

251 
exo
 = 
	`exo_√w
(
ec_li°
,

252 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
mem
->
∑ge_cou¡
),

253 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
),

254 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_mö
),

255 
NULL
);

256 
	`exo_¥öt
(
exo
, 
fd
);

257 
	`Ârötf
(
fd
, "\n\n");

258 
	`exo_dñëe
(
exo
);

260 
	`Ârötf
(
fd
, "/*Åext segment specifiers (base & size) */\n");

261 
exo
 = 
	`exo_√w
(
ec_li°
,

262 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_ãxt_ba£
),

263 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_ãxt_size
),

264 
NULL
);

265 
	`exo_¥öt
(
exo
, 
fd
);

266 
	`Ârötf
(
fd
, "\n\n");

267 
	`exo_dñëe
(
exo
);

269 
	`Ârötf
(
fd
, "/* data segment specifiers (base & size) */\n");

270 
exo
 = 
	`exo_√w
(
ec_li°
,

271 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_d©a_ba£
),

272 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_d©a_size
),

273 
NULL
);

274 
	`exo_¥öt
(
exo
, 
fd
);

275 
	`Ârötf
(
fd
, "\n\n");

276 
	`exo_dñëe
(
exo
);

278 
	`Ârötf
(
fd
, "/* stack segment specifiers (base & size) */\n");

279 
exo
 = 
	`exo_√w
(
ec_li°
,

280 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_ba£
),

281 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_°ack_size
),

282 
NULL
);

283 
	`exo_¥öt
(
exo
, 
fd
);

284 
	`Ârötf
(
fd
, "\n\n");

285 
	`exo_dñëe
(
exo
);

288 
	`MEM_FORALL
(
mem
, 
i
, 
±e
)

291 
exo
 = 
	`exo_√w
(
ec_li°
,

292 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
	`MEM_PTE_ADDR
(
±e
, 
i
)),

293 
	`exo_√w
(
ec_blob
, 
MD_PAGE_SIZE
, 
±e
->
∑ge
),

294 
NULL
);

295 
	`exo_¥öt
(
exo
, 
fd
);

296 
	`Ârötf
(
fd
, "\n\n");

297 
	`exo_dñëe
(
exo
);

300 
	`myÂrötf
(
fd
, "/* **Énd checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

302  
eio_å™s_i˙t
;

303 
	}
}

307 
cou¡î_t


308 
	$eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

309 
mem_t
 *
mem
,

310 
FILE
 *
fd
)

312 
i
, 
∑ge_cou¡
;

313 
cou¡î_t
 
å™s_i˙t
;

314 
exo_ãrm_t
 *
exo
, *
ñt
;

317 
exo
 = 
	`exo_ªad
(
fd
);

318 i‡(!
exo


319 || 
exo
->
ec
 !
ec_öãgî
)

320 
	`Áèl
("couldÇotÑead EIO fileÖointer");

321 
å™s_i˙t
 = 
exo
->
as_öãgî
.
vÆ
;

322 
	`exo_dñëe
(
exo
);

325 
exo
 = 
	`exo_ªad
(
fd
);

326 
	`MD_EXO_TO_MISC_REGS
(
exo
, 
sim_num_ö¢
, 
ªgs
);

327 
	`exo_dñëe
(
exo
);

330 
exo
 = 
	`exo_ªad
(
fd
);

331 i‡(!
exo


332 || 
exo
->
ec
 !
ec_li°
)

333 
	`Áèl
("couldÇotÑead EIO integerÑegs");

334 
ñt
 = 
exo
->
as_li°
.
hód
;

335 
i
=0; i < 
MD_NUM_IREGS
; i++)

337 i‡(!
ñt
)

338 
	`Áèl
("couldÇotÑead EIO integerÑegs (too few)");

340 i‡(
ñt
->
ec
 !
ec_addªss
)

341 
	`Áèl
("couldÇotÑead EIO integerÑegs (bad value)");

343 
	`MD_EXO_TO_IREG
(
ñt
, 
ªgs
, 
i
);

344 
ñt
 =É…->
√xt
;

346 i‡(
ñt
 !
NULL
)

347 
	`Áèl
("couldÇotÑead EIO integerÑegs (too many)");

348 
	`exo_dñëe
(
exo
);

351 
exo
 = 
	`exo_ªad
(
fd
);

352 i‡(!
exo


353 || 
exo
->
ec
 !
ec_li°
)

354 
	`Áèl
("couldÇotÑead EIO FPÑegs");

355 
ñt
 = 
exo
->
as_li°
.
hód
;

356 
i
=0; i < 
MD_NUM_FREGS
; i++)

358 i‡(!
ñt
)

359 
	`Áèl
("couldÇotÑead EIO FPÑegs (too few)");

361 i‡(
ñt
->
ec
 !
ec_addªss
)

362 
	`Áèl
("couldÇotÑead EIO FPÑegs (bad value)");

364 
	`MD_EXO_TO_FREG
(
ñt
, 
ªgs
, 
i
);

365 
ñt
 =É…->
√xt
;

367 i‡(
ñt
 !
NULL
)

368 
	`Áèl
("couldÇotÑead EIO FPÑegs (too many)");

369 
	`exo_dñëe
(
exo
);

372 
exo
 = 
	`exo_ªad
(
fd
);

373 i‡(!
exo


374 || 
exo
->
ec
 !
ec_li°


375 || !
exo
->
as_li°
.
hód


376 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


377 || !
exo
->
as_li°
.
hód
->
√xt


378 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss


379 || !
exo
->
as_li°
.
hód
->
√xt
->next

380 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss


381 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

382 
	`Áèl
("couldÇotÑead EIO memoryÖage count");

383 
∑ge_cou¡
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

384 
ld_brk_poöt
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
;

385 
_sy°em
.
brk_poöt
 = 
ld_brk_poöt
;

386 
ld_°ack_mö
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
;

387 
	`exo_dñëe
(
exo
);

390 
exo
 = 
	`exo_ªad
(
fd
);

391 i‡(!
exo


392 || 
exo
->
ec
 !
ec_li°


393 || !
exo
->
as_li°
.
hód


394 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


395 || !
exo
->
as_li°
.
hód
->
√xt


396 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


397 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

398 
	`Áèl
("countÇotÑead EIOÅext segment specifiers");

399 
ld_ãxt_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

400 
ld_ãxt_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

401 
	`exo_dñëe
(
exo
);

404 
exo
 = 
	`exo_ªad
(
fd
);

405 i‡(!
exo


406 || 
exo
->
ec
 !
ec_li°


407 || !
exo
->
as_li°
.
hód


408 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


409 || !
exo
->
as_li°
.
hód
->
√xt


410 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


411 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

412 
	`Áèl
("countÇotÑead EIO data segment specifiers");

413 
ld_d©a_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

414 
ld_d©a_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

415 
	`exo_dñëe
(
exo
);

418 
exo
 = 
	`exo_ªad
(
fd
);

419 i‡(!
exo


420 || 
exo
->
ec
 !
ec_li°


421 || !
exo
->
as_li°
.
hód


422 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


423 || !
exo
->
as_li°
.
hód
->
√xt


424 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


425 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

426 
	`Áèl
("countÇotÑead EIO stack segment specifiers");

427 
ld_°ack_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

428 
ld_°ack_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

429 
	`exo_dñëe
(
exo
);

431 
i
=0; i < 
∑ge_cou¡
; i++)

433 
j
;

434 
md_addr_t
 
∑ge_addr
;

435 
exo_ãrm_t
 *
blob
;

438 
exo
 = 
	`exo_ªad
(
fd
);

439 i‡(!
exo


440 || 
exo
->
ec
 !
ec_li°


441 || !
exo
->
as_li°
.
hód


442 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


443 || !
exo
->
as_li°
.
hód
->
√xt


444 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_blob


445 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

446 
	`Áèl
("couldÇotÑead EIO memoryÖage");

447 
∑ge_addr
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

448 
blob
 = 
exo
->
as_li°
.
hód
->
√xt
;

451 
j
=0; j < 
blob
->
as_blob
.
size
; j++)

453 
byã_t
 
vÆ
;

455 
vÆ
 = 
blob
->
as_blob
.
d©a
[
j
];

457 
	`MEM_WRITE_BYTE
(
mem
, 
∑ge_addr
, 
vÆ
);

458 
∑ge_addr
++;

460 
	`exo_dñëe
(
exo
);

463  
å™s_i˙t
;

464 
	}
}

466 
	smem_ªc_t
 {

467 
md_addr_t
 
	maddr
;

468 
	msize
, 
	mmaxsize
;

469 
exo_ãrm_t
 *
	mexo
;

470 
exo_ãrm_t
 *
	mblob
;

474 
exo_ãrm_t
 *
	göput_ªgs
;

475 
exo_ãrm_t
 *
	gouçut_ªgs
;

478 
exo_ãrm_t
 *
	göput_mem
;

479 
mem_ªc_t
 
	göput_mem_ªc
;

482 
exo_ãrm_t
 *
	gouçut_mem
;

483 
mem_ªc_t
 
	gouçut_mem_ªc
;

485 
	g£í_wrôe
;

486 
mem_ac˚ss_‚
 
	gloˇl_mem_‚
;

489 
	#BLOB_TAIL_SIZE
 256

	)

492 
md_Áu…_ty≥


493 
	$my_mem_‚
(
mem_t
 *
mem
,

494 
mem_cmd
 
cmd
,

495 
md_addr_t
 
addr
,

496 *
vp
,

497 
nbyãs
)

499 
i
;

500 *
p
 = 
vp
;

501 
mem_ªc_t
 *
mem_ªc
 = 
NULL
;

502 
exo_ãrm_t
 *
mem_li°
 = 
NULL
;

503 
md_Áu…_ty≥
 
Áu…
 = 
md_Áu…_n⁄e
;

505 i‡(
cmd
 =
Ród
 && 
£í_wrôe
)

506 
	`Áèl
("Readáfter Write inÉio_syscall()");

508 i‡(
cmd
 =
Wrôe
)

509 
£í_wrôe
 = 
TRUE
;

512 i‡(
cmd
 =
Ród
)

514 
mem_ªc
 = &
öput_mem_ªc
;

515 
mem_li°
 = 
öput_mem
;

517 i‡(
cmd
 =
Wrôe
)

519 
mem_ªc
 = &
ouçut_mem_ªc
;

520 
mem_li°
 = 
ouçut_mem
;

523 
	`∑nic
("bogus memoryáccess command");

526 i‡(
cmd
 =
Ród
 )

527 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

532 i‡(
mem_ªc
->
exo
 !
NULL


533 && (
mem_ªc
->
addr
 + mem_ªc->
size
 ==áddr)

534 && (
mem_ªc
->
size
 + 
nbyãs
 < mem_ªc->
maxsize
))

537 
i
=0; i < 
nbyãs
; i++)

538 
mem_ªc
->
blob
->
as_blob
.
d©a
[mem_ªc->
size
 + 
i
] = 
p
[i];

539 
mem_ªc
->
size
 +
nbyãs
;

540 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

545 
mem_li°
->
as_li°
.
hód
 =

546 
	`exo_chaö
(
mem_li°
->
as_li°
.
hód
,

547 (
mem_ªc
->
exo
 =

548 
	`exo_√w
(
ec_li°
,

549 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
addr
),

550 (
mem_ªc
->
blob
 =

551 
	`exo_√w
(
ec_blob
, 
nbyãs
 + 
BLOB_TAIL_SIZE
, 
NULL
)),

552 
NULL
)));

553 
i
=0; i < 
nbyãs
; i++)

554 
mem_ªc
->
blob
->
as_blob
.
d©a
[
i
] = 
p
[i];

555 
mem_ªc
->
addr
 =áddr;

556 
mem_ªc
->
size
 = 
nbyãs
;

557 
mem_ªc
->
maxsize
 = 
nbyãs
 + 
BLOB_TAIL_SIZE
;

558 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

562 i‡(
cmd
 =
Wrôe
 )

563 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

565  
Áu…
;

566 
	}
}

572 
	$eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

573 
cou¡î_t
 
i˙t
,

574 
ªgs_t
 *
ªgs
,

575 
mem_ac˚ss_‚
 
mem_‚
,

576 
mem_t
 *
mem
,

577 
md_ö°_t
 
ö°
)

579 
i
;

580 
exo_ãrm_t
 *
exo
;

583 
öput_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

584 
i
=
MD_FIRST_IN_REG
; i <
MD_LAST_IN_REG
; i++)

586 
öput_ªgs
->
as_li°
.
hód
 =

587 
	`exo_chaö
(
öput_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

591 
öput_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
öput_mem_ªc
.
exo
 = NULL;

592 
ouçut_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
ouçut_mem_ªc
.
exo
 = NULL;

595 
£í_wrôe
 = 
FALSE
;

596 
loˇl_mem_‚
 = 
mem_‚
;

598 i‡(
sim_eio_fd
 !
NULL
)

599 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
i˙t
, 
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
);

602 
	`sys_sysˇŒ
(
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
, 
FALSE
);

606 
ouçut_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

607 
ouçut_ªgs
->
as_li°
.
hód
 =

608 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
,

609 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
));

610 
i
=
MD_FIRST_OUT_REG
; i <
MD_LAST_OUT_REG
; i++)

612 
ouçut_ªgs
->
as_li°
.
hód
 =

613 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

617 
exo
 = 
	`exo_√w
(
ec_li°
,

618  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
i˙t
),

619  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ªgs
->
ªgs_PC
),

620 
öput_ªgs
, 
öput_mem
,

621 
ouçut_ªgs
, 
ouçut_mem
,

622 
NULL
);

623 
	`exo_¥öt
(
exo
, 
eio_fd
);

624 
	`Ârötf
(
eio_fd
, "\n\n");

627 
	`exo_dñëe
(
exo
);

630 
eio_å™s_i˙t
 = 
i˙t
;

631 
	}
}

637 
	$eio_ªad_åa˚
(
FILE
 *
eio_fd
,

638 
cou¡î_t
 
i˙t
,

639 
ªgs_t
 *
ªgs
,

640 
mem_ac˚ss_‚
 
mem_‚
,

641 
mem_t
 *
mem
,

642 
md_ö°_t
 
ö°
)

644 
i
;

645 
exo_ãrm_t
 *
exo
, *
exo_i˙t
, *
exo_pc
;

646 
exo_ãrm_t
 *
exo_öªgs
, *
exo_ömem
, *
exo_ouåegs
, *
exo_outmem
;

647 
exo_ãrm_t
 *
brkªc
, *
ªgªc
, *
memªc
;

650 i‡(
	`MD_EXIT_SYSCALL
(
ªgs
))

652 
¥ogøm_com∂ëe
 = 1;

653 
	`fÊush
(
°dout
);

654 
	`¥ötf
("exiting\n");

656 
	`sys_sysˇŒ
(
ªgs
, 
mem_‚
, 
mem
, 
ö°
, 
FALSE
);

657 
	`∑nic
("returned fromÉxit() system call");

661 
exo
 = 
	`exo_ªad
(
eio_fd
);

664 
eio_å™s_i˙t
 = 
i˙t
;

667 i‡(!
exo


668 || 
exo
->
ec
 !
ec_li°


669 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

670 || 
exo_i˙t
->
ec
 !
ec_öãgî


671 || !(
exo_pc
 = 
exo_i˙t
->
√xt
)

672 || 
exo_pc
->
ec
 !
ec_addªss


673 || !(
exo_öªgs
 = 
exo_pc
->
√xt
)

674 || 
exo_öªgs
->
ec
 !
ec_li°


675 || !(
exo_ömem
 = 
exo_öªgs
->
√xt
)

676 || 
exo_ömem
->
ec
 !
ec_li°


677 || !(
exo_ouåegs
 = 
exo_ömem
->
√xt
)

678 || 
exo_ouåegs
->
ec
 !
ec_li°


679 || !(
exo_outmem
 = 
exo_ouåegs
->
√xt
)

680 || 
exo_outmem
->
ec
 !
ec_li°


681 || 
exo_outmem
->
√xt
 !
NULL
)

682 
	`Áèl
("cannotÑead EIOÅransaction");

689 
i˙t
 = (
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
 ;

690 i‡(
i˙t
 !(
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
)

691 
	`Áèl
("EIOÅø˚ inc⁄si°ícy: ICNT mism©ch %ld %ld", (
cou¡î_t
)
i˙t
, (cou¡î_t)
exo_i˙t
->
as_öãgî
.
vÆ
);

696 i‡(
ªgs
->
ªgs_PC
 !(
md_addr_t
)
exo_pc
->
as_öãgî
.
vÆ
)

697 
	`Áèl
("EIOÅrace inconsistency: PC mismatch");

700 
i
=
MD_FIRST_IN_REG
, 
ªgªc
=
exo_öªgs
->
as_li°
.
hód
;

701 
i
 <
MD_LAST_IN_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

703 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

704 
	`Áèl
("EIOÅrace inconsistency: missing inputÑeg");

706 i‡(
	`MD_EXO_CMP_IREG
(
ªgªc
, 
ªgs
, 
i
))

707 
	`Áèl
("EIOÅø˚ inc⁄si°ícy: R[%d] i≈uàmism©ch", 
i
);

708 #ifde‡
VERBOSE


709 
	`Ârötf
(
°dîr
, "** R[%d] check†out...\n", 
i
);

712 i‡(
ªgªc
 !
NULL
)

713 
	`Áèl
("EIOÅrace inconsistency:Åoo many inputÑegs");

716 
memªc
=
exo_ömem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

718 
md_addr_t
 
loc
;

719 
exo_ãrm_t
 *
addr
, *
blob
;

722 i‡(!
memªc


723 || 
memªc
->
ec
 !
ec_li°


724 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

725 || 
addr
->
ec
 !
ec_addªss


726 || !(
blob
 = 
addr
->
√xt
)

727 || 
blob
->
ec
 !
ec_blob


728 || 
blob
->
√xt
 !
NULL
)

729 
	`Áèl
("EIOÅrace inconsistency: bad memoryÅransaction");

731 
loc
=
addr
->
as_addªss
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

733 
vÆ
;

736 (*
mem_‚
)(
mem
, 
Ród
, 
loc
, &
vÆ
, ());

738 i‡(
vÆ
 !
blob
->
as_blob
.
d©a
[
i
])

739 
	`Áèl
("EIOÅø˚ inc⁄si°ícy:ádd∏0x%08∞öpuàmism©ch", 
loc
);

741 #ifde‡
VERBOSE


742 
	`myÂrötf
(
°dîr
, "** 0x%08∞check†out...\n", 
loc
);

747 i‡(
	`MD_OUTPUT_SYSCALL
(
ªgs
))

749 i‡(
sim_¥ogfd
)

752 
	`fwrôe
(
blob
->
as_blob
.
d©a
, 1, blob->as_blob.
size
, 
sim_¥ogfd
);

757 
	`wrôe
(
	`MD_STREAM_FILENO
(
ªgs
),

758 
blob
->
as_blob
.
d©a
, blob->as_blob.
size
);

768 
brkªc
 = 
exo_ouåegs
->
as_li°
.
hód
;

769 i‡(!
brkªc
 || brkªc->
ec
 !
ec_addªss
)

770 
	`Áèl
("EIOÅrace inconsistency: missing memory breakpoint");

771 
ld_brk_poöt
 = (
md_addr_t
)
brkªc
->
as_addªss
.
vÆ
;

774 
i
=
MD_FIRST_OUT_REG
, 
ªgªc
=
exo_ouåegs
->
as_li°
.
hód
->
√xt
;

775 
i
 <
MD_LAST_OUT_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

777 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

778 
	`Áèl
("EIOÅrace inconsistency: missing outputÑeg");

780 
	`MD_EXO_TO_IREG
(
ªgªc
, 
ªgs
, 
i
);

783 #ifde‡
VERBOSE


784 
	`Ârötf
(
°dîr
, "** R[%d] wrôãn...\n", 
i
);

787 i‡(
ªgªc
 !
NULL
)

788 
	`Áèl
("EIOÅrace inconsistency:Åoo many outputÑegs");

791 
memªc
=
exo_outmem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

793 
md_addr_t
 
loc
;

794 
exo_ãrm_t
 *
addr
, *
blob
;

797 i‡(!
memªc


798 || 
memªc
->
ec
 !
ec_li°


799 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

800 || 
addr
->
ec
 !
ec_addªss


801 || !(
blob
 = 
addr
->
√xt
)

802 || 
blob
->
ec
 !
ec_blob


803 || 
blob
->
√xt
 !
NULL
)

804 
	`Áèl
("EIOÅrace icnonsistency: bad memoryÅransaction");

806 
loc
=
addr
->
as_addªss
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

809 (*
mem_‚
)(
mem
, 
Wrôe
,

810 
loc
, &
blob
->
as_blob
.
d©a
[
i
], ());

812 #ifde‡
VERBOSE


813 
	`Ârötf
(
°dîr
, "** 0x%08∞wrôãn...\n", 
loc
);

817 #unde‡
VERBOSE


820 
	`exo_dñëe
(
exo
);

821 
	}
}

825 
	$eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
)

827 
exo_ãrm_t
 *
exo
, *
exo_i˙t
;

832 
exo
 = 
	`exo_ªad
(
eio_fd
);

834 i‡(!
exo
)

835 
	`Áèl
("couldÇot fast forwardÅo EIO checkpoint");

838 
eio_å™s_i˙t
 = 
i˙t
;

841 i‡(!
exo


842 || 
exo
->
ec
 !
ec_li°


843 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

844 || 
exo_i˙t
->
ec
 !
ec_öãgî
)

845 
	`Áèl
("cannotÑead EIOÅransaction (during fast forward)");

847 (
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
 !
i˙t
);

850 
	}
}

	@eio.h

52 #i‚de‡
EIO_H


53 
	#EIO_H


	)

55 
	~<°dio.h
>

58 
	#EIO_PISA_FORMAT
 1

	)

59 
	#EIO_ALPHA_FORMAT
 2

	)

62 
	#EIO_FILE_VERSION
 3

	)

64 
FILE
 *
eio_¸óã
(*
‚ame
);

66 
FILE
 *
eio_›í
(*
‚ame
);

69 
eio_vÆid
(*
‚ame
);

71 
eio_˛o£
(
FILE
 *
fd
);

75 
cou¡î_t


76 
eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

77 
mem_t
 *
mem
,

78 
FILE
 *
fd
);

82 
cou¡î_t


83 
eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

84 
mem_t
 *
mem
,

85 
FILE
 *
fd
);

91 
eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

92 
cou¡î_t
 
i˙t
,

93 
ªgs_t
 *
ªgs
,

94 
mem_ac˚ss_‚
 
mem_‚
,

95 
mem_t
 *
mem
,

96 
md_ö°_t
 
ö°
);

102 
eio_ªad_åa˚
(
FILE
 *
eio_fd
,

103 
cou¡î_t
 
i˙t
,

104 
ªgs_t
 *
ªgs
,

105 
mem_ac˚ss_‚
 
mem_‚
,

106 
mem_t
 *
mem
,

107 
md_ö°_t
 
ö°
);

110 
eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
);

	@endian.c

52 
	~"ídün.h
"

53 #i‚de‡
HOST_ONLY


54 
	~"lﬂdî.h
"

58 
ídün_t


59 
	$ídün_ho°_byã_‹dî
()

61 
i
 = 1, *
p
;

63 
p
 = &
i
;

64 i‡(*((*)
p
) == 1)

65  
ídün_lôée
;

66 i‡(*((*)
p
) == 0)

67  
ídün_big
;

69  
ídün_unknown
;

70 
	}
}

73 
ídün_t


74 
	$ídün_ho°_w‹d_‹dî
()

76 *
p
;

77 
x
 = 1.0;

80 
p
 = (*)&
x
;

81 i‡(*
p
 == 0)

82  
ídün_lôée
;

83 i‡(*
p
 == 0x3ff00000)

84  
ídün_big
;

86  
ídün_unknown
;

87 
	}
}

89 #i‚de‡
HOST_ONLY


93 
ídün_t


94 
	$ídün_èrgë_byã_‹dî
()

96  
ld_èrgë_big_ídün
 ? 
ídün_big
 : 
ídün_lôée
;

97 
	}
}

101 
ídün_t


102 
	$ídün_èrgë_w‹d_‹dî
()

105  
	`ídün_èrgë_byã_‹dî
();

106 
	}
}

	@endian.h

52 #i‚de‡
ENDIAN_H


53 
	#ENDIAN_H


	)

56 
	#SWAP_HALF
(
X
) \

57 (((((
hÆf_t
)(
X
)Ë& 0xffË<< 8Ë| ((((hÆf_t)(X)Ë& 0xff00Ë>> 8))

	)

58 
	#SWAP_WORD
(
X
Ë(((
w‹d_t
)(X) << 24) | \

59 (((
w‹d_t
)(
X
) << 8) & 0x00ff0000) | \

60 (((
w‹d_t
)(
X
) >> 8) & 0x0000ff00) | \

61 (((
w‹d_t
)(
X
Ë>> 24Ë& 0x000000ff))

	)

62 
	#SWAP_QWORD
(
X
Ë(((
qw‹d_t
)(X) << 56) | \

63 (((
qw‹d_t
)(
X
Ë<< 40Ë& 
	`ULL
(0x00ff000000000000)) |\

64 (((
qw‹d_t
)(
X
Ë<< 24Ë& 
	`ULL
(0x0000ff0000000000)) |\

65 (((
qw‹d_t
)(
X
Ë<< 8Ë& 
	`ULL
(0x000000ff00000000)) |\

66 (((
qw‹d_t
)(
X
Ë>> 8Ë& 
	`ULL
(0x00000000ff000000)) |\

67 (((
qw‹d_t
)(
X
Ë>> 24Ë& 
	`ULL
(0x0000000000ff0000)) |\

68 (((
qw‹d_t
)(
X
Ë>> 40Ë& 
	`ULL
(0x000000000000ff00)) |\

69 (((
qw‹d_t
)(
X
Ë>> 56Ë& 
	`ULL
(0x00000000000000ff)))

	)

72 
	eídün_t
 { 
	mídün_big
, 
	mídün_lôée
, 
	mídün_unknown
};

74 
ídün_t


75 
ídün_ho°_byã_‹dî
();

78 
ídün_t


79 
ídün_ho°_w‹d_‹dî
();

81 #i‚de‡
HOST_ONLY


85 
ídün_t


86 
ídün_èrgë_byã_‹dî
();

90 
ídün_t


91 
ídün_èrgë_w‹d_‹dî
();

	@eval.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<˘y≥.h
>

55 #i‡
deföed
(
__CYGWIN32__
)

56 
	~<î∫o.h
>

59 
	~"ho°.h
"

60 
	~"misc.h
"

61 
	~"evÆ.h
"

63 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

64 
	#°πoul
 
°πﬁ


	)

68 
evÆ_îr_t
 
	gevÆ_îr‹
 = 
ERR_NOERR
;

71 *
	gevÆ_îr_°r
[
ERR_NUM
] = {

83 
evÆ_tokí_t
 
	gtok_m≠
[256];

84 
	gtok_m≠_öôülized
 = 
FALSE
;

88 
	$öô_tok_m≠
()

90 
i
;

92 
i
=0; i<256; i++)

93 
tok_m≠
[
i
] = 
tok_övÆid
;

96 
i
='a'; i<='z'; i++)

97 
tok_m≠
[
i
] = 
tok_idít
;

98 
i
='A'; i<='Z'; i++)

99 
tok_m≠
[
i
] = 
tok_idít
;

100 
tok_m≠
[()'_'] = 
tok_idít
;

101 
tok_m≠
[()'$'] = 
tok_idít
;

104 
i
='0'; i<='9'; i++)

105 
tok_m≠
[
i
] = 
tok_c⁄°
;

106 
tok_m≠
[()'.'] = 
tok_c⁄°
;

109 
tok_m≠
[()'+'] = 
tok_∂us
;

110 
tok_m≠
[()'-'] = 
tok_möus
;

111 
tok_m≠
[()'*'] = 
tok_mu…
;

112 
tok_m≠
[()'/'] = 
tok_div
;

113 
tok_m≠
[()'('] = 
tok_›¨í
;

114 
tok_m≠
[()')'] = 
tok_˝¨í
;

117 
tok_m≠
[()' '] = 
tok_whôe•a˚
;

118 
tok_m≠
[()'\t'] = 
tok_whôe•a˚
;

119 
	}
}

122 
evÆ_tokí_t


123 
	$gë_√xt_tokí
(
evÆ_°©e_t
 *
es
)

125 
Ælow_hex
;

126 
evÆ_tokí_t
 
tok
;

127 *
±ok_buf
, 
œ°_ch¨
;

130 i‡(!
tok_m≠_öôülized
)

132 
	`öô_tok_m≠
();

133 
tok_m≠_öôülized
 = 
TRUE
;

137 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

139 
tok
 = 
es
->
≥ek_tok
;

140 
es
->
≥ek_tok
 = 
tok_övÆid
;

141  
tok
;

145 
±ok_buf
 = 
es
->
tok_buf
;

146 *
±ok_buf
 = '\0';

149 *
es
->
p
 && 
tok_m≠
[()*es->p] =
tok_whôe•a˚
)

150 
es
->
p
++;

153 i‡(*
es
->
p
 == '\0')

154  
tok_eof
;

156 *
±ok_buf
++ = *
es
->
p
;

157 
tok
 = 
tok_m≠
[()*
es
->
p
++];

158 
tok
)

160 
tok_idít
:

162 *
es
->
p


163 && (
tok_m≠
[()*
es
->
p
] =
tok_idít


164 || 
tok_m≠
[()*
es
->
p
] =
tok_c⁄°
))

166 *
±ok_buf
++ = *
es
->
p
++;

169 
tok_c⁄°
:

171 
œ°_ch¨
 = '\0';

172 
Ælow_hex
 = 
FALSE
;

173 *
es
->
p
 &&

174 (
tok_m≠
[()*
es
->
p
] =
tok_c⁄°


175 || (*
es
->
p
 ='-' && 
œ°_ch¨
 == 'e')

176 || (*
es
->
p
 ='+' && 
œ°_ch¨
 == 'e')

177 || 
	`tﬁowî
(*
es
->
p
) == 'e'

178 || 
	`tﬁowî
(*
es
->
p
) == 'x'

179 || (
	`tﬁowî
(*
es
->
p
Ë='a' && 
Ælow_hex
)

180 || (
	`tﬁowî
(*
es
->
p
Ë='b' && 
Ælow_hex
)

181 || (
	`tﬁowî
(*
es
->
p
Ë='c' && 
Ælow_hex
)

182 || (
	`tﬁowî
(*
es
->
p
Ë='d' && 
Ælow_hex
)

183 || (
	`tﬁowî
(*
es
->
p
Ë='e' && 
Ælow_hex
)

184 || (
	`tﬁowî
(*
es
->
p
Ë='f' && 
Ælow_hex
)))

186 
œ°_ch¨
 = 
	`tﬁowî
(*
es
->
p
);

187 i‡(*
es
->
p
 == 'x' || *es->p == 'X')

188 
Ælow_hex
 = 
TRUE
;

189 *
±ok_buf
++ = *
es
->
p
++;

192 
tok_∂us
:

193 
tok_möus
:

194 
tok_mu…
:

195 
tok_div
:

196 
tok_›¨í
:

197 
tok_˝¨í
:

201 
tok
 = 
tok_övÆid
;

206 *
±ok_buf
 = '\0';

208  
tok
;

209 
	}
}

213 
evÆ_tokí_t


214 
	$≥ek_√xt_tokí
(
evÆ_°©e_t
 *
es
)

217 i‡(
es
->
≥ek_tok
 =
tok_övÆid
)

219 
es
->
œ°p
 =És->
p
;

220 
es
->
≥ek_tok
 = 
	`gë_√xt_tokí
(es);

224  
es
->
≥ek_tok
;

225 
	}
}

228 
evÆ_vÆue_t
 
ex¥
(
evÆ_°©e_t
 *
es
);

231 
evÆ_vÆue_t
 
	gîr_vÆue
 = { 
ë_öt
, { 0 } };

234 *
	gevÆ_ty≥_°r
[
ë_NUM
] = {

238 #ifde‡
HOST_HAS_QWORD


248 
evÆ_ty≥_t


249 
	$ªsu…_ty≥
(
evÆ_ty≥_t
 
t1
,

250 
evÆ_ty≥_t
 
t2
)

253 i‡(
t1
 =
ë_symbﬁ
 || 
t2
 ==Ét_symbol)

254 
	`∑nic
("symbol used inÉxpression");

257 i‡(
t1
 =
ë_doubÀ
 || 
t2
 ==Ét_double)

258  
ë_doubÀ
;

259 i‡(
t1
 =
ë_Êﬂt
 || 
t2
 ==Ét_float)

260  
ë_Êﬂt
;

261 #ifde‡
HOST_HAS_QWORD


262 i‡(
t1
 =
ë_qw‹d
 || 
t2
 ==Ét_qword)

263  
ë_qw‹d
;

264 i‡(
t1
 =
ë_sqw‹d
 || 
t2
 ==Ét_sqword)

265  
ë_sqw‹d
;

267 i‡(
t1
 =
ë_addr
 || 
t2
 ==Ét_addr)

268  
ë_addr
;

269 i‡(
t1
 =
ë_uöt
 || 
t2
 ==Ét_uint)

270  
ë_uöt
;

272  
ë_öt
;

273 
	}
}

281 
	$evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
)

283 
vÆ
.
ty≥
)

285 
ë_doubÀ
:

286  
vÆ
.
vÆue
.
as_doubÀ
;

287 
ë_Êﬂt
:

288  ()
vÆ
.
vÆue
.
as_Êﬂt
;

289 #ifde‡
HOST_HAS_QWORD


290 
ë_qw‹d
:

291 #ifde‡
_MSC_VER


292  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

294  ()
vÆ
.
vÆue
.
as_qw‹d
;

296 
ë_sqw‹d
:

297  ()
vÆ
.
vÆue
.
as_sqw‹d
;

299 
ë_addr
:

300 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

302  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

304  ()
vÆ
.
vÆue
.
as_addr
;

306 
ë_uöt
:

307  ()
vÆ
.
vÆue
.
as_uöt
;

308 
ë_öt
:

309  ()
vÆ
.
vÆue
.
as_öt
;

310 
ë_symbﬁ
:

311 
	`∑nic
("symbol used inÉxpression");

313 
	`∑nic
("illegalárithmeticÉxpression conversion");

315 
	}
}

319 
	$evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
)

321 
vÆ
.
ty≥
)

323 
ë_doubÀ
:

324  ()
vÆ
.
vÆue
.
as_doubÀ
;

325 
ë_Êﬂt
:

326  
vÆ
.
vÆue
.
as_Êﬂt
;

327 #ifde‡
HOST_HAS_QWORD


328 
ë_qw‹d
:

329 #ifde‡
_MSC_VER


330  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

332  ()
vÆ
.
vÆue
.
as_qw‹d
;

334 
ë_sqw‹d
:

335  ()
vÆ
.
vÆue
.
as_sqw‹d
;

337 
ë_addr
:

338 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

340  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

342  ()
vÆ
.
vÆue
.
as_addr
;

344 
ë_uöt
:

345  ()
vÆ
.
vÆue
.
as_uöt
;

346 
ë_öt
:

347  ()
vÆ
.
vÆue
.
as_öt
;

348 
ë_symbﬁ
:

349 
	`∑nic
("symbol used inÉxpression");

351 
	`∑nic
("illegalárithmeticÉxpression conversion");

353 
	}
}

355 #ifde‡
HOST_HAS_QWORD


357 
qw‹d_t


358 
	$evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
)

360 
vÆ
.
ty≥
)

362 
ë_doubÀ
:

363  (
qw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

364 
ë_Êﬂt
:

365  (
qw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

366 
ë_qw‹d
:

367  
vÆ
.
vÆue
.
as_qw‹d
;

368 
ë_sqw‹d
:

369  (
qw‹d_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

370 
ë_addr
:

371  (
qw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

372 
ë_uöt
:

373  (
qw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

374 
ë_öt
:

375  (
qw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

376 
ë_symbﬁ
:

377 
	`∑nic
("symbol used inÉxpression");

379 
	`∑nic
("illegalárithmeticÉxpression conversion");

381 
	}
}

384 
sqw‹d_t


385 
	$evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
)

387 
vÆ
.
ty≥
)

389 
ë_doubÀ
:

390  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

391 
ë_Êﬂt
:

392  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

393 
ë_qw‹d
:

394  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

395 
ë_sqw‹d
:

396  
vÆ
.
vÆue
.
as_sqw‹d
;

397 
ë_addr
:

398  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

399 
ë_uöt
:

400  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

401 
ë_öt
:

402  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

403 
ë_symbﬁ
:

404 
	`∑nic
("symbol used inÉxpression");

406 
	`∑nic
("illegalárithmeticÉxpression conversion");

408 
	}
}

412 
md_addr_t


413 
	$evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
)

415 
vÆ
.
ty≥
)

417 
ë_doubÀ
:

418  (
md_addr_t
)
vÆ
.
vÆue
.
as_doubÀ
;

419 
ë_Êﬂt
:

420  (
md_addr_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

421 #ifde‡
HOST_HAS_QWORD


422 
ë_qw‹d
:

423  (
md_addr_t
)
vÆ
.
vÆue
.
as_qw‹d
;

424 
ë_sqw‹d
:

425  (
md_addr_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

427 
ë_addr
:

428  
vÆ
.
vÆue
.
as_addr
;

429 
ë_uöt
:

430  (
md_addr_t
)
vÆ
.
vÆue
.
as_uöt
;

431 
ë_öt
:

432  (
md_addr_t
)
vÆ
.
vÆue
.
as_öt
;

433 
ë_symbﬁ
:

434 
	`∑nic
("symbol used inÉxpression");

436 
	`∑nic
("illegalárithmeticÉxpression conversion");

438 
	}
}

442 
	$evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
)

444 
vÆ
.
ty≥
)

446 
ë_doubÀ
:

447  ()
vÆ
.
vÆue
.
as_doubÀ
;

448 
ë_Êﬂt
:

449  ()
vÆ
.
vÆue
.
as_Êﬂt
;

450 #ifde‡
HOST_HAS_QWORD


451 
ë_qw‹d
:

452  ()
vÆ
.
vÆue
.
as_qw‹d
;

453 
ë_sqw‹d
:

454  ()
vÆ
.
vÆue
.
as_sqw‹d
;

456 
ë_addr
:

457  ()
vÆ
.
vÆue
.
as_addr
;

458 
ë_uöt
:

459  
vÆ
.
vÆue
.
as_uöt
;

460 
ë_öt
:

461  ()
vÆ
.
vÆue
.
as_öt
;

462 
ë_symbﬁ
:

463 
	`∑nic
("symbol used inÉxpression");

465 
	`∑nic
("illegalárithmeticÉxpression conversion");

467 
	}
}

471 
	$evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
)

473 
vÆ
.
ty≥
)

475 
ë_doubÀ
:

476  ()
vÆ
.
vÆue
.
as_doubÀ
;

477 
ë_Êﬂt
:

478  ()
vÆ
.
vÆue
.
as_Êﬂt
;

479 #ifde‡
HOST_HAS_QWORD


480 
ë_qw‹d
:

481  ()
vÆ
.
vÆue
.
as_qw‹d
;

482 
ë_sqw‹d
:

483  ()
vÆ
.
vÆue
.
as_sqw‹d
;

485 
ë_addr
:

486  ()
vÆ
.
vÆue
.
as_addr
;

487 
ë_uöt
:

488  ()
vÆ
.
vÆue
.
as_uöt
;

489 
ë_öt
:

490  
vÆ
.
vÆue
.
as_öt
;

491 
ë_symbﬁ
:

492 
	`∑nic
("symbol used inÉxpression");

494 
	`∑nic
("illegalárithmeticÉxpression conversion");

496 
	}
}

503 
evÆ_vÆue_t


504 
	$f_add
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

506 
evÆ_ty≥_t
 
ë
;

507 
evÆ_vÆue_t
 
vÆ
;

510 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

512 
evÆ_îr‹
 = 
ERR_BADEXPR
;

513  
îr_vÆue
;

517 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

518 
ë
)

520 
ë_doubÀ
:

521 
vÆ
.
ty≥
 = 
ë_doubÀ
;

522 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë+ÉvÆ_as_doubÀ(
vÆ2
);

524 
ë_Êﬂt
:

525 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

526 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë+ÉvÆ_as_Êﬂt(
vÆ2
);

528 #ifde‡
HOST_HAS_QWORD


529 
ë_qw‹d
:

530 
vÆ
.
ty≥
 = 
ë_qw‹d
;

531 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë+ÉvÆ_as_qw‹d(
vÆ2
);

533 
ë_sqw‹d
:

534 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

535 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë+ÉvÆ_as_sqw‹d(
vÆ2
);

538 
ë_addr
:

539 
vÆ
.
ty≥
 = 
ë_addr
;

540 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë+ÉvÆ_as_addr(
vÆ2
);

542 
ë_uöt
:

543 
vÆ
.
ty≥
 = 
ë_uöt
;

544 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë+ÉvÆ_as_uöt(
vÆ2
);

546 
ë_öt
:

547 
vÆ
.
ty≥
 = 
ë_öt
;

548 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë+ÉvÆ_as_öt(
vÆ2
);

551 
	`∑nic
("bogusÉxpressionÅype");

554  
vÆ
;

555 
	}
}

558 
evÆ_vÆue_t


559 
	$f_sub
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

561 
evÆ_ty≥_t
 
ë
;

562 
evÆ_vÆue_t
 
vÆ
;

565 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

567 
evÆ_îr‹
 = 
ERR_BADEXPR
;

568  
îr_vÆue
;

572 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

573 
ë
)

575 
ë_doubÀ
:

576 
vÆ
.
ty≥
 = 
ë_doubÀ
;

577 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë-ÉvÆ_as_doubÀ(
vÆ2
);

579 
ë_Êﬂt
:

580 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

581 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë-ÉvÆ_as_Êﬂt(
vÆ2
);

583 #ifde‡
HOST_HAS_QWORD


584 
ë_qw‹d
:

585 
vÆ
.
ty≥
 = 
ë_qw‹d
;

586 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë-ÉvÆ_as_qw‹d(
vÆ2
);

588 
ë_sqw‹d
:

589 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

590 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë-ÉvÆ_as_sqw‹d(
vÆ2
);

593 
ë_addr
:

594 
vÆ
.
ty≥
 = 
ë_addr
;

595 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë-ÉvÆ_as_addr(
vÆ2
);

597 
ë_uöt
:

598 
vÆ
.
ty≥
 = 
ë_uöt
;

599 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë-ÉvÆ_as_uöt(
vÆ2
);

601 
ë_öt
:

602 
vÆ
.
ty≥
 = 
ë_öt
;

603 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë-ÉvÆ_as_öt(
vÆ2
);

606 
	`∑nic
("bogusÉxpressionÅype");

609  
vÆ
;

610 
	}
}

613 
evÆ_vÆue_t


614 
	$f_mu…
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

616 
evÆ_ty≥_t
 
ë
;

617 
evÆ_vÆue_t
 
vÆ
;

620 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

622 
evÆ_îr‹
 = 
ERR_BADEXPR
;

623  
îr_vÆue
;

627 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

628 
ë
)

630 
ë_doubÀ
:

631 
vÆ
.
ty≥
 = 
ë_doubÀ
;

632 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë*ÉvÆ_as_doubÀ(
vÆ2
);

634 
ë_Êﬂt
:

635 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

636 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë*ÉvÆ_as_Êﬂt(
vÆ2
);

638 #ifde‡
HOST_HAS_QWORD


639 
ë_qw‹d
:

640 
vÆ
.
ty≥
 = 
ë_qw‹d
;

641 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë*ÉvÆ_as_qw‹d(
vÆ2
);

643 
ë_sqw‹d
:

644 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

645 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë*ÉvÆ_as_sqw‹d(
vÆ2
);

648 
ë_addr
:

649 
vÆ
.
ty≥
 = 
ë_addr
;

650 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë*ÉvÆ_as_addr(
vÆ2
);

652 
ë_uöt
:

653 
vÆ
.
ty≥
 = 
ë_uöt
;

654 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë*ÉvÆ_as_uöt(
vÆ2
);

656 
ë_öt
:

657 
vÆ
.
ty≥
 = 
ë_öt
;

658 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë*ÉvÆ_as_öt(
vÆ2
);

661 
	`∑nic
("bogusÉxpressionÅype");

664  
vÆ
;

665 
	}
}

668 
evÆ_vÆue_t


669 
	$f_div
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

671 
evÆ_ty≥_t
 
ë
;

672 
evÆ_vÆue_t
 
vÆ
;

675 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

677 
evÆ_îr‹
 = 
ERR_BADEXPR
;

678  
îr_vÆue
;

682 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

683 
ë
)

685 
ë_doubÀ
:

686 
vÆ
.
ty≥
 = 
ë_doubÀ
;

687 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë/ÉvÆ_as_doubÀ(
vÆ2
);

689 
ë_Êﬂt
:

690 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

691 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë/ÉvÆ_as_Êﬂt(
vÆ2
);

693 #ifde‡
HOST_HAS_QWORD


694 
ë_qw‹d
:

695 
vÆ
.
ty≥
 = 
ë_qw‹d
;

696 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë/ÉvÆ_as_qw‹d(
vÆ2
);

698 
ë_sqw‹d
:

699 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

700 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë/ÉvÆ_as_sqw‹d(
vÆ2
);

703 
ë_addr
:

704 
vÆ
.
ty≥
 = 
ë_addr
;

705 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë/ÉvÆ_as_addr(
vÆ2
);

707 
ë_uöt
:

708 
vÆ
.
ty≥
 = 
ë_uöt
;

709 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë/ÉvÆ_as_uöt(
vÆ2
);

711 
ë_öt
:

712 
vÆ
.
ty≥
 = 
ë_öt
;

713 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë/ÉvÆ_as_öt(
vÆ2
);

716 
	`∑nic
("bogusÉxpressionÅype");

719  
vÆ
;

720 
	}
}

723 
evÆ_vÆue_t


724 
	$f_√g
(
evÆ_vÆue_t
 
vÆ1
)

726 
evÆ_vÆue_t
 
vÆ
;

729 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

731 
evÆ_îr‹
 = 
ERR_BADEXPR
;

732  
îr_vÆue
;

736 
vÆ1
.
ty≥
)

738 
ë_doubÀ
:

739 
vÆ
.
ty≥
 = 
ë_doubÀ
;

740 
vÆ
.
vÆue
.
as_doubÀ
 = - 
vÆ1
.value.as_double;

742 
ë_Êﬂt
:

743 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

744 
vÆ
.
vÆue
.
as_Êﬂt
 = - 
vÆ1
.value.as_float;

746 #ifde‡
HOST_HAS_QWORD


747 
ë_qw‹d
:

748 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

749 
vÆ
.
vÆue
.
as_qw‹d
 = - (
sqw‹d_t
)
vÆ1
.value.as_qword;

751 
ë_sqw‹d
:

752 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

753 
vÆ
.
vÆue
.
as_sqw‹d
 = - 
vÆ1
.value.as_sqword;

756 
ë_addr
:

757 
vÆ
.
ty≥
 = 
ë_addr
;

758 
vÆ
.
vÆue
.
as_addr
 = - 
vÆ1
.value.as_addr;

760 
ë_uöt
:

761 i‡(()
vÆ1
.
vÆue
.
as_uöt
 > 2147483648U)

764 #ifde‡
HOST_HAS_QWORD


765 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

766 
vÆ
.
vÆue
.
as_sqw‹d
 = - ((
sqw‹d_t
)
vÆ1
.vÆue.
as_uöt
);

768 
vÆ
.
ty≥
 = 
ë_doubÀ
;

769 
vÆ
.
vÆue
.
as_doubÀ
 = - (()
vÆ1
.vÆue.
as_uöt
);

775 
vÆ
.
ty≥
 = 
ë_öt
;

776 
vÆ
.
vÆue
.
as_öt
 = - (()
vÆ1
.vÆue.
as_uöt
);

779 
ë_öt
:

780 i‡(()
vÆ1
.
vÆue
.
as_öt
 == 0x80000000U)

783 
vÆ
.
ty≥
 = 
ë_uöt
;

784 
vÆ
.
vÆue
.
as_uöt
 = 2147483648U;

789 
vÆ
.
ty≥
 = 
ë_öt
;

790 
vÆ
.
vÆue
.
as_öt
 = - 
vÆ1
.value.as_int;

794 
	`∑nic
("bogusÉxpressionÅype");

797  
vÆ
;

798 
	}
}

802 
	$f_eq_zîo
(
evÆ_vÆue_t
 
vÆ1
)

804 
vÆ
;

807 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

809 
evÆ_îr‹
 = 
ERR_BADEXPR
;

810  
FALSE
;

813 
vÆ1
.
ty≥
)

815 
ë_doubÀ
:

816 
vÆ
 = 
vÆ1
.
vÆue
.
as_doubÀ
 == 0.0;

818 
ë_Êﬂt
:

819 
vÆ
 = 
vÆ1
.
vÆue
.
as_Êﬂt
 == 0.0;

821 #ifde‡
HOST_HAS_QWORD


822 
ë_qw‹d
:

823 
vÆ
 = 
vÆ1
.
vÆue
.
as_qw‹d
 == 0;

825 
ë_sqw‹d
:

826 
vÆ
 = 
vÆ1
.
vÆue
.
as_sqw‹d
 == 0;

829 
ë_addr
:

830 
vÆ
 = 
vÆ1
.
vÆue
.
as_addr
 == 0;

832 
ë_uöt
:

833 
vÆ
 = 
vÆ1
.
vÆue
.
as_uöt
 == 0;

835 
ë_öt
:

836 
vÆ
 = 
vÆ1
.
vÆue
.
as_öt
 == 0;

839 
	`∑nic
("bogusÉxpressionÅype");

842  
vÆ
;

843 
	}
}

848 
evÆ_vÆue_t


849 
	$c⁄°™t
(
evÆ_°©e_t
 *
es
)

851 
evÆ_vÆue_t
 
vÆ
;

852 
öt_vÆ
;

853 
uöt_vÆ
;

854 
doubÀ_vÆ
;

855 *
ídp
;

856 #ifde‡
HOST_HAS_QWORD


857 
sqw‹d_t
 
sqw‹d_vÆ
;

858 
qw‹d_t
 
qw‹d_vÆ
;

861 #i‡!
	`deföed
(
__CYGWIN32__
)

862 
î∫o
;

866 #i‡
	`deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

867 
	`°πﬁ
(*, **, );

868 
	`°πod
(*, **);

878 
	~<î∫o.h
>

879 
öt_vÆ
 = 
	`°πﬁ
(
es
->
tok_buf
, &
ídp
, 0);

880 i‡(!
î∫o
 && !*
ídp
)

883 
vÆ
.
ty≥
 = 
ë_öt
;

884 
vÆ
.
vÆue
.
as_öt
 = 
öt_vÆ
;

885  
vÆ
;

889 
î∫o
 = 0;

890 
uöt_vÆ
 = 
	`°πoul
(
es
->
tok_buf
, &
ídp
, 0);

891 i‡(!
î∫o
 && !*
ídp
)

894 
vÆ
.
ty≥
 = 
ë_uöt
;

895 
vÆ
.
vÆue
.
as_uöt
 = 
uöt_vÆ
;

896  
vÆ
;

899 #ifde‡
HOST_HAS_QWORD


901 
î∫o
 = 0;

902 
sqw‹d_vÆ
 = 
	`my©osq
(
es
->
tok_buf
, &
ídp
, 0);

903 i‡(!
î∫o
 && !*
ídp
)

906 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

907 
vÆ
.
vÆue
.
as_sqw‹d
 = 
sqw‹d_vÆ
;

908  
vÆ
;

912 
î∫o
 = 0;

913 
qw‹d_vÆ
 = 
	`my©oq
(
es
->
tok_buf
, &
ídp
, 0);

914 i‡(!
î∫o
 && !*
ídp
)

917 
vÆ
.
ty≥
 = 
ë_qw‹d
;

918 
vÆ
.
vÆue
.
as_qw‹d
 = 
qw‹d_vÆ
;

919  
vÆ
;

925 
î∫o
 = 0;

926 
doubÀ_vÆ
 = 
	`°πod
(
es
->
tok_buf
, &
ídp
);

927 i‡(!
î∫o
 && !*
ídp
)

930 
vÆ
.
ty≥
 = 
ë_doubÀ
;

931 
vÆ
.
vÆue
.
as_doubÀ
 = 
doubÀ_vÆ
;

932  
vÆ
;

937 
evÆ_îr‹
 = 
ERR_BADCONST
;

938  
îr_vÆue
;

939 
	}
}

943 
evÆ_vÆue_t


944 
	$Á˘‹
(
evÆ_°©e_t
 *
es
)

946 
evÆ_tokí_t
 
tok
;

947 
evÆ_vÆue_t
 
vÆ
;

949 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

950 
tok
)

952 
tok_›¨í
:

953 ()
	`gë_√xt_tokí
(
es
);

954 
vÆ
 = 
	`ex¥
(
es
);

955 i‡(
evÆ_îr‹
)

956  
îr_vÆue
;

958 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

959 i‡(
tok
 !
tok_˝¨í
)

961 
evÆ_îr‹
 = 
ERR_UPAREN
;

962  
îr_vÆue
;

964 ()
	`gë_√xt_tokí
(
es
);

967 
tok_möus
:

969 ()
	`gë_√xt_tokí
(
es
);

970 
vÆ
 = 
	`Á˘‹
(
es
);

971 i‡(
evÆ_îr‹
)

972  
îr_vÆue
;

973 
vÆ
 = 
	`f_√g
(val);

976 
tok_idít
:

977 ()
	`gë_√xt_tokí
(
es
);

979 
vÆ
 = 
es
->
	`f_evÆ_idít
(es);

980 i‡(
evÆ_îr‹
)

981  
îr_vÆue
;

984 
tok_c⁄°
:

985 ()
	`gë_√xt_tokí
(
es
);

986 
vÆ
 = 
	`c⁄°™t
(
es
);

987 i‡(
evÆ_îr‹
)

988  
îr_vÆue
;

992 
evÆ_îr‹
 = 
ERR_NOTERM
;

993  
îr_vÆue
;

996  
vÆ
;

997 
	}
}

1001 
evÆ_vÆue_t


1002 
	$ãrm
(
evÆ_°©e_t
 *
es
)

1004 
evÆ_tokí_t
 
tok
;

1005 
evÆ_vÆue_t
 
vÆ
, 
vÆ1
;

1007 
vÆ
 = 
	`Á˘‹
(
es
);

1008 i‡(
evÆ_îr‹
)

1009  
îr_vÆue
;

1011 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1012 
tok
)

1014 
tok_mu…
:

1015 ()
	`gë_√xt_tokí
(
es
);

1016 
vÆ
 = 
	`f_mu…
(vÆ, 
	`ãrm
(
es
));

1017 i‡(
evÆ_îr‹
)

1018  
îr_vÆue
;

1021 
tok_div
:

1022 ()
	`gë_√xt_tokí
(
es
);

1023 
vÆ1
 = 
	`ãrm
(
es
);

1024 i‡(
evÆ_îr‹
)

1025  
îr_vÆue
;

1026 i‡(
	`f_eq_zîo
(
vÆ1
))

1028 
evÆ_îr‹
 = 
ERR_DIV0
;

1029  
îr_vÆue
;

1031 
vÆ
 = 
	`f_div
(vÆ, 
vÆ1
);

1037  
vÆ
;

1038 
	}
}

1042 
evÆ_vÆue_t


1043 
	$ex¥
(
evÆ_°©e_t
 *
es
)

1045 
evÆ_tokí_t
 
tok
;

1046 
evÆ_vÆue_t
 
vÆ
;

1048 
vÆ
 = 
	`ãrm
(
es
);

1049 i‡(
evÆ_îr‹
)

1050  
îr_vÆue
;

1052 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1053 
tok
)

1055 
tok_∂us
:

1056 ()
	`gë_√xt_tokí
(
es
);

1057 
vÆ
 = 
	`f_add
(vÆ, 
	`ex¥
(
es
));

1058 i‡(
evÆ_îr‹
)

1059  
îr_vÆue
;

1062 
tok_möus
:

1063 ()
	`gë_√xt_tokí
(
es
);

1064 
vÆ
 = 
	`f_sub
(vÆ, 
	`ex¥
(
es
));

1065 i‡(
evÆ_îr‹
)

1066  
îr_vÆue
;

1072  
vÆ
;

1073 
	}
}

1076 
evÆ_°©e_t
 *

1077 
	$evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

1078 *
u£r_±r
)

1080 
evÆ_°©e_t
 *
es
;

1082 
es
 = 
	`ˇŒoc
(1, (
evÆ_°©e_t
));

1083 i‡(!
es
)

1084 
	`Áèl
("out of virtual memory");

1086 
es
->
f_evÆ_idít
 = f_eval_ident;

1087 
es
->
u£r_±r
 = user_ptr;

1089  
es
;

1090 
	}
}

1094 
	$evÆ_dñëe
(
evÆ_°©e_t
 *
es
)

1096 
	`‰ì
(
es
);

1097 
	}
}

1101 
evÆ_vÆue_t


1102 
	$evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

1103 *
p
,

1104 **
ídp
)

1106 
evÆ_vÆue_t
 
vÆ
;

1109 
evÆ_îr‹
 = 
ERR_NOERR
;

1110 
es
->
p
 =Ö;

1111 *
es
->
tok_buf
 = '\0';

1112 
es
->
≥ek_tok
 = 
tok_övÆid
;

1115 
vÆ
 = 
	`ex¥
(
es
);

1118 i‡(
ídp
)

1120 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

1123 *
ídp
 = 
es
->
œ°p
;

1126 *
ídp
 = 
es
->
p
;

1129  
vÆ
;

1130 
	}
}

1134 
	$evÆ_¥öt
(
FILE
 *
°ªam
,

1135 
evÆ_vÆue_t
 
vÆ
)

1137 
vÆ
.
ty≥
)

1139 
ë_doubÀ
:

1140 
	`Ârötf
(
°ªam
, "%‡[doubÀ]", 
vÆ
.
vÆue
.
as_doubÀ
);

1142 
ë_Êﬂt
:

1143 
	`Ârötf
(
°ªam
, "%‡[Êﬂt]", ()
vÆ
.
vÆue
.
as_Êﬂt
);

1145 #ifde‡
HOST_HAS_QWORD


1146 
ë_qw‹d
:

1147 
	`myÂrötf
(
°ªam
, "%lu [qw‹d_t]", 
vÆ
.
vÆue
.
as_qw‹d
);

1149 
ë_sqw‹d
:

1150 
	`myÂrötf
(
°ªam
, "%ld [sqw‹d_t]", 
vÆ
.
vÆue
.
as_sqw‹d
);

1153 
ë_addr
:

1154 
	`myÂrötf
(
°ªam
, "0x%∞[md_addr_t]", 
vÆ
.
vÆue
.
as_addr
);

1156 
ë_uöt
:

1157 
	`Ârötf
(
°ªam
, "%u [uöt]", 
vÆ
.
vÆue
.
as_uöt
);

1159 
ë_öt
:

1160 
	`Ârötf
(
°ªam
, "%d [öt]", 
vÆ
.
vÆue
.
as_öt
);

1162 
ë_symbﬁ
:

1163 
	`Ârötf
(
°ªam
, "\"%s\" [symbﬁ]", 
vÆ
.
vÆue
.
as_symbﬁ
);

1166 
	`∑nic
("bogusÉxpressionÅype");

1168 
	}
}

	@eval.h

52 #i‚de‡
EVAL_H


53 
	#EVAL_H


	)

55 
	~<°dio.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

61 
	gevÆ_°©e_t
;

62 
	gevÆ_vÆue_t
;

67 
	gevÆ_vÆue_t


68 (*
	tevÆ_idít_t
)(
	tevÆ_°©e_t
 *
	tes
);

71 
	eevÆ_tokí_t
 {

72 
	mtok_idít
,

73 
	mtok_c⁄°
,

74 
	mtok_∂us
,

75 
	mtok_möus
,

76 
	mtok_mu…
,

77 
	mtok_div
,

78 
	mtok_›¨í
,

79 
	mtok_˝¨í
,

80 
	mtok_eof
,

81 
	mtok_whôe•a˚
,

82 
	mtok_övÆid


86 
	sevÆ_°©e_t
 {

87 *
	mp
;

88 *
	mœ°p
;

89 
evÆ_idít_t
 
	mf_evÆ_idít
;

90 *
	mu£r_±r
;

91 
	mtok_buf
[512];

92 
evÆ_tokí_t
 
	m≥ek_tok
;

96 
	eevÆ_îr_t
 {

97 
	mERR_NOERR
,

98 
	mERR_UPAREN
,

99 
	mERR_NOTERM
,

100 
	mERR_DIV0
,

101 
	mERR_BADCONST
,

102 
	mERR_BADEXPR
,

103 
	mERR_UNDEFVAR
,

104 
	mERR_EXTRA
,

105 
	mERR_NUM


109 
evÆ_îr_t
 
evÆ_îr‹
 ;

112 *
evÆ_îr_°r
[
ERR_NUM
];

115 
	eevÆ_ty≥_t
 {

116 
	më_öt
,

117 
	më_uöt
,

118 
	më_addr
,

119 #ifde‡
HOST_HAS_QWORD


120 
	më_qw‹d
,

121 
	më_sqw‹d
,

123 
	më_Êﬂt
,

124 
	më_doubÀ
,

125 
	më_symbﬁ
,

126 
	më_NUM


130 #ifde‡
HOST_HAS_QWORD


131 
	#EVAL_INTEGRAL
(
TYPE
) \

132 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
 \

133 || (
TYPE
Ë=
ë_qw‹d
 || (TYPEË=
ë_sqw‹d
)

	)

135 
	#EVAL_INTEGRAL
(
TYPE
) \

136 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
)

	)

140 *
evÆ_ty≥_°r
[
ë_NUM
];

143 
	sevÆ_vÆue_t
 {

144 
evÆ_ty≥_t
 
	mty≥
;

146 
	mas_öt
;

147 
	mas_uöt
;

148 
md_addr_t
 
	mas_addr
;

149 #ifde‡
HOST_HAS_QWORD


150 
qw‹d_t
 
	mas_qw‹d
;

151 
sqw‹d_t
 
	mas_sqw‹d
;

153 
	mas_Êﬂt
;

154 
	mas_doubÀ
;

155 *
	mas_symbﬁ
;

156 } 
	mvÆue
;

164 
evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
);

167 
evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
);

169 #ifde‡
HOST_HAS_QWORD


171 
qw‹d_t
 
evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
);

174 
sqw‹d_t
 
evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
);

178 
md_addr_t
 
evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
);

181 
evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
);

184 
evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
);

187 
evÆ_°©e_t
 *

188 
evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

189 *
u£r_±r
);

193 
evÆ_dñëe
(
evÆ_°©e_t
 *
es
);

197 
evÆ_vÆue_t


198 
evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

199 *
p
,

200 **
ídp
);

204 
evÆ_¥öt
(
FILE
 *
°ªam
,

205 
evÆ_vÆue_t
 
vÆ
);

	@eventq.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evítq.h
"

60 
	gevítq_max_evíts
;

61 
	gevítq_evít_cou¡
;

62 
evítq_desc
 *
	gevítq_≥ndög
;

63 
evítq_desc
 *
	gevítq_‰ì
;

65 
EVENTQ_ID_TYPE
 
	g√xt_ID
 = 1;

68 
	$evítq_öô
(
max_evíts
)

70 
evítq_max_evíts
 = 
max_evíts
;

71 
evítq_evít_cou¡
 = 0;

72 
evítq_≥ndög
 = 
NULL
;

73 
evítq_‰ì
 = 
NULL
;

74 
	}
}

76 
	#__QUEUE_EVENT
(
WHEN
, 
ID
, 
ACTION
) \

77 
evítq_desc
 *
¥ev
, *
ev
, *
√w
; \

79 i‡(!
evítq_‰ì
) \

81 i‡(
evítq_max_evíts
 && 
evítq_evít_cou¡
 >=Éventq_max_events) \

82 
	`∑nic
("too manyÉvents"); \

83 
evítq_‰ì
 = 
	`ˇŒoc
(1, (
evítq_desc
)); \

85 
√w
 = 
evítq_‰ì
; \

86 
evítq_‰ì
 =Évítq_‰ì->
√xt
; \

88 
√w
->
whí
 = (
WHEN
); (
ID
Ë√w->
id
 = 
√xt_ID
++; 
ACTION
; \

90 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
; \

91 
ev
 &&Év->
whí
 < when; \

92 
¥ev
=
ev
,ÉvÛv->
√xt
); \

94 i‡(
¥ev
) \

97 
√w
->
√xt
 = 
¥ev
->next; \

98 
¥ev
->
√xt
 = 
√w
; \

103 
√w
->
√xt
 = 
evítq_≥ndög
; \

104 
evítq_≥ndög
 = 
√w
; \

105 }

	)

107 
EVENTQ_ID_TYPE


108 
	$evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

109 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

111 
EVENTQ_ID_TYPE
 
id
;

112 
	`__QUEUE_EVENT
(
whí
, 
id
, \

113 
√w
->
a˘i⁄
 = 
EvítSëBô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

114 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

115  
id
;

116 
	}
}

118 
EVENTQ_ID_TYPE


119 
	$evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
,

120 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

122 
EVENTQ_ID_TYPE
 
id
;

123 
	`__QUEUE_EVENT
(
whí
, 
id
, \

124 
√w
->
a˘i⁄
 = 
EvítCÀ¨Bô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

125 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

126  
id
;

127 
	}
}

129 
EVENTQ_ID_TYPE


130 
	$evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
, *
pÊag
, 
vÆue
)

132 
EVENTQ_ID_TYPE
 
id
;

133 
	`__QUEUE_EVENT
(
whí
, 
id
, \

134 
√w
->
a˘i⁄
 = 
EvítSëFœg
; \

135 
√w
->
d©a
.
Êag
.
pÊag
 =ÖÊag;Çew->d©a.Êag.
vÆue
 = value);

136  
id
;

137 
	}
}

139 
EVENTQ_ID_TYPE


140 
	$evítq_queue_add›
(
SS_TIME_TYPE
 
whí
, *
summ™d
, 
addíd
)

142 
EVENTQ_ID_TYPE
 
id
;

143 
	`__QUEUE_EVENT
(
whí
, 
id
, \

144 
√w
->
a˘i⁄
 = 
EvítAddOp
; \

145 
√w
->
d©a
.
add›
.
summ™d
 = summand; \

146 
√w
->
d©a
.
add›
.
addíd
 =áddend);

147  
id
;

148 
	}
}

150 
EVENTQ_ID_TYPE


151 
	$evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

152 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
), arg)

154 
EVENTQ_ID_TYPE
 
id
;

155 
	`__QUEUE_EVENT
(
whí
, 
id
, \

156 
√w
->
a˘i⁄
 = 
EvítCÆlback
;Çew->
d©a
.
ˇŒback
.
‚
 = fn;\

157 
√w
->
d©a
.
ˇŒback
.
¨g
 =árg);

158  
id
;

159 
	}
}

161 
	#EXECUTE_ACTION
(
ev
, 
now
) \

163 
ev
->
a˘i⁄
) { \

164 
EvítSëBô
: \

165 
	`BITMAP_SET
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

167 
EvítCÀ¨Bô
: \

168 
	`BITMAP_CLEAR
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

170 
EvítSëFœg
: \

171 *
ev
->
d©a
.
Êag
.
pÊag
 =Év->d©a.Êag.
vÆue
; \

173 
EvítAddOp
: \

174 *
ev
->
d©a
.
add›
.
summ™d
 +ev->d©a.add›.
addíd
; \

176 
EvítCÆlback
: \

177 (*
ev
->
d©a
.
ˇŒback
.
‚
)(
now
,Év->d©a.ˇŒback.
¨g
); \

180 
	`∑nic
("bogusÉventáction"); \

181 }

	)

186 
	$evítq_execuã
(
EVENTQ_ID_TYPE
 
id
)

188 
evítq_desc
 *
¥ev
, *
ev
;

190 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

192 i‡(
ev
->
id
 == id)

194 i‡(
¥ev
)

197 
¥ev
->
√xt
 = 
ev
->next;

202 
evítq_≥ndög
 = 
ev
->
√xt
;

206 
	`EXECUTE_ACTION
(
ev
, 0);

209 
ev
->
√xt
 = 
evítq_‰ì
;

210 
evítq_‰ì
 = 
ev
;

213  
TRUE
;

217  
FALSE
;

218 
	}
}

223 
	$evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
)

225 
evítq_desc
 *
¥ev
, *
ev
;

227 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

229 i‡(
ev
->
id
 == id)

231 i‡(
¥ev
)

234 
¥ev
->
√xt
 = 
ev
->next;

239 
evítq_≥ndög
 = 
ev
->
√xt
;

243 
ev
->
√xt
 = 
evítq_‰ì
;

244 
evítq_‰ì
 = 
ev
;

247  
TRUE
;

251  
FALSE
;

252 
	}
}

255 
	$evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
)

257 
evítq_≥ndög
 &&Évítq_≥ndög->
whí
 <
now
)

259 
evítq_desc
 *
ev
 = 
evítq_≥ndög
;

262 
	`EXECUTE_ACTION
(
ev
, 
now
);

265 
evítq_≥ndög
 = 
ev
->
√xt
;

266 
ev
->
√xt
 = 
evítq_‰ì
;

267 
evítq_‰ì
 = 
ev
;

269 
	}
}

272 
	$evítq_dump
(
FILE
 *
°ªam
)

274 
evítq_desc
 *
ev
;

276 i‡(!
°ªam
)

277 
°ªam
 = 
°dîr
;

279 
	`Ârötf
(
°ªam
, "Pending Events: ");

280 
ev
=
evítq_≥ndög
;Év;ÉvÛv->
√xt
)

282 
	`Ârötf
(
°ªam
, "@ %.0f:%s:",

283 ()
ev
->
whí
,

284 
ev
->
a˘i⁄
 =
EvítSëBô
 ? "set bit"

285 : 
ev
->
a˘i⁄
 =
EvítCÀ¨Bô
 ? "clear bit"

286 : 
ev
->
a˘i⁄
 =
EvítSëFœg
 ? "set flag"

287 : 
ev
->
a˘i⁄
 =
EvítAddOp
 ? "add operation"

288 : 
ev
->
a˘i⁄
 =
EvítCÆlback
 ? "call back"

289 : (
	`ab‹t
(), ""));

290 
ev
->
a˘i⁄
) {

291 
EvítSëBô
:

292 
EvítCÀ¨Bô
:

293 
	`Ârötf
(
°ªam
, "0x%p, %d, %d",

294 
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);

296 
EvítSëFœg
:

297 
	`Ârötf
(
°ªam
, "0x%p, %d", 
ev
->
d©a
.
Êag
.
pÊag
,Év->d©a.Êag.
vÆue
);

299 
EvítAddOp
:

300 
	`Ârötf
(
°ªam
, "0x%p, %d",

301 
ev
->
d©a
.
add›
.
summ™d
,Év->d©a.add›.
addíd
);

303 
EvítCÆlback
:

304 
	`Ârötf
(
°ªam
, "0x%p, %d",

305 
ev
->
d©a
.
ˇŒback
.
‚
,Év->d©a.ˇŒback.
¨g
);

308 
	`∑nic
("bogusÉventáction");

310 
	`Ârötf
(
°ªam
, " ");

312 
	}
}

	@eventq.h

52 #i‚de‡
EVENTQ_H


53 
	#EVENTQ_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"bôm≠.h
"

66 
	eevítq_a˘i⁄
 {

67 
	mEvítSëBô
,

68 
	mEvítCÀ¨Bô
,

69 
	mEvítSëFœg
,

70 
	mEvítAddOp
,

71 
	mEvítCÆlback
,

75 
	tEVENTQ_ID_TYPE
;

78 
	sevítq_desc
 {

79 
evítq_desc
 *
	m√xt
;

80 
SS_TIME_TYPE
 
	mwhí
;

81 
EVENTQ_ID_TYPE
 
	mid
;

82 
evítq_a˘i⁄
 
	ma˘i⁄
;

83 
	uevítq_d©a
 {

85 
BITMAP_ENT_TYPE
 *
	mbm≠
;

86 
	msz
;

87 
	mbônum
;

88 } 
	mbô
;

90 *
	mpÊag
;

91 
	mvÆue
;

92 } 
	mÊag
;

94 *
	msumm™d
;

95 
	maddíd
;

96 } 
	madd›
;

98 (*
	m‚
)(
SS_TIME_TYPE
 
	mtime
, 
	m¨g
);

99 
	m¨g
;

100 } 
	mˇŒback
;

101 } 
	md©a
;

106 
evítq_öô
(
max_evíts
);

110 
EVENTQ_ID_TYPE
 
evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

111 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
);

112 
EVENTQ_ID_TYPE
 
evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
, 
BITMAP_ENT_TYPE
 *
bm≠
,

113 
sz
, 
bônum
);

114 
EVENTQ_ID_TYPE
 
evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
,

115 *
pÊag
, 
vÆue
);

116 
EVENTQ_ID_TYPE
 
evítq_queue_add›
(
SS_TIME_TYPE
 
whí
,

117 *
summ™d
, 
addíd
);

118 
EVENTQ_ID_TYPE
 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

119 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
),

120 
¨g
);

124 
	`evítq_execuã
(
EVENTQ_ID_TYPE
 
id
);

128 
	`evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
);

131 
	`evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
);

133 
	`evítq_dump
(
FILE
 *
°ªam
);

	@host.h

52 #i‚de‡
HOST_H


53 
	#HOST_H


	)

56 #i‚de‡
__STDC__


57 #îr‹ 
The
 
Sim∂eSˇœr
 
simuœt‹s
 
mu°
 
be
 
compûed
 
wôh
 
™
 
ANSI
 
C
 
compûî
.

61 #unde‡
INLINE


62 #i‡
deföed
(
__GNUC__
)

63 
	#INLINE
 
ölöe


	)

65 
	#INLINE


	)

69 #ifde‡
__GNUC__


71 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

72 
	#ANSI_SYMCAT


	)

74 #ifde‡
OLD_SYMCAT


75 
	#SYMCAT
(
X
,
Y
ËX 
	)
Y

77 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

78 
	#ANSI_SYMCAT


	)

83 
	tboﬁ_t
;

84 
	tbyã_t
;

85 sig√d 
	tsbyã_t
;

86 
	thÆf_t
;

87 sig√d 
	tshÆf_t
;

88 
	tw‹d_t
;

89 sig√d 
	tsw‹d_t
;

90 
	tsÊﬂt_t
;

91 
	tdÊﬂt_t
;

94 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__SUNPRO_C
Ë|| deföed(
__CC_C89
Ë|| deföed(
__CC_XLC
)

95 
	#HOST_HAS_QWORD


	)

96 
	tqw‹d_t
;

97 sig√d 
	tsqw‹d_t
;

98 #ifde‡
ANSI_SYMCAT


99 
	#ULL
(
N
ËN##
ULL


	)

100 
	#LL
(
N
ËN##
LL


	)

102 
	#ULL
(
N
ËN 
ULL


	)

103 
	#LL
(
N
ËN 
LL


	)

105 #ñi‡
deföed
(
__Æpha
)

106 
	#HOST_HAS_QWORD


	)

107 
	tqw‹d_t
;

108 sig√d 
	tsqw‹d_t
;

109 #ifde‡
ANSI_SYMCAT


110 
	#ULL
(
N
ËN##
UL


	)

111 
	#LL
(
N
ËN##
L


	)

113 
	#ULL
(
N
ËN 
UL


	)

114 
	#LL
(
N
ËN 
L


	)

116 #ñi‡
deföed
(
_MSC_VER
)

117 
	#HOST_HAS_QWORD


	)

118 
	t__öt64
 
	tqw‹d_t
;

119 sig√d 
	t__öt64
 
	tsqw‹d_t
;

120 
	#ULL
(
N
Ë((
qw‹d_t
)(N))

	)

121 
	#LL
(
N
Ë((
sqw‹d_t
)(N))

	)

123 #unde‡
HOST_HAS_QWORD


127 #ifde‡
HOST_HAS_QWORD


128 
sqw‹d_t
 
	tcou¡î_t
;

129 
sqw‹d_t
 
	ttick_t
;

131 
dÊﬂt_t
 
	tcou¡î_t
;

132 
dÊﬂt_t
 
	ttick_t
;

135 #ifde‡
__svr4__


136 
	#£tjmp
 
_£tjmp


	)

137 
	#l⁄gjmp
 
_l⁄gjmp


	)

	@libcheetah/dmvl.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

22 
	~"../ho°.h
"

23 
	~"../misc.h
"

24 
	~"../machöe.h
"

25 
	~"utû.h
"

26 
	~"libchìèh.h
"

28 
	#ONE
 1

	)

29 
	#INVALID
 0

	)

30 
	#SUB_ZERO
 0xfffffff‡

	)

32 
A
,

33 
B
,

34 
C
,

35 
T
,

36 
SAVE_INTERVAL
,

37 
P_INTERVAL
;

39 
	gCACHE_SZ
,

40 
	gMIN_LINE_SZ
,

41 
	gMAX_LINE_SZ
,

43 
	gNO_LINES
,

44 
	gMAX_SET_SZ
,

45 
	gMIN_SET_SZ
,

47 
	gTAG_MASK
,

48 
	gTAG_SET1_MASK
,

51 **
	gèg_¨r
,

52 **
	g£t_¨r
,

53 **
	ghôs_¨r
,

54 *
	glm_¨r
,

55 *
	ghôs
;

58 
	gt_íåõs
;

60 #ifde‡
PERF


61 
	gcom∑ªs
, 
	gskùs
;

74 **
	gπag_¨r
, **
	gr£t_¨r
, **
	grhôs_¨r
;

75 
	gRTAG_MASK
, 
	gRMAX_LINE_SZ
;

76 
	gRCACHE_SZ
;

77 
	gRTAG_SET1_MASK
;

78 
	gRMIN_LINE_SZ
;

79 
	gRNO_LINES
;

80 
	g√xt_ßve_time
;

92 
	$ouçr_dmvl
(
FILE
 *
fd
)

94 
i
, 
j
, 
k
;

96 
	`Ârötf
(
fd
, "Direct Mapped Caches\n");

97 
	`Ârötf
(
fd
, "Addªs£†¥o˚s£d %d\n", 
t_íåõs
);

98 
	`Ârötf
(
fd
, "Cachêsize: %d byãs\n", (
ONE
 << 
CACHE_SZ
));

99 #ifde‡
PERF


100 
	`Ârötf
(
fd
, "com∑ª†%d\n", 
com∑ªs
);

102 
	`Ârötf
(
fd
, "Line size (bytes)\tMissÑatio\n");

103 
i
0; i <
NO_LINES
-1; i++)

105 
hôs
[
i
+
MIN_LINE_SZ
] = 0;

106 
j
0; j <(
NO_LINES
- 
i
 - 1); j++)

108 
k
=(
NO_LINES
-
i
-1); k <= (NO_LINES-1); k++)

109 
hôs
[
i
+
MIN_LINE_SZ
] +
hôs_¨r
[
j
][
k
];

111 
	`Ârötf
(
fd
, "%d\t\t\t%f\n", (
ONE
 << (
i
+
MIN_LINE_SZ
)),

112 (1.0 - ((Ë
hôs
[
i
+
MIN_LINE_SZ
]/(Ë
t_íåõs
)));

114 
	`Ârötf
(
fd
, "\n");

115 
	}
}

119 
	$dmvl
(
md_addr_t
 
addr
)

121 
‹ig_èg
,

122 
èg
;

125 
£t1
,

126 
‹ig_£t2
,

127 
£t2
;

128 
°
, 
tg
;

129 
íåy
,

130 
pos
;

131 
dïth
,

132 
£t2_m©ch
;

133 *
πag_¨r_£t1
, *
r£t_¨r_£t1
;

135 
t_íåõs
++;

136 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

137 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

139 
£t1
 = (
addr
 & 
RTAG_MASK
Ë>> 
RMAX_LINE_SZ
;

140 
‹ig_èg
 = 
addr
 >> 
RCACHE_SZ
;

141 
‹ig_£t2
 = (
addr
 & 
RTAG_SET1_MASK
Ë>> 
RMIN_LINE_SZ
;

142 #ifde‡
PERF


143 ++
com∑ªs
;

145 i‡(
r£t_¨r
[
£t1
][0] =
‹ig_£t2
)

147 i‡(
πag_¨r
[
£t1
][0] =
‹ig_èg
)

150 ++
rhôs_¨r
[0][
RNO_LINES
-1];

153 
πag_¨r
[
£t1
][0] = 
‹ig_èg
;

157 
πag_¨r_£t1
 = *(
πag_¨r
 + 
£t1
);

158 
r£t_¨r_£t1
 = *(
r£t_¨r
 + 
£t1
);

159 
tg
 = 
πag_¨r_£t1
[0];

160 
°
 = 
r£t_¨r_£t1
[0];

161 
dïth
 = 0;

162 
£t2_m©ch
 = 
lm_¨r
[(
°
 ^ 
‹ig_£t2
)];

163 i‡(
tg
 =
‹ig_èg
)

164 ++
rhôs_¨r
[0][
£t2_m©ch
];

165 
dïth
 = 
£t2_m©ch
 + 1;

166 
èg
 = 
tg
;

167 
πag_¨r_£t1
[0] = 
‹ig_èg
;

168 
£t2
 = 
°
;

169 
r£t_¨r_£t1
[0] = 
‹ig_£t2
;

170 
íåy
 = 
£t2
 >> (
RNO_LINES
 - 
dïth
 );

171 
pos
 = 
íåy
 + (
ONE
 << (
dïth
 - 1));

173 ()
dïth
 < 
RNO_LINES
)

175 #ifde‡
PERF


176 ++
com∑ªs
;

178 
tg
 = 
πag_¨r_£t1
[
pos
];

179 
°
 = 
r£t_¨r_£t1
[
pos
];

180 i‡(
°
 =
‹ig_£t2
)

182 i‡(
tg
 =
‹ig_èg
)

185 ++
rhôs_¨r
[
dïth
][
RNO_LINES
-1];

187 
πag_¨r_£t1
[
pos
] = 
èg
;

188 
r£t_¨r_£t1
[
pos
] = 
£t2
;

191 
£t2_m©ch
 = 
lm_¨r
[(
°
 ^ 
‹ig_£t2
)];

192 i‡(
tg
 =
‹ig_èg
)

193 ++
rhôs_¨r
[
dïth
][
£t2_m©ch
];

194 
dïth
 = 
£t2_m©ch
 + 1;

195 
πag_¨r_£t1
[
pos
] = 
èg
;

196 
èg
 = 
tg
;

197 
r£t_¨r_£t1
[
pos
] = 
£t2
;

198 
£t2
 = 
°
;

199 
íåy
 = 
£t2
 >> (
RNO_LINES
 - 
dïth
 );

200 
pos
 = 
íåy
 + (
ONE
 << (
dïth
 - 1));

203 i‡(
t_íåõs
 > 
√xt_ßve_time
)

205 
	`ouçr_dmvl
(
°dîr
);

206 
√xt_ßve_time
 +
SAVE_INTERVAL
;

208 
	}
}

219 
	$öô_dmvl
()

221 
i
;

222 
dïth
, 
k
;

223 
°
, 
t
;

225 
MIN_LINE_SZ
 = 
A
;

226 
MAX_LINE_SZ
 = 
B
;

227 
CACHE_SZ
 = 
C
;

229 
NO_LINES
 = 
MAX_LINE_SZ
 - 
MIN_LINE_SZ
 + 1;

230 
MAX_SET_SZ
 = (
CACHE_SZ
 - 
MIN_LINE_SZ
);

231 
MIN_SET_SZ
 = (
CACHE_SZ
 - 
MAX_LINE_SZ
);

233 
TAG_MASK
 = (–
ONE
 << 
CACHE_SZ
) - ONE );

234 
TAG_SET1_MASK
 = ((
ONE
 << 
MAX_LINE_SZ
) - ONE);

237 
èg_¨r
 = 
	`idim2
((
ONE
 << 
MIN_SET_SZ
), (ONE << (
NO_LINES
-1)));

238 
£t_¨r
 = 
	`idim2
((
ONE
 << 
MIN_SET_SZ
), (ONE << (
NO_LINES
-1)));

239 
hôs_¨r
 = 
	`idim2
((
NO_LINES
), (NO_LINES));

241 
lm_¨r
 = 
	`ˇŒoc
((
ONE
 << (
NO_LINES
 - 1)), ());

242 i‡(!
lm_¨r
)

243 
	`Áèl
("out of virtual memory");

245 
hôs
 = 
	`ˇŒoc
((
MAX_LINE_SZ
+1), ());

246 i‡(!
hôs
)

247 
	`Áèl
("out of virtual memory");

249 
i
=0; i < (
ONE
<<
MIN_SET_SZ
); i++)

251 
£t_¨r
[
i
][0] = 0;

252 
èg_¨r
[
i
][0] = 
SUB_ZERO
;

253 
dïth
1; dïth < 
NO_LINES
; depth++)

255 
°
 = 
ONE
 << (
dïth
-1);

256 
t
 = 
ONE
 << (
NO_LINES
 - 
dïth
);

257 
£t_¨r
[
i
][
°
] = 
ONE
 << (
NO_LINES
-
dïth
-1);

258 
èg_¨r
[
i
][
°
] = 
SUB_ZERO
;

259 
k
=1; k<
°
; k++)

261 
£t_¨r
[
i
][
°
+
k
] = së_¨r[i][°+k-1] + 
t
;

262 
èg_¨r
[
i
][
°
+
k
] = 
SUB_ZERO
;

267 
t
 = 
ONE
;

268 
°
 = 
NO_LINES
 - 1;

269 
i
=0; i < (
ONE
 << (
NO_LINES
 - 1)); i++)

271 i‡(
t
 > ()
i
)

272 
lm_¨r
[
i
] = 
°
;

275 
t
 <<
ONE
;

276 
°
 -= 1;

277 
lm_¨r
[
i
] = 
°
;

281 
πag_¨r
 = 
èg_¨r
;

282 
r£t_¨r
 = 
£t_¨r
;

283 
rhôs_¨r
 = 
hôs_¨r
;

284 
√xt_ßve_time
 = 
SAVE_INTERVAL
;

286 
RTAG_MASK
=
TAG_MASK
;

287 
RMAX_LINE_SZ
=
MAX_LINE_SZ
;

288 
RCACHE_SZ
=
CACHE_SZ
;

289 
RTAG_SET1_MASK
=
TAG_SET1_MASK
;

290 
RMIN_LINE_SZ
=
MIN_LINE_SZ
;

291 
RNO_LINES
=
NO_LINES
;

292 
	}
}

	@libcheetah/faclru.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

22 
	~"../ho°.h
"

23 
	~"../misc.h
"

24 
	~"../machöe.h
"

25 
	~"utû.h
"

26 
	~"libchìèh.h
"

29 
	#toggÀ
(
i
Ëif(i==1)i=0;{i=1;}

	)

30 
	#mö
(
a
,
b
Ë(◊<bË?á : b)

	)

32 
	#ONE
 1

	)

33 
	#HASHNO
 7211

	)

34 
	#INPUT_BUFFER_SIZE
 1000

	)

35 
	#MAX_PHYSICAL_MEM
 2097152

	)

36 
	#BYTES_PER_LINE
 35

	)

38 
hash_èbÀ
 
	g¶Ÿ
[
HASHNO
];

39 
åì_node
 *
	groŸ
;

40 
åì_node
 **
	gp_°ack
;

42 *
	gout_°ack
;

44 #ifde‡
PERF


45 
	gcomp
=0.0, 
	gno_•œy_°ïs
=0.0;

47 
	gtŸ_addrs
,

48 
	gt_íåõs
;

49 
	gsize_ex˚eded
=0;

52 
L
,

53 
T
;

54 
MAX_CACHE_SIZE
;

55 
MAX_LINES
;

56 
MISS_RATIO_INTERVAL
,

57 
SAVE_INTERVAL
,

58 
P_INTERVAL
;

60 
FILE
 *
ªp‹tfûe
;

62 
	g√xt_ßve_time
;

73 
	$ouçr_Á˛ru
(
FILE
 *
fd
)

75 
i
;

76 
°ack_íd
;

77 
sum
 = 0;

79 
	`Ârötf
(
fd
, "Addªs£†¥o˚s£d : %d\n", 
t_íåõs
);

80 
	`Ârötf
(
fd
, "Löêsizê: %d byã†\n", (
ONE
 << 
L
));

81 
	`Ârötf
(
fd
, "Numbî o‡di°ö˘Üöe† %d\n", 
tŸ_addrs
);

82 #ifde‡
PERF


83 
	`Ârötf
(
fd
, "Numbî o‡Com∑ris⁄†%lf\n", 
comp
);

84 
	`Ârötf
(
fd
, "Numbî o‡bÆ™˚ sãp†%lf\n", 
no_•œy_°ïs
);

86 
	`Ârötf
(
fd
, "Cache size (bytes)\tMiss Ratio\n");

87 
°ack_íd
 = 
	`mö
 (
tŸ_addrs
, 
MAX_LINES
);

89 
i
 = 1; i <
°ack_íd
; i++)

91 
sum
 +
out_°ack
[
i
];

92 i‡((
i
 % 
MISS_RATIO_INTERVAL
) == 0)

93 
	`Ârötf
(
fd
, "%d\t\t\t%1.6f\n", (
i
 * (
ONE
 << 
L
)),

94 (1.0 - (()
sum
/()
t_íåõs
)));

96 i‡(()
°ack_íd
 =
tŸ_addrs
)

97 
	`Ârötf
(
fd
, "MissÑatio is %f foráll bigger caches\n",

98 (1.0 - (()
sum
/()
t_íåõs
)));

99 
	`Ârötf
(
fd
, "\n");

100 
	}
}

110 
åì_node
 *

111 
	$dñëe_node
()

113 
åì_node
 *
±r
, *
‰ì_±r
;

114 
åì_node
 **
dñëe_°ack
;

115 
t›
;

116 
fú°_time
=1;

117 
œ°_öum
;

119 i‡(
fú°_time


120 || 
t›
 < 5

121 || 
dñëe_°ack
[
t›
]->
öum
 !
œ°_öum


122 || 
dñëe_°ack
[
t›
-1]->
l·
 != delete_stack[top])

124 i‡(
fú°_time
)

126 
fú°_time
 = 0;

127 
dñëe_°ack
 = 
	`ˇŒoc
(
MAX_LINES
,  (
åì_node
 *));

128 i‡(!
dñëe_°ack
)

129 
	`Áèl
("out of virtual memory");

131 
t›
 = -1;

132 
±r
 = 
roŸ
;

133 
±r
->
l·
 !
NULL
)

135 ++
t›
;

136 
dñëe_°ack
 [
t›
] = 
±r
;

137 
±r
 =Öå->
l·
;

139 
dñëe_°ack
[
t›
]->
l·
 = 
±r
->
π
;

140 
‰ì_±r
 = 
±r
;

142 
±r
 = 
dñëe_°ack
[
t›
]->
l·
;

143 
±r
)

145 ++
t›
;

146 
dñëe_°ack
 [
t›
] = 
±r
;

147 
±r
 =Öå->
l·
;

149 
œ°_öum
 = 
dñëe_°ack
[
t›
]->
öum
;

153 i‡(
dñëe_°ack
[
t›
]->
l·
 !
NULL
)

154 
	`Ârötf
(
°dîr
, "libcheetah:ÜftÖtr ofÜastÉntryÇot NULL\n");

156 
‰ì_±r
 = 
dñëe_°ack
[
t›
];

157 
dñëe_°ack
[
t›
-1]->
l·
 = dñëe_°ack[t›]->
π
;

158 --
t›
;

159 
±r
 = 
dñëe_°ack
[
t›
]->
l·
;

160 
±r
)

162 ++
t›
;

163 
dñëe_°ack
 [
t›
] = 
±r
;

164 
±r
 =Öå->
l·
;

166 
œ°_öum
 = 
dñëe_°ack
[
t›
]->
öum
;

169  
‰ì_±r
;

170 
	}
}

184 
	$hash_lookup_add
(
md_addr_t
 
addr
)

186 
ﬁd_öum
;

187 
loc
;

188 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

190 
loc
 = 
addr
 % 
HASHNO
;

191 i‡(
¶Ÿ
[
loc
].
öum
 == 0)

193 ++
tŸ_addrs
;

194 
¶Ÿ
[
loc
].
addr
 =áddr;

195 
¶Ÿ
[
loc
].
öum
 = 
t_íåõs
;

196 
¶Ÿ
[
loc
].
nxt
 = 
NULL
;

201 
±r
 = &
¶Ÿ
[
loc
];

202 
±r
)

204 
ﬁd±r
 = 
±r
;

205 i‡(
±r
->
addr
 ==áddr)

207 
±r
 =Öå->
nxt
;

209 i‡(
±r
)

211 
ﬁd_öum
 = 
±r
->
öum
;

212 
±r
->
öum
 = 
t_íåõs
;

213  
ﬁd_öum
;

217 ++
tŸ_addrs
;

218 
ﬁd±r
->
nxt
 = 
	`ˇŒoc
(1, (
hash_èbÀ
));

219 i‡(!
ﬁd±r
->
nxt
)

220 
	`Áèl
("out of virtual memory");

222 
ﬁd±r
->
nxt
->
addr
 =áddr;

223 
ﬁd±r
->
nxt
->nxà
NULL
;

224 
ﬁd±r
->
nxt
->
öum
 = 
t_íåõs
;

228 
	}
}

240 
	$hash_dñ
(
md_addr_t
 
addr
)

242 
loc
;

243 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

245 
loc
 = 
addr
 % 
HASHNO
;

246 i‡(
¶Ÿ
[
loc
].
öum
 == 0)

248 
	`Ârötf
(
°dîr
, "libcheetah:áddrÇot found in hash_table\n");

250 i‡(
¶Ÿ
[
loc
].
addr
 ==áddr)

252 i‡(
¶Ÿ
[
loc
].
nxt
 =
NULL
)

253 
¶Ÿ
[
loc
].
öum
 = 0;

256 
¶Ÿ
[
loc
].
addr
 = slŸ[loc].
nxt
->addr;

257 
¶Ÿ
[
loc
].
öum
 = slŸ[loc].
nxt
->inum;

258 
±r
 = 
¶Ÿ
[
loc
].
nxt
;

259 
¶Ÿ
[
loc
].
nxt
 = slot[loc].nxt->nxt;

260 
	`‰ì
(
±r
);

265 
±r
 = &
¶Ÿ
[
loc
];

266 
±r
)

268 i‡(
±r
->
addr
 ==áddr)

270 
ﬁd±r
 = 
±r
;

271 
±r
 =Öå->
nxt
;

273 i‡(
±r
)

275 
ﬁd±r
->
nxt
 = 
±r
->nxt;

276 
	`‰ì
 (
±r
);

279 
	`Ârötf
 (
°dîr
, "libcheetah:áddrÇot found in hash_table\n");

281 
	}
}

294 
	$ªf_åì
(
i_öum
, 
md_addr_t
 
addr
)

296 
åì_node
 *
±r
;

297 
t›
, 
addr_above
, 
pos
, 
l°l·
, 
©
;

299 #ifde‡
PERF


300 
comp
 += 1.0;

303 i‡(
roŸ
->
öum
 =
i_öum
)

305 ++
out_°ack
[1];

306 
roŸ
->
öum
 = 
t_íåõs
;

310 
t›
 = 
addr_above
 = 
l°l·
 = 0;

311 
±r
 = 
roŸ
;

312 
±r
)

314 #ifde‡
PERF


315 
comp
 += 1.0;

317 ++
t›
;

318 
p_°ack
[
t›
] = 
±r
;

319 i‡(
±r
->
öum
 > 
i_öum
)

321 
addr_above
 +
±r
->
πwt
 + 1;

322 
l°l·
 = 
t›
;

323 
±r
 =Öå->
l·
;

327 i‡(
±r
->
öum
 =
i_öum
)

329 
addr_above
 +
±r
->
πwt
;

330 ++
out_°ack
[
addr_above
 + 1];

331 
pos
 = 
t›
;

332 i‡(
±r
->
addr
 !=áddr)

333 
	`Ârötf
(
°dîr
,

335 
±r
->
πwt
 -= 1;

336 
±r
 =Öå->
π
;

337 
±r
)

339 ++
t›
;

340 
p_°ack
[
t›
] = 
±r
;

341 
±r
 =Öå->
l·
;

345 
±r
->
πwt
 -= 1;

346 
±r
 =Öå->
π
;

350 i‡(
pos
 =
t›
)

352 i‡(
p_°ack
[
t›
-1]->
l·
 ==Ö_stack[top])

353 
p_°ack
[
t›
-1]->
l·
 =Ö_stack[top]->lft;

355 
p_°ack
[
t›
-1]->
π
 =Ö_°ack[t›]->
l·
;

356 
©
 = 
l°l·
;

360 i‡(
p_°ack
[
t›
-1]->
l·
 ==Ö_stack[top])

361 
p_°ack
[
t›
-1]->
l·
 =Ö_°ack[t›]->
π
;

363 
p_°ack
[
t›
-1]->
π
 =Ö_stack[top]->rt;

365 
p_°ack
[
pos
]->
addr
 =Ö_°ack[
t›
]->addr;

366 
p_°ack
[
pos
]->
öum
 =Ö_°ack[
t›
]->inum;

367 
©
 = 
t›
-1;

369 
©
 > 1)

371 #ifde‡
PERF


372 
no_•œy_°ïs
 += 1.0;

374 
	`•œy
(
©
, 
p_°ack
);

375 
©
 =át - 2;

377 
roŸ
 = 
p_°ack
[1];

379 
p_°ack
[
t›
]->
l·
 = 
roŸ
;

380 
p_°ack
[
t›
]->
π
 = 
NULL
;

381 
p_°ack
[
t›
]->
öum
 = 
t_íåõs
;

382 
p_°ack
[
t›
]->
addr
 =áddr;

383 
p_°ack
[
t›
]->
πwt
 = 0;

384 
roŸ
 = 
p_°ack
[
t›
];

387 
	}
}

399 
	$öô_Á˛ru
()

401 
addr
;

403 
√xt_ßve_time
 = 
SAVE_INTERVAL
;

406 
out_°ack
 = 
	`ˇŒoc
((
MAX_LINES
+
INPUT_BUFFER_SIZE
),  ());

407 i‡(!
out_°ack
)

408 
	`Áèl
("out of virtual memory");

410 
p_°ack
 = 
	`ˇŒoc
(
MAX_LINES
,  (
åì_node
 *));

411 i‡(!
p_°ack
)

412 
	`Áèl
("out of virtual memory");

414 
addr
 = 1;

415 ++
t_íåõs
;

416 
	`hash_lookup_add
(
addr
);

417 
t_íåõs
 = 0;

418 
tŸ_addrs
 = 0;

420 
roŸ
 = 
	`ˇŒoc
(1, (
åì_node
));

421 i‡(!
roŸ
)

422 
	`Áèl
("out of virtual memory");

424 
roŸ
->
öum
 = 
t_íåõs
;

425 
roŸ
->
addr
 =áddr;

426 
roŸ
->
πwt
 = 0;

427 
roŸ
->
l·
 =ÑoŸ->
π
 = 
NULL
;

428 
	}
}

441 
	$±c
(
md_addr_t
 
addr
)

443 
i_öum
;

444 
åì_node
 *
¬ode
;

446 i‡(
tŸ_addrs
 > 
MAX_LINES
)

448 i‡(
size_ex˚eded
 == 0)

450 
	`toggÀ
 (
size_ex˚eded
);

451 
	`Ârötf
(
°dîr
, "libcheetah: distinctÉntriesÜimitÉxceeded\n");

452 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

456 i‡(
t_íåõs
 > 
√xt_ßve_time
)

458 
	`ouçr_Á˛ru
(
°dîr
);

459 
√xt_ßve_time
 +
SAVE_INTERVAL
;

462 ++
t_íåõs
;

463 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

464 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

466 
addr
 >>
L
;

467 i‡(
size_ex˚eded
 == 0)

469 i‡((
i_öum
 = 
	`hash_lookup_add
(
addr
)) != 0)

470 
	`ªf_åì
(
i_öum
, 
addr
);

473 
¬ode
 = 
	`ˇŒoc
(1, (
åì_node
));

474 i‡(!
¬ode
)

475 
	`Áèl
("out of virtual memory");

477 
¬ode
->
öum
 = 
t_íåõs
;

478 
¬ode
->
addr
 =áddr;

479 
¬ode
->
l·
 = 
roŸ
;

480 
¬ode
->
π
 = 
NULL
;

481 
¬ode
->
πwt
 = 0;

482 
roŸ
 = 
¬ode
;

487 i‡((
i_öum
 = 
	`hash_lookup_add
(
addr
)) != 0)

488 
	`ªf_åì
(
i_öum
, 
addr
);

491 
¬ode
 = 
	`dñëe_node
();

492 
	`hash_dñ
(
¬ode
->
addr
);

493 
¬ode
->
öum
 = 
t_íåõs
;

494 
¬ode
->
addr
 =áddr;

495 
¬ode
->
l·
 = 
roŸ
;

496 
¬ode
->
π
 = 
NULL
;

497 
¬ode
->
πwt
 = 0;

498 
roŸ
 = 
¬ode
;

501 
	}
}

	@libcheetah/facopt.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

21 
	~"../ho°.h
"

22 
	~"../misc.h
"

23 
	~"../machöe.h
"

24 
	~"utû.h
"

25 
	~"libchìèh.h
"

28 
	#toggÀ
(
i
Ëif(i==1)i=0;{i=1;}

	)

29 
	#mö
(
a
,
b
Ë(◊<bË?á : b)

	)

31 
	#ONE
 1

	)

32 
	#MAX_PHYSICAL_MEM
 2097152

	)

33 
	#BYTES_PER_LINE
 35

	)

35 
	#HASHNO
 7211

	)

36 
	#TREE_HEIGHT
 50000

	)

37 
	#CACHE_SIZE
 50000

	)

38 
	#MAXINT
 2147483647

	)

40 
	sgroup_desc
 {

41 
åì_node
 *
	mfú°
;

42 
åì_node
 *
	mœ°
;

43 
	mgΩno
;

44 
	mwt
;

45 
group_desc
 *
	mnxt
;

48 
group_desc
 
	ghódgΩ
;

49 
åì_node
 *
	groŸ
,

50 **
	gp_°ack
;

51 
hash_èbÀ
 
	g¶Ÿ
[
HASHNO
];

52 
	g¶Ÿ_Êag
 [
HASHNO
];

53 *
	gout_°ack
;

54 
	gcomp
=0, 
	gcomp_dñ
=0, 
	gcomp_ös
=0,

55 
	gno_•œy_°ïs
, 
	gtŸ_addrs
, 
	ggΩs_∑ssd
;

56 
	gt_íåõs
;

57 
addr_¨øy
[],

58 
time_¨øy
[];

59 
	gihcou¡
;

60 
	ggΩ_˘
=
MAXINT
;

61 
	gsize_ex˚eded
=0;

62 
	glog_tŸ_addrs
;

63 
	g√xt_two_pwr
;

64 
	gunknowns
;

66 
	gCLEAN_INTERVAL
,

67 
	g√xt_˛ón_time
;

69 
L
,

70 
T
;

71 
MAX_CACHE_SIZE
,

72 
MAX_LINES
;

73 
MISS_RATIO_INTERVAL
,

74 
SAVE_INTERVAL
,

75 
P_INTERVAL
;

77 
	g√xt_ßve_time
;

89 
	$Pri‹ôy_Á
(
i
)

91 
öf_cou¡
 = 0;

95 i‡(
time_¨øy
[
i
] > 0)

96  (
MAXINT
 - 
time_¨øy
[
i
]);

97 i‡(
time_¨øy
[
i
] == 0)

98  --
öf_cou¡
;

101 
	`Ârötf
(
°dîr
, "libcheetah:Érror in Priority function\n");

104 
	}
}

117 
	$unk_hash_add_Á
(
md_addr_t
 
addr
, 
gΩno
, 
¥ty
)

119 
loc
;

120 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

122 ++
unknowns
;

124 
loc
 = 
addr
 % 
HASHNO
;

125 i‡(
¶Ÿ_Êag
[
loc
] == 0)

127 
¶Ÿ_Êag
[
loc
] = 1;

128 
¶Ÿ
[
loc
].
addr
 =áddr;

129 
¶Ÿ
[
loc
].
gΩtime
 = 
gΩno
;

130 
¶Ÿ
[
loc
].
¥ty
 =Örty;

131 
¶Ÿ
[
loc
].
nxt
 = 
NULL
;

136 
±r
 = &
¶Ÿ
[
loc
];

137 
±r
)

139 
ﬁd±r
 = 
±r
;

140 i‡(
±r
->
addr
 ==áddr)

142 
	`Ârötf
(
°dîr
, "libcheetah:áddrálready in hashÅable\n");

143 
	`myÂrötf
(
°dîr
,

145 
addr
, 
t_íåõs
, 
±r
->
¥ty
);

146 
	`myÂrötf
(
°dîr
,

148 
¶Ÿ
[
loc
].
addr
, slŸ[loc].
¥ty
);

150 
±r
 =Öå->
nxt
;

152 i‡((
ﬁd±r
->
nxt
 = 
	`UHT_Gë_‰om_‰ì_li°
 ()Ë=
NULL
)

154 
ﬁd±r
->
nxt
 = 
	`ˇŒoc
(1, (
hash_èbÀ
));

155 i‡(!
ﬁd±r
->
nxt
)

156 
	`Áèl
("out of virtual memory");

158 
ﬁd±r
->
nxt
->
addr
 =áddr;

159 
ﬁd±r
->
nxt
->nxà
NULL
;

160 
ﬁd±r
->
nxt
->
gΩtime
 = 
gΩno
;

161 
ﬁd±r
->
nxt
->
¥ty
 =Örty;

164 
	}
}

176 
	$unk_hash_dñ_Á
(
md_addr_t
 
addr
, *
¥ty_±r
)

178 
loc
, 
gΩno
;

179 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

181 
loc
 = 
addr
 % 
HASHNO
;

182 i‡(
¶Ÿ_Êag
[
loc
] == 0)

184 i‡(
¶Ÿ
[
loc
].
addr
 ==áddr)

186 i‡(
¶Ÿ
[
loc
].
nxt
 =
NULL
)

188 
¶Ÿ_Êag
[
loc
] = 0;

189 *
¥ty_±r
 = 
¶Ÿ
[
loc
].
¥ty
;

190  
¶Ÿ
[
loc
].
gΩtime
;

194 
gΩno
 = 
¶Ÿ
[
loc
].
gΩtime
;

195 *
¥ty_±r
 = 
¶Ÿ
[
loc
].
¥ty
;

196 
¶Ÿ
[
loc
].
addr
 = slŸ[loc].
nxt
->addr;

197 
¶Ÿ
[
loc
].
gΩtime
 = slŸ[loc].
nxt
->grptime;

198 
¶Ÿ
[
loc
].
¥ty
 = slŸ[loc].
nxt
->prty;

199 
±r
 = 
¶Ÿ
[
loc
].
nxt
;

200 
¶Ÿ
[
loc
].
nxt
 = slot[loc].nxt->nxt;

201 
	`UHT_Add_to_‰ì_li°
(
±r
);

202  
gΩno
;

207 
±r
 = &
¶Ÿ
[
loc
];

208 
±r
)

210 i‡(
±r
->
addr
 ==áddr)

212 
ﬁd±r
 = 
±r
;

213 
±r
 =Öå->
nxt
;

215 i‡(
±r
)

217 
gΩno
 = 
±r
->
gΩtime
;

218 *
¥ty_±r
 = 
±r
->
¥ty
;

219 
ﬁd±r
->
nxt
 = 
±r
->nxt;

220 
	`UHT_Add_to_‰ì_li°
 (
±r
);

221  
gΩno
;

226 
	}
}

239 
	$Gë_max_¥ty_unknown
()

241 
t›
;

242 
åì_node
 *
±r
;

243 
max_¥ty
 = (5 - 
MAXINT
);

245 
±r
 = 
roŸ
;

246 
t›
 = 0;

247 
±r
 !
NULL
)

249 ++
t›
;

250 
p_°ack
[
t›
] = 
±r
;

251 
±r
 =Öå->
l·
;

253 
t›
 > 0)

255 
±r
 = 
p_°ack
[
t›
];

256 --
t›
;

257 i‡((
±r
->
¥ty
 < 0Ë&& (±r->¥ty > 
max_¥ty
))

258 
max_¥ty
 = 
±r
->
¥ty
;

259 i‡(
±r
->
π
 !
NULL
)

261 
±r
 =Öå->
π
;

262 
±r
 !
NULL
)

264 ++
t›
;

265 
p_°ack
[
t›
] = 
±r
;

266 
±r
 =Öå->
l·
;

270  
max_¥ty
;

271 
	}
}

283 
	$hash_˛ón_Á
()

285 
loc
,

286 
max_¥ty
;

287 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

289 
max_¥ty
 = 
	`Gë_max_¥ty_unknown
();

290 i‡(
max_¥ty
 >= 0)

291 
	`Ârötf
(
°dîr
, "libcheetah: max unknownÖriorityÇon-negative\n");

293 
loc
=0;Üoc<
HASHNO
;Üoc++)

295 (
¶Ÿ_Êag
[
loc
] !0Ë&& (
¶Ÿ
[loc].
¥ty
 > 
max_¥ty
))

297 --
unknowns
;

298 i‡(
¶Ÿ
[
loc
].
nxt
 =
NULL
)

300 
¶Ÿ_Êag
[
loc
] = 0;

305 
¶Ÿ
[
loc
].
addr
 = slŸ[loc].
nxt
->addr;

306 
¶Ÿ
[
loc
].
gΩtime
 = slŸ[loc].
nxt
->grptime;

307 
¶Ÿ
[
loc
].
¥ty
 = slŸ[loc].
nxt
->prty;

308 
±r
 = 
¶Ÿ
[
loc
].
nxt
;

309 
¶Ÿ
[
loc
].
nxt
 = slot[loc].nxt->nxt;

310 
	`UHT_Add_to_‰ì_li°
(
±r
);

313 i‡(
¶Ÿ_Êag
[
loc
] != 0)

315 
±r
 = &
¶Ÿ
[
loc
];

316 
±r
)

318 i‡(
±r
->
¥ty
 > 
max_¥ty
)

320 --
unknowns
;

321 
ﬁd±r
->
nxt
 = 
±r
->nxt;

322 
	`UHT_Add_to_‰ì_li°
(
±r
);

323 
±r
 = 
ﬁd±r
;

325 
ﬁd±r
 = 
±r
;

326 
±r
 =Öå->
nxt
;

330 
	}
}

341 
	$ouçr_Ác›t
(
FILE
 *
fd
)

343 
sum
 = 0, 
i
;

344 
°ack_íd
;

346 
	`Ârötf
(
fd
, "Addªs£†¥o˚s£d : %d\n", 
t_íåõs
);

347 
	`Ârötf
(
fd
, "Löêsizê: %d byã†\n", (
ONE
 << 
L
));

348 
	`Ârötf
(
fd
, "Numbî o‡di°ö˘áddªs£† %d\n", 
tŸ_addrs
);

349 #ifde‡
PERF


350 
	`Ârötf
(
fd
, "TŸÆ Numbî o‡group†∑s£d\t%d\n\n", 
gΩs_∑ssd
);

351 
	`Ârötf
(
fd
, "TŸÆ Numbî o‡•œy sãps\t%d\n\n", 
no_•œy_°ïs
);

352 
	`Ârötf
(
fd
, "Numbî o‡ö£π com∑ris⁄s\t%d\n", 
comp_ös
);

353 
	`Ârötf
(
fd
, "Numbî o‡dñëêcom∑ris⁄s\t%d\n", 
comp_dñ
);

354 
	`Ârötf
(
fd
, "Numbî o‡time†öf_h™dÀ∏ˇŒed\t%d\n", 
ihcou¡
);

357 
	`Ârötf
(
fd
, "Cache size (bytes)\tMiss Ratio\n");

358 
°ack_íd
 = 
	`mö
 (()
tŸ_addrs
, 
MAX_LINES
);

360 
i
 = 1; i <
°ack_íd
; i++)

362 
sum
 +
out_°ack
[
i
];

363 i‡((
i
 % 
MISS_RATIO_INTERVAL
) == 0)

364 
	`Ârötf
(
fd
, "%d\t\t\t%1.6f\n", (
i
 * (
ONE
 << 
L
)),

365 (1.0 - (()
sum
/()
t_íåõs
)));

367 i‡(
°ack_íd
 =
tŸ_addrs
)

368 
	`Ârötf
(
fd
, "MissÑatio is %f foráll bigger caches\n",

369 (1.0 - (()
sum
/()
t_íåõs
)));

370 
	`Ârötf
(
fd
, "\n\n\n");

371 
	}
}

383 
åì_node
 *

384 
	$Lookup_Dñëe_In£π
(
åì_node
 *
dñ_íåy
,

385 
åì_node
 *
ös_íåy
)

387 
åì_node
 *
±r
, *
ö£πed_node
;

388 
t›
, 
pos
, 
©
;

389 
gΩno
, 
¥ty
;

391 
gΩno
 = 
dñ_íåy
->grpno;

392 
¥ty
 = 
dñ_íåy
->prty;

393 i‡(
roŸ
->
gΩno
 == grpno)

395 
	`Ârötf
(
°dîr
, "libcheetah: hitátÑoot\n");

400 
t›
 = 0;

401 
±r
 = 
roŸ
->
l·
;

403 
±r
)

405 ++
comp
;

406 ++
t›
;

407 
p_°ack
[
t›
] = 
±r
;

408 i‡((
±r
->
gΩno
 < grpno)

409 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 >Örty)))

410 
±r
 =Öå->
l·
;

413 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

415 
pos
 = 
t›
;

418 
±r
 =Öå->
π
;

422 
p_°ack
[
pos
]->
gΩno
 = 
ös_íåy
->grpno;

423 
p_°ack
[
pos
]->
¥ty
 = 
ös_íåy
->prty;

424 
p_°ack
[
pos
]->
addr
 = 
ös_íåy
->addr;

425 
ö£πed_node
 = 
p_°ack
[
pos
];

427 
©
 = 
pos
;

428 
©
 > 1)

430 ++
no_•œy_°ïs
;

431 
	`•œy
(
©
, 
p_°ack
);

432 
©
 =át - 2;

434 
roŸ
->
l·
 = 
p_°ack
[1];

435  
ö£πed_node
;

437 
	}
}

447 
åì_node
 *

448 
	$Lookup_¥ev
(
åì_node
 *
íåy
)

450 
åì_node
 *
±r
, *
l°l·_node
;

451 
gΩno
, 
¥ty
;

453 
gΩno
 = 
íåy
->grpno;

454 
¥ty
 = 
íåy
->prty;

455 
±r
 = 
roŸ
;

456 
±r
)

458 ++
comp
;

459 i‡((
±r
->
gΩno
 < grpno)

460 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 >Örty)))

462 
l°l·_node
 = 
±r
;

463 
±r
 =Öå->
l·
;

467 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

469 
±r
 =Öå->
π
;

473 i‡((
±r
 =
NULL
Ë|| (±r->
π
 == NULL))

474  
l°l·_node
;

477 
±r
 =Öå->
π
;

478 
±r
->
l·
 !
NULL
)

479 
±r
 =Öå->
l·
;

480  
±r
;

482 
	}
}

492 
åì_node
 *

493 
	$Lookup_√xt
(
åì_node
 *
íåy
)

495 
åì_node
 *
±r
, *
l°π_node
;

496 
gΩno
, 
¥ty
;

498 
gΩno
 = 
íåy
->grpno;

499 
¥ty
 = 
íåy
->prty;

500 
±r
 = 
roŸ
;

501 
±r
)

503 ++
comp
;

504 i‡((
±r
->
gΩno
 < grpno)

505 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 >Örty)))

506 
±r
 =Öå->
l·
;

509 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

511 
l°π_node
 = 
±r
;

512 
±r
 =Öå->
π
;

516 i‡((
±r
 =
NULL
Ë|| (±r->
l·
 == NULL))

517  
l°π_node
;

520 
±r
 =Öå->
l·
;

521 
±r
->
π
 !
NULL
)

522 
±r
 =Öå->
π
;

523  
±r
;

525 
	}
}

536 
	$In£π_no_BÆ™˚
(
åì_node
 *
ös_node
)

538 
åì_node
 *
±r
,

539 *
ﬁd±r
;

540 
gΩno
,

541 
¥ty
;

542 
l°l·
;

544 
ös_node
->
l·
 = ins_node->
π
 = 
NULL
;

545 i‡(
roŸ
 =
NULL
)

546 
roŸ
 = 
ös_node
;

549 
gΩno
 = 
ös_node
->grpno;

550 
¥ty
 = 
ös_node
->prty;

551 
±r
 = 
roŸ
;

552 
±r
)

554 
ﬁd±r
 = 
±r
;

555 ++
comp_ös
;

556 i‡(
±r
->
gΩno
 < grpno)

558 
±r
 =Öå->
l·
;

559 
l°l·
 = 1;

561 i‡(
±r
->
gΩno
 == grpno)

563 i‡(
±r
->
¥ty
 >Örty)

565 
±r
 =Öå->
l·
;

566 
l°l·
 = 1;

568 i‡(
±r
->
¥ty
 <Örty)

570 
±r
 =Öå->
π
;

571 
l°l·
 = 0;

575 
	`Ârötf
(
°dîr
, "libcheetah:Érror in insert\n");

581 
±r
 =Öå->
π
;

582 
l°l·
 = 0;

585 i‡(
l°l·
)

586 
ﬁd±r
->
l·
 = 
ös_node
;

588 
ﬁd±r
->
π
 = 
ös_node
;

590 
	}
}

601 
	$In£π_™d_BÆ™˚
(
åì_node
 *
ös_node
)

603 
åì_node
 *
±r
,

604 *
ﬁd±r
;

605 
l°l·
,

606 
gΩno
,

607 
¥ty
,

608 
t›
,

609 
©
;

611 
ös_node
->
l·
 = ins_node->
π
 = 
NULL
;

612 i‡(
roŸ
 =
NULL
)

613 
roŸ
 = 
ös_node
;

616 i‡(
roŸ
->
l·
 =
NULL
)

617 
roŸ
->
l·
 = 
ös_node
;

620 
gΩno
 = 
ös_node
->grpno;

621 
¥ty
 = 
ös_node
->prty;

622 
±r
 = 
roŸ
->
l·
;

623 
t›
 = 0;

624 
±r
)

626 ++
t›
;

627 
p_°ack
[
t›
] = 
±r
;

628 
ﬁd±r
 = 
±r
;

629 ++
comp_ös
;

630 i‡((
±r
->
gΩno
 < grpno)

631 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 >Örty)))

633 
±r
 =Öå->
l·
;

634 
l°l·
 = 1;

638 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

640 
	`Ârötf
(
°dîr
, "libcheetah:Érror in Insert\n");

643 
±r
 =Öå->
π
;

644 
l°l·
 = 0;

647 ++
t›
;

648 
p_°ack
[
t›
] = 
ös_node
;

649 i‡(
l°l·
)

650 
ﬁd±r
->
l·
 = 
ös_node
;

652 
ﬁd±r
->
π
 = 
ös_node
;

655 i‡(
t›
 > 
log_tŸ_addrs
)

657 
©
 = 
t›
;

658 
©
 > 1)

660 ++
no_•œy_°ïs
;

661 
	`•œy
(
©
, 
p_°ack
);

662 
©
 =át - 2;

664 
roŸ
->
l·
 = 
p_°ack
[1];

668 
	}
}

681 
	$In£π
(
åì_node
 *
ös_node
)

683 
ö£π_Êag
 = 0;

685 i‡(
ö£π_Êag
)

686 
	`In£π_™d_BÆ™˚
(
ös_node
);

688 
	`In£π_no_BÆ™˚
(
ös_node
);

689 
	`toggÀ
(
ö£π_Êag
);

690 
	}
}

701 
åì_node
 *

702 
	$Dñëe
(
åì_node
 *
íåy
, åì_nodê**
¥ev_íåy
)

704 
gΩno
,

705 
¥ty
;

706 
åì_node
 *
±r
,

707 *
ﬁd±r_dn
,

708 *
ﬁd±r_mn
,

709 *
dn
 = 
NULL
,

710 *
mn
,

711 *
l°l·_node
;

712 
l°l·_dn
,

713 
l°l·_mn
;

715 
gΩno
 = 
íåy
->grpno;

716 
¥ty
 = 
íåy
->prty;

717 
±r
 = 
roŸ
;

718 
±r
)

720 ++
comp_dñ
;

721 i‡((
±r
->
gΩno
 < grpno)

722 || ((
±r
->
gΩno
 =gΩnÿË&& (±r->
¥ty
 >Örty)))

724 
ﬁd±r_dn
 = 
±r
;

725 
l°l·_node
 = 
±r
;

726 
±r
 =Öå->
l·
;

727 
l°l·_dn
 = 1;

731 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

733 
dn
 = 
±r
;

736 
ﬁd±r_dn
 = 
±r
;

737 
±r
 =Öå->
π
;

738 
l°l·_dn
 = 0;

741 i‡(
dn
 =
NULL
)

743 
	`Ârötf
(
°dîr
, "libcheetah:Érror in delete\n");

748 i‡(
±r
->
π
 =
NULL
)

750 i‡(
±r
 =
roŸ
)

751 
roŸ
 = 
±r
->
l·
;

752 i‡(
l°l·_dn
)

753 
ﬁd±r_dn
->
l·
 = 
±r
->lft;

755 
ﬁd±r_dn
->
π
 = 
±r
->
l·
;

756 *
¥ev_íåy
 = 
l°l·_node
;

758 i‡(
±r
->
l·
 =
NULL
)

760 i‡(
±r
 =
roŸ
)

761 
roŸ
 = 
±r
->
π
;

762 i‡(
l°l·_dn
)

763 
ﬁd±r_dn
->
l·
 = 
±r
->
π
;

765 
ﬁd±r_dn
->
π
 = 
±r
->rt;

766 
±r
 =Öå->
π
;

767 
±r
->
l·
 !
NULL
)

768 
±r
 =Öå->
l·
;

769 *
¥ev_íåy
 = 
±r
;

773 
ﬁd±r_mn
 = 
±r
;

774 
±r
 =Öå->
π
;

775 
l°l·_mn
 = 0;

776 
±r
->
l·
 !
NULL
)

778 
ﬁd±r_mn
 = 
±r
;

779 
±r
 =Öå->
l·
;

780 
l°l·_mn
 = 1;

782 
mn
 = 
±r
;

783 *
¥ev_íåy
 = 
mn
;

784 i‡(
l°l·_mn
)

785 
ﬁd±r_mn
->
l·
 = 
mn
->
π
;

787 
ﬁd±r_mn
->
π
 = 
mn
->rt;

788 
mn
->
l·
 = 
dn
->lft;

789 
mn
->
π
 = 
dn
->rt;

790 i‡(
dn
 =
roŸ
)

791 
roŸ
 = 
mn
;

792 i‡(
l°l·_dn
)

793 
ﬁd±r_dn
->
l·
 = 
mn
;

795 
ﬁd±r_dn
->
π
 = 
mn
;

797  
dn
;

799 
	}
}

817 
	$¥o˚ss_groups
(
md_addr_t
 
addr
,

818 
¥i‹ôy
)

820 
dïth
;

821 
group_desc
 *
gΩ±r
,

822 *
ﬁdgΩ±r
,

823 *
√wgΩ±r
;

824 
åì_node
 *
¥ev_íåy
, *
gΩ£c⁄d
;

825 
åì_node
 
dummy_f‹_dñ_löe
;

827 
åì_node
 *
dñ_löe
 = &
dummy_f‹_dñ_löe
;

830 i‡(
hódgΩ
.
fú°
->
addr
 ==áddr)

832 ++ 
out_°ack
[1];

833 
hódgΩ
.
fú°
->
¥ty
 = 
¥i‹ôy
;

834 
hódgΩ
.
fú°
->
addr
 =áddr;

839 
gΩ±r
 = 
hódgΩ
.
nxt
;

840 ++
gΩs_∑ssd
;

843 i‡(
hódgΩ
.
fú°
->
¥ty
 < 0)

846 i‡(
hódgΩ
.
nxt
->
fú°
->
addr
 ==áddr)

847 
	`unk_hash_add_Á
(
hódgΩ
.
fú°
->
addr
,

848 (
hódgΩ
.
nxt
->
gΩno
-1), hódgΩ.
fú°
->
¥ty
);

850 
	`unk_hash_add_Á
(
hódgΩ
.
fú°
->
addr
,

851 
hódgΩ
.
nxt
->
gΩno
, hódgΩ.
fú°
->
¥ty
);

854 i‡(
gΩ±r
->
fú°
->
addr
 ==áddr)

856 ++
out_°ack
[2];

858 i‡(
gΩ±r
->
wt
 == 1)

861 
gΩ±r
->
fú°
->
addr
 = 
hódgΩ
.first->addr;

862 
gΩ±r
->
fú°
->
¥ty
 = 
hódgΩ
.first->prty;

866 
gΩ£c⁄d
 = 
	`Lookup_√xt
 (
gΩ±r
->
fú°
);

867 i‡(
gΩ£c⁄d
->
gΩno
 !
gΩ±r
->grpno)

868 
	`Ârötf
(
°dîr
, "libcheetah: inconsistentÇextÉntry\n");

869 i‡(
gΩ£c⁄d
->
¥ty
 < 
hódgΩ
.
fú°
->prty)

872 
gΩ±r
->
fú°
->
addr
 = 
hódgΩ
.first->addr;

873 
gΩ±r
->
fú°
->
¥ty
 = 
hódgΩ
.first->prty;

877 --
gΩ_˘
;

880 
√wgΩ±r
 = 
	`ˇŒoc
(1,  (
group_desc
)) ;

881 i‡(!
√wgΩ±r
)

882 
	`Áèl
("out of virtual memory");

884 
√wgΩ±r
->
fú°
 = 
gΩ±r
->first;

885 
√wgΩ±r
->
œ°
 = 
gΩ±r
->
fú°
;

886 
√wgΩ±r
->
gΩno
 = 
gΩ_˘
;

887 
√wgΩ±r
->
wt
 = 1;

888 
√wgΩ±r
->
fú°
->
addr
 = 
hódgΩ
.first->addr;

889 
√wgΩ±r
->
fú°
->
¥ty
 = 
hódgΩ
.first->prty;

890 
√wgΩ±r
->
fú°
->
gΩno
 = 
gΩ_˘
;

891 
√wgΩ±r
->
nxt
 = 
gΩ±r
;

892 
hódgΩ
.
nxt
 = 
√wgΩ±r
;

895 
gΩ±r
->
fú°
 = 
gΩ£c⁄d
;

896 
gΩ±r
->
wt
 -= 1;

899 
hódgΩ
.
fú°
->
addr
 =áddr;

900 
hódgΩ
.
fú°
->
¥ty
 = 
¥i‹ôy
;

905 
dñ_löe
->
¥ty
 = 
hódgΩ
.
fú°
->prty;

906 
dñ_löe
->
addr
 = 
hódgΩ
.
fú°
->addr;

907 
hódgΩ
.
fú°
->
addr
 =áddr;

908 
hódgΩ
.
fú°
->
¥ty
 = 
¥i‹ôy
;

910 i‡(
dñ_löe
->
¥ty
 > 
gΩ±r
->
œ°
->prty)

913 
dñ_löe
->
gΩno
 = 
gΩ±r
->grpno;

914 
	`In£π
 (
dñ_löe
);

915 i‡(
dñ_löe
->
¥ty
 > 
gΩ±r
->
fú°
->prty)

916 
gΩ±r
->
fú°
 = 
dñ_löe
;

917 
dñ_löe
 = 
	`Dñëe
 (
gΩ±r
->
œ°
, &
¥ev_íåy
);

918 
gΩ±r
->
œ°
 = 
¥ev_íåy
;

919 i‡(
gΩ±r
->
œ°
->
gΩno
 != grpptr->grpno)

920 
	`Ârötf
(
°dîr
, "libcheetah: inconsistentÖrevÉntry\n");

923 
ﬁdgΩ±r
 = 
gΩ±r
;

924 
dïth
 = 
gΩ±r
->
wt
 + 1;

925 
gΩ±r
 = gΩ±r->
nxt
;

927 
gΩ±r
 !
NULL
)

929 ++
gΩs_∑ssd
;

930 i‡(
gΩ±r
->
fú°
->
addr
 ==áddr)

933 i‡(()(
dïth
+1Ë<
MAX_LINES
)

934 ++
out_°ack
[
dïth
+1];

936 
dñ_löe
->
gΩno
 = 
ﬁdgΩ±r
->grpno;

937 
ﬁdgΩ±r
->
œ°
 =

938 
	`Lookup_Dñëe_In£π
(
gΩ±r
->
fú°
, 
dñ_löe
);

939 
ﬁdgΩ±r
->
wt
 += 1;

941 i‡(
gΩ±r
->
fú°
 =gΩ±r->
œ°
)

944 
ﬁdgΩ±r
->
nxt
 = 
gΩ±r
->nxt;

945 
	`‰ì
 (
gΩ±r
);

946 
gΩ±r
 = 
ﬁdgΩ±r
;

951 
gΩ±r
->
fú°
 = 
	`Lookup_√xt
(grpptr->first);

952 
gΩ±r
->
wt
 -= 1;

953 i‡(
gΩ±r
->
fú°
->
gΩno
 != grpptr->grpno)

954 
	`Ârötf
(
°dîr
,

959 i‡(
dñ_löe
->
¥ty
 > 
gΩ±r
->
œ°
->prty)

962 
dñ_löe
->
gΩno
 = 
gΩ±r
->grpno;

963 
	`In£π
 (
dñ_löe
);

964 i‡(
dñ_löe
->
¥ty
 > 
gΩ±r
->
fú°
->prty)

965 
gΩ±r
->
fú°
 = 
dñ_löe
;

966 
dñ_löe
 = 
	`Dñëe
 (
gΩ±r
->
œ°
, &
¥ev_íåy
);

968 
gΩ±r
->
œ°
 = 
¥ev_íåy
;

969 i‡(
gΩ±r
->
œ°
->
gΩno
 != grpptr->grpno)

970 
	`Ârötf
(
°dîr
, "libcheetah: inconsistentÖrevÉntry\n");

972 
ﬁdgΩ±r
 = 
gΩ±r
;

973 
dïth
 +
gΩ±r
->
wt
;

974 
gΩ±r
 = gΩ±r->
nxt
;

978 i‡(
gΩ±r
 =
NULL
)

985 i‡(
size_ex˚eded
)

987 i‡(
dñ_löe
->
¥ty
 < 0)

988 
	`·_hash_dñ
(
dñ_löe
->
addr
);

992 
dñ_löe
->
gΩno
 = 
ﬁdgΩ±r
->grpno;

993 
	`In£π
(
dñ_löe
);

994 
ﬁdgΩ±r
->
œ°
 = 
dñ_löe
;

995 
ﬁdgΩ±r
->
wt
 += 1;

996 
dñ_löe
 = 
	`ˇŒoc
(1, (
åì_node
));

997 i‡(!
dñ_löe
)

998 
	`Áèl
("out of virtual memory");

1005 
	}
}

1019 
	$°ack_¥oc_Á
(
°¨t
,

1020 
íd
)

1022 
i
, 
l
;

1023 
addr
;

1024 
¥i‹ôy
, 
√w_addrs
;

1025 
åì_node
 *
¬ode
;

1027 i‡(
t_íåõs
 == 0)

1029 
roŸ
 = 
	`ˇŒoc
(1, (
åì_node
));

1030 i‡(!
roŸ
)

1031 
	`Áèl
("out of virtual memory");

1033 
roŸ
->
π
 =ÑoŸ->
l·
 = 
NULL
;

1034 
roŸ
->
¥ty
 = 
	`Pri‹ôy_Á
(0);

1035 
roŸ
->
addr
 = 
addr_¨øy
[0];

1036 
roŸ
->
gΩno
 = 0;

1038 
l
 = 0;

1039 (
addr_¨øy
[
l
] =addr_¨øy[0]Ë&& (»< 
íd
))

1040 ++
l
;

1042 
¬ode
 = 
	`ˇŒoc
(1, (
åì_node
));

1043 i‡(!
¬ode
)

1044 
	`Áèl
("out of virtual memory");

1046 
¬ode
->
π
 =Çnode->
l·
 = 
NULL
;

1047 
¥i‹ôy
 = 
	`Pri‹ôy_Á
(
l
-1);

1048 
¬ode
->
¥ty
 = 
¥i‹ôy
;

1049 
¬ode
->
addr
 = 
roŸ
->addr;

1050 i‡(
¬ode
->
¥ty
 < 0)

1051 
	`unk_hash_add_Á
(
addr_¨øy
[
l
-1], 
MAXINT
, 
¥i‹ôy
);

1052 
¬ode
->
gΩno
 = 
MAXINT
;

1053 
¥i‹ôy
 = 
	`Pri‹ôy_Á
(
l
);

1054 
roŸ
->
¥ty
 = 
¥i‹ôy
;

1055 
roŸ
->
addr
 = 
addr_¨øy
[
l
];

1056 
roŸ
->
l·
 = 
¬ode
;

1057 
hódgΩ
.
fú°
 = hódgΩ.
œ°
 = 
roŸ
;

1058 
hódgΩ
.
gΩno
 = 0;

1060 
hódgΩ
.
nxt
 = 
	`ˇŒoc
(1,  (
group_desc
));

1061 i‡(!
hódgΩ
.
nxt
)

1062 
	`Áèl
("out of virtual memory");

1064 
hódgΩ
.
nxt
->
fú°
 = 
¬ode
;

1065 
hódgΩ
.
nxt
->
œ°
 = 
¬ode
;

1066 
hódgΩ
.
nxt
->
gΩno
 = 
MAXINT
;

1067 
hódgΩ
.
nxt
->
wt
 = 1;

1068 
hódgΩ
.
nxt
->nxà
NULL
;

1070 
out_°ack
[1] +
l
-1;

1071 
tŸ_addrs
 = 2;

1072 
log_tŸ_addrs
 = 1;

1073 
√xt_two_pwr
 = 4;

1074 
i
=0; i<=
l
; i++)

1076 
addr_¨øy
[
i
] = 0;

1077 
time_¨øy
[
i
] = 0;

1079 
°¨t
 = 
l
+1;

1080 
t_íåõs
 = 
l
+1;

1083 
l
=
°¨t
;Ü<
íd
;Ü++)

1085 ++
t_íåõs
;

1086 
addr
 = 
addr_¨øy
[
l
];

1087 i‡(
t_íåõs
 > 
√xt_ßve_time
)

1089 
	`ouçr_Ác›t
(
°dîr
);

1090 
√xt_ßve_time
 +
SAVE_INTERVAL
;

1092 i‡(
t_íåõs
 > 
√xt_˛ón_time
)

1094 i‡(
size_ex˚eded
)

1095 
	`hash_˛ón_Á
();

1096 
√xt_˛ón_time
 +
CLEAN_INTERVAL
;

1099 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

1100 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

1102 
¥i‹ôy
 = 
	`Pri‹ôy_Á
(
l
);

1104 i‡((
√w_addrs
 = 
	`¥o˚ss_groups
(
addr
, 
¥i‹ôy
)) == 1)

1106 ++
tŸ_addrs
;

1107 i‡(()
tŸ_addrs
 > 
√xt_two_pwr
)

1109 ++
log_tŸ_addrs
;

1110 
√xt_two_pwr
 *= 2;

1112 i‡(
size_ex˚eded
 == 0)

1114 i‡(()
tŸ_addrs
 > 
MAX_LINES
)

1116 
	`toggÀ
(
size_ex˚eded
);

1117 
	`Ârötf
(
°dîr
,

1120 
t_íåõs
);

1124 
addr_¨øy
[
l
] = 0;

1125 
time_¨øy
[
l
] = 0;

1126 i‡(
t_íåõs
 > 
T
)

1131 
	}
}

1143 
	$öô_Ác›t
()

1145 
CLEAN_INTERVAL
 = 10000000;

1146 
√xt_ßve_time
 = 
SAVE_INTERVAL
;

1149 
out_°ack
 = 
	`ˇŒoc
(
MAX_LINES
,  ());

1150 i‡(!
out_°ack
)

1151 
	`Áèl
("out of virtual memory");

1153 
p_°ack
 = 
	`ˇŒoc
((
MAX_LINES
+1000),  (
åì_node
 *));

1154 i‡(!
p_°ack
)

1155 
	`Áèl
("out of virtual memory");

1157 
√xt_˛ón_time
 = 
CLEAN_INTERVAL
;

1158 
	}
}

1182 
åì_node
 *

1183 
	$Gë_fú°_unknown
(
åì_node
 *
íåy
, 
£¨ch_¥ty
, 
dñ_¥ty
)

1185 
gΩno
, 
¥ty
, 
t›
;

1186 
åì_node
 *
±r
;

1188 
gΩno
 = 
íåy
->grpno;

1189 
¥ty
 = 
íåy
->prty;

1190 
±r
 = 
roŸ
;

1191 
t›
 = 0;

1192 
±r
)

1194 i‡((
±r
->
gΩno
 < grpno)

1195 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 >Örty)))

1197 ++
t›
;

1198 
p_°ack
[
t›
] = 
±r
;

1199 
±r
 =Öå->
l·
;

1203 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 ==Örty))

1205 ++
t›
;

1206 
p_°ack
[
t›
] = 
±r
;

1209 
±r
 =Öå->
π
;

1213 
t›
 > 0)

1215 
±r
 = 
p_°ack
[
t›
];

1216 --
t›
;

1219 i‡((
±r
->
¥ty
 > 0Ë|| (±r->
gΩno
 != grpno))

1220  
NULL
;

1221 i‡((
±r
->
¥ty
 =
£¨ch_¥ty
)

1222 || ((
±r
->
¥ty
 < 
dñ_¥ty
Ë&& (±r->¥ty > 
£¨ch_¥ty
)))

1223  
±r
;

1225 
±r
 =Öå->
π
;

1226 
±r
)

1228 ++
t›
;

1229 
p_°ack
[
t›
] = 
±r
;

1230 
±r
 =Öå->
l·
;

1235  
NULL
;

1236 
	}
}

1247 
åì_node
 *

1248 
	$Gë_fú°_unknown_wobackög
(
gΩno
, 
£¨ch_¥ty
, 
dñ_¥ty
)

1250 
åì_node
 *
±r
, *
l°l·_node
;

1252 
±r
 = 
roŸ
;

1253 
±r
)

1255 ++
comp
;

1256 i‡((
±r
->
gΩno
 < grpno)

1257 || ((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 > 
£¨ch_¥ty
)))

1259 
l°l·_node
 = 
±r
;

1260 
±r
 =Öå->
l·
;

1264 i‡((
±r
->
gΩno
 =gΩnoË&& (±r->
¥ty
 =
£¨ch_¥ty
))

1265  
±r
;

1266 
±r
 =Öå->
π
;

1270 i‡((
l°l·_node
->
gΩno
 =gΩnoË&& (l°l·_node->
¥ty
 < 
dñ_¥ty
))

1271  
l°l·_node
;

1273  
NULL
;

1274 
	}
}

1287 
	$öf_h™dÀr_Á
(
md_addr_t
 
addr
, 
cur_time
)

1289 
åì_node
 *
löe_to_be_ös
,

1290 *
löe_to_be_dñ
,

1291 *
¥ev_íåy
;

1292 
group_desc
 *
gΩ±r
;

1293 
addr_gΩtime
,

1294 
addr_¥ty
;

1295 
¥i‹ôy
,

1296 
dñ_¥ty
;

1297 
åì_node
 
dummy_f‹_dñ_löe
;

1299 
åì_node
 *
dñ_löe
 = &
dummy_f‹_dñ_löe
;

1301 ++
ihcou¡
;

1303 
¥i‹ôy
 = 
MAXINT
 - 
cur_time
;

1305 i‡((
hódgΩ
.
fú°
 !
NULL
Ë&& (hódgΩ.fú°->
addr
 ==áddr))

1307 i‡(
hódgΩ
.
fú°
->
¥ty
 > 0)

1308 
	`Ârötf
(
°dîr
, "libcheetah: unknown has > 0Örty\n");

1310 
hódgΩ
.
fú°
->
¥ty
 = 
¥i‹ôy
;

1314 
addr_gΩtime
 = 
	`unk_hash_dñ_Á
 (
addr
, &
addr_¥ty
);

1315 i‡(
addr_gΩtime
 == 0)

1318 --
unknowns
;

1320 
gΩ±r
 = 
hódgΩ
.
nxt
;

1326 
gΩ±r
)

1328 i‡(
gΩ±r
->
gΩno
 < 
addr_gΩtime
)

1329 
gΩ±r
 = gΩ±r->
nxt
;

1337 
gΩ±r
)

1339 i‡(
gΩ±r
->
œ°
->
¥ty
 > 0)

1340 
gΩ±r
 = gΩ±r->
nxt
;

1348 
löe_to_be_ös
 = 
dñ_löe
;

1349 
löe_to_be_ös
->
¥ty
 = 
¥i‹ôy
;

1350 
löe_to_be_ös
->
addr
 =áddr;

1352 
dñ_¥ty
 = 0;

1353 
gΩ±r
)

1355 
löe_to_be_dñ
 =

1356 
	`Gë_fú°_unknown_wobackög
 (
gΩ±r
->
gΩno
, 
addr_¥ty
, 
dñ_¥ty
);

1357 i‡(
löe_to_be_dñ
 !
NULL
)

1359 
löe_to_be_ös
->
gΩno
 = 
gΩ±r
->grpno;

1360 
	`In£π
(
löe_to_be_ös
);

1361 i‡(
löe_to_be_ös
->
¥ty
 > 
gΩ±r
->
fú°
->prty)

1362 
gΩ±r
->
fú°
 = 
löe_to_be_ös
;

1363 
löe_to_be_ös
 = 
	`Dñëe
(
löe_to_be_dñ
, &
¥ev_íåy
);

1364 i‡(
gΩ±r
->
œ°
 =
löe_to_be_dñ
)

1365 
gΩ±r
->
œ°
 = 
¥ev_íåy
;

1366 i‡(
löe_to_be_dñ
->
¥ty
 =
addr_¥ty
)

1368 
dñ_¥ty
 = 
löe_to_be_ös
->
¥ty
;

1370 
gΩ±r
 = gΩ±r->
nxt
;

1372 
dñ_löe
 = 
löe_to_be_ös
;

1376 
	}
}

	@libcheetah/libcheetah.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

20 
	~"../ho°.h
"

21 
	~"../misc.h
"

22 
	~"../machöe.h
"

23 
	~"utû.h
"

24 
	~"libchìèh.h
"

26 
	#NOT
 !

	)

27 
	#ONE
 1U

	)

28 
	#MAX_PHYSICAL_MEM
 8388608

	)

30 
	#LRU
 0

	)

31 
	#OPT
 1

	)

32 
	#SA
 2

	)

33 
	#FA
 3

	)

34 
	#DM
 4

	)

35 
	#BASIC
 5

	)

36 
	#PIXIE
 6

	)

37 
	#DIN
 7

	)

39 
	#BYTES_PER_LINE
 35

	)

41 
	gN
;

42 
	gB
;

43 
	gA
;

44 
	gL
;

45 
	gC
;

46 
	gT
;

47 
	gP_INTERVAL
;

49 
	gMAX_CACHE_SIZE
;

50 
	gMAX_LINES
;

51 
	gMISS_RATIO_INTERVAL
;

52 
	gSAVE_INTERVAL
;

55 *
	gout°rögs
[] = { "LRU",

82 
	gåa˚_c⁄fig
;

85 
	gª∂
;

88 
	göôülized
 = 0;

92 
	$chìèh_öô
(
¨gc
, **
¨gv
)

94 
i
;

96 i‡(
öôülized
)

98 
	`Ârötf
(
°dîr
, "libcheetah:álready initialized\n");

99 
	`exô
(1);

101 
öôülized
 = 1;

104 
A
 = 7;

105 
B
 = 14;

106 
L
 = 4;

107 
N
 = 1;

108 
C
 = 16;

109 
T
 = 0x7fffffff;

110 
MAX_CACHE_SIZE
 = 524288;

111 
MISS_RATIO_INTERVAL
 = 512;

112 
P_INTERVAL
 = 0x7fffffff;

113 
SAVE_INTERVAL
 = 0x7fffffff;

114 
åa˚_c⁄fig
 = 
SA
;

115 
ª∂
 = 
LRU
;

118 
i
=0; i < 
¨gc
; i++)

120 i‡(
¨gv
[
i
][0] != '-')

122 
	`Ârötf
(
°dîr
, "libchìèh: iŒegÆárgumíà`%s'\n", 
¨gv
[
i
]);

123 
	`exô
(1);

127 
¨gv
[
i
][1])

131 i‡((
NOT
 
	`°rcmp
 ("Ãu", &
¨gv
[
i
][2]))

132 || (
NOT
 
	`°rcmp
 ("LRU", &
¨gv
[
i
][2])))

133 
ª∂
 = 
LRU
;

134 i‡((
NOT
 
	`°rcmp
 ("›t", &
¨gv
[
i
][2]))

135 || (
NOT
 
	`°rcmp
 ("OPT", &
¨gv
[
i
][2])))

137 
ª∂
 = 
OPT
;

141 
	`Ârötf
 (
°dîr
,

144 &
¨gv
[
i
][2]);

145 
	`exô
 (1);

151 i‡((
NOT
 
	`°rcmp
 ("Á", &
¨gv
[
i
][2]))

152 || (
NOT
 
	`°rcmp
 ("FA", &
¨gv
[
i
][2])))

153 
åa˚_c⁄fig
 = 
FA
;

154 i‡((
NOT
 
	`°rcmp
 ("ß", &
¨gv
[
i
][2]))

155 || (
NOT
 
	`°rcmp
 ("SA", &
¨gv
[
i
][2])))

156 
åa˚_c⁄fig
 = 
SA
;

157 i‡((
NOT
 
	`°rcmp
 ("dm", &
¨gv
[
i
][2]))

158 || (
NOT
 
	`°rcmp
 ("DM", &
¨gv
[
i
][2])))

159 
åa˚_c⁄fig
 = 
DM
;

162 
	`Ârötf
 (
°dîr
,

164 &
¨gv
[
i
][2]);

165 
	`exô
 (1);

171 
A
 = 
	`©oi
(&
¨gv
[
i
][2]);

176 
B
 = 
	`©oi
(&
¨gv
[
i
][2]);

181 
L
 = 
	`©oi
(&
¨gv
[
i
][2]);

186 
N
 = 
	`©oi
(&
¨gv
[
i
][2]);

191 
MISS_RATIO_INTERVAL
 = 
	`©oi
(&
¨gv
[
i
][2]);

196 
MAX_CACHE_SIZE
 = 
	`©oi
(&
¨gv
[
i
][2]);

200 
C
 = 
	`©oi
(&
¨gv
[
i
][2]);

205 
T
 = 
	`©oi
(&
¨gv
[
i
][2]);

211 
SAVE_INTERVAL
 = 
	`©oi
(&
¨gv
[
i
][2]);

217 
P_INTERVAL
 = 
	`©oi
(&
¨gv
[
i
][2]);

222 
	`Ârötf
(
°dîr
, "libcheetah: `-%c' isÇotá valid option\n",

223 
¨gv
[
i
][1]);

229 
åa˚_c⁄fig
)

231 
SA
:

232 i‡(
A
 > 
B
)

234 
	`Ârötf
(
°dîr
, "libcheetah: minÇumber of sets greaterÅhan max\n");

235 
	`exô
 (1);

238 i‡(
ª∂
 =
LRU
)

239 
	`öô_ß˛ru
();

240 i‡(
ª∂
 =
OPT
)

242 
	`öô_ßc›t
();

243 
	`öô_›çp
();

247 
FA
:

248 i‡(()(
ONE
 << 
L
Ë> 
MISS_RATIO_INTERVAL
)

250 
	`Ârötf
(
°dîr
, "libcheetah:Üine size > output interval!!\n");

251 
	`Ârötf
(
°dîr
,

253 
MISS_RATIO_INTERVAL
 = 1;

256 
MISS_RATIO_INTERVAL
 = MISS_RATIO_INTERVAL/(
ONE
 << 
L
);

258 i‡(
MAX_CACHE_SIZE
 < (
ONE
 << 
L
))

260 
	`Ârötf
(
°dîr
,

262 
	`exô
 (1);

266 
MAX_LINES
 = 
MAX_CACHE_SIZE
 / (
ONE
 << 
L
);

267 i‡((
MAX_LINES
*
BYTES_PER_LINE
Ë> 
MAX_PHYSICAL_MEM
)

268 
	`Ârötf
(
°dîr
,

272 i‡(
ª∂
 =
LRU
)

273 
	`öô_Á˛ru
();

274 i‡(
ª∂
 =
OPT
)

276 
	`öô_Ác›t
();

277 
	`öô_›çp
();

281 
DM
:

282 i‡(
A
 > 
B
)

284 
	`Ârötf
 (
°dîr
,

286 
	`exô
 (1);

288 i‡(
B
 > 
C
)

290 
	`Ârötf
 (
°dîr
,

292 
	`exô
 (1);

295 
	`öô_dmvl
();

299 
	`Ârötf
 (
°dîr
, "libcheetah: configuration wrongly set\n");

300 
	`exô
 (1);

302 
	}
}

306 
	$chìèh_c⁄fig
(
FILE
 *
fd
)

308 
	`Ârötf
(
fd
, "\nlibcheetah: ** simulationÖarameters **\n");

309 i‡(
åa˚_c⁄fig
 !
DM
)

310 
	`Ârötf
(
fd
, "libcheetah: %s %s caches being simulated\n",

311 
out°rögs
[
ª∂
], out°rögs[
åa˚_c⁄fig
]);

313 
	`Ârötf
(
fd
, "libcheetah: %s caches being simulated\n",

314 
out°rögs
[
åa˚_c⁄fig
]);

316 
åa˚_c⁄fig
)

318 
SA
:

319 
	`Ârötf
(
fd
, "libcheetah:Çumber of sets from %dÅo %d\n",

320 (
ONE
 << 
A
), (ONE << 
B
));

321 
	`Ârötf
(
fd
, "libchìèh: maximumássocütivôy i†%d\n", (
ONE
 << 
N
));

322 
	`Ârötf
(
fd
, "libchìèh:Üöêsizêi†%d byãs\n", (
ONE
 << 
L
));

325 
FA
:

326 
	`Ârötf
(
fd
, "libchìèh: max cachêsizêi†%d byãs\n", 
MAX_CACHE_SIZE
);

327 
	`Ârötf
(
fd
, "libchìèh:Üöêsizêi†%d byãs\n", (
ONE
 << 
L
));

330 
DM
:

331 
	`Ârötf
(
fd
, "libchìèh: cachêsizêi†%d byãs\n", (
ONE
 << 
C
));

332 
	`Ârötf
(
fd
, "libcheetah:Üine sizes from %dÅo %d bytes\n",

333 (
ONE
 << 
A
), (ONE << 
B
));

337 
	`Ârötf
(
°dîr
, "libcheetah: configuration wrongly set.\n");

338 
	`exô
 (1);

340 
	}
}

344 
	$chìèh_ac˚ss
(
md_addr_t
 
addr
)

346 
åa˚_c⁄fig
)

348 
SA
:

349 i‡(
ª∂
 =
LRU
)

350 
	`ß˙mul_wﬂº
(
addr
);

351 i‡(
ª∂
 =
OPT
)

352 
	`›çp
(
addr
, 
L
, 
°ack_¥oc_ß
, 
öf_h™dÀr_ß
);

355 
FA
:

356 i‡(
ª∂
 =
LRU
)

357 
	`±c
(
addr
);

358 i‡(
ª∂
 =
OPT
)

359 
	`›çp
(
addr
, 
L
, 
°ack_¥oc_Á
, 
öf_h™dÀr_Á
);

362 
DM
:

363 
	`dmvl
(
addr
);

367 
	`Ârötf
 (
°dîr
, "libcheetah: configuration wrongly set\n");

368 
	`exô
 (1);

370 
	}
}

374 
	$chìèh_°©s
(
FILE
 *
fd
,

375 
mid
)

377 
	`Ârötf
(
fd
, "\nlibcheetah: **Énd of simulation **\n");

379 
åa˚_c⁄fig
)

381 
SA
:

382 i‡(
ª∂
 =
LRU
)

383 
	`ouçr_ß˛ru
(
fd
);

384 i‡(
ª∂
 =
OPT
)

386 i‡(!
mid
Ë
	`ãrm_›çp
(
°ack_¥oc_ß
);

387 
	`ouçr_ßc›t
(
fd
);

391 
FA
:

392 i‡(
ª∂
 =
LRU
)

393 
	`ouçr_Á˛ru
(
fd
);

394 i‡(
ª∂
 =
OPT
)

396 i‡(!
mid
Ë
	`ãrm_›çp
(
°ack_¥oc_Á
);

397 
	`ouçr_Ác›t
(
fd
);

401 
DM
:

402 
	`ouçr_dmvl
(
fd
);

406 
	`Ârötf
(
°dîr
, "libcheetah: configuration wrongly set\n");

407 
	`exô
(1);

409 
	}
}

	@libcheetah/libcheetah.h

2 #i‚de‡
LIBCHEETAH_H


3 
	#LIBCHEETAH_H


	)

5 
	~<°dio.h
>

9 
chìèh_öô
(
¨gc
, **
¨gv
);

13 
chìèh_c⁄fig
(
FILE
 *
fd
);

17 
chìèh_ac˚ss
(
md_addr_t
 
addr
);

21 
chìèh_°©s
(
FILE
 *
fd
,

22 
mid
);

29 **
ßc_hôs
;

32 
öô_ß˛ru
();

33 
ß˙mul_wﬂº
(
md_addr_t
 
addr
);

34 
ouçr_ß˛ru
(
FILE
 *
fd
);

36 
öô_ßc›t
();

38 
°ack_¥oc_ß
(
°¨t
,

39 
íd
);

40 
öf_h™dÀr_ß
(
md_addr_t
 
addr
, 
cur_time
);

41 
ouçr_ßc›t
(
FILE
 *
fd
);

43 
öô_dmvl
();

44 
dmvl
(
md_addr_t
 
addr
);

45 
ouçr_dmvl
(
FILE
 *
fd
);

47 
öô_Á˛ru
();

48 
±c
(
md_addr_t
 
addr
);

49 
ouçr_Á˛ru
(
FILE
 *
fd
);

51 
öô_Ác›t
();

53 
°ack_¥oc_Á
(
°¨t
,

54 
íd
);

55 
öf_h™dÀr_Á
(
md_addr_t
 
addr
, 
cur_time
);

56 
ouçr_Ác›t
(
FILE
 *
fd
);

58 
öô_›çp
();

59 
›çp
(
md_addr_t
 
addr
, 
L
,

60 (*
°ack_¥oc
)(
°¨t
, 
íd
),

61 (*
öf_h™dÀr
)(
md_addr_t
 
addr
, 
cur_time
));

62 
	`·_hash_dñ
(
md_addr_t
 
addr
);

63 
	`ãrm_›çp
((*
°ack_¥oc
)());

	@libcheetah/ppopt.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

7 
	~"../ho°.h
"

8 
	~"../misc.h
"

9 
	~"../machöe.h
"

10 
	~"libchìèh.h
"

12 
	#toggÀ
(
i
Ëif(i==1)i=0;{i=1;}

	)

14 
	#LA_DIST
 100000

	)

15 
	#HASHNO
 7211

	)

17 
	s·_hash_èbÀ
 {

18 
md_addr_t
 
	maddr
;

19 
	m±
;

20 
·_hash_èbÀ
 *
	mnxt
;

21 } 
	g·_¶Ÿ
[
HASHNO
];

23 
	g·_¶Ÿ_Êag
[
HASHNO
];

25 
	gaddr_¨øy
[2*
LA_DIST
],

26 
	gtime_¨øy
[2*
LA_DIST
];

28 
	gœ_limô
,

29 
	gba£
,

30 
	g€_Êag
=1;

32 
	gp_öum
;

39 
·_hash_èbÀ
 *
	ghód_‰ì_li°
;

42 
	$LA_Add_to_‰ì_li°
(
·_hash_èbÀ
 *
‰ì_±r
)

44 
‰ì_±r
->
nxt
 = 
hód_‰ì_li°
;

45 
hód_‰ì_li°
 = 
‰ì_±r
;

46 
	}
}

49 
·_hash_èbÀ
 *

50 
	$LA_Gë_‰om_‰ì_li°
()

52 
·_hash_èbÀ
 *
‰ì_±r
;

54 i‡(
hód_‰ì_li°
 =
NULL
)

55  
NULL
;

58 
‰ì_±r
 = 
hód_‰ì_li°
;

59 
hód_‰ì_li°
 = hód_‰ì_li°->
nxt
;

60  
‰ì_±r
;

62 
	}
}

76 
	$·_hash
(
md_addr_t
 
addr
)

78 
loc
;

79 
¥ev_time
 = 0;

80 
·_hash_èbÀ
 *
±r
, *
ﬁd±r
;

82 
loc
 = 
addr
 % 
HASHNO
;

83 i‡(
·_¶Ÿ_Êag
[
loc
] == 0)

86 
·_¶Ÿ_Êag
[
loc
] = 1;

87 
·_¶Ÿ
[
loc
].
addr
 =áddr;

88 
·_¶Ÿ
[
loc
].
nxt
 = 
NULL
;

89 
·_¶Ÿ
[
loc
].
±
 = 
p_öum
;

94 
±r
 = &
·_¶Ÿ
[
loc
];

95 
±r
)

97 
ﬁd±r
 = 
±r
;

98 i‡(
±r
->
addr
 ==áddr)

100 
±r
 =Öå->
nxt
;

102 i‡(
±r
)

104 
¥ev_time
 = 
±r
->
±
;

105 
±r
->
±
 = 
p_öum
;

106 (
¥ev_time
);

111 i‡((
ﬁd±r
->
nxt
 = 
	`LA_Gë_‰om_‰ì_li°
()Ë=
NULL
)

113 
ﬁd±r
->
nxt
 = 
	`ˇŒoc
(1, (
·_hash_èbÀ
));

114 i‡(!
ﬁd±r
->
nxt
)

115 
	`Áèl
("out of virtual memory");

117 
ﬁd±r
->
nxt
->
addr
 =áddr;

118 
ﬁd±r
->
nxt
->nxà
NULL
;

119 
ﬁd±r
->
nxt
->
±
 = 
p_öum
;

123 
	}
}

138 
	$·_hash_dñ
(
md_addr_t
 
addr
)

140 
loc
;

141 
·_hash_èbÀ
 *
±r
, *
ﬁd±r
;

143 
loc
 = 
addr
 % 
HASHNO
;

144 i‡(
·_¶Ÿ_Êag
[
loc
] == 0)

145 
	`¥ötf
 ("Error:áddrÇot found in hash_table\n");

146 i‡(
·_¶Ÿ
[
loc
].
addr
 ==áddr)

148 i‡(
·_¶Ÿ
[
loc
].
nxt
 =
NULL
)

149 
·_¶Ÿ_Êag
[
loc
] = 0;

152 
·_¶Ÿ
[
loc
].
addr
 = ft_¶Ÿ[loc].
nxt
->addr;

153 
·_¶Ÿ
[
loc
].
±
 = ft_¶Ÿ[loc].
nxt
->pt;

154 
±r
 = 
·_¶Ÿ
[
loc
].
nxt
;

155 
·_¶Ÿ
[
loc
].
nxt
 = ft_slot[loc].nxt->nxt;

156 
	`LA_Add_to_‰ì_li°
(
±r
);

161 
±r
 = &
·_¶Ÿ
[
loc
];

162 
±r
)

164 i‡(
±r
->
addr
 ==áddr)

166 
ﬁd±r
 = 
±r
;

167 
±r
 =Öå->
nxt
;

169 i‡(
±r
)

171 
ﬁd±r
->
nxt
 = 
±r
->nxt;

172 
	`LA_Add_to_‰ì_li°
(
±r
);

175 
	`¥ötf
("Error:áddrÇot found in hash_table\n");

177 
	}
}

195 
	g°¨t
, 
	gíd
;

198 
	$öô_›çp
()

200 
œ_limô
 = 2*
LA_DIST
;

201 
ba£
 = 0;

202 
	}
}

205 
	$›çp
(
md_addr_t
 
addr
, 
L
,

206 (*
°ack_¥oc
)(
°¨t
, 
íd
),

207 (*
öf_h™dÀr
)(
md_addr_t
 
addr
, 
cur_time
))

209 
¥ev_time
, 
sf
;

211 i‡(
p_öum
 > 
œ_limô
-1)

213 
°¨t
 = (
œ_limô
 % (2*
LA_DIST
));

214 
íd
 = 
°¨t
 + 
LA_DIST
;

215 i‡((
sf
 = (*
°ack_¥oc
)(
°¨t
, 
íd
)) == 1)

217 
œ_limô
 +
LA_DIST
;

218 
	`toggÀ
(
€_Êag
);

219 i‡(
€_Êag
)

220 
ba£
 +2*
LA_DIST
;

222 
addr
 >>
L
;

223 
addr_¨øy
[(
p_öum
 - 
ba£
Ë% (2*
LA_DIST
)] = 
addr
;

224 i‡((
¥ev_time
 = 
	`·_hash
(
addr
)) >= 0)

226 i‡((
œ_limô
 - 
¥ev_time
Ë<2*
LA_DIST
)

227 
time_¨øy
[(
¥ev_time
 - 
ba£
Ë% (2*
LA_DIST
)] = 
p_öum
;

229 (*
öf_h™dÀr
)(
addr
, 
p_öum
);

232 (*
öf_h™dÀr
)(
addr
, 
p_öum
);

233 ++
p_öum
;

234 
	}
}

239 
	$ãrm_›çp
((*
°ack_¥oc
)())

241 
°¨t
 = 
œ_limô
 % (2*
LA_DIST
);

242 
íd
 = 
°¨t
 + 
LA_DIST
;

243 i‡(
p_öum
 < 
LA_DIST
)

244 
íd
 = 
p_öum
;

245 (*
°ack_¥oc
)(
°¨t
, 
íd
);

246 i‡(
p_öum
 >
LA_DIST
)

248 
	`toggÀ
(
€_Êag
);

249 i‡(
€_Êag
)

250 
ba£
 +2*
LA_DIST
;

251 
œ_limô
 +
LA_DIST
;

252 
°¨t
 = 
œ_limô
 % (2*
LA_DIST
);

253 
íd
 = 
°¨t
 + (((
p_öum
 % 
LA_DIST
) == 0) ? LA_DIST : (p_inum % LA_DIST));

254 (*
°ack_¥oc
)(
°¨t
, 
íd
);

256 
	}
}

	@libcheetah/saclru.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

21 
	~"../ho°.h
"

22 
	~"../misc.h
"

23 
	~"../machöe.h
"

24 
	~"utû.h
"

25 
	~"libchìèh.h
"

27 
	#ONE
 1U

	)

28 
	#TWO
 2

	)

29 
	#B80000000
 0x80000000

	)

30 
	#INVALID
 0

	)

31 
	#MEM_AVAIL_HITARR
 2097152

	)

33 
N
,

34 
B
,

35 
A
,

36 
L
,

37 
T
,

38 
SAVE_INTERVAL
,

39 
P_INTERVAL
;

41 
	gTWO_PWR_N
;

42 
	gMAX_DEPTH
;

43 
	gTWO_POWER_MAX_DEPTH
,

44 
	gSET_MASK
,

45 
	gDIFF_SET_MASK
,

46 
	gBASE
,

47 
	gSIZE_OF_TREE
,

51 
	gBASE_PWR_MAX_DEPTH_PLUS_ONE
;

53 *
	g¨r
;

54 **
	gßc_hôs
;

55 *
	ghô¨r
;

57 *
	gba£_pwr_¨øy
;

58 *
	grm_¨r
;

60 
	gt_íåõs
;

61 #ifde‡
PERF


62 
	gcom∑ªs
=0;

65 
	g√xt_ßve_time
;

66 *
	gdïths
 = 
NULL
;

67 
	ghô¨r0
 = 0;

68 
	gèg
 = 0;

79 
	$ouçr_ß˛ru
(
FILE
 *
fd
)

81 
i
, 
j
;

82 
sum
;

84 
i
=0; i<=
MAX_DEPTH
;i++)

85 
ßc_hôs
[0][
i
] +
hô¨r0
;

86 
hô¨r0
 = 0;

88 
	`Ârötf
(
fd
, "Addªs£†¥o˚s£d: %d\n", 
t_íåõs
);

89 
	`Ârötf
(
fd
, "Löêsize: %d byãs\n", (
ONE
 << 
L
));

90 #ifde‡
PERF


91 
	`Ârötf
(
fd
, "com∑ª† %d\n", 
com∑ªs
);

93 
	`Ârötf
(
fd
, "\n");

94 
	`Ârötf
(
fd
, "Miss Ratios\n");

95 
	`Ârötf
(
fd
, "___________\n\n");

96 
	`Ârötf
(
fd
, "\t\tAssociativity\n");

97 
	`Ârötf
(
fd
, "\t\t");

98 
i
=0;i<
TWO_PWR_N
;i++)

99 
	`Ârötf
(
fd
, "%d\t\t", (
i
+1));

100 
	`Ârötf
(
fd
, "\n");

101 
	`Ârötf
(
fd
, "No. of sets\n");

102 
i
=0; i <
MAX_DEPTH
; i++)

104 
sum
 = 0;

105 
	`Ârötf
(
fd
, "%d\t\t", (
ONE
 << (
i
+
A
)));

106 
j
=0; j < 
TWO_PWR_N
; j++)

108 
sum
 +
ßc_hôs
[
j
][
i
];

109 
	`Ârötf
(
fd
, "%f\t", (1.0 - (()
sum
/()
t_íåõs
)));

111 
	`Ârötf
(
fd
, "\n");

113 
	`Ârötf
(
fd
, "\n");

114 
	}
}

127 
	$öô_ß˛ru
()

129 
i
, 
j
, 
k
, 
l
;

130 
öô_vÆue
;

131 *
¨r_±r
, *
¶Ÿ_±r
;

133 
√xt_ßve_time
 = 
SAVE_INTERVAL
;

134 
TWO_PWR_N
 = (
ONE
 << 
N
);

135 
MAX_DEPTH
 = 
B
-
A
;

136 
TWO_POWER_MAX_DEPTH
 = (
ONE
 << 
MAX_DEPTH
);

137 
SET_MASK
 = ((
ONE
 << 
A
) - 1);

138 
DIFF_SET_MASK
 = ((
ONE
 << 
MAX_DEPTH
) - 1);

139 
BASE
 = (
TWO_PWR_N
+1);

140 
SIZE_OF_TREE
 = (
TWO_POWER_MAX_DEPTH
 * 
TWO
 * 
BASE
);

142 
¨r
 = 
	`ˇŒoc
(((
ONE
 << 
A
)*
TWO_POWER_MAX_DEPTH
*
TWO
*
BASE
), ());

143 i‡(!
¨r
)

144 
	`Áèl
("out of virtual memory");

146 
BASE_PWR_MAX_DEPTH_PLUS_ONE
 = 
	`powî
(
BASE
, 
MAX_DEPTH
+1);

147 i‡((
BASE_PWR_MAX_DEPTH_PLUS_ONE
 * ()Ë< 
MEM_AVAIL_HITARR
)

149 
hô¨r
 = 
	`ˇŒoc
(
BASE_PWR_MAX_DEPTH_PLUS_ONE
, ());

150 i‡(!
hô¨r
)

151 
	`Áèl
("out of virtual memory");

154 
ba£_pwr_¨øy
 = 
	`ˇŒoc
((
MAX_DEPTH
+1), ());

155 i‡(!
ba£_pwr_¨øy
)

156 
	`Áèl
("out of virtual memory");

158 
rm_¨r
 = 
	`ˇŒoc
((
TWO_POWER_MAX_DEPTH
), ());

159 i‡(!
rm_¨r
)

160 
	`Áèl
("out of virtual memory");

162 
ßc_hôs
 = 
	`idim2
((
TWO_PWR_N
), (
MAX_DEPTH
 + 2));

164 
i
=0; i < 
ONE
 << 
A
; i++)

166 
¨r_±r
 = 
¨r
 + 
i
 * 
SIZE_OF_TREE
;

167 
öô_vÆue
 = 
B80000000
;

168 
¶Ÿ_±r
 = 
¨r_±r
;

169 *
¶Ÿ_±r
 = 1;

170 
l
=1;Ü<=
TWO_PWR_N
;Ü++)

171 *(
¶Ÿ_±r
 + 
l
Ë
öô_vÆue
;

172 ++
öô_vÆue
;

173 
j
=1; j <
MAX_DEPTH
; j++)

175 
k
=((
ONE
 << 
j
) - 1);

176 
k
 < (((
ONE
 << 
j
) - 1) + (ONE << (j-1)));

177 
k
++)

179 *(
¨r_±r
 + (
k
*(
TWO_PWR_N
+1))) = TWO_PWR_N+1;

181 
k
(((
ONE
 << 
j
) - 1) + (ONE << (j-1)));

182 
k
 < ((
ONE
 << (
j
+1)) - 1);

183 
k
++)

185 
¶Ÿ_±r
 = 
¨r_±r
 + (
k
 * (
TWO_PWR_N
+1));

186 *
¶Ÿ_±r
 = 1;

187 
l
=1;Ü<=
TWO_PWR_N
;Ü++)

188 *(
¶Ÿ_±r
 + 
l
Ë
öô_vÆue
;

189 ++
öô_vÆue
;

193 
rm_¨r
[0] = 
MAX_DEPTH
;

194 
i
=1; i < (
ONE
 << 
MAX_DEPTH
); i++)

196 
j
=0; j<=
MAX_DEPTH
; j++)

198 i‡(
i
 & (
ONE
 << 
j
))

200 
rm_¨r
[
i
] = 
j
;

205 
j
 = 1;

206 
i
=0; i<=
MAX_DEPTH
; i++)

208 
ba£_pwr_¨øy
[
i
] = 
j
;

209 
j
 *
BASE
;

212 
dïths
 = 
	`ˇŒoc
((
MAX_DEPTH
+1), ());

213 i‡(!
dïths
)

214 
	`Áèl
("out of virtual memory");

216 
i
=0;i<=
MAX_DEPTH
;i++)

217 
dïths
[
i
] = 0;

218 
	}
}

231 
	$ß˙mul_wﬂº
(
md_addr_t
 
addr
)

233 
t
, 
t1
;

234 
i
, 
f°
;

235 
‹ig_èg
, 
©ag
, 
dïth
, 
íåy
, 
£t_no
;

236 
sum
, 
hô
;

237 *
¨r_±r
, *
¶Ÿ_±r
;

240 i‡(
t_íåõs
 > 
√xt_ßve_time
)

243 
i
=0; i<=
MAX_DEPTH
;i++)

244 
ßc_hôs
[0][
i
] +
hô¨r0
;

245 
hô¨r0
 = 0;

247 
	`ouçr_ß˛ru
(
°dîr
);

248 
√xt_ßve_time
 +
SAVE_INTERVAL
;

251 ++
t_íåõs
;

252 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

253 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

255 
addr
 >>
L
;

256 
£t_no
 = 
addr
 & 
SET_MASK
;

257 
¨r_±r
 = 
¨r
 + 
£t_no
 * 
SIZE_OF_TREE
;

258 
‹ig_èg
 = 
addr
 >> 
A
;

259 #ifde‡
PERF


260 ++
com∑ªs
;

262 i‡(*(
¨r_±r
 + 1Ë=
‹ig_èg
)

263 ++
hô¨r0
;

266 
©ag
 = 
‹ig_èg
;

267 
dïth
 = 0;

268 
hô
 = 0;

269 
f°
 = 1;

270 
¶Ÿ_±r
 = 
¨r_±r
;

271 
dïth
 <
MAX_DEPTH
)

273 
i
=
f°
; i<=()
TWO_PWR_N
; i++)

275 #ifde‡
PERF


276 ++
com∑ªs
;

278 i‡((
t1
 = *(
¶Ÿ_±r
 + 
i
)Ë=
‹ig_èg
)

280 *(
¶Ÿ_±r
+
i
Ë
èg
;

281 
hô
 = 1;

284 
t
 = 
rm_¨r
[(
‹ig_èg
 ^ 
t1
Ë& 
DIFF_SET_MASK
];

285 ++
dïths
[
t
];

286 *(
¶Ÿ_±r
 + 
i
Ë
èg
;

287 
èg
 = 
t1
;

289 ++*
¶Ÿ_±r
;

290 
íåy
 =

291 (((
ONE
 << 
dïth
Ë+ (
©ag
 & ((ONE << dïthË- 1))Ë- 1Ë* 
BASE
;

292 
¶Ÿ_±r
 = 
¨r_±r
 + 
íåy
;

293 --*
¶Ÿ_±r
;

294 
¶Ÿ_±r
[*¶Ÿ_±r] = 
©ag
;

295 i‡(
hô
==1)

297 
sum
 = 0;

298 
i
 = 
MAX_DEPTH
;

299 
i
 >= 0)

301 
sum
 +
dïths
[
i
];

302 i‡(
sum
 < 
TWO_PWR_N
)

304 ++
ßc_hôs
[
sum
][
i
];

305 --
i
;

312 ++
dïth
;

313 
©ag
 = 
èg
;

314 
íåy
 =

315 (((
ONE
 << 
dïth
Ë+ (
‹ig_èg
 & ((ONE << dïth)-1)))-1Ë* 
BASE
;

316 (
dïth
 <
MAX_DEPTH
Ë&& (*(
¨r_±r
 + 
íåy
Ë> 
TWO_PWR_N
))

318 ++
dïth
;

319 
íåy
 =

320 (((
ONE
 << 
dïth
Ë+ (
‹ig_èg
 & ((ONE << dïth)-1)))-1Ë* 
BASE
;

322 i‡(
dïth
 <
MAX_DEPTH
)

324 
¶Ÿ_±r
 = 
¨r_±r
 + 
íåy
;

325 
f°
 = *
¶Ÿ_±r
;

329 
i
=0;i<=()
MAX_DEPTH
;i++)

330 
dïths
[
i
] = 0;

332 
	}
}

356 
	$po°¥oc
()

358 { 
ödex
, 
dïth
, 
j
, 
k
;

359 *
digô
, *
dïth_sum
;

361 
digô
 = (*)
	`ˇŒoc
((
MAX_DEPTH
 + 1), ());

362 
dïth_sum
 = (*)
	`ˇŒoc
((
MAX_DEPTH
 + 1), ());

364 
j
=0;j<=
MAX_DEPTH
;j++)

365 
ßc_hôs
[0][
j
] = 
hô¨r
[0];

366 
ödex
 = 0;

367 
dïth
 = 0;

368 
j
=0; j <
MAX_DEPTH
; j++) {

369 
digô
[
j
] = 0;

370 
dïth_sum
[
j
] = 0;

372 
dïth
 <
MAX_DEPTH
) {

373 i‡(
digô
[
dïth
] =(
BASE
 - 1)) {

374 
digô
[
dïth
] = 0;

375 
j
=
dïth
; j >= 0; j--)

376 
dïth_sum
[
j
] -
BASE
 - 1;

377 ++
dïth
;

380 ++
digô
[
dïth
];

381 ++
ödex
;

382 
j
=
dïth
; j >= 0; j--)

383 ++
dïth_sum
[
j
];

384 
dïth
 = 0;

385 
k
=
MAX_DEPTH
; k >= 0; k--)

386 i‡(
dïth_sum
[
k
] < 
TWO_PWR_N
)

387 
ßc_hôs
[
dïth_sum
[
k
]][k] +
hô¨r
[
ödex
];

392 #ifde‡
PERF


393 
	`¥ötf
("ödex %d\n", 
ödex
);

395 
	}
}

397 
	$ß˙mul
()

399 { 
t
, 
t1
;

400 
i
,

401 
f°
;

403 
‹ig_èg
,

404 
©ag
,

405 
èg
,

406 
dïth
,

407 
íåy
,

408 
£t_no
,

409 
addr
;

410 
dïths
;

411 
hô
;

412 *
¨r_±r
,

413 *
¶Ÿ_±r
;

414 
hô¨r0
;

416 *
buf„r
;

417 
l
, 
ƒ
;

419 
hô¨r0
 = 0;

421 
ƒ
 = 
	`åa˚
(&
buf„r
)) {

422 
l
 = 0;Ü < 
ƒ
;Ü++) {

423 ++
t_íåõs
;

424 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

425 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

427 
addr
 = *(
buf„r
 + 
l
);

431 
addr
 >>
L
;

432 
£t_no
 = 
addr
 & 
SET_MASK
;

433 
¨r_±r
 = 
¨r
 + 
£t_no
 * 
SIZE_OF_TREE
;

434 
‹ig_èg
 = 
addr
 >> 
A
;

435 #ifde‡
PERF


436 ++
com∑ªs
;

438 i‡(*(
¨r_±r
 + 1Ë=
‹ig_èg
)

440 ++
hô¨r0
;

442 
©ag
 = 
‹ig_èg
;

443 
dïth
 = 0;

444 
dïths
 = 0;

445 
hô
 = 0;

446 
f°
 = 1;

447 
¶Ÿ_±r
 = 
¨r_±r
;

448 
dïth
 <
MAX_DEPTH
) {

449 
i
=
f°
; i<=
TWO_PWR_N
; i++) {

450 #ifde‡
PERF


451 ++
com∑ªs
;

453 i‡((
t1
 = *(
¶Ÿ_±r
 + 
i
)Ë=
‹ig_èg
) {

455 *(
¶Ÿ_±r
+
i
Ë
èg
;

456 
hô
 = 1;

459 
t
 = 
rm_¨r
[(
‹ig_èg
 ^ 
t1
Ë& 
DIFF_SET_MASK
];

460 
dïths
 +
ba£_pwr_¨øy
[
t
];

461 *(
¶Ÿ_±r
 + 
i
Ë
èg
;

462 
èg
 = 
t1
;

464 ++*
¶Ÿ_±r
;

465 
íåy
 = (((
ONE
 << 
dïth
Ë+ (
©ag
 & ((ONE << dïthË- 1))Ë- 1Ë* 
BASE
;

466 
¶Ÿ_±r
 = 
¨r_±r
 + 
íåy
;

467 --*
¶Ÿ_±r
;

468 
¶Ÿ_±r
[*¶Ÿ_±r] = 
©ag
;

469 i‡(
hô
==1) {

470 ++
hô¨r
[
dïths
];

473 ++
dïth
;

474 
©ag
 = 
èg
;

475 
íåy
 = (((
ONE
 << 
dïth
Ë+ (
‹ig_èg
 & ((ONE << dïthË- 1))Ë- 1Ë* 
BASE
;

477 (
dïth
 <
MAX_DEPTH
Ë&& (*(
¨r_±r
 + 
íåy
Ë> 
TWO_PWR_N
)) {

478 ++
dïth
;

479 
íåy
 = (((
ONE
 << 
dïth
Ë+ (
‹ig_èg
 & ((ONE << dïthË- 1))Ë- 1Ë* 
BASE
;

481 i‡(
dïth
 <
MAX_DEPTH
) {

482 
¶Ÿ_±r
 = 
¨r_±r
 + 
íåy
;

483 
f°
 = *
¶Ÿ_±r
;

488 i‡(
t_íåõs
 > 
T
)

492 *
hô¨r
 = 
hô¨r0
;

493 
	`po°¥oc
();

494 
	}
}

	@libcheetah/sacopt.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

22 
	~"../ho°.h
"

23 
	~"../misc.h
"

24 
	~"../machöe.h
"

25 
	~"utû.h
"

26 
	~"libchìèh.h
"

28 
	#ONE
 1

	)

29 
	#TWO
 2U

	)

30 
	#B80000000
 0x80000000

	)

31 
	#INVALID
 0

	)

32 
	#MEM_AVAIL_HITARR
 2097152

	)

33 
	#MAXINT
 2147483647

	)

34 
	#HASHNO
 7211

	)

36 
N
,

37 
B
,

38 
A
,

39 
L
,

40 
T
,

41 
SAVE_INTERVAL
,

42 
P_INTERVAL
;

44 
	gTWO_PWR_N
,

45 
	gMAX_DEPTH
,

46 
	gTWO_POWER_MAX_DEPTH
,

47 
	gSET_MASK
,

48 
	gDIFF_SET_MASK
,

49 
	gSET_SIZE
,

50 
	gBASE_CACHE_SIZE
,

51 
	gCLEAN_INTERVAL
,

52 
	gtime_of_√xt_˛ón
;

54 
	#WORD_SIZE
 1

	)

56 
hash_èbÀ
 *
	g¶Ÿ
;

57 *
	g¶Ÿ_Êag
;

59 *
	gèg_¨r
,

60 **
	ghôs
;

61 
	ghô0
;

62 *
	gÆl_hô_Êag
;

63 *
	g¥ty_¨r
;

65 
	gt_íåõs
;

66 
	gunknowns
;

68 #ifde‡
PERF


69 
	gcom∑ªs
=0;

72 
addr_¨øy
[],

73 
time_¨øy
[];

74 
	g√xt_ßve_time
;

86 
	$Pri‹ôy_ß
(
i
)

88 
öf_cou¡
=0;

90 i‡(
time_¨øy
[
i
] > 0)

91  (
MAXINT
 - 
time_¨øy
[
i
]);

94 i‡(
time_¨øy
[
i
] == 0)

95  --
öf_cou¡
;

98 
	`Ârötf
(
°dîr
, "libcheetah:Érror inÖriority function\n");

101 
	}
}

113 
	$unk_hash_add_ß
 (
md_addr_t
 
addr
, 
¥ty
)

115 
loc
;

116 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

118 ++
unknowns
;

120 
loc
 = 
addr
 & ((
ONE
 << 
B
) - 1);

122 i‡(
¶Ÿ_Êag
[
loc
] == 0)

124 
¶Ÿ_Êag
[
loc
] = 1;

125 
¶Ÿ
[
loc
].
addr
 =áddr;

126 
¶Ÿ
[
loc
].
¥ty
 =Örty;

127 
¶Ÿ
[
loc
].
nxt
 = 
NULL
;

132 
±r
 = &
¶Ÿ
[
loc
];

133 
±r
)

135 
ﬁd±r
 = 
±r
;

136 i‡(
±r
->
addr
 ==áddr)

138 
	`Ârötf
(
°dîr
, "libcheetah:áddressálready in hashÅable\n");

139 
	`myÂrötf
(
°dîr
, "addr: 0x%p;Å_entries: %u;Örty: %d\n",

140 
addr
, 
t_íåõs
, 
±r
->
¥ty
);

141 
	`myÂrötf
(
°dîr
, "slotáddr: 0x%p;Örty: %d\n",

142 
¶Ÿ
[
loc
].
addr
, slŸ[loc].
¥ty
);

144 
±r
 =Öå->
nxt
;

146 i‡((
ﬁd±r
->
nxt
 = 
	`UHT_Gë_‰om_‰ì_li°
()Ë=
NULL
)

148 
ﬁd±r
->
nxt
 = 
	`ˇŒoc
(1, (
hash_èbÀ
));

149 i‡(!
ﬁd±r
->
nxt
)

150 
	`Áèl
("out of virtual memory");

152 
ﬁd±r
->
nxt
->
addr
 =áddr;

153 
ﬁd±r
->
nxt
->nxà
NULL
;

154 
ﬁd±r
->
nxt
->
¥ty
 =Örty;

157 
	}
}

169 
	$unk_hash_dñ_ß
(
md_addr_t
 
addr
)

171 
loc
;

172 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

173 
ªt_¥ty
;

175 
loc
 = 
addr
 & ((
ONE
 << 
B
) - 1);

177 i‡(
¶Ÿ_Êag
[
loc
] == 0)

179 i‡(
¶Ÿ
[
loc
].
addr
 ==áddr)

181 i‡(
¶Ÿ
[
loc
].
nxt
 =
NULL
)

183 
¶Ÿ_Êag
[
loc
] = 0;

184  
¶Ÿ
[
loc
].
¥ty
;

188 
ªt_¥ty
 = 
¶Ÿ
[
loc
].
¥ty
;

189 
¶Ÿ
[
loc
].
addr
 = slŸ[loc].
nxt
->addr;

190 
¶Ÿ
[
loc
].
¥ty
 = slŸ[loc].
nxt
->prty;

191 
±r
 = 
¶Ÿ
[
loc
].
nxt
;

192 
¶Ÿ
[
loc
].
nxt
 = slot[loc].nxt->nxt;

193 
	`UHT_Add_to_‰ì_li°
(
±r
);

194  
ªt_¥ty
;

199 
±r
 = &
¶Ÿ
[
loc
];

200 
±r
)

202 i‡(
±r
->
addr
 ==áddr)

204 
ﬁd±r
 = 
±r
;

205 
±r
 =Öå->
nxt
;

207 i‡(
±r
)

209 
ªt_¥ty
 = 
±r
->
¥ty
;

210 
ﬁd±r
->
nxt
 = 
±r
->nxt;

211 
	`UHT_Add_to_‰ì_li°
(
±r
);

212  
ªt_¥ty
;

217 
	}
}

229 
	$ouçr_ßc›t
(
FILE
 *
fd
)

231 
i
, 
j
;

232 
sum
;

234 
i
=0; i <(
B
-
A
); i++)

235 
hôs
[
i
][0] +
hô0
;

236 
hô0
 = 0;

238 
	`Ârötf
(
fd
, "Addªs£†¥o˚s£d: %d\n", 
t_íåõs
);

239 
	`Ârötf
(
fd
, "Löêsize: %d byãs\n", (
ONE
 << 
L
));

240 #ifde‡
PERF


241 
	`Ârötf
(
fd
, "com∑ª† %d\n", 
com∑ªs
);

243 
	`Ârötf
(
fd
, "\n");

244 
	`Ârötf
(
fd
, "Miss Ratios\n");

245 
	`Ârötf
(
fd
, "___________\n\n");

246 
	`Ârötf
(
fd
, "\t\tAssociativity\n");

247 
	`Ârötf
(
fd
, "\t\t");

248 
i
=0;i<
TWO_PWR_N
;i++)

249 
	`Ârötf
(
fd
, "%d\t\t", (
i
+1));

250 
	`Ârötf
(
fd
, "\n");

251 
	`Ârötf
(
fd
, "No. of sets\n");

252 
i
=0; i<=
MAX_DEPTH
; i++)

254 
sum
 = 0;

255 
	`Ârötf
(
fd
, "%d\t\t", (
ONE
 << (
i
+
A
)));

256 
j
=0; j<
TWO_PWR_N
; j++)

258 
sum
 +
hôs
[
i
][
j
];

259 
	`Ârötf
(
fd
, "%f\t", (1.0 - (()
sum
/()
t_íåõs
)));

261 
	`Ârötf
(
fd
, "\n");

263 
	`Ârötf
 (
fd
, "\n\n\n");

264 
	}
}

276 
	$hash_˛ón_ß
(
md_addr_t
 
addr
, 
max_¥ty
)

278 
loc
;

279 
hash_èbÀ
 *
±r
, *
ﬁd±r
;

281 i‡(
max_¥ty
 >= 0)

282 
	`Ârötf
(
°dîr
, "libcheetah: max unknownÖriorityÇon-negative\n");

284 
loc
 = 
addr
 & ((
ONE
 << 
B
) - 1);

285 (
¶Ÿ_Êag
[
loc
] !0Ë&& (
¶Ÿ
[loc].
¥ty
 > 
max_¥ty
))

287 --
unknowns
;

288 i‡(
¶Ÿ
[
loc
].
nxt
 =
NULL
)

290 
¶Ÿ_Êag
[
loc
] = 0;

295 
¶Ÿ
[
loc
].
addr
 = slŸ[loc].
nxt
->addr;

296 
¶Ÿ
[
loc
].
gΩtime
 = slŸ[loc].
nxt
->grptime;

297 
¶Ÿ
[
loc
].
¥ty
 = slŸ[loc].
nxt
->prty;

298 
±r
 = 
¶Ÿ
[
loc
].
nxt
;

299 
¶Ÿ
[
loc
].
nxt
 = slot[loc].nxt->nxt;

300 
	`UHT_Add_to_‰ì_li°
(
±r
);

304 i‡(
¶Ÿ_Êag
[
loc
] != 0)

306 
±r
 = &
¶Ÿ
[
loc
];

307 
±r
)

309 i‡(
±r
->
¥ty
 > 
max_¥ty
)

311 --
unknowns
;

312 
ﬁd±r
->
nxt
 = 
±r
->nxt;

313 
	`UHT_Add_to_‰ì_li°
(
±r
);

314 
±r
 = 
ﬁd±r
;

316 
ﬁd±r
 = 
±r
;

317 
±r
 =Öå->
nxt
;

320 
	}
}

331 
	$gfs›és
(
md_addr_t
 
addr
, 
¥i‹ôy
)

333 
£äo
, 
ba£_£äo
, 
‹ig_èg
,

334 
ªm_èg
, 
de_èg
, 
¥ev_addr
;

335 
ªm_¥ty
, 
de_¥ty
, 
ªÆ_¥ty
, 
max_¥ty
;

336 
ˇche_size
, 
ˇche_±r
, 
£t_±r
;

337 
i
, 
j
;

338 
hô
;

340 
‹ig_èg
 = 
addr
 >> 
A
;

341 
ba£_£äo
 = 
addr
 & ((
ONE
 << 
A
) - 1);

342 i‡(
Æl_hô_Êag
[
ba£_£äo
])

344 i‡(
èg_¨r
[
ba£_£äo
 * 
SET_SIZE
] =
‹ig_èg
)

346 ++ 
hô0
;

347 
¥ty_¨r
[
ba£_£äo
 * 
SET_SIZE
] = 
¥i‹ôy
;

352 
ªÆ_¥ty
 = 
¥ty_¨r
[
ba£_£äo
 * 
SET_SIZE
];

353 
¥ev_addr
 = (
èg_¨r
[
ba£_£äo
 * 
SET_SIZE
] << 
A
) | base_setno;

354 
ˇche_±r
 = 
BASE_CACHE_SIZE
;

355 
i
=
A
+1; i<=
B
; i++)

357 
£äo
 = 
¥ev_addr
 & ((
ONE
 << 
i
) - 1);

358 
£t_±r
 = 
ˇche_±r
 + (
£äo
 * 
SET_SIZE
);

359 
¥ty_¨r
[
£t_±r
] = 
ªÆ_¥ty
;

360 
ˇche_±r
 = 
TWO
*ˇche_±∏+ 
BASE_CACHE_SIZE
;

364 
Æl_hô_Êag
[
ba£_£äo
] = 1;

365 
i
 = 
A
;

366 
ˇche_size
 = 
BASE_CACHE_SIZE
;

367 
ˇche_±r
 = 0;

368 
max_¥ty
 = (5 - 
MAXINT
);

369 
i
 <
B
)

371 
de_èg
 = 
‹ig_èg
;

372 
de_¥ty
 = 
¥i‹ôy
;

373 
£äo
 = 
addr
 & ((
ONE
 << 
i
) - 1);

374 
£t_±r
 = 
ˇche_±r
 + (
£äo
 * 
SET_SIZE
);

375 
hô
 = 0;

376 
j
=0; j < 
TWO_PWR_N
; j++)

378 #ifde‡
PERF


379 ++
com∑ªs
;

381 i‡(
èg_¨r
[
£t_±r
 + 
j
] =
‹ig_èg
)

383 
hô
 = 1;

384 ++
hôs
[
i
-
A
][
j
];

385 
èg_¨r
[
£t_±r
 + 
j
] = 
de_èg
;

386 
¥ty_¨r
[
£t_±r
 + 
j
] = 
de_¥ty
;

391 i‡(
de_¥ty
 > 
¥ty_¨r
[
£t_±r
 + 
j
])

393 
ªm_èg
 = 
èg_¨r
[
£t_±r
 + 
j
];

394 
èg_¨r
[
£t_±r
 + 
j
] = 
de_èg
;

395 
de_èg
 = 
ªm_èg
;

396 
ªm_¥ty
 = 
¥ty_¨r
[
£t_±r
 + 
j
];

397 
¥ty_¨r
[
£t_±r
 + 
j
] = 
de_¥ty
;

398 
de_¥ty
 = 
ªm_¥ty
;

400 i‡(
i
 =
B
)

402 i‡(
¥ty_¨r
[
£t_±r
 + 
j
] < 0)

404 i‡(
max_¥ty
 < 
¥ty_¨r
[
£t_±r
 + 
j
])

405 
max_¥ty
 = 
¥ty_¨r
[
£t_±r
 + 
j
];

411 i‡(
j
 > 0)

413 
Æl_hô_Êag
[
ba£_£äo
] = 0;

414 i‡(
j
 >
TWO_PWR_N
)

416 i‡((
i
 =
B
Ë&& (
de_¥ty
 < 0Ë&& (de_¥ty > (5-
MAXINT
)))

417 
	`·_hash_dñ
((
de_èg
 << 
A
Ë| 
£äo
);

420 
ˇche_±r
 +
ˇche_size
;

421 
ˇche_size
 += cache_size;

422 ++
i
;

425 i‡((
i
 > 
B
Ë&& (
hô
 == 0))

426 
	`hash_˛ón_ß
(
addr
, 
max_¥ty
);

427 
	}
}

442 
	$°ack_¥oc_ß
(
°¨t
,

443 
íd
)

445 
l
;

446 
addr
;

447 
¥i‹ôy
;

449 
l
=
°¨t
;Ü<
íd
;Ü++)

451 ++
t_íåõs
;

453 i‡((
t_íåõs
 % 
P_INTERVAL
) == 0)

454 
	`Ârötf
(
°dîr
, "libchìèh:áddªs£†¥o˚s£d %d\n", 
t_íåõs
);

455 i‡(
t_íåõs
 > 
√xt_ßve_time
)

457 
	`ouçr_ßc›t
(
°dîr
);

458 
√xt_ßve_time
 +
SAVE_INTERVAL
;

461 
addr
 = 
addr_¨øy
[
l
];

463 
¥i‹ôy
 = 
	`Pri‹ôy_ß
(
l
);

464 i‡(
¥i‹ôy
 < 0)

465 
	`unk_hash_add_ß
(
addr
, 
¥i‹ôy
);

467 
	`gfs›és
(
addr
, 
¥i‹ôy
);

469 
addr_¨øy
[
l
] = 0;

470 
time_¨øy
[
l
] = 0;

471 i‡(
t_íåõs
 > ()
T
)

476 
	}
}

489 
	$öô_ßc›t
()

492 
i
;

494 
TWO_PWR_N
 = (
ONE
 << 
N
);

495 
MAX_DEPTH
 = 
B
-
A
;

496 
TWO_POWER_MAX_DEPTH
 = (
ONE
 << 
MAX_DEPTH
);

497 
SET_MASK
 = ((
ONE
 << 
A
) - 1);

498 
DIFF_SET_MASK
 = ((
ONE
 << 
MAX_DEPTH
) - 1);

499 
SET_SIZE
 = 
WORD_SIZE
*
TWO_PWR_N
;

500 
BASE_CACHE_SIZE
 = (
ONE
<<
A
)*
SET_SIZE
;

502 
√xt_ßve_time
 = 
SAVE_INTERVAL
;

504 
èg_¨r
 = 
	`ˇŒoc
((
TWO
 * (
ONE
 << 
B
Ë* 
TWO_PWR_N
), ());

505 i‡(!
èg_¨r
)

506 
	`Áèl
("out of virtual memory");

508 
¥ty_¨r
 = 
	`ˇŒoc
((
TWO
 * (
ONE
 << 
B
Ë* 
TWO_PWR_N
), ());

509 i‡(!
¥ty_¨r
)

510 
	`Áèl
("out of virtual memory");

512 
Æl_hô_Êag
 = 
	`ˇŒoc
((
ONE
 << 
A
), ());

513 i‡(!
Æl_hô_Êag
)

514 
	`Áèl
("out of virtual memory");

516 
hôs
 = 
	`idim2
 ((
MAX_DEPTH
 + 2), (
TWO_PWR_N
));

518 
¶Ÿ
 = 
	`ˇŒoc
((
ONE
 << 
B
), (
hash_èbÀ
));

519 i‡(!
¶Ÿ
)

520 
	`Áèl
("out of virtual memory");

522 
¶Ÿ_Êag
 = 
	`ˇŒoc
((
ONE
 << 
B
), ());

523 i‡(!
¶Ÿ_Êag
)

524 
	`Áèl
("out of virtual memory");

526 
i
=0; i < (
TWO
 * (
ONE
 << 
B
Ë* 
TWO_PWR_N
); i++)

528 
èg_¨r
[
i
] = 0xffffffff;

529 
¥ty_¨r
[
i
] = (5-
MAXINT
);

532 
time_of_√xt_˛ón
 = 
CLEAN_INTERVAL
;

533 
	}
}

548 
	$öf_h™dÀr_ß
(
md_addr_t
 
addr
, 
cur_time
)

550 
£äo
, 
‹ig_èg
, 
ˇche_size
,

551 
de_èg
, 
ªm_èg
, 
¥ev_addr
,

552 
ˇche_±r
, 
£t_±r
, 
ba£_£äo
;

553 
de_¥ty
, 
ªm_¥ty
,

554 
ﬁd_¥ty
, 
¥i‹ôy
,

555 
ªÆ_¥ty
;

556 
i
, 
j
;

558 
ﬁd_¥ty
 = 
	`unk_hash_dñ_ß
(
addr
);

559 i‡(
ﬁd_¥ty
 == 0)

562 --
unknowns
;

564 
¥i‹ôy
 = 
MAXINT
 - 
cur_time
;

566 
ba£_£äo
 = 
addr
 & ((
ONE
 << 
A
) -1);

567 i‡(
Æl_hô_Êag
[
ba£_£äo
])

569 
Æl_hô_Êag
[
ba£_£äo
] = 0;

570 
ªÆ_¥ty
 = 
¥ty_¨r
[
ba£_£äo
 * 
SET_SIZE
];

571 
¥ev_addr
 = (
èg_¨r
[
ba£_£äo
 * 
SET_SIZE
] << 
A
) | base_setno;

572 
ˇche_±r
 = 
BASE_CACHE_SIZE
;

573 
i
=
A
+1; i<=
B
; i++)

575 
£äo
 = 
¥ev_addr
 & ((
ONE
 << 
i
) - 1);

576 
£t_±r
 = 
ˇche_±r
 + (
£äo
 * 
SET_SIZE
);

577 
¥ty_¨r
[
£t_±r
] = 
ªÆ_¥ty
;

578 
ˇche_±r
 = 
TWO
*ˇche_±∏+ 
BASE_CACHE_SIZE
;

581 
‹ig_èg
 = 
addr
 >> 
A
;

582 
i
 = 
A
;

583 
ˇche_size
 = 
BASE_CACHE_SIZE
;

584 
ˇche_±r
 = 0;

585 
i
 <
B
)

587 
de_èg
 = 
‹ig_èg
;

588 
de_¥ty
 = 
¥i‹ôy
;

589 
£äo
 = 
addr
 & ((
ONE
 << 
i
) - 1);

590 
£t_±r
 = 
ˇche_±r
 + (
£äo
 * 
SET_SIZE
);

591 
j
=0; j < 
TWO_PWR_N
; j++)

593 #ifde‡
PERF


594 ++
com∑ªs
;

596 i‡(
èg_¨r
[
£t_±r
 + 
j
] =
‹ig_èg
)

598 i‡(
¥ty_¨r
[
£t_±r
 + 
j
] > 0)

599 
	`Ârötf
(
°dîr
, "libcheetah: inconsistency in inf_handler\n");

602 
èg_¨r
[
£t_±r
 + 
j
] = 
de_èg
;

603 
¥ty_¨r
[
£t_±r
 + 
j
] = 
de_¥ty
;

607 i‡(
¥ty_¨r
[
£t_±r
 + 
j
] < 0)

609 i‡(
ﬁd_¥ty
 < 
¥ty_¨r
[
£t_±r
 + 
j
])

611 i‡(
de_¥ty
 > 
¥ty_¨r
[
£t_±r
 + 
j
])

613 
ªm_èg
 = 
èg_¨r
[
£t_±r
 + 
j
];

614 
èg_¨r
[
£t_±r
 + 
j
] = 
de_èg
;

615 
de_èg
 = 
ªm_èg
;

616 
ªm_¥ty
 = 
¥ty_¨r
[
£t_±r
 + 
j
];

617 
¥ty_¨r
[
£t_±r
 + 
j
] = 
de_¥ty
;

618 
de_¥ty
 = 
ªm_¥ty
;

623 
ˇche_±r
 +
ˇche_size
;

624 
ˇche_size
 += cache_size;

625 ++
i
;

627 
	}
}

	@libcheetah/util.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

20 
	~"../ho°.h
"

21 
	~"../misc.h
"

22 
	~"../machöe.h
"

23 
	~"utû.h
"

24 
	~"libchìèh.h
"

34 
	$powî
(
x
, 
y
)

36 
pwr
 = 1;

38 
y
 > 0)

40 
pwr
 *
x
;

41 --
y
;

43  
pwr
;

44 
	}
}

57 
	$idim2
(
row
, 
cﬁ
)

59 
i
;

60 **
¥ow
, *
pd©a
;

62 
pd©a
 = (*)
	`ˇŒoc
(
row
*
cﬁ
,  ());

63 i‡(!
pd©a
)

64 
	`Áèl
("out of virtual memory");

66 
¥ow
 = (**)
	`ˇŒoc
(
row
,  (*));

67 i‡(!
¥ow
)

68 
	`Áèl
("out of virtual memory");

70 
i
=0;i<
row
;i++)

72 
¥ow
 [
i
] = 
pd©a
;

73 
pd©a
 +
cﬁ
;

76  
¥ow
;

77 
	}
}

84 
hash_èbÀ
 *
	ghód_‰ì_li°
;

87 
	$UHT_Add_to_‰ì_li°
(
hash_èbÀ
 *
‰ì_±r
)

89 
‰ì_±r
->
nxt
 = 
hód_‰ì_li°
;

90 
hód_‰ì_li°
 = 
‰ì_±r
;

91 
	}
}

93 
hash_èbÀ
 *

94 
	$UHT_Gë_‰om_‰ì_li°
()

97 
hash_èbÀ
 *
‰ì_±r
;

99 i‡(
hód_‰ì_li°
 =
NULL
)

100  
NULL
;

103 
‰ì_±r
 = 
hód_‰ì_li°
;

104 
hód_‰ì_li°
 = hód_‰ì_li°->
nxt
;

105  
‰ì_±r
;

107 
	}
}

119 
	$rŸ©e_À·
(
y
, 
åì_node
 **
p_°ack
)

121 
x
,
z
;

123 
z
 = 
y
-1;

124 
x
 = 
y
+1;

125 i‡(
z
 > 0)

127 i‡(
p_°ack
[
z
]->
l·
 =p_°ack[
y
])

128 
p_°ack
[
z
]->
l·
 =Ö_°ack[
x
];

130 
p_°ack
[
z
]->
π
 =Ö_°ack[
x
];

132 
p_°ack
[
y
]->
π
 =Ö_°ack[
x
]->
l·
;

133 
p_°ack
[
y
]->
πwt
 -p_°ack[
x
]->rtwt + 1;

134 
p_°ack
[
x
]->
l·
 =Ö_°ack[
y
];

135 
p_°ack
[
y
] =Ö_°ack[
x
];

136 
p_°ack
[
x
] =Ö_stack[x+1];

137 
	}
}

149 
	$rŸ©e_right
(
y
, 
åì_node
 **
p_°ack
)

151 
x
,
z
;

152 
åì_node
 *
t1
, *
t2
, *
t3
;

154 
z
 = 
y
-1;

155 
x
 = 
y
+1;

156 
t1
 = 
p_°ack
[
x
];

157 
t2
 = 
p_°ack
[
y
];

158 
t3
 = 
p_°ack
[
z
];

159 i‡(
z
>0)

161 i‡(
t3
->
l·
 =
t2
)

162 
t3
->
l·
 = 
t1
;

164 
t3
->
π
 = 
t1
;

166 
t2
->
l·
 = 
t1
->
π
;

167 
t1
->
π
 = 
t2
;

168 
t1
->
πwt
 +
t2
->rtwt + 1;

169 
p_°ack
[
y
] = 
t1
;

170 
p_°ack
[
x
] =Ö_stack[x+1];

171 
	}
}

184 
	$•œy
(
©
, 
åì_node
 **
p_°ack
)

186 
x
, 
px
, 
gx
;

188 
x
 = 
©
;

189 
px
 = 
©
-1;

190 
gx
 = 
©
-2;

193 i‡(
p_°ack
[
x
] =p_°ack[
px
]->
l·
)

195 i‡(
gx
 == 0)

196 
	`rŸ©e_right
(1, 
p_°ack
);

197 i‡(
p_°ack
[
px
] =p_°ack[
gx
]->
l·
){

198 
	`rŸ©e_right
(
gx
, 
p_°ack
);

199 
	`rŸ©e_right
(
gx
, 
p_°ack
);

203 
	`rŸ©e_right
(
px
, 
p_°ack
);

204 
	`rŸ©e_À·
(
gx
, 
p_°ack
);

208 i‡(
gx
 == 0)

209 
	`rŸ©e_À·
(1, 
p_°ack
);

210 i‡(
p_°ack
[
px
] =p_°ack[
gx
]->
π
)

212 
	`rŸ©e_À·
(
gx
, 
p_°ack
);

213 
	`rŸ©e_À·
(
gx
, 
p_°ack
);

217 
	`rŸ©e_À·
(
px
, 
p_°ack
);

218 
	`rŸ©e_right
(
gx
, 
p_°ack
);

220 
	}
}

	@libcheetah/util.h

2 #i‚de‡
UTIL_H


3 
	#UTIL_H


	)

6 
powî
(
x
, 
y
);

9 **
idim2
(
row
, 
cﬁ
);

11 
	shash_èbÀ
 {

12 
md_addr_t
 
	maddr
;

13 
	mgΩtime
;

14 
	m¥ty
;

15 
	möum
;

16 
hash_èbÀ
 *
	mnxt
;

19 
UHT_Add_to_‰ì_li°
(
hash_èbÀ
 *
‰ì_±r
);

20 
hash_èbÀ
 *
UHT_Gë_‰om_‰ì_li°
();

22 
	såì_node
 {

23 
md_addr_t
 
	maddr
;

24 
	möum
;

25 
	mgΩno
;

26 
	m¥ty
;

27 
	mπwt
;

28 
åì_node
 *
	ml·
, *
	mπ
;

32 
•œy
(
©
, 
åì_node
 **
p_°ack
);

	@libexo/exo-test.c

61 
	~<°dio.h
>

62 
	~<°dlib.h
>

63 
	~"misc.h
"

64 
	~"›ti⁄s.h
"

65 
	~"libexo.h
"

68 
›t_odb_t
 *
	godb
;

71 
	ghñp_me
;

74 
	gmake_defs
;

77 *
	glﬂd_fûe
;

80 *
	gßve_fûe
;

83 
	g¥öt_db
;

86 
exo_ãrm_t
 *
	gexo_db
 = 
NULL
;

89 
	$ußge
(
FILE
 *
°ªam
, 
¨gc
, **
¨gv
)

91 
	`Ârötf
(
°ªam
, "Ußge: %†{-›ti⁄s}\n", 
¨gv
[0]);

92 
	`›t_¥öt_hñp
(
odb
, 
°ªam
);

93 
	}
}

96 
	$maö
(
¨gc
, **
¨gv
)

99 
odb
 = 
	`›t_√w
–
NULL
);

100 
	`›t_ªg_Êag
(
odb
, "-h", "print help message",

101 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

102 
	`›t_ªg_Êag
(
odb
, "-defs", "make internal defs",

103 &
make_defs
, 
FALSE
, 
TRUE
, 
NULL
);

104 
	`›t_ªg_°rög
(
odb
, "-load", "loadán EXO file",

105 &
lﬂd_fûe
, 
NULL
,

106  
TRUE
, 
NULL
);

107 
	`›t_ªg_°rög
(
odb
, "-save", "saveán EXO file",

108 &
ßve_fûe
, 
NULL
,

109  
TRUE
, 
NULL
);

110 
	`›t_ªg_Êag
(
odb
, "-print", "printÅhe EXO DBÅo stdout",

111 &
¥öt_db
, 
FALSE
,

112  
TRUE
, 
NULL
);

115 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

117 i‡(
hñp_me
)

120 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

121 
	`exô
(1);

125 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dîr
, 
TRUE
, TRUE);

127 i‡(
lﬂd_fûe
)

129 
ZFILE
 *
exo_°ªam
;

130 
exo_ãrm_t
 *
exo
;

132 
exo_°ªam
 = 
	`myzf›í
(
lﬂd_fûe
, "r");

133 i‡(!
exo_°ªam
)

134 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
lﬂd_fûe
);

136 (
exo
 = 
	`exo_ªad
(
exo_°ªam
->
fd
)Ë!
NULL
)

137 
exo_db
 = 
	`exo_chaö
”xo_db, 
exo
);

139 
	`myzf˛o£
(
exo_°ªam
);

142 i‡(
make_defs
)

144 
exo_ãrm_t
 *
li°
, *
¨øy
, *
a
, *
b
, *
c
, *
d
, *
e
, *
f
, *
g
, *
h
, *
i
;

145 *
d©a
 = "This isáÅestÅo see if blobsÑeally work...";

146 *
d©a1
 = "This isáÅestÅo see if blobsÑeally work..."

154 
d©a2
[16] =

157 
exo_db
 =

158 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_°rög
, "** basicÅypesÅests **"));

159 
exo_db
 = 
	`exo_chaö
”xo_db, 
a
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)42));

160 
exo_db
 = 
	`exo_chaö
(
b
 = 
	`exo_√w
(
ec_Êﬂt
, (
exo_Êﬂt_t
)42.0),Éxo_db);

161 
exo_db
 = 
	`exo_chaö
”xo_db, 
c
 = 
	`exo_√w
(
ec_ch¨
, ()'x'));

162 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\n'));

163 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\b'));

164 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\x02'));

165 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\xab'));

166 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "this isáÅest..."));

167 
exo_db
 =

168 
	`exo_chaö
(
exo_db
, 
d
 = 
	`exo_√w
(
ec_°rög
, "this is\naÅest...\n"));

169 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "aÅest... <<\\\b>>\n"));

171 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "** deep copyÅests **"));

172 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
d
));

173 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
c
));

174 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
b
));

175 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
a
));

177 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÜistÅests **"));

178 
exo_db
 =

179 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

180 
	`exo_dìpc›y
(
d
),Éxo_dìpc›y(
c
),

181 
	`exo_dìpc›y
(
b
),Éxo_dìpc›y(
a
), 
NULL
));

182 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
, 
NULL
));

183 
exo_db
 =

184 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

185 
	`exo_√w
(
ec_li°
, 
NULL
),

186 
	`exo_√w
(
ec_li°
, 
NULL
),

187 
	`exo_√w
(
ec_li°
, 
	`exo_dìpc›y
(
a
), 
NULL
),

188 
NULL
));

189 
li°
 = 
	`exo_dìpc›y
(
a
);

190 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

191 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
a
));

192 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

193 
li°
 = 
	`exo_chaö
(
	`exo_dìpc›y
(
c
),Üist);

194 
exo_db
 = 
	`exo_chaö
”xo_db, 
e
 = 
	`exo_√w
(
ec_li°
, 
li°
, 
NULL
));

195 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
,

196 
	`exo_dìpc›y
(
e
),

197 
	`exo_√w
(
ec_li°
, 
NULL
),

198 
	`exo_dìpc›y
(
e
),

199 
	`exo_dìpc›y
(
a
), 
NULL
));

201 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**árrayÅests **"));

202 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
));

203 
f
 = 
¨øy
 = 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
);

204 
	`EXO_ARR
(
¨øy
, 2Ë
	`exo_dìpc›y
(
e
);

205 
	`EXO_ARR
(
¨øy
, 3Ë
	`exo_dìpc›y
(
a
);

206 
	`EXO_ARR
(
¨øy
, 4Ë
	`exo_dìpc›y
(
c
);

207 
	`EXO_ARR
(
¨øy
, 6Ë
	`exo_dìpc›y
(EXO_ARR(array, 2));

208 
	`EXO_ARR
(
¨øy
, 7Ë
	`exo_dìpc›y
(EXO_ARR(array, 1));

209 
exo_db
 = 
	`exo_chaö
”xo_db, 
¨øy
);

210 
exo_db
 =

211 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_¨øy
, 4,

212 
	`exo_dìpc›y
(
a
),

213 
	`exo_dìpc›y
(
e
),

214 
	`exo_dìpc›y
(
c
),

215 
	`exo_dìpc›y
(
f
),

216 
NULL
));

218 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÅokenÅests **"));

219 
	#SYM1
 1

	)

220 
	#SYM2
 2

	)

221 
	`exo_öã∫_as
("sym1", 
SYM1
);

222 
	`exo_öã∫_as
("sym2", 
SYM2
);

223 
g
 = 
	`exo_√w
(
ec_tokí
, "sym1"),

224 
exo_db
 = 
	`exo_chaö
(exo_db,

225 
	`exo_√w
(
ec_li°
,

226 
g
,

227 
	`exo_√w
(
ec_öãgî
,

228 (
exo_öãgî_t
)

229 
g
->
as_tokí
.
ít
->
tokí
),

230 
NULL
));

231 
h
 = 
	`exo_√w
(
ec_tokí
, "sym2"),

232 
exo_db
 = 
	`exo_chaö
(exo_db,

233 
	`exo_√w
(
ec_li°
,

234 
h
,

235 
	`exo_√w
(
ec_öãgî
,

236 (
exo_öãgî_t
)

237 
h
->
as_tokí
.
ít
->
tokí
),

238 
NULL
));

239 
i
 = 
	`exo_√w
(
ec_tokí
, "sym3"),

240 
exo_db
 = 
	`exo_chaö
(exo_db,

241 
	`exo_√w
(
ec_li°
,

242 
i
,

243 
	`exo_√w
(
ec_öãgî
,

244 (
exo_öãgî_t
)

245 
i
->
as_tokí
.
ít
->
tokí
),

246 
NULL
));

249 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a
), data));

250 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a1
), data1));

251 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, (
d©a2
), data2));

254 i‡(
¥öt_db
)

256 
exo_ãrm_t
 *
exo
;

259 
	`Ârötf
(
°dout
, "\n/* EXO DB */\n\n");

260 
	`Ârötf
(
°dout
,

262 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

265 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

267 
	`exo_¥öt
(
exo
, 
°dout
);

268 
	`Ârötf
(
°dout
, "\n\n");

272 i‡(
ßve_fûe
)

274 
ZFILE
 *
exo_°ªam
;

275 
exo_ãrm_t
 *
exo
;

277 
exo_°ªam
 = 
	`myzf›í
(
ßve_fûe
, "w");

278 i‡(!
exo_°ªam
)

279 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
ßve_fûe
);

282 
	`Ârötf
(
exo_°ªam
->
fd
,

284 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

287 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

289 
	`exo_¥öt
(
exo
, 
exo_°ªam
->
fd
);

290 
	`Ârötf
(
exo_°ªam
->
fd
, "\n\n");

292 
	`myzf˛o£
(
exo_°ªam
);

294 
	}
}

	@libexo/exolex.c

7 
	#FLEX_SCANNER


	)

8 
	#YY_FLEX_MAJOR_VERSION
 2

	)

9 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	~<°dio.h
>

12 
	~<uni°d.h
>

16 #ifde‡
c_∂u•lus


17 #i‚de‡
__˝lu•lus


18 
	#__˝lu•lus


	)

23 #ifde‡
__˝lu•lus


25 
	~<°dlib.h
>

28 
	#YY_USE_PROTOS


	)

31 
	#YY_USE_CONST


	)

35 #i‡
__STDC__


37 
	#YY_USE_PROTOS


	)

38 
	#YY_USE_CONST


	)

43 #ifde‡
__TURBOC__


44 #¥agm®
w¨n
 -
rch


45 #¥agm®
w¨n
 -
u£


46 
	~<io.h
>

47 
	~<°dlib.h
>

48 
	#YY_USE_CONST


	)

49 
	#YY_USE_PROTOS


	)

52 #ifde‡
YY_USE_CONST


53 
	#yyc⁄°
 c⁄°

	)

55 
	#yyc⁄°


	)

59 #ifde‡
YY_USE_PROTOS


60 
	#YY_PROTO
(
¥Ÿo
Ë
	)
proto

62 
	#YY_PROTO
(
¥Ÿo
Ë()

	)

66 
	#YY_NULL
 0

	)

73 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

79 
	#BEGIN
 
yy_°¨t
 = 1 + 2 *

	)

85 
	#YY_START
 ((
yy_°¨t
 - 1Ë/ 2)

	)

86 
	#YYSTATE
 
YY_START


	)

89 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

92 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

94 
	#YY_END_OF_BUFFER_CHAR
 0

	)

97 
	#YY_BUF_SIZE
 16384

	)

99 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

101 
yyÀng
;

102 
FILE
 *
yyö
, *
yyout
;

104 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

105 
	#EOB_ACT_END_OF_FILE
 1

	)

106 
	#EOB_ACT_LAST_MATCH
 2

	)

124 
	#yyÀss
(
n
) \

128 *
yy_˝
 = 
yy_hﬁd_ch¨
; \

129 
YY_RESTORE_YY_MORE_OFFSET
 \

130 
yy_c_buf_p
 = 
yy_˝
 = 
yy_bp
 + 
n
 - 
YY_MORE_ADJ
; \

131 
YY_DO_BEFORE_ACTION
; \

133  0 )

	)

135 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, 
yyãxt_±r
 )

	)

141 
	tyy_size_t
;

144 
	syy_buf„r_°©e


146 
FILE
 *
	myy_öput_fûe
;

148 *
	myy_ch_buf
;

149 *
	myy_buf_pos
;

154 
yy_size_t
 
	myy_buf_size
;

159 
	myy_n_ch¨s
;

165 
	myy_is_our_buf„r
;

172 
	myy_is_öãø˘ive
;

178 
	myy_©_bﬁ
;

183 
	myy_fûl_buf„r
;

185 
	myy_buf„r_°©us
;

186 
	#YY_BUFFER_NEW
 0

	)

187 
	#YY_BUFFER_NORMAL
 1

	)

198 
	#YY_BUFFER_EOF_PENDING
 2

	)

201 
YY_BUFFER_STATE
 
	gyy_cuºít_buf„r
 = 0;

207 
	#YY_CURRENT_BUFFER
 
yy_cuºít_buf„r


	)

211 
	gyy_hﬁd_ch¨
;

213 
	gyy_n_ch¨s
;

216 
	gyyÀng
;

219 *
	gyy_c_buf_p
 = (*) 0;

220 
	gyy_öô
 = 1;

221 
	gyy_°¨t
 = 0;

226 
	gyy_did_buf„r_swôch_⁄_eof
;

228 
yyª°¨t
 
YY_PROTO
(–
FILE
 *
öput_fûe
 ));

230 
yy_swôch_to_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
√w_buf„r
 ));

231 
yy_lﬂd_buf„r_°©e
 
YY_PROTO
(( ));

232 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 
YY_PROTO
(–
FILE
 *
fûe
, 
size
 ));

233 
yy_dñëe_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

234 
yy_öô_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 ));

235 
yy_Êush_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

236 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
yy_cuºít_buf„r
 )

	)

238 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 
YY_PROTO
(–*
ba£
, 
yy_size_t
 
size
 ));

239 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 
YY_PROTO
(–
yyc⁄°
 *
yy_°r
 ));

240 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 
YY_PROTO
(–
yyc⁄°
 *
byãs
, 
Àn
 ));

242 *
yy_Êex_Æloc
 
YY_PROTO
(–
yy_size_t
 ));

243 *
yy_Êex_ªÆloc
 
YY_PROTO
(–*, 
yy_size_t
 ));

244 
yy_Êex_‰ì
 
YY_PROTO
(( * ));

246 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

248 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

250 i‡–! 
yy_cuºít_buf„r
 ) \

251 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

252 
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

253 }

	)

255 
	#yy_£t_bﬁ
(
©_bﬁ
) \

257 i‡–! 
yy_cuºít_buf„r
 ) \

258 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

259 
yy_cuºít_buf„r
->
yy_©_bﬁ
 = 
©_bﬁ
; \

260 }

	)

262 
	#YY_AT_BOL
(Ë(
yy_cuºít_buf„r
->
yy_©_bﬁ
)

	)

264 
	tYY_CHAR
;

265 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

266 
	tyy_°©e_ty≥
;

267 *
yyãxt
;

268 
	#yyãxt_±r
 
yyãxt


	)

270 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 
YY_PROTO
(( ));

271 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 
YY_PROTO
(–yy_°©e_ty≥ 
cuºít_°©e
 ));

272 
yy_gë_√xt_buf„r
 
YY_PROTO
(( ));

273 
yy_Áèl_îr‹
 
YY_PROTO
(–
yyc⁄°
 
msg
[] ));

278 
	#YY_DO_BEFORE_ACTION
 \

279 
yyãxt_±r
 = 
yy_bp
; \

280 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

281 
yy_hﬁd_ch¨
 = *
yy_˝
; \

282 *
yy_˝
 = '\0'; \

283 
yy_c_buf_p
 = 
yy_˝
;

	)

285 
	#YY_NUM_RULES
 25

	)

286 
	#YY_END_OF_BUFFER
 26

	)

287 
yyc⁄°
 
	gyy_ac˚±
[60] =

297 
yyc⁄°
 
	gyy_ec
[256] =

329 
yyc⁄°
 
	gyy_mëa
[37] =

337 
yyc⁄°
 
	gyy_ba£
[64] =

348 
yyc⁄°
 
	gyy_def
[64] =

359 
yyc⁄°
 
	gyy_nxt
[215] =

387 
yyc⁄°
 
	gyy_chk
[215] =

415 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

416 *
	gyy_œ°_ac˚±ög_˝os
;

421 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

422 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

423 
	#YY_MORE_ADJ
 0

	)

424 
	#YY_RESTORE_YY_MORE_OFFSET


	)

425 *
	gyyãxt
;

427 
	#INITIAL
 0

	)

493 
	~<°dio.h
>

494 
	~<°dlib.h
>

496 
	~"../ho°.h
"

497 
	~"../misc.h
"

498 
	~"libexo.h
"

501 #unde‡
YYLMAX


502 
	#YYLMAX
 (16*1024)

	)

505 
	#YY_NEVER_INTERACTIVE
 1

	)

507 
	glöe
 = 1;

509 
yywøp
();

510 
Àx_ót_commít
();

512 
	#BLOB_MODE
 1

	)

520 #i‚de‡
YY_SKIP_YYWRAP


521 #ifde‡
__˝lu•lus


522 "C" 
yywøp
 
YY_PROTO
(( ));

524 
yywøp
 
YY_PROTO
(( ));

528 #i‚de‡
YY_NO_UNPUT


529 
yyu≈ut
 
YY_PROTO
(–
c
, *
buf_±r
 ));

532 #i‚de‡
yyãxt_±r


533 
yy_Êex_°∫˝y
 
YY_PROTO
(–*, 
yyc⁄°
 *, ));

536 #ifde‡
YY_NEED_STRLEN


537 
yy_Êex_°æí
 
YY_PROTO
(–
yyc⁄°
 * ));

540 #i‚de‡
YY_NO_INPUT


541 #ifde‡
__˝lu•lus


542 
yyöput
 
YY_PROTO
(( ));

544 
öput
 
YY_PROTO
(( ));

548 #i‡
YY_STACK_USED


549 
	gyy_°¨t_°ack_±r
 = 0;

550 
	gyy_°¨t_°ack_dïth
 = 0;

551 *
	gyy_°¨t_°ack
 = 0;

552 #i‚de‡
YY_NO_PUSH_STATE


553 
yy_push_°©e
 
YY_PROTO
(–
√w_°©e
 ));

555 #i‚de‡
YY_NO_POP_STATE


556 
yy_p›_°©e
 
YY_PROTO
(( ));

558 #i‚de‡
YY_NO_TOP_STATE


559 
yy_t›_°©e
 
YY_PROTO
(( ));

563 
	#YY_NO_PUSH_STATE
 1

	)

564 
	#YY_NO_POP_STATE
 1

	)

565 
	#YY_NO_TOP_STATE
 1

	)

568 #ifde‡
YY_MALLOC_DECL


569 
	gYY_MALLOC_DECL


571 #i‡
__STDC__


572 #i‚de‡
__˝lu•lus


573 
	~<°dlib.h
>

584 #i‚de‡
YY_READ_BUF_SIZE


585 
	#YY_READ_BUF_SIZE
 8192

	)

590 #i‚de‡
ECHO


594 
	#ECHO
 (Ë
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )

	)

600 #i‚de‡
YY_INPUT


601 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

602 i‡–
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 ) \

604 
c
 = '*', 
n
; \

605  
n
 = 0;Ç < 
max_size
 && \

606 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

607 
buf
[
n
] = (Ë
c
; \

608 i‡–
c
 == '\n' ) \

609 
buf
[
n
++] = (Ë
c
; \

610 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

611 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

612 
ªsu…
 = 
n
; \

614 i‡–((
ªsu…
 = 
	`‰ód
–
buf
, 1, 
max_size
, 
yyö
 )) == 0) \

615 && 
	`„º‹
–
yyö
 ) ) \

616 
	`YY_FATAL_ERROR
–"öpuàö fÀx sˇ¬î faûed" );

	)

623 #i‚de‡
yyãrmö©e


624 
	#yyãrmö©e
(Ë 
YY_NULL


	)

628 #i‚de‡
YY_START_STACK_INCR


629 
	#YY_START_STACK_INCR
 25

	)

633 #i‚de‡
YY_FATAL_ERROR


634 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

640 #i‚de‡
YY_DECL


641 
	#YY_DECL
 
yyÀx
 
	`YY_PROTO
(–))

	)

647 #i‚de‡
YY_USER_ACTION


648 
	#YY_USER_ACTION


	)

652 #i‚de‡
YY_BREAK


653 
	#YY_BREAK
 ;

	)

656 
	#YY_RULE_SETUP
 \

657 
YY_USER_ACTION


	)

659 
	gYY_DECL


661 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

662 *
	gyy_˝
 = 
NULL
, *
	gyy_bp
 = NULL;

663 
	gyy_a˘
;

670 i‡–
	gyy_öô
 )

672 
	gyy_öô
 = 0;

674 #ifde‡
YY_USER_INIT


675 
	gYY_USER_INIT
;

678 i‡–! 
	gyy_°¨t
 )

679 
	gyy_°¨t
 = 1;

681 i‡–! 
	gyyö
 )

682 
	gyyö
 = 
°dö
;

684 i‡–! 
	gyyout
 )

685 
	gyyout
 = 
°dout
;

687 i‡–! 
	gyy_cuºít_buf„r
 )

688 
	gyy_cuºít_buf„r
 =

689 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

691 
yy_lﬂd_buf„r_°©e
();

696 
	gyy_˝
 = 
yy_c_buf_p
;

699 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

704 
	gyy_bp
 = 
yy_˝
;

706 
	gyy_cuºít_°©e
 = 
yy_°¨t
;

707 
	gyy_m©ch
:

710 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

711 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

713 
	gyy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

714 
	gyy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

716  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

718 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

719 i‡–
	gyy_cuºít_°©e
 >= 60 )

720 
yy_c
 = 
yy_mëa
[() yy_c];

722 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

723 ++
	gyy_˝
;

725  
	gyy_ba£
[
yy_cuºít_°©e
] != 178 );

727 
	gyy_föd_a˘i⁄
:

728 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

729 i‡–
	gyy_a˘
 == 0 )

731 
yy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

732 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

733 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

736 
	gYY_DO_BEFORE_ACTION
;

739 
	gdo_a˘i⁄
:

742  
yy_a˘
 )

746 *
yy_˝
 = 
yy_hﬁd_ch¨
;

747 
	gyy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

748 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

749 
	gyy_föd_a˘i⁄
;

752 
YY_RULE_SETUP


754 {  
Àx_byã
; }

755 
YY_BREAK


757 
YY_RULE_SETUP


759 { 
Àx_ót_commít
(); }

760 
YY_BREAK


762 
YY_RULE_SETUP


764 {  
Àx_addªss
; }

765 
YY_BREAK


767 
YY_RULE_SETUP


769 {  
Àx_öãgî
; }

770 
YY_BREAK


772 
YY_RULE_SETUP


774 {  
Àx_öãgî
; }

775 
YY_BREAK


777 
YY_RULE_SETUP


779 {  
Àx_Êﬂt
; }

780 
YY_BREAK


782 
YY_RULE_SETUP


784 {  
Àx_Êﬂt
; }

785 
YY_BREAK


787 
YY_RULE_SETUP


789 {  
Àx_Êﬂt
; }

790 
YY_BREAK


792 
YY_RULE_SETUP


794 {  
Àx_ch¨
; }

795 
YY_BREAK


797 
YY_RULE_SETUP


799  {  
Àx_°rög
; }

800 
YY_BREAK


802 
YY_RULE_SETUP


804 {  
Àx_tokí
; }

805 
YY_BREAK


807 
YY_RULE_SETUP


809 {  
Àx_tokí
; }

810 
YY_BREAK


812 
YY_RULE_SETUP


815 
YY_BREAK


817 
YY_RULE_SETUP


820 
YY_BREAK


822 
YY_RULE_SETUP


825 
YY_BREAK


827 
YY_RULE_SETUP


830 
YY_BREAK


832 
YY_RULE_SETUP


835 
YY_BREAK


837 
YY_RULE_SETUP


840 
YY_BREAK


842 
YY_RULE_SETUP


845 
YY_BREAK


847 
YY_RULE_SETUP


849 { 
BEGIN
(
BLOB_MODE
);  '<'; }

850 
YY_BREAK


852 
YY_RULE_SETUP


854 { 
BEGIN
(
INITIAL
);  '>'; }

855 
YY_BREAK


857 
YY_RULE_SETUP


860 
YY_BREAK


862 
YY_RULE_SETUP


864 { 
löe
++; }

865 
YY_BREAK


866 
YY_STATE_EOF
(
INITIAL
):

867 
YY_STATE_EOF
(
BLOB_MODE
):

869 {  
Àx_eof
; }

870 
YY_BREAK


872 
YY_RULE_SETUP


875 
Áèl
("bogus character in input"); }

876 
YY_BREAK


878 
YY_RULE_SETUP


880 
ECHO
;

881 
	gYY_BREAK


884 
	gYY_END_OF_BUFFER
:

887 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - 
yyãxt_±r
) - 1;

890 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

891 
YY_RESTORE_YY_MORE_OFFSET


893 i‡–
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

904 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

905 
	gyy_cuºít_buf„r
->
	gyy_öput_fûe
 = 
yyö
;

906 
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

916 i‡–
	gyy_c_buf_p
 <&
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

918 
yy_°©e_ty≥
 
yy_√xt_°©e
;

920 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

922 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

933 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

935 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

937 i‡–
	gyy_√xt_°©e
 )

940 
	gyy_˝
 = ++
yy_c_buf_p
;

941 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

942 
	gyy_m©ch
;

947 
	gyy_˝
 = 
yy_c_buf_p
;

948 
	gyy_föd_a˘i⁄
;

952  
yy_gë_√xt_buf„r
() )

954 
	gEOB_ACT_END_OF_FILE
:

956 
yy_did_buf„r_swôch_⁄_eof
 = 0;

958 i‡–
yywøp
() )

969 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

971 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

972 
	gdo_a˘i⁄
;

977 i‡–! 
	gyy_did_buf„r_swôch_⁄_eof
 )

978 
	gYY_NEW_FILE
;

983 
	gEOB_ACT_CONTINUE_SCAN
:

984 
yy_c_buf_p
 =

985 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

987 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

989 
	gyy_˝
 = 
yy_c_buf_p
;

990 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

991 
	gyy_m©ch
;

993 
	gEOB_ACT_LAST_MATCH
:

994 
yy_c_buf_p
 =

995 &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
];

997 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

999 
	gyy_˝
 = 
yy_c_buf_p
;

1000 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

1001 
	gyy_föd_a˘i⁄
;

1007 
YY_FATAL_ERROR
(

1022 
	$yy_gë_√xt_buf„r
()

1024 *
de°
 = 
yy_cuºít_buf„r
->
yy_ch_buf
;

1025 *
sour˚
 = 
yyãxt_±r
;

1026 
numbî_to_move
, 
i
;

1027 
ªt_vÆ
;

1029 i‡–
yy_c_buf_p
 > &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] )

1030 
	`YY_FATAL_ERROR
(

1033 i‡–
yy_cuºít_buf„r
->
yy_fûl_buf„r
 == 0 )

1035 i‡–
yy_c_buf_p
 - 
yyãxt_±r
 - 
YY_MORE_ADJ
 == 1 )

1040  
EOB_ACT_END_OF_FILE
;

1048  
EOB_ACT_LAST_MATCH
;

1055 
numbî_to_move
 = (Ë(
yy_c_buf_p
 - 
yyãxt_±r
) - 1;

1057  
i
 = 0; i < 
numbî_to_move
; ++i )

1058 *(
de°
++Ë*(
sour˚
++);

1060 i‡–
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1064 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars = 0;

1068 
num_to_ªad
 =

1069 
yy_cuºít_buf„r
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1071  
num_to_ªad
 <= 0 )

1073 #ifde‡
YY_USES_REJECT


1074 
	`YY_FATAL_ERROR
(

1079 
YY_BUFFER_STATE
 
b
 = 
yy_cuºít_buf„r
;

1081 
yy_c_buf_p_off£t
 =

1082 (Ë(
yy_c_buf_p
 - 
b
->
yy_ch_buf
);

1084 i‡–
b
->
yy_is_our_buf„r
 )

1086 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1088 i‡–
√w_size
 <= 0 )

1089 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1091 
b
->
yy_buf_size
 *= 2;

1093 
b
->
yy_ch_buf
 = (*)

1095 
	`yy_Êex_ªÆloc
–(*Ë
b
->
yy_ch_buf
,

1096 
b
->
yy_buf_size
 + 2 );

1100 
b
->
yy_ch_buf
 = 0;

1102 i‡–! 
b
->
yy_ch_buf
 )

1103 
	`YY_FATAL_ERROR
(

1106 
yy_c_buf_p
 = &
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1108 
num_to_ªad
 = 
yy_cuºít_buf„r
->
yy_buf_size
 -

1109 
numbî_to_move
 - 1;

1113 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1114 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1117 
	`YY_INPUT
–(&
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
]),

1118 
yy_n_ch¨s
, 
num_to_ªad
 );

1120 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1123 i‡–
yy_n_ch¨s
 == 0 )

1125 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1127 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1128 
	`yyª°¨t
–
yyö
 );

1133 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1134 
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =

1135 
YY_BUFFER_EOF_PENDING
;

1140 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1142 
yy_n_ch¨s
 +
numbî_to_move
;

1143 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] = 
YY_END_OF_BUFFER_CHAR
;

1144 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] = 
YY_END_OF_BUFFER_CHAR
;

1146 
yyãxt_±r
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[0];

1148  
ªt_vÆ
;

1149 
	}
}

1154 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
()

1156 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1157 *
yy_˝
;

1159 
yy_cuºít_°©e
 = 
yy_°¨t
;

1161  
yy_˝
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
; yy_˝ < 
yy_c_buf_p
; ++yy_cp )

1163 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1164 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1166 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1167 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1169  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1171 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1172 i‡–
yy_cuºít_°©e
 >= 60 )

1173 
yy_c
 = 
yy_mëa
[() yy_c];

1175 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1178  
yy_cuºít_°©e
;

1179 
	}
}

1188 #ifde‡
YY_USE_PROTOS


1189 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1191 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_cuºít_°©e
 )

1192 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1195 
yy_is_jam
;

1196 *
yy_˝
 = 
yy_c_buf_p
;

1198 
YY_CHAR
 
yy_c
 = 1;

1199 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1201 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1202 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1204  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1206 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1207 i‡–
yy_cuºít_°©e
 >= 60 )

1208 
yy_c
 = 
yy_mëa
[() yy_c];

1210 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1211 
yy_is_jam
 = (
yy_cuºít_°©e
 == 59);

1213  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1214 
	}
}

1217 #i‚de‡
YY_NO_UNPUT


1218 #ifde‡
YY_USE_PROTOS


1219 
	$yyu≈ut
–
c
, *
yy_bp
 )

1221 
	$yyu≈ut
–
c
, 
yy_bp
 )

1222 
c
;

1223 *
yy_bp
;

1226 *
yy_˝
 = 
yy_c_buf_p
;

1229 *
yy_˝
 = 
yy_hﬁd_ch¨
;

1231 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1234 
numbî_to_move
 = 
yy_n_ch¨s
 + 2;

1235 *
de°
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[

1236 
yy_cuºít_buf„r
->
yy_buf_size
 + 2];

1237 *
sour˚
 =

1238 &
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
];

1240  
sour˚
 > 
yy_cuºít_buf„r
->
yy_ch_buf
 )

1241 *--
de°
 = *--
sour˚
;

1243 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1244 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1245 
yy_cuºít_buf„r
->
yy_n_ch¨s
 =

1246 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->
yy_buf_size
;

1248 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1249 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1252 *--
yy_˝
 = (Ë
c
;

1255 
yyãxt_±r
 = 
yy_bp
;

1256 
yy_hﬁd_ch¨
 = *
yy_˝
;

1257 
yy_c_buf_p
 = 
yy_˝
;

1258 
	}
}

1262 #i‚de‡
YY_NO_INPUT


1263 #ifde‡
__˝lu•lus


1264 
	$yyöput
()

1266 
	$öput
()

1269 
c
;

1271 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1273 i‡–*
yy_c_buf_p
 =
YY_END_OF_BUFFER_CHAR
 )

1279 i‡–
yy_c_buf_p
 < &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

1281 *
yy_c_buf_p
 = '\0';

1285 
off£t
 = 
yy_c_buf_p
 - 
yyãxt_±r
;

1286 ++
yy_c_buf_p
;

1288  
	`yy_gë_√xt_buf„r
() )

1290 
EOB_ACT_LAST_MATCH
:

1302 
	`yyª°¨t
–
yyö
 );

1306 
EOB_ACT_END_OF_FILE
:

1308 i‡–
	`yywøp
() )

1309  
EOF
;

1311 i‡–! 
yy_did_buf„r_swôch_⁄_eof
 )

1312 
YY_NEW_FILE
;

1313 #ifde‡
__˝lu•lus


1314  
	`yyöput
();

1316  
	`öput
();

1320 
EOB_ACT_CONTINUE_SCAN
:

1321 
yy_c_buf_p
 = 
yyãxt_±r
 + 
off£t
;

1327 
c
 = *(*Ë
yy_c_buf_p
;

1328 *
yy_c_buf_p
 = '\0';

1329 
yy_hﬁd_ch¨
 = *++
yy_c_buf_p
;

1332  
c
;

1333 
	}
}

1336 #ifde‡
YY_USE_PROTOS


1337 
	$yyª°¨t
–
FILE
 *
öput_fûe
 )

1339 
	$yyª°¨t
–
öput_fûe
 )

1340 
FILE
 *
öput_fûe
;

1343 i‡–! 
yy_cuºít_buf„r
 )

1344 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1346 
	`yy_öô_buf„r
–
yy_cuºít_buf„r
, 
öput_fûe
 );

1347 
	`yy_lﬂd_buf„r_°©e
();

1348 
	}
}

1351 #ifde‡
YY_USE_PROTOS


1352 
	$yy_swôch_to_buf„r
–
YY_BUFFER_STATE
 
√w_buf„r
 )

1354 
	$yy_swôch_to_buf„r
–
√w_buf„r
 )

1355 
YY_BUFFER_STATE
 
√w_buf„r
;

1358 i‡–
yy_cuºít_buf„r
 =
√w_buf„r
 )

1361 i‡–
yy_cuºít_buf„r
 )

1364 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1365 
yy_cuºít_buf„r
->
yy_buf_pos
 = 
yy_c_buf_p
;

1366 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1369 
yy_cuºít_buf„r
 = 
√w_buf„r
;

1370 
	`yy_lﬂd_buf„r_°©e
();

1377 
yy_did_buf„r_swôch_⁄_eof
 = 1;

1378 
	}
}

1381 #ifde‡
YY_USE_PROTOS


1382 
	$yy_lﬂd_buf„r_°©e
( )

1384 
	$yy_lﬂd_buf„r_°©e
()

1387 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

1388 
yyãxt_±r
 = 
yy_c_buf_p
 = 
yy_cuºít_buf„r
->
yy_buf_pos
;

1389 
yyö
 = 
yy_cuºít_buf„r
->
yy_öput_fûe
;

1390 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
;

1391 
	}
}

1394 #ifde‡
YY_USE_PROTOS


1395 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
FILE
 *
fûe
, 
size
 )

1397 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
fûe
, 
size
 )

1398 
FILE
 *
fûe
;

1399 
size
;

1402 
YY_BUFFER_STATE
 
b
;

1404 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1405 i‡–! 
b
 )

1406 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1408 
b
->
yy_buf_size
 = 
size
;

1413 
b
->
yy_ch_buf
 = (*Ë
	`yy_Êex_Æloc
–b->
yy_buf_size
 + 2 );

1414 i‡–! 
b
->
yy_ch_buf
 )

1415 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1417 
b
->
yy_is_our_buf„r
 = 1;

1419 
	`yy_öô_buf„r
–
b
, 
fûe
 );

1421  
b
;

1422 
	}
}

1425 #ifde‡
YY_USE_PROTOS


1426 
	$yy_dñëe_buf„r
–
YY_BUFFER_STATE
 
b
 )

1428 
	$yy_dñëe_buf„r
–
b
 )

1429 
YY_BUFFER_STATE
 
b
;

1432 i‡–! 
b
 )

1435 i‡–
b
 =
yy_cuºít_buf„r
 )

1436 
yy_cuºít_buf„r
 = (
YY_BUFFER_STATE
) 0;

1438 i‡–
b
->
yy_is_our_buf„r
 )

1439 
	`yy_Êex_‰ì
–(*Ë
b
->
yy_ch_buf
 );

1441 
	`yy_Êex_‰ì
–(*Ë
b
 );

1442 
	}
}

1446 #ifde‡
YY_USE_PROTOS


1447 
	$yy_öô_buf„r
–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 )

1449 
	$yy_öô_buf„r
–
b
, 
fûe
 )

1450 
YY_BUFFER_STATE
 
b
;

1451 
FILE
 *
fûe
;

1456 
	`yy_Êush_buf„r
–
b
 );

1458 
b
->
yy_öput_fûe
 = 
fûe
;

1459 
b
->
yy_fûl_buf„r
 = 1;

1461 #i‡
YY_ALWAYS_INTERACTIVE


1462 
b
->
yy_is_öãø˘ive
 = 1;

1464 #i‡
YY_NEVER_INTERACTIVE


1465 
b
->
yy_is_öãø˘ive
 = 0;

1467 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1470 
	}
}

1473 #ifde‡
YY_USE_PROTOS


1474 
	$yy_Êush_buf„r
–
YY_BUFFER_STATE
 
b
 )

1476 
	$yy_Êush_buf„r
–
b
 )

1477 
YY_BUFFER_STATE
 
b
;

1481 i‡–! 
b
 )

1484 
b
->
yy_n_ch¨s
 = 0;

1490 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1491 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1493 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1495 
b
->
yy_©_bﬁ
 = 1;

1496 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1498 i‡–
b
 =
yy_cuºít_buf„r
 )

1499 
	`yy_lﬂd_buf„r_°©e
();

1500 
	}
}

1503 #i‚de‡
YY_NO_SCAN_BUFFER


1504 #ifde‡
YY_USE_PROTOS


1505 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–*
ba£
, 
yy_size_t
 
size
 )

1507 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–
ba£
, 
size
 )

1508 *
ba£
;

1509 
yy_size_t
 
size
;

1512 
YY_BUFFER_STATE
 
b
;

1514 i‡–
size
 < 2 ||

1515 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1516 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1520 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1521 i‡–! 
b
 )

1522 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1524 
b
->
yy_buf_size
 = 
size
 - 2;

1525 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1526 
b
->
yy_is_our_buf„r
 = 0;

1527 
b
->
yy_öput_fûe
 = 0;

1528 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1529 
b
->
yy_is_öãø˘ive
 = 0;

1530 
b
->
yy_©_bﬁ
 = 1;

1531 
b
->
yy_fûl_buf„r
 = 0;

1532 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1534 
	`yy_swôch_to_buf„r
–
b
 );

1536  
b
;

1537 
	}
}

1541 #i‚de‡
YY_NO_SCAN_STRING


1542 #ifde‡
YY_USE_PROTOS


1543 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yyc⁄°
 *
yy_°r
 )

1545 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yy_°r
 )

1546 
yyc⁄°
 *
yy_°r
;

1549 
Àn
;

1550  
Àn
 = 0; 
yy_°r
[len]; ++len )

1553  
	`yy_sˇn_byãs
–
yy_°r
, 
Àn
 );

1554 
	}
}

1558 #i‚de‡
YY_NO_SCAN_BYTES


1559 #ifde‡
YY_USE_PROTOS


1560 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
yyc⁄°
 *
byãs
, 
Àn
 )

1562 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
byãs
, 
Àn
 )

1563 
yyc⁄°
 *
byãs
;

1564 
Àn
;

1567 
YY_BUFFER_STATE
 
b
;

1568 *
buf
;

1569 
yy_size_t
 
n
;

1570 
i
;

1573 
n
 = 
Àn
 + 2;

1574 
buf
 = (*Ë
	`yy_Êex_Æloc
–
n
 );

1575 i‡–! 
buf
 )

1576 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1578  
i
 = 0; i < 
Àn
; ++i )

1579 
buf
[
i
] = 
byãs
[i];

1581 
buf
[
Àn
] = buf[Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1583 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

1584 i‡–! 
b
 )

1585 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1590 
b
->
yy_is_our_buf„r
 = 1;

1592  
b
;

1593 
	}
}

1597 #i‚de‡
YY_NO_PUSH_STATE


1598 #ifde‡
YY_USE_PROTOS


1599 
	$yy_push_°©e
–
√w_°©e
 )

1601 
	$yy_push_°©e
–
√w_°©e
 )

1602 
√w_°©e
;

1605 i‡–
yy_°¨t_°ack_±r
 >
yy_°¨t_°ack_dïth
 )

1607 
yy_size_t
 
√w_size
;

1609 
yy_°¨t_°ack_dïth
 +
YY_START_STACK_INCR
;

1610 
√w_size
 = 
yy_°¨t_°ack_dïth
 * ( );

1612 i‡–! 
yy_°¨t_°ack
 )

1613 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_Æloc
–
√w_size
 );

1616 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_ªÆloc
(

1617 (*Ë
yy_°¨t_°ack
, 
√w_size
 );

1619 i‡–! 
yy_°¨t_°ack
 )

1620 
	`YY_FATAL_ERROR
(

1624 
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
++] = 
YY_START
;

1626 
	`BEGIN
(
√w_°©e
);

1627 
	}
}

1631 #i‚de‡
YY_NO_POP_STATE


1632 
	$yy_p›_°©e
()

1634 i‡–--
yy_°¨t_°ack_±r
 < 0 )

1635 
	`YY_FATAL_ERROR
( "start-condition stack underflow" );

1637 
	`BEGIN
(
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
]);

1638 
	}
}

1642 #i‚de‡
YY_NO_TOP_STATE


1643 
	$yy_t›_°©e
()

1645  
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
 - 1];

1646 
	}
}

1649 #i‚de‡
YY_EXIT_FAILURE


1650 
	#YY_EXIT_FAILURE
 2

	)

1653 #ifde‡
YY_USE_PROTOS


1654 
	$yy_Áèl_îr‹
–
yyc⁄°
 
msg
[] )

1656 
	$yy_Áèl_îr‹
–
msg
 )

1657 
msg
[];

1660 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1661 
	`exô
–
YY_EXIT_FAILURE
 );

1662 
	}
}

1668 #unde‡
yyÀss


1669 
	#yyÀss
(
n
) \

1673 
yyãxt
[
yyÀng
] = 
yy_hﬁd_ch¨
; \

1674 
yy_c_buf_p
 = 
yyãxt
 + 
n
; \

1675 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
; \

1676 *
yy_c_buf_p
 = '\0'; \

1677 
yyÀng
 = 
n
; \

1679  0 )

	)

1684 #i‚de‡
yyãxt_±r


1685 #ifde‡
YY_USE_PROTOS


1686 
	$yy_Êex_°∫˝y
–*
s1
, 
yyc⁄°
 *
s2
, 
n
 )

1688 
	$yy_Êex_°∫˝y
–
s1
, 
s2
, 
n
 )

1689 *
s1
;

1690 
yyc⁄°
 *
s2
;

1691 
n
;

1694 
i
;

1695  
i
 = 0; i < 
n
; ++i )

1696 
s1
[
i
] = 
s2
[i];

1697 
	}
}

1700 #ifde‡
YY_NEED_STRLEN


1701 #ifde‡
YY_USE_PROTOS


1702 
	$yy_Êex_°æí
–
yyc⁄°
 *
s
 )

1704 
	$yy_Êex_°æí
–
s
 )

1705 
yyc⁄°
 *
s
;

1708 
n
;

1709  
n
 = 0; 
s
[n]; ++n )

1712  
n
;

1713 
	}
}

1717 #ifde‡
YY_USE_PROTOS


1718 *
	$yy_Êex_Æloc
–
yy_size_t
 
size
 )

1720 *
	$yy_Êex_Æloc
–
size
 )

1721 
yy_size_t
 
size
;

1724  (*Ë
	`mÆloc
–
size
 );

1725 
	}
}

1727 #ifde‡
YY_USE_PROTOS


1728 *
	$yy_Êex_ªÆloc
–*
±r
, 
yy_size_t
 
size
 )

1730 *
	$yy_Êex_ªÆloc
–
±r
, 
size
 )

1731 *
±r
;

1732 
yy_size_t
 
size
;

1742  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1743 
	}
}

1745 #ifde‡
YY_USE_PROTOS


1746 
	$yy_Êex_‰ì
–*
±r
 )

1748 
	$yy_Êex_‰ì
–
±r
 )

1749 *
±r
;

1752 
	`‰ì
–
±r
 );

1753 
	}
}

1755 #i‡
YY_MAIN


1756 
	$maö
()

1758 
	`yyÀx
();

1760 
	}
}

1766 
	$yywøp
()

1769 
	}
}

1772 
	$Àx_ót_commít
()

1774 
c
, 
c1
;

1776 
lo›
:

1777 (
c
 = 
	`öput
()) != '*' && c != 0)

1779 i‡(
c
 == '\n')

1780 
löe
++;

1783 i‡((
c1
 = 
	`öput
()) != '/' && c1 != 0)

1785 
	`u≈ut
(
c1
);

1786 
lo›
;

1788 
	}
}

1791 
	$yy_√xtch¨
()

1793 
c
;

1796 
c
 = 
	`öput
();

1797 } 
c
 == ' ' || c == '\t' || c == '\v' || c == '\f' || c == '\n');

1798 
	`u≈ut
(
c
);

1800  
c
;

1801 
	}
}

1806 
	$yy_£t°ªam
(
FILE
 *
°ªam
)

1808 
i
;

1809 
	#MAX_STREAMS
 16

	)

1811 
FILE
 *
°ªam
;

1812 
YY_BUFFER_STATE
 
buf„r
;

1813 } 
°ªams
[
MAX_STREAMS
] = { {
NULL
, NULL}, };

1814 
num_°ªams
 = 0;

1815 
FILE
 *
œ°_°ªam
 = 
NULL
;

1818 i‡(
°ªam
 =
œ°_°ªam
)

1822 
i
=0; i < 
num_°ªams
; i++)

1824 i‡(
°ªams
[
i
].
°ªam
 == stream)

1826 
	`yy_swôch_to_buf„r
(
°ªams
[
i
].
buf„r
);

1832 i‡(
num_°ªams
 =
MAX_STREAMS
)

1833 
	`Áèl
("out ofÜex buffer streams, increase MAX_STREAMS");

1835 
°ªams
[
num_°ªams
].
°ªam
 = stream;

1836 
°ªams
[
num_°ªams
].
buf„r
 = 
	`yy_¸óã_buf„r
(
°ªam
, 
YY_BUF_SIZE
);

1837 
	`yy_swôch_to_buf„r
(
°ªams
[
num_°ªams
].
buf„r
);

1838 
num_°ªams
++;

1839 
	}
}

	@libexo/exolex.l

67 
	~<°dio.h
>

68 
	~<°dlib.h
>

70 
	~"../ho°.h
"

71 
	~"../misc.h
"

72 
	~"libexo.h
"

75 #unde‡
YYLMAX


76 
	#YYLMAX
 (16*1024)

	)

79 
	#YY_NEVER_INTERACTIVE
 1

	)

81 
	glöe
 = 1;

83 
yywøp
();

84 
Àx_ót_commít
();

88 %
s
 
BLOB_MODE


89 %
p
 3000

91 
D
 [0-9]

92 
L
 [
a
-
zA
-
Z_
]

93 
H
 [
a
-
fA
-
F0
-9]

94 
E
 [
Ee
][+-]?{
D
}+

95 
C1
 "/"

96 
C2
 "*"

97 
P
 (~|!|@|#|\
$
|%|\^|&|\*|-|\+|\||\/|\?)

99 %% /* 
	$yyÀx
 */

101 <
BLOB_MODE
>{
H
}{H} {  
Àx_byã
; }

103 <
INITIAL
>{
C1
}{
C2
} { 
	`Àx_ót_commít
(); }

105 <
INITIAL
>[\-]?0[
xX
]{
H
}+ {  
Àx_addªss
; }

106 <
INITIAL
>[\-]?0{
D
}+ {  
Àx_öãgî
; }

107 <
INITIAL
>[\-]?{
D
}+ {  
Àx_öãgî
; }

109 <
INITIAL
>[\-]?{
D
}+{
E
} {  
Àx_Êﬂt
; }

110 <
INITIAL
>[\-]?{
D
}*"."{D}+({
E
})? {  
Àx_Êﬂt
; }

111 <
INITIAL
>[\-]?{
D
}+"."{D}*({
E
})? {  
Àx_Êﬂt
; }

113 <
INITIAL
>'(\\.|[^\\'])+' {ÑeturnÜex_char; }

115 <
INITIAL
>\"(\\.|[^\\"])*\" /*"*/ {  
Àx_°rög
; }

117 <
INITIAL
>{
L
}({L}|{
D
})* {  
Àx_tokí
; }

119 <
INITIAL
>{
P
}+ {  
Àx_tokí
; }

121 <
INITIAL
>"{" {  '{'; }

122 <
INITIAL
>"}" {  '}'; }

123 <
INITIAL
>"," {  ','; }

124 <
INITIAL
>"(" {  '('; }

125 <
INITIAL
>")" {  ')'; }

126 <
INITIAL
>"[" {  '['; }

127 <
INITIAL
>"]" {  ']'; }

128 <
INITIAL
>"<" { 
	`BEGIN
(
BLOB_MODE
);  '<'; }

129 <
BLOB_MODE
>">" { 
	`BEGIN
(
INITIAL
);  '>'; }

131 [ \
t
\
v
\
f
] { ; }

132 [\
n
] { 
löe
++; }

133 <<
EOF
>> {  
Àx_eof
; }

135 
	`Áèl
("bogus character in input"); }

137 
	}
%%

140 
	$yywøp
()

143 
	}
}

146 
	$Àx_ót_commít
()

148 
c
, 
c1
;

150 
lo›
:

151 (
c
 = 
	`öput
()) != '*' && c != 0)

153 i‡(
c
 == '\n')

154 
löe
++;

157 i‡((
c1
 = 
	`öput
()) != '/' && c1 != 0)

159 
	`u≈ut
(
c1
);

160 
lo›
;

162 
	}
}

165 
	$yy_√xtch¨
()

167 
c
;

170 
c
 = 
	`öput
();

171 } 
c
 == ' ' || c == '\t' || c == '\v' || c == '\f' || c == '\n');

172 
	`u≈ut
(
c
);

174  
c
;

175 
	}
}

180 
	$yy_£t°ªam
(
FILE
 *
°ªam
)

182 
i
;

183 
	#MAX_STREAMS
 16

	)

185 
FILE
 *
°ªam
;

186 
YY_BUFFER_STATE
 
buf„r
;

187 } 
°ªams
[
MAX_STREAMS
] = { {
NULL
, NULL}, };

188 
num_°ªams
 = 0;

189 
FILE
 *
œ°_°ªam
 = 
NULL
;

192 i‡(
°ªam
 =
œ°_°ªam
)

196 
i
=0; i < 
num_°ªams
; i++)

198 i‡(
°ªams
[
i
].
°ªam
 == stream)

200 
	`yy_swôch_to_buf„r
(
°ªams
[
i
].
buf„r
);

206 i‡(
num_°ªams
 =
MAX_STREAMS
)

207 
	`Áèl
("out ofÜex buffer streams, increase MAX_STREAMS");

209 
°ªams
[
num_°ªams
].
°ªam
 = stream;

210 
°ªams
[
num_°ªams
].
buf„r
 = 
	`yy_¸óã_buf„r
(
°ªam
, 
YY_BUF_SIZE
);

211 
	`yy_swôch_to_buf„r
(
°ªams
[
num_°ªams
].
buf„r
);

212 
num_°ªams
++;

213 
	}
}

	@libexo/libexo.c

70 
	~<°dio.h
>

71 
	~<°dlib.h
>

72 
	~<°d¨g.h
>

73 
	~<˘y≥.h
>

74 
	~<limôs.h
>

75 
	~<î∫o.h
>

76 
	~<as£π.h
>

78 
	~"../ho°.h
"

79 
	~"../misc.h
"

80 
	~"../machöe.h
"

81 
	~"libexo.h
"

84 *
	gexo_˛ass_°r
[
ec_NUM
] = {

100 
	$öã∫_esˇ≥
(*
esc
, **
√xt
)

102 
c
, 
vÆue
, 
em±y
, 
cou¡
;

104 
c
 = *
esc
++) {

107 
vÆue
 = 0;

108 
em±y
 = 
TRUE
;

111 
c
 = *
esc
++;

112 i‡(!(
c
 >= 'a' && c <= 'f')

113 && !(
c
 >= 'A' && c <= 'F')

114 && !(
c
 >= '0' && c <= '9'))

116 
esc
--;

119 
vÆue
 *=16;

120 i‡(
c
 >= 'a' && c <= 'f')

121 
vÆue
 +
c
 - 'a' + 10;

122 i‡(
c
 >= 'A' && c <= 'F')

123 
vÆue
 +
c
 - 'A' + 10;

124 i‡(
c
 >= '0' && c <= '9')

125 
vÆue
 +
c
 - '0';

126 
em±y
 = 
FALSE
;

128 i‡(
em±y
)

129 
	`Áèl
("\\x used withÇoÅrailing hex digits");

135 
vÆue
 = 0;

136 
cou¡
 = 0;

137 (
c
 <'7'Ë&& (¯>'0'Ë&& (
cou¡
++ < 3))

139 
vÆue
 = (vÆuê* 8Ë+ (
c
 - '0');

140 
c
 = *
esc
++;

142 
esc
--;

148 
vÆue
 = 
c
;

152 
vÆue
 = '\n';

156 
vÆue
 = '\t';

160 
vÆue
 = '\r';

164 
vÆue
 = '\f';

168 
vÆue
 = '\b';

172 
vÆue
 = '\a';

176 
vÆue
 = '\v';

180 
vÆue
 = 
c
;

187 
vÆue
 = 
c
;

188 
	`w¨n
("n⁄-ANSIÉsˇ≥ sequí˚ `\\%c'", 
c
);

192 
	`Áèl
("unknow¿esˇ≥, '\\' fﬁlowed by ch¨ %x (`%c')", ()
c
, c);

195 i‡(*
√xt
)

196 *
√xt
 = 
esc
;

198  
vÆue
;

199 
	}
}

204 
	$öã∫_ch¨
(*
s
, **
√xt
)

206 
vÆue
;

208 i‡(
s
[0] !'\'' || s[
	`°æí
(s)-1] != '\'')

209 
	`∑nic
("mal-formed string constant");

211 i‡(
s
[1] != '\\')

213 
vÆue
 = ()
s
[1];

214 i‡(
s
[2] != '\'')

215 
	`∑nic
("mal-formed string constant");

216 i‡(
√xt
)

217 *
√xt
 = 
s
 + 2;

222 
vÆue
 = 
	`öã∫_esˇ≥
(
s
+2, 
√xt
);

226 
vÆue
 = (signed )(()(()(()value)));

228 i‡(
UCHAR_MAX
 < 
vÆue
)

229 
	`Áèl
("character constant out ofÑange");

231  
vÆue
;

232 
	}
}

235 
	$¥öt_ch¨
(
c
, 
FILE
 *
°ªam
)

237 
c
)

240 
	`Ârötf
(
°ªam
, "\\n");

244 
	`Ârötf
(
°ªam
, "\\\\");

248 
	`Ârötf
(
°ªam
, "\\'");

252 
	`Ârötf
(
°ªam
, "\\t");

256 
	`Ârötf
(
°ªam
, "\\r");

260 
	`Ârötf
(
°ªam
, "\\f");

264 
	`Ârötf
(
°ªam
, "\\b");

268 
	`Ârötf
(
°ªam
, "\\a");

272 
	`Ârötf
(
°ªam
, "\\v");

276 i‡(
	`i•röt
(
c
))

277 
	`Ârötf
(
°ªam
, "%c", 
c
);

279 
	`Ârötf
(
°ªam
, "\\x%02x", 
c
);

281 
	}
}

285 
	$öã∫_°rög
(*
°r
)

287 *
s
, *
i°r
;

290 
s
 = 
i°r
 = 
	`mÆloc
(
	`°æí
(
°r
)+1);

292 i‡(!
°r
 || !*str || *str != '\"')

293 
	`∑nic
("mal-formed string constant");

296 
°r
++;

298 *
°r
)

300 i‡(*
°r
 == '\\')

301 *
s
++ = 
	`öã∫_esˇ≥
(
°r
+1, &str);

305 i‡(*
°r
 == '\n')

306 
	`w¨n
("ANSI C forbidsÇewline in character constant");

308 i‡(*
°r
 == '"' && str[1] != '\0')

309 
	`∑nic
("encountered `\"'Émbedded in string constant");

311 i‡(*
°r
 != '\"')

312 *
s
++ = *
°r
;

313 
°r
++;

316 *
s
 = '\0';

317  
i°r
;

318 
	}
}

321 
	$¥öt_°rög
(*
s
, 
FILE
 *
°ªam
)

323 *
s
)

325 
	`¥öt_ch¨
(*
s
, 
°ªam
);

326 
s
++;

328 
	}
}

331 
	#TOKEN_BOGON
 0

	)

333 
	gtokí_id
 = 
TOKEN_BOGON
 + 1;

335 
	#TOKEN_HASH_SIZE
 1024

	)

336 
exo_tokí_t
 *
	gtokí_hash
[
TOKEN_HASH_SIZE
];

340 
	$hash_°r
(*
s
)

342 
h
 = 0;

343 *
s
)

344 
h
 = (h << 1Ë+ *
s
++;

345  (
h
 % 
TOKEN_HASH_SIZE
);

346 
	}
}

349 
exo_tokí_t
 *

350 
	$exo_öã∫
(*
tokí_°r
)

352 
ödex
;

353 
exo_tokí_t
 *
ít
;

355 
ödex
 = 
	`hash_°r
(
tokí_°r
);

357 
ít
=
tokí_hash
[
ödex
];É¡ !
NULL
;É¡Û¡->
√xt
)

359 i‡(!
	`°rcmp
(
tokí_°r
, 
ít
->
°r
))

362  
ít
;

367 
ít
 = (
exo_tokí_t
 *)
	`ˇŒoc
(1, (exo_token_t));

368 i‡(!
ít
)

369 
	`Áèl
("out of virtual memory");

371 
ít
->
°r
 = 
	`my°rdup
(
tokí_°r
);

372 
ít
->
tokí
 = 
tokí_id
++;

373 
ít
->
√xt
 = 
tokí_hash
[
ödex
];

374 
tokí_hash
[
ödex
] = 
ít
;

376  
ít
;

377 
	}
}

380 
exo_tokí_t
 *

381 
	$exo_öã∫_as
(*
tokí_°r
,

382 
tokí
)

384 
exo_tokí_t
 *
ít
;

387 i‡(
tokí_id
 > 
tokí
)

388 
	`Áèl
("token value isálready in use");

391 
ít
 = 
	`exo_öã∫
(
tokí_°r
);

393 
ít
->
tokí
 =Åoken;

396 i‡(
ít
->
tokí
 !=Åoken)

397 
	`Áèl
("symbﬁ `%s' wa†¥eviou¶y i¡î√d", 
tokí_°r
);

400  
ít
;

401 
	}
}

404 
exo_ãrm_t
 *

405 
	$exo_Æloc
(
exo_˛ass_t
 
ec
)

407 
exo_ãrm_t
 *
exo
;

409 
exo
 = (
exo_ãrm_t
 *)
	`ˇŒoc
(1, (exo_term_t));

410 i‡(!
exo
)

411 
	`Áèl
("out of virtual memory");

412 
exo
->
√xt
 = 
NULL
;

413 
exo
->
ec
 =Éc;

415  
exo
;

416 
	}
}

431 
exo_ãrm_t
 *

432 
	$exo_√w
(
exo_˛ass_t
 
ec
, ...)

434 
exo_ãrm_t
 *
exo
;

435 
va_li°
 
v
;

436 
	`va_°¨t
(
v
, 
ec
);

438 
exo
 = 
	`exo_Æloc
(
ec
);

439 
ec
)

441 
ec_öãgî
:

442 
exo
->
as_öãgî
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_öãgî_t
);

445 
ec_addªss
:

446 
exo
->
as_addªss
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_addªss_t
);

449 
ec_Êﬂt
:

450 
exo
->
as_Êﬂt
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_Êﬂt_t
);

453 
ec_ch¨
:

454 
exo
->
as_ch¨
.
vÆ
 = 
	`va_¨g
(
v
, );

457 
ec_°rög
:

459 *
°r
;

461 
°r
 = 
	`va_¨g
(
v
, *);

462 
exo
->
as_°rög
.
°r
 = (*)
	`my°rdup
(str);

466 
ec_li°
:

468 
exo_ãrm_t
 *
ít
;

470 
exo
->
as_li°
.
hód
 = 
NULL
;

472 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

473 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
ít
);

474 } 
ít
 !
NULL
);

478 
ec_¨øy
:

480 
i
;

481 
exo_ãrm_t
 *
ít
;

483 
exo
->
as_¨øy
.
size
 = 
	`va_¨g
(
v
, );

484 
exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

485 
	`ˇŒoc
(
exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

486 i‡(!
exo
->
as_¨øy
.
¨øy
)

487 
	`Áèl
("out of virtual memory");

488 
i
 = 0;

490 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

491 i‡(
ít
 !
NULL
)

493 i‡(
i
 =
exo
->
as_¨øy
.
size
)

494 
	`Áèl
("array constructor overflow");

495 
	`SET_EXO_ARR
(
exo
, 
i
, 
ít
);

497 
i
++;

498 } 
ít
 !
NULL
);

502 
ec_tokí
:

504 *
°r
;

506 
°r
 = 
	`va_¨g
(
v
, *);

507 
exo
->
as_tokí
.
ít
 = 
	`exo_öã∫
(
°r
);

511 
ec_blob
:

513 
size
;

514 *
d©a
;

516 
size
 = 
	`va_¨g
(
v
, );

517 
d©a
 = 
	`va_¨g
(
v
, *);

519 
exo
->
as_blob
.
size
 = size;

520 
exo
->
as_blob
.
d©a
 = 
	`mÆloc
(
size
);

521 i‡(
d©a
 !
NULL
)

522 
	`mem˝y
(
exo
->
as_blob
.
d©a
, d©a, 
size
);

524 
	`mem£t
(
exo
->
as_blob
.
d©a
, 0, 
size
);

528 
ec_nuŒ
:

532 
	`∑nic
("bogus EXO class");

535 
	`va_íd
(
v
);

536  
exo
;

537 
	}
}

541 
	$exo_dñëe
(
exo_ãrm_t
 *
exo
)

543 
exo
->
√xt
 = 
NULL
;

545 
exo
->
ec
)

547 
ec_öãgî
:

549 
exo
->
as_öãgî
.
vÆ
 = 0;

552 
ec_addªss
:

554 
exo
->
as_addªss
.
vÆ
 = 0;

557 
ec_Êﬂt
:

559 
exo
->
as_Êﬂt
.
vÆ
 = 0.0;

562 
ec_ch¨
:

564 
exo
->
as_ch¨
.
vÆ
 = '\0';

567 
ec_°rög
:

568 
	`‰ì
(
exo
->
as_°rög
.
°r
);

569 
exo
->
as_°rög
.
°r
 = 
NULL
;

572 
ec_li°
:

574 
exo_ãrm_t
 *
ít
, *
√xt_ít
;

576 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡ = 
√xt_ít
)

578 
√xt_ít
 = 
ít
->
√xt
;

579 
	`exo_dñëe
(
ít
);

581 
exo
->
as_li°
.
hód
 = 
NULL
;

585 
ec_¨øy
:

587 
i
;

589 
i
=0; i < 
exo
->
as_¨øy
.
size
; i++)

591 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

592 
	`exo_dñëe
(
exo
->
as_¨øy
.
¨øy
[
i
]);

594 
	`‰ì
(
exo
->
as_¨øy
.
¨øy
);

595 
exo
->
as_¨øy
.
¨øy
 = 
NULL
;

596 
exo
->
as_¨øy
.
size
 = 0;

600 
ec_tokí
:

602 
exo
->
as_tokí
.
ít
 = 
NULL
;

605 
ec_blob
:

607 
	`‰ì
(
exo
->
as_blob
.
d©a
);

608 
exo
->
as_blob
.
d©a
 = 
NULL
;

611 
ec_nuŒ
:

616 
	`∑nic
("bogus EXO class");

618 
exo
->
ec
 = (
exo_˛ass_t
)0;

621 
	`‰ì
(
exo
);

622 
	}
}

625 
exo_ãrm_t
 *

626 
	$exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
)

628 
exo_ãrm_t
 *
exo
, *
¥ev
;

630 i‡(!
f‹e
 && !
a·
)

631  
NULL
;

633 i‡(!
f‹e
)

634  
a·
;

637 
¥ev
=
NULL
,
exo
=
f‹e
;Éxÿ!NULL;ÖªvÛxo,exoÛxo->
√xt
)

639 
	`as£π
(
¥ev
);

642 
¥ev
->
√xt
 = 
a·
;

644  
f‹e
;

645 
	}
}

648 
exo_ãrm_t
 *

649 
	$exo_c›y
(
exo_ãrm_t
 *
exo
)

651 
exo_ãrm_t
 *
√w_exo
;

654 i‡(!
exo
)

655  
NULL
;

657 
√w_exo
 = 
	`exo_Æloc
(
exo
->
ec
);

658 *
√w_exo
 = *
exo
;

661 
√w_exo
->
√xt
 = 
NULL
;

663 
√w_exo
->
ec
)

665 
ec_öãgî
:

666 
ec_addªss
:

667 
ec_Êﬂt
:

668 
ec_ch¨
:

669 
ec_°rög
:

670 
ec_li°
:

671 
ec_tokí
:

675 
ec_¨øy
:

677 
i
;

680 
√w_exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

681 
	`ˇŒoc
(
√w_exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

683 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

685 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`EXO_ARR
(
exo
, i));

690 
ec_blob
:

691 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

692 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

696 
	`∑nic
("bogus EXO class");

699  
√w_exo
;

700 
	}
}

703 
exo_ãrm_t
 *

704 
	$exo_dìpc›y
(
exo_ãrm_t
 *
exo
)

706 
exo_ãrm_t
 *
√w_exo
;

709 i‡(!
exo
)

710  
NULL
;

712 
√w_exo
 = 
	`exo_c›y
(
exo
);

713 
√w_exo
->
ec
)

715 
ec_öãgî
:

716 
ec_addªss
:

717 
ec_Êﬂt
:

718 
ec_ch¨
:

719 
ec_tokí
:

723 
ec_°rög
:

725 
√w_exo
->
as_°rög
.
°r
 =

726 (*)
	`my°rdup
((*)
exo
->
as_°rög
.
°r
);

729 
ec_li°
:

732 
exo_ãrm_t
 *
ñt
, *
√w_ñt
, *
√w_li°
;

734 
√w_li°
 = 
NULL
;

735 
ñt
=
√w_exo
->
as_li°
.
hód
;É… !
NULL
;É…Û…->
√xt
)

737 
√w_ñt
 = 
	`exo_dìpc›y
(
ñt
);

738 
√w_li°
 = 
	`exo_chaö
“ew_li°, 
√w_ñt
);

740 
√w_exo
->
as_li°
.
hód
 = 
√w_li°
;

744 
ec_¨øy
:

747 
i
;

749 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

751 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`exo_dìpc›y
(
	`EXO_ARR
(
exo
, i)));

756 
ec_blob
:

757 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

758 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

762 
	`∑nic
("bogus EXO class");

765  
√w_exo
;

766 
	}
}

770 
	$exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
)

772 i‡(!
°ªam
)

773 
°ªam
 = 
°dîr
;

775 
exo
->
ec
)

777 
ec_öãgî
:

778 i‡((
exo_öãgî_t
) == 4)

779 
	`myÂrötf
(
°ªam
, "%u", 
exo
->
as_öãgî
.
vÆ
);

781 
	`myÂrötf
(
°ªam
, "%lu", 
exo
->
as_öãgî
.
vÆ
);

784 
ec_addªss
:

785 i‡((
exo_addªss_t
) == 4)

786 
	`myÂrötf
(
°ªam
, "0x%x", 
exo
->
as_öãgî
.
vÆ
);

788 
	`myÂrötf
(
°ªam
, "0x%lx", 
exo
->
as_öãgî
.
vÆ
);

791 
ec_Êﬂt
:

792 
	`Ârötf
(
°ªam
, "%f", 
exo
->
as_Êﬂt
.
vÆ
);

795 
ec_ch¨
:

796 
	`Ârötf
(
°ªam
, "'");

797 
	`¥öt_ch¨
(
exo
->
as_ch¨
.
vÆ
, 
°ªam
);

798 
	`Ârötf
(
°ªam
, "'");

801 
ec_°rög
:

802 
	`Ârötf
(
°ªam
, "\"");

803 
	`¥öt_°rög
(
exo
->
as_°rög
.
°r
, 
°ªam
);

804 
	`Ârötf
(
°ªam
, "\"");

807 
ec_li°
:

809 
exo_ãrm_t
 *
ít
;

811 
	`Ârötf
(
°ªam
, "(");

812 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡Û¡->
√xt
)

814 
	`exo_¥öt
(
ít
, 
°ªam
);

815 i‡(
ít
->
√xt
)

816 
	`Ârötf
(
°ªam
, ", ");

818 
	`Ârötf
(
°ªam
, ")");

822 
ec_¨øy
:

824 
i
, 
œ°
;

827 
œ°
=
exo
->
as_¨øy
.
size
-1;Üast >= 0;Üast--)

829 i‡(
	`EXO_ARR
(
exo
, 
œ°
Ë!
NULL
)

834 
	`Ârötf
(
°ªam
, "{%d}[", 
exo
->
as_¨øy
.
size
);

835 
i
=0; i<
exo
->
as_¨øy
.
size
 && i <
œ°
; i++)

837 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

838 
	`exo_¥öt
(
exo
->
as_¨øy
.
¨øy
[
i
], 
°ªam
);

840 
	`Ârötf
(
°ªam
, " ");

841 i‡(
i
 !
exo
->
as_¨øy
.
size
-1 && i !
œ°
)

842 
	`Ârötf
(
°ªam
, ", ");

844 
	`Ârötf
(
°ªam
, "]");

848 
ec_tokí
:

849 
	`Ârötf
(
°ªam
, "%s", 
exo
->
as_tokí
.
ít
->
°r
);

852 
ec_blob
:

854 
i
, 
¸
;

856 
	`Ârötf
(
°ªam
, "{%d}<\n", 
exo
->
as_blob
.
size
);

857 
i
=0; i < 
exo
->
as_blob
.
size
; i++)

859 
¸
 = 
FALSE
;

860 i‡(
i
 != 0 && (i % 38) == 0)

862 
	`Ârötf
(
°ªam
, "\n");

863 
¸
 = 
TRUE
;

865 
	`Ârötf
(
°ªam
, "%02x", 
exo
->
as_blob
.
d©a
[
i
]);

867 i‡(!
¸
)

868 
	`Ârötf
(
°ªam
, "\n");

869 
	`Ârötf
(
°ªam
, ">");

874 
	`∑nic
("bogus EXO class");

876 
	}
}

879 
yyÀx
();

880 
yy_√xtch¨
();

881 *
yyãxt
;

882 
FILE
 *
yyö
;

885 
	$exo_îr
(*
îr
)

887 
löe
;

889 
	`Ârötf
(
°dîr
, "EXOÖ¨£Éº‹:Üöê%d: %s\n", 
löe
, 
îr
);

890 
	`exô
(1);

891 
	}
}

894 
exo_ãrm_t
 *

895 
	$exo_ªad
(
FILE
 *
°ªam
)

897 
tok
;

898 
tok_buf
[1024], *
ídp
;

899 
exo_ãrm_t
 *
ít
 = 
NULL
;

900 
î∫o
;

901 
	`yy_£t°ªam
(
FILE
 *);

904 i‡(!
°ªam
)

905 
°ªam
 = 
°dö
;

906 
	`yy_£t°ªam
(
°ªam
);

909 
tok
 = 
	`yyÀx
();

910 
	`°r˝y
(
tok_buf
, 
yyãxt
);

912 
tok
)

914 
Àx_öãgî
:

916 
exo_öãgî_t
 
öt_vÆ
;

919 
î∫o
 = 0;

920 #ifde‡
HOST_HAS_QWORD


921 
öt_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 10);

923 
öt_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 10);

925 i‡(!
î∫o
 && !*
ídp
)

928 
ít
 = 
	`exo_√w
(
ec_öãgî
, 
öt_vÆ
);

931 
	`exo_îr
("cannotÖarse integerÜiteral");

935 
Àx_addªss
:

937 
exo_addªss_t
 
addr_vÆ
;

940 
î∫o
 = 0;

941 #ifde‡
HOST_HAS_QWORD


942 
addr_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 16);

944 
addr_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 16);

946 i‡(!
î∫o
 && !*
ídp
)

949 
ít
 = 
	`exo_√w
(
ec_addªss
, 
addr_vÆ
);

952 
	`exo_îr
("cannotÖarseáddressÜiteral");

956 
Àx_Êﬂt
:

958 
exo_Êﬂt_t
 
Êﬂt_vÆ
;

961 
î∫o
 = 0;

962 
Êﬂt_vÆ
 = 
	`°πod
(
tok_buf
, &
ídp
);

963 i‡(!
î∫o
 && !*
ídp
)

966 
ít
 = 
	`exo_√w
(
ec_Êﬂt
, 
Êﬂt_vÆ
);

969 
	`exo_îr
("cannotÖarse floatingÖointÜiteral");

973 
Àx_ch¨
:

975 
c
;

977 
c
 = 
	`öã∫_ch¨
(
tok_buf
, &
ídp
);

978 i‡(!
ídp
)

979 
	`exo_îr
("cannot convert characterÜiteral");

980 
ít
 = 
	`exo_√w
(
ec_ch¨
, 
c
);

984 
Àx_°rög
:

986 *
s
;

988 
s
 = 
	`öã∫_°rög
(
tok_buf
);

989 
ít
 = 
	`exo_√w
(
ec_°rög
, 
s
);

990 
	`‰ì
(
s
);

994 
Àx_tokí
:

995 
ít
 = 
	`exo_√w
(
ec_tokí
, 
tok_buf
);

998 
Àx_byã
:

999 
	`exo_îr
("unexpected blob byteÉncountered");

1004 
exo_ãrm_t
 *
ñt
;

1006 
ít
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

1008 i‡(
	`yy_√xtch¨
() != ')')

1012 
ñt
 = 
	`exo_ªad
(
°ªam
);

1013 i‡(!
ñt
)

1014 
	`exo_îr
("unexpectedÉnd-of-file");

1015 
ít
->
as_li°
.
hód
 =

1016 
	`exo_chaö
(
ít
->
as_li°
.
hód
, 
ñt
);

1019 i‡(
	`yy_√xtch¨
() == ',')

1020 
	`yyÀx
();

1021 } 
	`yy_√xtch¨
() != ')');

1025 
tok
 = 
	`yyÀx
();

1026 i‡(
tok
 != ')')

1027 
	`exo_îr
("expected ')'");

1032 
	`exo_îr
("unexpected ')'Éncountered");

1036 
	`exo_îr
("unexpected '<'Éncountered");

1040 
	`exo_îr
("unexpected '>'Éncountered");

1045 
˙t
, 
size
;

1046 
exo_ãrm_t
 *
ñt
;

1049 
ñt
 = 
	`exo_ªad
(
°ªam
);

1050 i‡(!
ñt
 ||É…->
ec
 !
ec_öãgî
)

1051 
	`exo_îr
("badly formedárray size");

1054 
size
 = ()
ñt
->
as_öãgî
.
vÆ
;

1057 
	`exo_dñëe
(
ñt
);

1060 
tok
 = 
	`yyÀx
();

1061 i‡(
tok
 != '}')

1062 
	`exo_îr
("expected '}'");

1064 
tok
 = 
	`yyÀx
();

1065 
tok
)

1069 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
size
, 
NULL
);

1072 i‡(
	`yy_√xtch¨
() != ']')

1075 
˙t
 = 0;

1077 i‡(
˙t
 =
ít
->
as_¨øy
.
size
)

1078 
	`exo_îr
("too many initializers forárray");

1081 i‡(
	`yy_√xtch¨
() == ',')

1083 
ñt
 = 
NULL
;

1087 
ñt
 = 
	`exo_ªad
(
°ªam
);

1088 i‡(!
ñt
)

1089 
	`exo_îr
("unexpectedÉnd-of-file");

1091 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1092 
˙t
++;

1095 i‡(
	`yy_√xtch¨
() == ',')

1096 
	`yyÀx
();

1097 } 
	`yy_√xtch¨
() != ']');

1101 
tok
 = 
	`yyÀx
();

1102 i‡(
tok
 != ']')

1103 
	`exo_îr
("expected ']'");

1108 
ít
 = 
	`exo_√w
(
ec_blob
, 
size
, 
NULL
);

1111 i‡(
	`yy_√xtch¨
() != '>')

1113 
byã_vÆ
;

1116 
˙t
 = 0;

1119 
tok
 = 
	`yyÀx
();

1121 i‡(
tok
 =
Àx_byã
)

1123 i‡(
˙t
 =
ít
->
as_blob
.
size
)

1124 
	`exo_îr
("too many initializers for blob");

1127 
î∫o
 = 0;

1128 
byã_vÆ
 = 
	`°πoul
(
yyãxt
, &
ídp
, 16);

1129 i‡(
î∫o
 !0 || *
ídp
 != '\0')

1130 
	`exo_îr
("cannotÖarse blob byteÜiteral");

1131 i‡(
byã_vÆ
 > 255)

1132 
	`∑nic
("bogus byte value");

1133 
ít
->
as_blob
.
d©a
[
˙t
] = 
byã_vÆ
;

1134 
˙t
++;

1136 i‡(
tok
 == '>')

1139 
	`exo_îr
("unexpected character in blob");

1144 i‡(
˙t
 !
ít
->
as_blob
.
size
)

1145 
	`exo_îr
("notÉnough initializers for blob");

1150 
	`exo_îr
("expected '[' or '<'");

1156 
	`exo_îr
("unexpected '}'Éncountered");

1160 
	`exo_îr
("unexpected ','Éncountered");

1165 
i
, 
˙t
;

1166 
exo_ãrm_t
 *
li°
, *
ñt
, *
√xt_ñt
;

1169 
li°
 = 
NULL
;

1170 i‡(
	`yy_√xtch¨
() == ']')

1171 
	`exo_îr
("unsizedárray hasÇo initializers");

1173 
˙t
 = 0;

1176 i‡(
	`yy_√xtch¨
() == ',')

1178 
ñt
 = 
	`exo_√w
(
ec_nuŒ
);

1182 
ñt
 = 
	`exo_ªad
(
°ªam
);

1183 i‡(!
ñt
)

1184 
	`exo_îr
("unexpectedÉnd-of-file");

1186 
˙t
++;

1187 
li°
 = 
	`exo_chaö
÷i°, 
ñt
);

1190 i‡(
	`yy_√xtch¨
() == ',')

1191 
	`yyÀx
();

1192 } 
	`yy_√xtch¨
() != ']');

1195 
tok
 = 
	`yyÀx
();

1196 i‡(
tok
 != ']')

1197 
	`exo_îr
("expected ']'");

1200 
	`as£π
(
˙t
 > 0);

1201 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
˙t
, 
NULL
);

1204 
i
=0,
ñt
=
li°
; i<
˙t
; i++,ñt=
√xt_ñt
)

1206 
	`as£π
(
ñt
 !
NULL
);

1207 
√xt_ñt
 = 
ñt
->
√xt
;

1208 i‡(
ñt
->
ec
 =
ec_nuŒ
)

1210 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
NULL
);

1211 
	`exo_dñëe
(
ít
);

1215 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1216 
ñt
->
√xt
 = 
NULL
;

1223 
	`exo_îr
("unexpected ']'Éncountered");

1226 
Àx_eof
:

1228 
ít
 = 
NULL
;

1232 
	`∑nic
("bogusÅoken");

1235  
ít
;

1236 
	}
}

	@libexo/libexo.h

82 #i‚de‡
EXO_H


83 
	#EXO_H


	)

85 
	~"../ho°.h
"

86 
	~"../misc.h
"

87 
	~"../machöe.h
"

90 
	#EXO_FMT_MAJOR
 1

	)

91 
	#EXO_FMT_MINOR
 0

	)

94 
	eexo_˛ass_t
 {

95 
	mec_öãgî
,

96 
	mec_addªss
,

97 
	mec_Êﬂt
,

98 
	mec_ch¨
,

99 
	mec_°rög
,

100 
	mec_li°
,

101 
	mec_¨øy
,

102 
	mec_tokí
,

103 
	mec_blob
,

104 
	mec_nuŒ
,

105 
	mec_NUM


109 *
exo_˛ass_°r
[
ec_NUM
];

112 
	sexo_tokí_t
 {

113 
exo_tokí_t
 *
	m√xt
;

114 *
	m°r
;

115 
	mtokí
;

118 
	sexo_ãrm_t
 {

119 
exo_ãrm_t
 *
	m√xt
;

120 
exo_˛ass_t
 
	mec
;

122 
	sas_öãgî_t
 {

123 
exo_öãgî_t
 
	mvÆ
;

124 } 
	mas_öãgî
;

125 
	sas_addªss_t
 {

126 
exo_addªss_t
 
	mvÆ
;

127 } 
	mas_addªss
;

128 
	sas_Êﬂt_t
 {

129 
exo_Êﬂt_t
 
	mvÆ
;

130 } 
	mas_Êﬂt
;

131 
	sas_ch¨_t
 {

132 
	mvÆ
;

133 } 
	mas_ch¨
;

134 
	sas_°rög_t
 {

135 *
	m°r
;

136 } 
	mas_°rög
;

137 
	sas_li°_t
 {

138 
exo_ãrm_t
 *
	mhód
;

139 } 
	mas_li°
;

140 
	sas_¨øy_t
 {

141 
	msize
;

142 
exo_ãrm_t
 **
	m¨øy
;

143 } 
	mas_¨øy
;

144 
	sas_tokí_t
 {

145 
exo_tokí_t
 *
	mít
;

146 } 
	mas_tokí
;

147 
	sas_blob_t
 {

148 
	msize
;

149 *
	md©a
;

150 } 
	mas_blob
;

151 } 
	mv¨ü¡
;

154 
	#as_öãgî
 
v¨ü¡
.
as_öãgî


	)

155 
	#as_addªss
 
v¨ü¡
.
as_addªss


	)

156 
	#as_Êﬂt
 
v¨ü¡
.
as_Êﬂt


	)

157 
	#as_ch¨
 
v¨ü¡
.
as_ch¨


	)

158 
	#as_°rög
 
v¨ü¡
.
as_°rög


	)

159 
	#as_li°
 
v¨ü¡
.
as_li°


	)

160 
	#as_¨øy
 
v¨ü¡
.
as_¨øy


	)

161 
	#as_tokí
 
v¨ü¡
.
as_tokí


	)

162 
	#as_blob
 
v¨ü¡
.
as_blob


	)

166 
	#EXO_ARR
(
E
,
N
) \

167 ((
E
)->
ec
 !
ec_¨øy
 \

168 ? (
	`Áèl
("nŸá¿¨øy"), *(
exo_ãrm_t
 **)(
NULL
)) \

169 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

170 ? (
	`Áèl
("¨øy bound†îr‹"), *(
exo_ãrm_t
 **)(
NULL
)) \

171 : (
E
)->
as_¨øy
.
¨øy
[(
N
)]))

	)

172 
	#SET_EXO_ARR
(
E
,
N
,
V
) \

173 ((
E
)->
ec
 !
ec_¨øy
 \

174 ? ()
	`Áèl
("notánárray") \

175 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

176 ? ()
	`Áèl
("array boundsÉrror") \

177 : ()((
E
)->
as_¨øy
.
¨øy
[(
N
)] = (
V
))))

	)

180 
exo_tokí_t
 *

181 
exo_öã∫
(*
tokí_°r
);

184 
exo_tokí_t
 *

185 
exo_öã∫_as
(*
tokí_°r
,

186 
tokí
);

201 
exo_ãrm_t
 *

202 
exo_√w
(
exo_˛ass_t
 
ec
, ...);

206 
exo_dñëe
(
exo_ãrm_t
 *
exo
);

209 
exo_ãrm_t
 *

210 
exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
);

213 
exo_ãrm_t
 *

214 
exo_c›y
(
exo_ãrm_t
 *
exo
);

217 
exo_ãrm_t
 *

218 
exo_dìpc›y
(
exo_ãrm_t
 *
exo
);

222 
exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
);

225 
exo_ãrm_t
 *

226 
exo_ªad
(
FILE
 *
°ªam
);

229 
	eÀx_t
 {

230 
	mÀx_öãgî
 = 256,

231 
	mÀx_addªss
,

232 
	mÀx_Êﬂt
,

233 
	mÀx_ch¨
,

234 
	mÀx_°rög
,

235 
	mÀx_tokí
,

236 
	mÀx_byã
,

237 
	mÀx_eof


	@loader.h

52 #i‚de‡
LOADER_H


53 
	#LOADER_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"ªgs.h
"

61 
	~"mem‹y.h
"

99 
AÕhaSy°emSèã
 
_sy°em
;

102 
md_addr_t
 
ld_ãxt_ba£
;

105 
ld_ãxt_size
;

108 
md_addr_t
 
ld_d©a_ba£
;

111 
ld_d©a_size
;

114 
md_addr_t
 
ld_brk_poöt
;

117 
md_addr_t
 
ld_°ack_ba£
;

120 
ld_°ack_size
;

123 
md_addr_t
 
ld_°ack_mö
;

126 *
ld_¥og_‚ame
;

129 
md_addr_t
 
ld_¥og_íåy
;

132 
md_addr_t
 
ld_ívú⁄_ba£
;

135 
ld_èrgë_big_ídün
;

139 
ld_ªg_°©s
(
°©_sdb_t
 *
sdb
);

144 
ld_lﬂd_¥og
(*
‚ame
,

145 
¨gc
, **
¨gv
,

146 **
ívp
,

147 
ªgs_t
 *
ªgs
,

148 
mem_t
 *
mem
,

149 
zîo_bss_£gs
);

	@main.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<time.h
>

56 
	~<£tjmp.h
>

57 
	~<sig«l.h
>

58 
	~<sys/ty≥s.h
>

59 #i‚de‡
_MSC_VER


60 
	~<uni°d.h
>

61 
	~<sys/time.h
>

63 #ifde‡
BFD_LOADER


64 
	~<bfd.h
>

67 
	~"ho°.h
"

68 
	~"misc.h
"

69 
	~"machöe.h
"

70 
	~"ídün.h
"

71 
	~"vîsi⁄.h
"

72 
	~"dlôe.h
"

73 
	~"›ti⁄s.h
"

74 
	~"°©s.h
"

75 
	~"lﬂdî.h
"

76 
	~"sim.h
"

80 
	$sig«l_sim_°©s
(
sigty≥
)

82 
sim_dump_°©s
 = 
TRUE
;

83 
	}
}

87 
	$sig«l_exô_now
(
sigty≥
)

89 
sim_exô_now
 = 
TRUE
;

90 
	}
}

93 
cou¡î_t
 
	gsim_num_ö¢
 = 0;

97 
	gsim_mem_ußge
 = 0;

101 
time_t
 
	gsim_°¨t_time
;

102 
time_t
 
	gsim_íd_time
;

103 
	gsim_ñ≠£d_time
;

106 
	gsim_sw≠_byãs
;

107 
	gsim_sw≠_w‹ds
;

110 
	gsim_exô_now
 = 
FALSE
;

113 
jmp_buf
 
	gsim_exô_buf
;

116 
	gsim_dump_°©s
 = 
FALSE
;

119 
›t_odb_t
 *
	gsim_odb
;

122 
°©_sdb_t
 *
	gsim_sdb
;

125 *
	gsim_eio_‚ame
 = 
NULL
;

126 *
	gsim_chk±_‚ame
 = 
NULL
;

127 
FILE
 *
	gsim_eio_fd
 = 
NULL
;

130 *
	gsim_simout
 = 
NULL
;

131 *
	gsim_¥ogout
 = 
NULL
;

132 
FILE
 *
	gsim_¥ogfd
 = 
NULL
;

135 
	gexec_ödex
 = -1;

138 
	ghñp_me
;

141 
	gønd_£ed
;

144 
	göô_quô
;

146 #i‚de‡
_MSC_VER


148 
	gni˚_¥i‹ôy
;

152 
	#NICE_DEFAULT_VALUE
 0

	)

155 
	$‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

157 
exec_ödex
 = 
i
;

158  
FALSE
;

159 
	}
}

162 
	$b™√r
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

164 *
s
;

166 
	`Ârötf
(
fd
,

172 ((
s
 = 
	`°ºchr
(
¨gv
[0], '/')) ? s+1 :árgv[0]),

173 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

174 
	}
}

177 
	$ußge
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

179 
	`Ârötf
(
fd
, "Ußge: %†{-›ti⁄s}ÉxecuèbÀ {¨gumíts}\n", 
¨gv
[0]);

180 
	`›t_¥öt_hñp
(
sim_odb
, 
fd
);

181 
	}
}

183 
	gru¬ög
 = 
FALSE
;

187 
	$sim_¥öt_°©s
(
FILE
 *
fd
)

190 
ëext
, *
	`sbrk
();

193 i‡(!
ru¬ög
)

197 
sim_íd_time
 = 
	`time
((
time_t
 *)
NULL
);

198 
sim_ñ≠£d_time
 = 
	`MAX
(
sim_íd_time
 - 
sim_°¨t_time
, 1);

202 
sim_mem_ußge
 = (
	`sbrk
(0Ë- &
ëext
) / 1024;

206 
	`Ârötf
(
fd
, "\nsim: ** simulation statistics **\n");

207 
	`°©_¥öt_°©s
(
sim_sdb
, 
fd
);

208 
	`sim_aux_°©s
(
fd
);

209 
	`Ârötf
(
fd
, "\n");

210 
	}
}

214 
	$exô_now
(
exô_code
)

217 
	`sim_¥öt_°©s
(
°dîr
);

220 
	`sim_unöô
();

223 
	`exô
(
exô_code
);

224 
	}
}

227 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

229 *
s
;

230 
i
, 
exô_code
;

232 #i‚de‡
_MSC_VER


234 
	`sig«l
(
SIGUSR1
, 
sig«l_sim_°©s
);

237 
	`sig«l
(
SIGUSR2
, 
sig«l_exô_now
);

241 
	`Áèl_hook
(
sim_¥öt_°©s
);

244 i‡((
exô_code
 = 
	`£tjmp
(
sim_exô_buf
)) != 0)

247 
	`exô_now
(
exô_code
-1);

251 
sim_odb
 = 
	`›t_√w
(
‹ph™_‚
);

252 
	`›t_ªg_Êag
(
sim_odb
, "-h", "print help message",

253 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

254 
	`›t_ªg_Êag
(
sim_odb
, "-v", "verbose operation",

255 &
vîbo£
, 
FALSE
, FALSE, 
NULL
);

256 
	`›t_ªg_Êag
(
sim_odb
, "-vr", "verboseÑegisters operation",

257 &
vîbo£_ªgs
, 
FALSE
, FALSE, 
NULL
);

258 
	`›t_ªg_uöt
(
sim_odb
, "-trigger:inst", "trigger instruction for verbose operation",

259 &
åiggî_ö°
, 0,

260  
TRUE
, 
NULL
);

261 #ifde‡
DEBUG


262 
	`›t_ªg_Êag
(
sim_odb
, "-d", "enable debug message",

263 &
debuggög
, 
FALSE
, FALSE, 
NULL
);

265 
	`›t_ªg_Êag
(
sim_odb
, "-i", "start in Dlite debugger",

266 &
dlôe_a˘ive
, 
FALSE
, FALSE, 
NULL
);

267 
	`›t_ªg_öt
(
sim_odb
, "-seed",

269 &
ønd_£ed
, 1, 
TRUE
, 
NULL
);

270 
	`›t_ªg_Êag
(
sim_odb
, "-q", "initializeándÅerminate immediately",

271 &
öô_quô
, 
FALSE
, FALSE, 
NULL
);

272 
	`›t_ªg_°rög
(
sim_odb
, "-chkpt", "restore EIOÅraceÉxecution from <fname>",

273 &
sim_chk±_‚ame
, 
NULL
, 
FALSE
, NULL);

276 
	`›t_ªg_°rög
(
sim_odb
, "-redir:sim",

278 &
sim_simout
,

279  
NULL
, 
FALSE
, NULL);

280 
	`›t_ªg_°rög
(
sim_odb
, "-redir:prog",

282 &
sim_¥ogout
, 
NULL
, 
FALSE
, NULL);

284 #i‚de‡
_MSC_VER


286 
	`›t_ªg_öt
(
sim_odb
, "-nice",

287 "simuœt‹ schedulögÖri‹ôy", &
ni˚_¥i‹ôy
,

288  
NICE_DEFAULT_VALUE
, 
TRUE
, 
NULL
);

294 
	`sim_ªg_›ti⁄s
(
sim_odb
);

297 
exec_ödex
 = -1;

298 
	`›t_¥o˚ss_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

301 i‡(
sim_simout
 !
NULL
)

304 
	`fÊush
(
°dîr
);

305 i‡(!
	`‰e›í
(
sim_simout
, "w", 
°dîr
))

306 
	`Áèl
("u«bÀÅÿªdúe˘ simuœt‹ ouçuàtÿfûê`%s'", 
sim_simout
);

309 i‡(
sim_¥ogout
 !
NULL
)

312 
sim_¥ogfd
 = 
	`f›í
(
sim_¥ogout
, "w");

313 i‡(!
sim_¥ogfd
)

314 
	`Áèl
("u«bÀÅÿªdúe˘Örogøm ouçuàtÿfûê`%s'", 
sim_¥ogout
);

318 i‡(
¨gc
 < 2)

320 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

321 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

322 
	`exô
(1);

326 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

328 i‡(
hñp_me
)

331 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

332 
	`exô
(1);

336 i‡(
ønd_£ed
 == 0)

339 
	`my§™d
(
	`time
((
time_t
 *)
NULL
));

344 
	`my§™d
(
ønd_£ed
);

348 i‡(
exec_ödex
 == -1)

351 
	`Ârötf
(
°dîr
, "error:ÇoÉxecutable specified\n");

352 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

353 
	`exô
(1);

358 
	`sim_check_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

360 #i‚de‡
_MSC_VER


362 i‡(
	`ni˚
(0Ë< 
ni˚_¥i‹ôy
)

364 i‡(
	`ni˚
(
ni˚_¥i‹ôy
 -Çice(0)) < 0)

365 
	`Áèl
("couldÇotÑenice simulatorÖrocess");

370 
sim_num_ö¢
 = 0;

372 #ifde‡
BFD_LOADER


374 
	`bfd_öô
();

378 
	`md_öô_decodî
();

381 
	`sim_öô
();

384 
	`sim_lﬂd_¥og
(
¨gv
[
exec_ödex
], 
¨gc
-exec_ödex,árgv+exec_ödex, 
ívp
);

387 
sim_sdb
 = 
	`°©_√w
();

388 
	`sim_ªg_°©s
(
sim_sdb
);

390 
	`°©_ªg_uöt
(
sim_sdb
, "sim_mem_usage",

392 &
sim_mem_ußge
, sim_mem_usage, "%11dk");

396 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

399 
	`Ârötf
(
°dîr
, "sim: commandÜine: ");

400 
i
=0; i < 
¨gc
; i++)

401 
	`Ârötf
(
°dîr
, "%†", 
¨gv
[
i
]);

402 
	`Ârötf
(
°dîr
, "\n");

405 
s
 = 
	`˘ime
(&
sim_°¨t_time
);

406 i‡(
s
[
	`°æí
(s)-1] == '\n')

407 
s
[
	`°æí
(s)-1] = '\0';

408 
	`Ârötf
(
°dîr
, "\nsim: simuœti⁄ sèπed @ %s, o±i⁄†fﬁlow:\n", 
s
);

409 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dîr
, 
TRUE
, TRUE);

410 
	`sim_aux_c⁄fig
(
°dîr
);

411 
	`Ârötf
(
°dîr
, "\n");

414 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

416 i‡(
öô_quô
)

417 
	`exô_now
(0);

419 
ru¬ög
 = 
TRUE
;

420 
	`sim_maö
();

423 
	`exô_now
(0);

426 
	}
}

	@makedepend/cppsetup.c

4 
	~"def.h
"

6 #ifdef 
CPP


11 
	#IB
 1

	)

12 
	#SB
 2

	)

13 
	#NB
 4

	)

14 
	#CB
 8

	)

15 
	#QB
 16

	)

16 
	#WB
 32

	)

17 
	#SALT
 '#'

	)

18 #i‡
pdp11
 | 
vax
 | 
ns16000
 | 
mc68000
 | 
ibm032


19 
	#COFF
 128

	)

21 
	#COFF
 0

	)

26 *
ouç
, *
öp
, *
√wp
, *
≥nd
;

27 *
±πab
;

28 
Á°ab
[];

29 
¶Ÿab
[];

34 
fûïoöãr
 *
	gcuºítfûe
;

35 
ö˛i°
 *
	gcuºítöc
;

37 
	$˝p£tup
(
löe
, 
fûï
, 
öc
)

38 *
löe
;

39 
fûïoöãr
 *
fûï
;

40 
ö˛i°
 *
öc
;

42 *
p
, 
ßvec
;

43 
boﬁón
 
£tupd⁄e
 = 
FALSE
;

44 
boﬁón
 
vÆue
;

46 i‡(!
£tupd⁄e
) {

47 
	`˝p_v¨£tup
();

48 
£tupd⁄e
 = 
TRUE
;

51 
cuºítfûe
 = 
fûï
;

52 
cuºítöc
 = 
öc
;

53 
öp
 = 
√wp
 = 
löe
;

54 
p
=
√wp
; *p;Ö++)

60 *
p
++ = '\n';

61 
ßvec
 = *
p
;

62 *
p
 = '\0';

63 
≥nd
 = 
p
;

65 
±πab
 = 
¶Ÿab
+
COFF
;

66 *--
öp
 = 
SALT
;

67 
ouç
=
öp
;

68 
vÆue
 = 
	`yy∑r£
();

69 *
p
 = 
ßvec
;

70 (
vÆue
);

71 
	}
}

73 
symèb
 *
	$lookup
(
symbﬁ
)

74 *
symbﬁ
;

76 
symèb
 
undeföed
;

77 
symèb
 *
•
;

79 
•
 = 
	`isdeföed
(
symbﬁ
, 
cuºítöc
);

80 i‡(
•
 =
NULL
) {

81 
•
 = &
undeföed
;

82 
•
->
s_vÆue
 = 
NULL
;

84  (
•
);

85 
	}
}

87 
	$µîr‹
(
èg
, 
x0
,
x1
,
x2
,
x3
,
x4
)

88 
èg
,
x0
,
x1
,
x2
,
x3
,
x4
;

90 
	`w¨nög
("\"%s\",Üöê%d: ", 
cuºítöc
->
i_fûe
, 
cuºítfûe
->
f_löe
);

91 
	`w¨nög
(
x0
,
x1
,
x2
,
x3
,
x4
);

92 
	}
}

95 
	$yyîr‹
(
s
)

96 *
s
;

98 
	`Áèl
("F©ÆÉº‹: %s\n", 
s
);

99 
	}
}

	@makedepend/def.h

4 
	~<X11/Xosdefs.h
>

5 
	~<°dio.h
>

6 
	~<˘y≥.h
>

7 #i‚de‡
X_NOT_POSIX


8 #i‚de‡
_POSIX_SOURCE


9 
	#_POSIX_SOURCE


	)

12 
	~<sys/ty≥s.h
>

13 
	~<f˙é.h
>

14 
	~<sys/°©.h
>

16 
	#MAXDEFINES
 512

	)

17 
	#MAXFILES
 512

	)

18 
	#MAXDIRS
 20

	)

19 
	#SYMTABINC
 10

	)

20 
	#TRUE
 1

	)

21 
	#FALSE
 0

	)

24 
	#IF
 0

	)

25 
	#IFDEF
 1

	)

26 
	#IFNDEF
 2

	)

27 
	#ELSE
 3

	)

28 
	#ENDIF
 4

	)

29 
	#DEFINE
 5

	)

30 
	#UNDEF
 6

	)

31 
	#INCLUDE
 7

	)

32 
	#LINE
 8

	)

33 
	#PRAGMA
 9

	)

34 
	#ERROR
 10

	)

35 
	#IDENT
 11

	)

36 
	#SCCS
 12

	)

37 
	#ELIF
 13

	)

38 
	#EJECT
 14

	)

39 
	#IFFALSE
 15

	)

40 
	#ELIFFALSE
 16

	)

41 
	#INCLUDEDOT
 17

	)

42 
	#IFGUESSFALSE
 18

	)

43 
	#ELIFGUESSFALSE
 19

	)

45 #ifde‡
DEBUG


46 
_debugmask
;

56 
	#debug
(
Àvñ
,
¨g
Ë{ i‡(
_debugmask
 & (1 <<Üevñ)Ë
w¨nög
árg; }

	)

58 
	#debug
(
Àvñ
,
¨g
Ë

	)

61 
	tboﬁón
;

63 
	ssymèb
 {

64 *
	ms_«me
;

65 *
	ms_vÆue
;

68 
	sö˛i°
 {

69 *
	mi_öc°rög
;

70 *
	mi_fûe
;

71 
ö˛i°
 **
	mi_li°
;

72 
	mi_li°Àn
;

73 
symèb
 *
	mi_defs
;

74 
symèb
 *
	mi_œ°def
;

75 
	mi_deÊí
;

76 
boﬁón
 
	mi_defchecked
;

77 
boﬁón
 
	mi_nŸifõd
;

78 
boﬁón
 
	mi_m¨ked
;

79 
boﬁón
 
	mi_£¨ched
;

80 
boﬁón
 
	mi_ö˛uded_sym
;

84 
	sfûïoöãr
 {

85 *
	mf_p
;

86 *
	mf_ba£
;

87 *
	mf_íd
;

88 
	mf_Àn
;

89 
	mf_löe
;

92 #i‚de‡
X_NOT_STDC_ENV


93 
	~<°dlib.h
>

94 #i‡
deföed
(
macII
Ë&& !deföed(
__STDC__
)

95 *
mÆloc
(), *
ªÆloc
();

98 *
mÆloc
();

99 *
ªÆloc
();

102 *
c›y
();

103 *
ba£«me
();

104 *
gëlöe
();

105 
symèb
 *
¶ookup
();

106 
symèb
 *
isdeföed
();

107 
symèb
 *
fdeföed
();

108 
fûïoöãr
 *
gëfûe
();

109 
ö˛i°
 *
√wö˛ude
();

110 
ö˛i°
 *
öc_∑th
();

	@makedepend/imakemdep.h

8 #ifde‡
hpux


9 
	#USE_CC_E


	)

12 #ifde‡
CCIMAKE


19 #ifde‡
hpux


20 #ifde‡
hp9000s800


21 
	#imake_ccÊags
 "-DSYSV"

	)

23 
	#imake_ccÊags
 "-Wc,-Nd4000,-Ns3000 -DSYSV"

	)

27 #i‡
deföed
(
macII
Ë|| deföed(
_AUX_SOURCE
)

28 
	#imake_ccÊags
 "-DmacII -DSYSV"

	)

31 #ifde‡
°ñœr


32 
	#imake_ccÊags
 "-DSYSV"

	)

35 #ifde‡
©t


36 
	#imake_ccÊags
 "-X¯-DSVR4"

	)

39 #ifde‡
s⁄y


40 #ifde‡
SYSTYPE_SYSV


41 
	#imake_ccÊags
 "-DSVR4"

	)

43 
	~<sys/∑øm.h
>

44 #i‡
NEWSOS
 < 41

45 
	#imake_ccÊags
 "-Dbsd43 -DNOSTDHDRS"

	)

47 
	#imake_ccÊags
 "-Dbsd43"

	)

52 #ifde‡
CRAY


54 
	#imake_ccÊags
 "-DSYSV -DUSG -DX_NOT_STDC_ENV"

	)

57 #ifde‡
_IBMR2


58 
	#imake_ccÊags
 "-Daix -DSYSV -D_IBMR2"

	)

60 #ifde‡
aix


61 
	#imake_ccÊags
 "-Daix -DSYSV"

	)

65 #ifde‡
Mùs


66 #i‡
deföed
(
SYSTYPE_BSD
Ë|| deföed(
BSD
Ë|| deföed(
BSD43
)

67 
	#imake_ccÊags
 "-DMù†-DBSD43"

	)

69 
	#imake_ccÊags
 "-DMù†-DSYSV"

	)

73 #ifde‡
is68k


74 
	#imake_ccÊags
 "-Dlu« -Duniosb"

	)

77 #ifde‡
SYSV386


78 #ifde‡
SVR4


79 
	#imake_ccÊags
 "-X¯-DSVR4"

	)

81 
	#imake_ccÊags
 "-DSYSV"

	)

85 #ifde‡
__c⁄vex__


86 
	#imake_ccÊags
 "-‚ -tm c1"

	)

89 #ifde‡
≠ﬁlo


90 
	#imake_ccÊags
 "-DX_NOT_POSIX"

	)

94 #i‚de‡
MAKEDEPEND


101 #i‡
deföed
(
SYSV
Ë&& !deföed(
CRAY
Ë&& !deföed(
Mùs
)

102 
	#dup2
(
fd1
,
fd2
Ë((fd1 =fd2Ë? fd1 : (
	`˛o£
(fd2), \

103 
	`f˙é
(
fd1
, 
F_DUPFD
, 
fd2
)))

	)

116 #i‡
deföed
(
sun
Ë|| deföed(
SYSV
Ë|| deföed(
SVR4
Ë|| deföed(
hcx
)

117 
	#FIXUP_CPP_WHITESPACE


	)

126 #ifde‡
≠ﬁlo


127 
	#DEFAULT_CPP
 "/u§/lib/˝p"

	)

129 #i‡
deföed
(
_IBMR2
Ë&& !deföed(
DEFAULT_CPP
)

130 
	#DEFAULT_CPP
 "/lib/˝p"

	)

150 
	#ARGUMENTS
 50

	)

151 *
	g˝p_¨gv
[
ARGUMENTS
] = {

152 #ifde‡
USE_CC_E


159 #ifde‡
unix


162 #ifde‡
M4330


165 #ifde‡
M4310


168 #i‡
deföed
(
macII
Ë|| deföed(
_AUX_SOURCE
)

171 #ifde‡
©t


174 #ifde‡
s⁄y


176 #i‚de‡
SYSTYPE_SYSV


180 #ifde‡
_IBMR2


182 #i‚de‡
aix


183 
	#aix


	)

186 #ifde‡
aix


188 #i‚de‡
ibm


189 
	#ibm


	)

192 #ifde‡
ibm


195 #ifde‡
lu«


197 #ifde‡
lu«1


200 #ifde‡
lu«88k


203 #ifde‡
uniosb


206 #ifde‡
uniosu


210 #ifde‡
CRAY


213 #ifde‡
Mùs


215 #i‡
deföed
(
SYSTYPE_BSD
Ë|| deföed(
BSD
Ë|| deföed(
BSD43
)

221 #ifde‡
MOTOROLA


223 #ifde‡
SYSV


226 #ifde‡
SVR4


230 #ifde‡
SYSV386


232 #ifde‡
SVR4


235 #ifde‡
ISC


238 #ifde‡
SCO


241 #ifde‡
ESIX


244 #ifde‡
ATT


247 #ifde‡
DELL


251 #i‡
deföed
(
__OSF1__
Ë|| deföed(
__osf__
)

253 #ifde‡
__mùs__


256 #ifde‡
__i386__


259 #ifde‡
__GNUC__


271 
symèb
 
	g¥edefs
[] = {

272 #ifde‡
≠ﬁlo


275 #ifde‡
ibm032


278 #ifde‡
ibm


281 #ifde‡
aix


284 #ifde‡
sun


287 #ifde‡
sun2


290 #ifde‡
sun3


293 #ifde‡
sun4


296 #ifde‡
•¨c


299 #ifde‡
hpux


302 #ifde‡
vax


305 #ifde‡
VMS


308 #ifde‡
¸ay


311 #ifde‡
CRAY


314 #ifde‡
©t


317 #ifde‡
mùs


320 #ifde‡
u…rix


323 #ifde‡
°ñœr


326 #ifde‡
mc68000


329 #ifde‡
mc68020


332 #ifde‡
__GNUC__


335 #i‡
__STDC__


338 #ifde‡
__HIGHC__


341 #ifde‡
CMU


344 #ifde‡
lu«


346 #ifde‡
lu«1


349 #ifde‡
lu«2


352 #ifde‡
lu«88k


355 #ifde‡
uniosb


358 #ifde‡
uniosu


362 #ifde‡
õìp754


365 #ifde‡
is68k


368 #ifde‡
m68k


371 #ifde‡
m88k


374 #ifde‡
bsd43


377 #ifde‡
hcx


380 #ifde‡
__OSF1__


384 {
NULL
, NULL}

	@makedepend/include.c

4 
	~"def.h
"

6 
ö˛i°
 in˛i°[ 
MAXFILES
 ],

7 *
ö˛i°p
;

8 *
ö˛udedús
[ ];

9 *
nŸdŸdŸ
[ ];

10 
boﬁón
 
show_whîe_nŸ
;

12 
ö˛i°
 *
	$öc_∑th
(
fûe
, 
ö˛ude
, 
dŸ
)

13 *
fûe
,

14 *
ö˛ude
;

15 
boﬁón
 
dŸ
;

17 
∑th
[ 
BUFSIZ
 ];

18 **
µ
, *
p
;

19 
ö˛i°
 *
ù
;

20 
°©
 
°
;

21 
boﬁón
 
found
 = 
FALSE
;

27 
ù
 = 
ö˛i°
; ip->
i_fûe
; ip++)

28 i‡((
	`°rcmp
(
ù
->
i_öc°rög
, 
ö˛ude
Ë=0Ë&& !ù->
i_ö˛uded_sym
)

30 
found
 = 
TRUE
;

38 i‡(!
found
 && 
dŸ
) {

39 i‡(
	`°©
(
ö˛ude
, &
°
) == 0) {

40 
ù
 = 
	`√wö˛ude
(
ö˛ude
, include);

41 
found
 = 
TRUE
;

43 i‡(
show_whîe_nŸ
)

44 
	`w¨nög1
("\äŸ i¿%s\n", 
ö˛ude
);

51 i‡(!
found
) {

52 
p
=
fûe
+
	`°æí
(file);Ö>file;Ö--)

53 i‡(*
p
 == '/')

55 i‡(
p
 =
fûe
)

56 
	`°r˝y
(
∑th
, 
ö˛ude
);

58 
	`°∫˝y
(
∑th
, 
fûe
, (
p
-file) + 1);

59 
∑th
[ (
p
-
fûe
) + 1 ] = '\0';

60 
	`°r˝y
(
∑th
 + (
p
-
fûe
Ë+ 1, 
ö˛ude
);

62 
	`ªmove_dŸdŸ
(
∑th
);

63 i‡(
	`°©
(
∑th
, &
°
) == 0) {

64 
ù
 = 
	`√wö˛ude
(
∑th
, 
ö˛ude
);

65 
found
 = 
TRUE
;

67 i‡(
show_whîe_nŸ
)

68 
	`w¨nög1
("\äŸ i¿%s\n", 
∑th
);

75 i‡(!
found
)

76 
µ
 = 
ö˛udedús
; *pp;Öp++) {

77 
	`•rötf
(
∑th
, "%s/%s", *
µ
, 
ö˛ude
);

78 
	`ªmove_dŸdŸ
(
∑th
);

79 i‡(
	`°©
(
∑th
, &
°
) == 0) {

80 
ù
 = 
	`√wö˛ude
(
∑th
, 
ö˛ude
);

81 
found
 = 
TRUE
;

84 i‡(
show_whîe_nŸ
)

85 
	`w¨nög1
("\äŸ i¿%s\n", 
∑th
);

88 i‡(!
found
)

89 
ù
 = 
NULL
;

90 (
ù
);

91 
	}
}

98 
	$ªmove_dŸdŸ
(
∑th
)

99 *
∑th
;

101 *
íd
, *
‰om
, *
to
, **
˝
;

102 *
comp⁄íts
[ 
MAXFILES
 ],

103 
√w∑th
[ 
BUFSIZ
 ];

104 
boﬁón
 
comp⁄ít_c›õd
;

109 
to
 = 
√w∑th
;

110 i‡(*
∑th
 == '/')

111 *
to
++ = '/';

112 *
to
 = '\0';

113 
˝
 = 
comp⁄íts
;

114 
‰om
=
íd
=
∑th
; *end;Énd++)

115 i‡(*
íd
 == '/') {

116 *
íd
 == '/')

117 *
íd
++ = '\0';

118 i‡(*
‰om
)

119 *
˝
++ = 
‰om
;

120 
‰om
 = 
íd
;

122 *
˝
++ = 
‰om
;

123 *
˝
 = 
NULL
;

128 
˝
 = 
comp⁄íts
;

129 
comp⁄ít_c›õd
 = 
FALSE
;

130 *
˝
) {

131 i‡(!
	`isdŸ
(*
˝
Ë&& !
	`isdŸdŸ
(*cp) && isdotdot(*(cp+1))) {

132 i‡(
	`issymbﬁic
(
√w∑th
, *
˝
))

133 
d⁄t_ªmove
;

134 
˝
++;

136 
d⁄t_ªmove
:

137 i‡(
comp⁄ít_c›õd
)

138 *
to
++ = '/';

139 
comp⁄ít_c›õd
 = 
TRUE
;

140 
‰om
 = *
˝
; *from; )

141 *
to
++ = *
‰om
++;

142 *
to
 = '\0';

144 
˝
++;

146 *
to
++ = '\0';

151 
	`°r˝y
(
∑th
, 
√w∑th
);

152 
	}
}

154 
	$isdŸ
(
p
)

155 *
p
;

157 if(
p
 && *p++ == '.' && *p++ == '\0')

158 (
TRUE
);

159 (
FALSE
);

160 
	}
}

162 
	$isdŸdŸ
(
p
)

163 *
p
;

165 if(
p
 && *p++ == '.' && *p++ == '.' && *p++ == '\0')

166 (
TRUE
);

167 (
FALSE
);

168 
	}
}

170 
	$issymbﬁic
(
dú
, 
comp⁄ít
)

171 *
dú
, *
comp⁄ít
;

173 #ifde‡
S_IFLNK


174 
°©
 
°
;

175 
buf
[ 
BUFSIZ
 ], **
µ
;

177 
	`•rötf
(
buf
, "%s%s%s", 
dú
, *dú ? "/" : "", 
comp⁄ít
);

178 
µ
=
nŸdŸdŸ
; *pp;Öp++)

179 i‡(
	`°rcmp
(*
µ
, 
buf
) == 0)

180  (
TRUE
);

181 i‡(
	`l°©
(
buf
, &
°
) == 0

182 && (
°
.
°_mode
 & 
S_IFMT
Ë=
S_IFLNK
) {

183 *
µ
++ = 
	`c›y
(
buf
);

184 i‡(
µ
 >&
nŸdŸdŸ
[ 
MAXDIRS
 ])

185 
	`Áèl
("out of .. dirs, increase MAXDIRS\n");

186 (
TRUE
);

189 (
FALSE
);

190 
	}
}

195 
ö˛i°
 *
	$√wö˛ude
(
√wfûe
, 
öc°rög
)

196 *
√wfûe
, *
öc°rög
;

198 
ö˛i°
 *
ù
;

203 
ù
 = 
ö˛i°p
++;

204 i‡(
ö˛i°p
 =
ö˛i°
 + 
MAXFILES
 - 1)

205 
	`Áèl
("out of space: increase MAXFILES\n");

206 
ù
->
i_fûe
 = 
	`c›y
(
√wfûe
);

207 
ù
->
i_ö˛uded_sym
 = 
FALSE
;

208 i‡(
öc°rög
 =
NULL
)

209 
ù
->
i_öc°rög
 = ip->
i_fûe
;

211 
ù
->
i_öc°rög
 = 
	`c›y
(
öc°rög
);

213 (
ù
);

214 
	}
}

216 
	$ö˛uded_by
(
ù
, 
√wfûe
)

217 
ö˛i°
 *
ù
, *
√wfûe
;

219 
i
;

221 i‡(
ù
 =
NULL
)

229 i‡(
ù
->
i_li°
 =
NULL
)

230 
ù
->
i_li°
 = (
ö˛i°
 **)

231 
	`mÆloc
((
ö˛i°
 *Ë* ++
ù
->
i_li°Àn
);

233 
i
=0; i<
ù
->
i_li°Àn
; i++)

234 i‡(
ù
->
i_li°
[ 
i
 ] =
√wfûe
) {

235 
i
 = 
	`°æí
(
√wfûe
->
i_fûe
);

236 i‡(!
ù
->
i_ö˛uded_sym
 &&

237 !(
i
 > 2 &&

238 
√wfûe
->
i_fûe
[
i
-1] == 'c' &&

239 
√wfûe
->
i_fûe
[
i
-2] == '.'))

245 
	`w¨nög
("%s includes %s moreÅhan once!\n",

246 
ù
->
i_fûe
, 
√wfûe
->i_file);

247 
	`w¨nög1
("Already have\n");

248 
i
=0; i<
ù
->
i_li°Àn
; i++)

249 
	`w¨nög1
("\t%s\n", 
ù
->
i_li°
[
i
]->
i_fûe
);

254 
ù
->
i_li°
 = (
ö˛i°
 **Ë
	`ªÆloc
(ip->i_list,

255 (
ö˛i°
 *Ë* ++
ù
->
i_li°Àn
);

257 
ù
->
i_li°
[ ip->
i_li°Àn
-1 ] = 
√wfûe
;

258 
	}
}

260 
	$öc_˛ón
 ()

262 
ö˛i°
 *
ù
;

264 
ù
 = 
ö˛i°
; i∞< 
ö˛i°p
; ip++) {

265 
ù
->
i_m¨ked
 = 
FALSE
;

267 
	}
}

	@makedepend/main.c

4 
	~"def.h
"

5 #ifde‡
hpux


6 
	#sigvec
 
sigve˘‹


	)

9 #i‚de‡
X_NOT_POSIX


10 #i‚de‡
_POSIX_SOURCE


11 
	#_POSIX_SOURCE


	)

14 
	~<sig«l.h
>

16 #ifde‡
DEBUG


17 
	g_debugmask
;

20 *
	gProgømName
;

22 *
	gdúe˘ives
[] = {

38 
NULL


41 
	#MAKEDEPEND


	)

42 
	~"imakemdï.h
"

43 #unde‡
MAKEDEPEND


45 
symèb
 
	gdeÊi°
[ 
MAXDEFINES
 ];

46 
ö˛i°
 
	gö˛i°
[ 
MAXFILES
 ],

47 *
	gö˛i°p
 = 
ö˛i°
;

49 *
	gfûñi°
[ 
MAXFILES
 ];

50 *
	gö˛udedús
[ 
MAXDIRS
 ];

51 *
	gnŸdŸdŸ
[ 
MAXDIRS
 ];

52 *
	gobj¥efix
 = "";

53 *
	gobjsuffix
 = ".o";

54 *
	g°¨èt
 = "# DO NOT DELETE THIS LINE -- make depend depends on it.";

55 
	gwidth
 = 78;

56 
boﬁón
 
	g≠≥nd
 = 
FALSE
;

57 
boﬁón
 
	g¥öãd
 = 
FALSE
;

58 
boﬁón
 
	gvîbo£
 = 
FALSE
;

59 
boﬁón
 
	gshow_whîe_nŸ
 = 
FALSE
;

60 
	gno_sys
 = 
FALSE
;

63 #ifde‡
SIGNALRETURNSINT


68 
	$ˇtch
 (
sig
)

69 
sig
;

71 
	`fÊush
 (
°dout
);

72 
	`Áèl
 ("gŸ sig«»%d\n", 
sig
);

73 
	}
}

75 #i‡
deföed
(
USG
Ë|| (deföed(
SYSV386
Ë&& deföed(
SYSV
))

76 
	#USGISH


	)

79 #i‚de‡
USGISH


80 #i‚de‡
_POSIX_SOURCE


81 
	#siga˘i⁄
 
sigvec


	)

82 
	#ß_h™dÀr
 
sv_h™dÀr


	)

83 
	#ß_mask
 
sv_mask


	)

84 
	#ß_Êags
 
sv_Êags


	)

86 
siga˘i⁄
 
	gsig_a˘
;

89 
	$maö
(
¨gc
, 
¨gv
)

90 
¨gc
;

91 **
¨gv
;

93 
symèb
 *
symp
 = 
deÊi°
;

94 **
Â
 = 
fûñi°
;

95 **
ö˝
 = 
ö˛udedús
;

96 *
p
;

97 
ö˛i°
 *
ù
;

98 *
makefûe
 = 
NULL
;

99 
fûïoöãr
 *
fûec⁄ã¡
;

100 
symèb
 *
psymp
 = 
¥edefs
;

101 *
ídm¨kî
 = 
NULL
;

103 
ProgømName
 = 
¨gv
[0];

105 
psymp
->
s_«me
)

106 *
symp
++ = *
psymp
++;

107 
¨gc
--, 
¨gv
++;árgc;árgc--,árgv++) {

109 i‡(
ídm¨kî
 && 
	`°rcmp
 (ídm¨kî, *
¨gv
) == 0) {

110 
ídm¨kî
 = 
NULL
;

113 i‡(**
¨gv
 != '-') {

115 i‡(
ídm¨kî
 && **
¨gv
 == '+')

117 *
Â
++ = 
¨gv
[0];

120 
¨gv
[0][1]) {

122 
ídm¨kî
 = &
¨gv
[0][2];

123 i‡(
ídm¨kî
[0] == '\0')Éndmarker = "--";

126 
symp
->
s_«me
 = 
¨gv
[0]+2;

127 i‡(*
symp
->
s_«me
 == '\0') {

128 
symp
->
s_«me
 = *(++
¨gv
);

129 
¨gc
--;

131 
p
=
symp
->
s_«me
; *p ;Ö++)

132 i‡(*
p
 == '=') {

133 *
p
++ = '\0';

136 
symp
->
s_vÆue
 = 
p
;

137 
symp
++;

140 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

141 
	`Áèl
("Too many -I flags.\n");

142 *
ö˝
++ = 
¨gv
[0]+2;

143 i‡(**(
ö˝
-1) == '\0') {

144 *(
ö˝
-1Ë*(++
¨gv
);

145 
¨gc
--;

150 i‡(
ídm¨kî
) ;

151 
≠≥nd
 = 
TRUE
;

154 i‡(
ídm¨kî
) ;

155 i‡(
¨gv
[0][2] == '\0') {

156 
¨gv
++;

157 
¨gc
--;

158 
width
 = 
	`©oi
(
¨gv
[0]);

160 
width
 = 
	`©oi
(
¨gv
[0]+2);

163 i‡(
ídm¨kî
) ;

164 i‡(
¨gv
[0][2] == '\0') {

165 
¨gv
++;

166 
¨gc
--;

167 
objsuffix
 = 
¨gv
[0];

169 
objsuffix
 = 
¨gv
[0]+2;

172 i‡(
ídm¨kî
) ;

173 i‡(
¨gv
[0][2] == '\0') {

174 
¨gv
++;

175 
¨gc
--;

176 
obj¥efix
 = 
¨gv
[0];

178 
obj¥efix
 = 
¨gv
[0]+2;

181 i‡(
ídm¨kî
) ;

182 
vîbo£
 = 
TRUE
;

183 #ifde‡
DEBUG


184 i‡(
¨gv
[0][2])

185 
_debugmask
 = 
	`©oi
(
¨gv
[0]+2);

189 i‡(
ídm¨kî
) ;

190 
°¨èt
 = 
¨gv
[0]+2;

191 i‡(*
°¨èt
 == '\0') {

192 
°¨èt
 = *(++
¨gv
);

193 
¨gc
--;

195 i‡(*
°¨èt
 != '#')

196 
	`Áèl
("-s flag's value should start %s\n",

200 i‡(
ídm¨kî
) ;

201 
makefûe
 = 
¨gv
[0]+2;

202 i‡(*
makefûe
 == '\0') {

203 
makefûe
 = *(++
¨gv
);

204 
¨gc
--;

215 
no_sys
 = 
TRUE
;

218 i‡(
ídm¨kî
) ;

220 
	`w¨nög
("ign‹ög o±i⁄ %s\n", 
¨gv
[0]);

223 #ifde‡
__GNUC__


224 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

225 
	`Áèl
("Too many -I flags.\n");

226 #ifde‡
lu«88k


227 *
ö˝
++ = "/usr/local/lib/gcc/gcc-include";

229 *
ö˝
++ = "/usr/local/lib/gcc-include";

232 #ifde‡
lu«88k


233 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

234 
	`Áèl
("Too many -I flags.\n");

235 *
ö˝
++ = "/usr/lib/ccom/include";

238 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

239 
	`Áèl
("Too many -I flags.\n");

240 *
ö˝
++ = 
INCLUDEDIR
;

241 #ifde‡
CRAY


242 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

243 
	`Áèl
("Too many -I flags.\n");

244 *
ö˝
++ = "/usr/include/stdc";

246 #ifde‡
Mùs


247 #ifde‡
BSD43


248 i‡(
ö˝
 >
ö˛udedús
 + 
MAXDIRS
)

249 
	`Áèl
("Too many -I flags.\n");

250 *
ö˝
++ = "/usr/include/bsd43";

254 
	`ªdúe˘
(
°¨èt
, 
makefûe
);

259 #ifde‡
USGISH


261 
	`sig«l
 (
SIGHUP
, 
ˇtch
);

262 
	`sig«l
 (
SIGINT
, 
ˇtch
);

263 
	`sig«l
 (
SIGQUIT
, 
ˇtch
);

264 
	`sig«l
 (
SIGILL
, 
ˇtch
);

265 
	`sig«l
 (
SIGBUS
, 
ˇtch
);

266 
	`sig«l
 (
SIGSEGV
, 
ˇtch
);

268 
sig_a˘
.
ß_h™dÀr
 = 
ˇtch
;

269 #ifde‡
_POSIX_SOURCE


270 
	`sigem±y£t
(&
sig_a˘
.
ß_mask
);

271 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGINT
);

272 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGQUIT
);

273 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGBUS
);

274 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGILL
);

275 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGSEGV
);

276 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGHUP
);

277 
	`sigadd£t
(&
sig_a˘
.
ß_mask
, 
SIGPIPE
);

279 
sig_a˘
.
ß_mask
 = ((1<<(
SIGINT
 -1))

280 |(1<<(
SIGQUIT
-1))

281 |(1<<(
SIGBUS
-1))

282 |(1<<(
SIGILL
-1))

283 |(1<<(
SIGSEGV
-1))

284 |(1<<(
SIGHUP
-1))

285 |(1<<(
SIGPIPE
-1));

287 #i‚de‡
£quít


288 
sig_a˘
.
ß_Êags
 = 0;

290 
	`siga˘i⁄
(
SIGHUP
, &
sig_a˘
, (
siga˘i⁄
 *)0);

291 
	`siga˘i⁄
(
SIGINT
, &
sig_a˘
, (
siga˘i⁄
 *)0);

292 
	`siga˘i⁄
(
SIGQUIT
, &
sig_a˘
, (
siga˘i⁄
 *)0);

293 
	`siga˘i⁄
(
SIGILL
, &
sig_a˘
, (
siga˘i⁄
 *)0);

294 
	`siga˘i⁄
(
SIGBUS
, &
sig_a˘
, (
siga˘i⁄
 *)0);

295 
	`siga˘i⁄
(
SIGSEGV
, &
sig_a˘
, (
siga˘i⁄
 *)0);

301 
Â
=
fûñi°
; *fp; fp++) {

302 
fûec⁄ã¡
 = 
	`gëfûe
(*
Â
);

303 
ù
 = 
	`√wö˛ude
(*
Â
, (*)
NULL
);

305 
	`föd_ö˛udes
(
fûec⁄ã¡
, 
ù
, ip, 0, 
FALSE
);

306 
	`‰ìfûe
(
fûec⁄ã¡
);

307 
	`ªcursive_¥_ö˛ude
(
ù
, ip->
i_fûe
, 
	`ba£«me
(*
Â
));

308 
	`öc_˛ón
();

310 i‡(
¥öãd
)

311 
	`¥ötf
("\n");

312 
	`exô
(0);

313 
	}
}

315 
fûïoöãr
 *
	$gëfûe
(
fûe
)

316 *
fûe
;

318 
fd
;

319 
fûïoöãr
 *
c⁄ã¡
;

320 
°©
 
°
;

322 
c⁄ã¡
 = (
fûïoöãr
 *)
	`mÆloc
((filepointer));

323 i‡((
fd
 = 
	`›í
(
fûe
, 
O_RDONLY
)) < 0) {

324 
	`w¨nög
("ˇ¬Ÿ o≥¿\"%s\"\n", 
fûe
);

325 
c⁄ã¡
->
f_p
 = c⁄ã¡->
f_ba£
 = c⁄ã¡->
f_íd
 = 
	`mÆloc
(1);

326 *
c⁄ã¡
->
f_p
 = '\0';

327 (
c⁄ã¡
);

329 
	`f°©
(
fd
, &
°
);

330 
c⁄ã¡
->
f_Àn
 = 
°
.
°_size
+1;

331 
c⁄ã¡
->
f_ba£
 = 
	`mÆloc
(c⁄ã¡->
f_Àn
);

332 i‡(
c⁄ã¡
->
f_ba£
 =
NULL
)

333 
	`Áèl
("cannotállocate mem\n");

334 i‡(
	`ªad
(
fd
, 
c⁄ã¡
->
f_ba£
, 
°
.
°_size
) != st.st_size)

335 
	`Áèl
("ˇ¬ŸÑódáŒ o‡%s\n", 
fûe
);

336 
	`˛o£
(
fd
);

337 
c⁄ã¡
->
f_p
 = c⁄ã¡->
f_ba£
;

338 
c⁄ã¡
->
f_íd
 = c⁄ã¡->
f_ba£
 + 
°
.
°_size
;

339 *
c⁄ã¡
->
f_íd
 = '\0';

340 
c⁄ã¡
->
f_löe
 = 0;

341 (
c⁄ã¡
);

342 
	}
}

344 
	$‰ìfûe
(
Â
)

345 
fûïoöãr
 *
Â
;

347 
	`‰ì
(
Â
->
f_ba£
);

348 
	`‰ì
(
Â
);

349 
	}
}

351 *
	$c›y
(
°r
)

352 *
°r
;

354 *
p
 = 
	`mÆloc
(
	`°æí
(
°r
) + 1);

356 
	`°r˝y
(
p
, 
°r
);

357 (
p
);

358 
	}
}

360 
	$m©ch
(
°r
, 
li°
)

361 *
°r
, **
li°
;

363 
i
;

365 
i
=0; *
li°
; i++,Üist++)

366 i‡(
	`°rcmp
(
°r
, *
li°
) == 0)

367 (
i
);

369 
	}
}

375 *
	$gëlöe
(
fûï
)

376 
fûïoöãr
 *
fûï
;

378 *
p
,

379 *
eof
,

380 *
bﬁ
;

381 
löío
;

383 
p
 = 
fûï
->
f_p
;

384 
eof
 = 
fûï
->
f_íd
;

385 i‡(
p
 >
eof
)

386 ((*)
NULL
);

387 
löío
 = 
fûï
->
f_löe
;

389 
bﬁ
 = 
p
--; ++∞< 
eof
; ) {

390 i‡(*
p
 == '/' && *(p+1) == '*') {

391 *
p
++ = ' ', *p++ = ' ';

392 *
p
) {

393 i‡(*
p
 == '*' && *(p+1) == '/') {

394 *
p
++ = ' ', *p = ' ';

397 i‡(*
p
 == '\n')

398 
löío
++;

399 *
p
++ = ' ';

403 i‡(*
p
 == '\n') {

404 
löío
++;

405 i‡(*
bﬁ
 == '#') {

406 *
˝
;

408 *
p
++ = '\0';

410 
˝
 = 
bﬁ
+1;

411 *
˝
 && (*cp == ' ' || *cp == '\t'); cp++);

412 i‡(*
˝
Ë
d⁄e
;

414 
bﬁ
 = 
p
+1;

417 i‡(*
bﬁ
 != '#')

418 
bﬁ
 = 
NULL
;

419 
d⁄e
:

420 
fûï
->
f_p
 = 
p
;

421 
fûï
->
f_löe
 = 
löío
;

422 (
bﬁ
);

423 
	}
}

425 *
	$ba£«me
(
fûe
)

426 *
fûe
;

428 *
p
;

430 
p
=
fûe
+
	`°æí
(file);Ö>file && *p != '/';Ö--) ;

432 i‡(*
p
 == '/')

433 
p
++;

435 
fûe
 = 
	`c›y
(
p
);

436 
p
=
fûe
+
	`°æí
(file);Ö>file && *p != '.';Ö--) ;

438 i‡(*
p
 == '.')

439 *
p
 = '\0';

440 (
fûe
);

441 
	}
}

443 #i‡
deföed
(
USG
Ë&& !deföed(
CRAY
Ë&& !deföed(
SVR4
)

444 
	$ª«me
 (
‰om
, 
to
)

445 *
‰om
, *
to
;

447 (Ë
	`u∆ök
 (
to
);

448 i‡(
	`lök
 (
‰om
, 
to
) == 0) {

449 
	`u∆ök
 (
‰om
);

454 
	}
}

457 
	$ªdúe˘
(
löe
, 
makefûe
)

458 *
löe
,

459 *
makefûe
;

461 
°©
 
°
;

462 
FILE
 *
fdö
, *
fdout
;

463 
backup
[ 
BUFSIZ
 ],

464 
buf
[ 
BUFSIZ
 ];

465 
boﬁón
 
found
 = 
FALSE
;

466 
Àn
;

471 i‡(
makefûe
 && *makefile == '-' && *(makefile+1) == '\0')

477 i‡(!
makefûe
) {

478 i‡(
	`°©
("makefûe", &
°
) == 0)

479 
makefûe
 = "makefile";

480 i‡(
	`°©
("Makefûe", &
°
) == 0)

481 
makefûe
 = "Makefile";

483 
	`Áèl
("[mM]akefile isÇotÖresent\n");

486 
	`°©
(
makefûe
, &
°
);

487 i‡((
fdö
 = 
	`f›í
(
makefûe
, "r")Ë=
NULL
)

488 
	`Áèl
("ˇ¬Ÿ o≥¿\"%s\"\n", 
makefûe
);

489 
	`•rötf
(
backup
, "%s.bak", 
makefûe
);

490 
	`u∆ök
(
backup
);

491 i‡(
	`ª«me
(
makefûe
, 
backup
) < 0)

492 
	`Áèl
("ˇ¬ŸÑíamê%†tÿ%s\n", 
makefûe
, 
backup
);

493 i‡((
fdout
 = 
	`‰e›í
(
makefûe
, "w", 
°dout
)Ë=
NULL
)

494 
	`Áèl
("ˇ¬Ÿ o≥¿\"%s\"\n", 
backup
);

495 
Àn
 = 
	`°æí
(
löe
);

496 !
found
 && 
	`fgës
(
buf
, 
BUFSIZ
, 
fdö
)) {

497 i‡(*
buf
 ='#' && 
	`°∫cmp
(
löe
, buf, 
Àn
) == 0)

498 
found
 = 
TRUE
;

499 
	`Âuts
(
buf
, 
fdout
);

501 i‡(!
found
) {

502 i‡(
vîbo£
)

503 
	`w¨nög
("AddingÇew delimitingÜine \"%s\"ánd dependencies...\n",

504 
löe
);

505 
	`puts
(
löe
);

506 } i‡(
≠≥nd
) {

507 
	`fgës
(
buf
, 
BUFSIZ
, 
fdö
)) {

508 
	`Âuts
(
buf
, 
fdout
);

511 
	`fÊush
(
fdout
);

512 #ifde‡
USGISH


513 
	`chmod
(
makefûe
, 
°
.
°_mode
);

515 
	`fchmod
(
	`fûío
(
fdout
), 
°
.
°_mode
);

517 
	}
}

520 
	$Áèl
(
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
)

521 *
x0
;

523 
	`Ârötf
(
°dîr
, "%s:Éº‹: ", 
ProgømName
);

524 
	`Ârötf
(
°dîr
, 
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
);

525 
	`exô
 (1);

526 
	}
}

529 
	$w¨nög
(
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
)

530 *
x0
;

532 
	`Ârötf
(
°dîr
, "%s: w¨nög: ", 
ProgømName
);

533 
	`Ârötf
(
°dîr
, 
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
);

534 
	}
}

537 
	$w¨nög1
(
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
)

538 *
x0
;

540 
	`Ârötf
(
°dîr
, 
x0
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
);

541 
	}
}

	@makedepend/parse.c

4 
	~"def.h
"

6 *
dúe˘ives
[];

7 
symèb
 
deÊi°
[];

8 
no_sys
;

10 
	$föd_ö˛udes
(
fûï
, 
fûe
, 
fûe_ªd
, 
ªcursi⁄
, 
ÁûOK
)

11 
fûïoöãr
 *
fûï
;

12 
ö˛i°
 *
fûe
, *
fûe_ªd
;

13 
ªcursi⁄
;

14 
boﬁón
 
ÁûOK
;

16 *
löe
;

17 
ty≥
;

18 
boﬁón
 
ªcÁûOK
;

20 
löe
 = 
	`gëlöe
(
fûï
)) {

21 
ty≥
 = 
	`de·y≥
(
löe
, 
fûï
, 
fûe_ªd
, 
fûe
, 
TRUE
)) {

22 
IF
:

23 
doif
:

24 
ty≥
 = 
	`föd_ö˛udes
(
fûï
, 
fûe
,

25 
fûe_ªd
, 
ªcursi⁄
+1, 
ÁûOK
);

26 (
ty≥
 =
ELIF
Ë|| (ty≥ =
ELIFFALSE
) ||

27 (
ty≥
 =
ELIFGUESSFALSE
))

28 
ty≥
 = 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

29 i‡(
ty≥
 =
ELSE
)

30 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

32 
IFFALSE
:

33 
IFGUESSFALSE
:

34 
doifÁl£
:

35 i‡(
ty≥
 =
IFGUESSFALSE
 ||Åy≥ =
ELIFGUESSFALSE
)

36 
ªcÁûOK
 = 
TRUE
;

38 
ªcÁûOK
 = 
ÁûOK
;

39 
ty≥
 = 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

40 i‡(
ty≥
 =
ELSE
)

41 
	`föd_ö˛udes
(
fûï
, 
fûe
,

42 
fûe_ªd
, 
ªcursi⁄
+1, 
ªcÁûOK
);

44 i‡(
ty≥
 =
ELIF
)

45 
doif
;

47 i‡((
ty≥
 =
ELIFFALSE
Ë|| (ty≥ =
ELIFGUESSFALSE
))

48 
doifÁl£
;

50 
IFDEF
:

51 
IFNDEF
:

52 i‡((
ty≥
 =
IFDEF
 && 
	`isdeföed
(
löe
, 
fûe_ªd
))

53 || (
ty≥
 =
IFNDEF
 && !
	`isdeföed
(
löe
, 
fûe_ªd
))) {

54 
	`debug
(1,(
ty≥
 =
IFNDEF
 ?

56 
fûï
->
f_löe
, 
löe
,

57 
fûe
->
i_fûe
, 
fûe_ªd
->i_file, ": doit"));

58 
ty≥
 = 
	`föd_ö˛udes
(
fûï
, 
fûe
,

59 
fûe_ªd
, 
ªcursi⁄
+1, 
ÁûOK
);

60 i‡(
ty≥
 =
ELSE
)

61 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

64 
	`debug
(1,(
ty≥
 =
IFDEF
 ?

66 
fûï
->
f_löe
, 
löe
,

67 
fûe
->
i_fûe
, 
fûe_ªd
->i_file, ": gobble"));

68 
ty≥
 = 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

69 i‡(
ty≥
 =
ELSE
)

70 
	`föd_ö˛udes
(
fûï
, 
fûe
,

71 
fûe_ªd
, 
ªcursi⁄
+1, 
ÁûOK
);

74 
ELSE
:

75 
ELIFFALSE
:

76 
ELIFGUESSFALSE
:

77 
ELIF
:

78 i‡(!
ªcursi⁄
)

79 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

80 
ENDIF
:

81 i‡(
ªcursi⁄
)

82 (
ty≥
);

83 
DEFINE
:

84 
	`deföe
(
löe
, 
fûe
);

86 
UNDEF
:

90 i‡(!*
löe
) {

91 
	`w¨nög
("%s,Üine %d: incomplete undef == \"%s\"\n",

92 
fûe_ªd
->
i_fûe
, 
fûï
->
f_löe
, 
löe
);

96 
symèb
 *
vÆ
;

97 
vÆ
 = 
	`isdeföed
(
löe
, 
fûe_ªd
);

98 (
vÆ
 && vÆ->
s_«me
);

99 
vÆ
 = 
	`isdeföed
(
löe
, 
fûe_ªd
))

101 
vÆ
->
s_«me
 = "";

104 
INCLUDE
:

105 i‡(!
no_sys
)

106 
	`add_ö˛ude
(
fûe
, 
fûe_ªd
, 
löe
, 
FALSE
, 
ÁûOK
);

108 
INCLUDEDOT
:

109 
	`add_ö˛ude
(
fûe
, 
fûe_ªd
, 
löe
, 
TRUE
, 
ÁûOK
);

111 
PRAGMA
:

112 
ERROR
:

113 
IDENT
:

114 
SCCS
:

115 
EJECT
:

118 
	`w¨nög
("%s", 
fûe_ªd
->
i_fûe
);

119 i‡(
fûe_ªd
 !
fûe
)

120 
	`w¨nög1
(" (ªadög %s)", 
fûe
->
i_fûe
);

121 
	`w¨nög1
(",Üine %d: unknown directive == \"%s\"\n",

122 
fûï
->
f_löe
, 
löe
);

125 
	`w¨nög
("%s", 
fûe_ªd
->
i_fûe
);

126 i‡(
fûe_ªd
 !
fûe
)

127 
	`w¨nög1
(" (ªadög %s)", 
fûe
->
i_fûe
);

128 
	`w¨nög1
(",Üine %d: incomplete include == \"%s\"\n",

129 
fûï
->
f_löe
, 
löe
);

134 
	}
}

136 
	$gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
)

137 
fûïoöãr
 *
fûï
;

138 
ö˛i°
 *
fûe
, *
fûe_ªd
;

140 *
löe
;

141 
ty≥
;

143 
löe
 = 
	`gëlöe
(
fûï
)) {

144 
ty≥
 = 
	`de·y≥
(
löe
, 
fûï
, 
fûe_ªd
, 
fûe
, 
FALSE
)) {

145 
IF
:

146 
IFFALSE
:

147 
IFGUESSFALSE
:

148 
IFDEF
:

149 
IFNDEF
:

150 
ty≥
 = 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

151 (
ty≥
 =
ELIF
Ë|| (ty≥ =
ELIFFALSE
) ||

152 (
ty≥
 =
ELIFGUESSFALSE
))

153 
ty≥
 = 
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

154 i‡(
ty≥
 =
ELSE
)

155 ()
	`gobbÀ
(
fûï
, 
fûe
, 
fûe_ªd
);

157 
ELSE
:

158 
ENDIF
:

159 
	`debug
(0,("%s,Üine %d: #%s\n",

160 
fûe
->
i_fûe
, 
fûï
->
f_löe
,

161 
dúe˘ives
[
ty≥
]));

162 (
ty≥
);

163 
DEFINE
:

164 
UNDEF
:

165 
INCLUDE
:

166 
INCLUDEDOT
:

167 
PRAGMA
:

168 
ERROR
:

169 
IDENT
:

170 
SCCS
:

171 
EJECT
:

173 
ELIF
:

174 
ELIFFALSE
:

175 
ELIFGUESSFALSE
:

176 (
ty≥
);

178 
	`w¨nög
("%s,Üine %d: unknown directive == \"%s\"\n",

179 
fûe_ªd
->
i_fûe
, 
fûï
->
f_löe
, 
löe
);

184 
	}
}

189 
	$de·y≥
 (
löe
, 
fûï
, 
fûe_ªd
, 
fûe
, 
∑r£_ô
)

190 *
löe
;

191 
fûïoöãr
 *
fûï
;

192 
ö˛i°
 *
fûe_ªd
, *
fûe
;

193 
∑r£_ô
;

195 *
p
;

196 *
dúe˘ive
, 
ßvech¨
;

197 
ªt
;

202 
dúe˘ive
=
löe
+1;

203 *
dúe˘ive
 == ' ' || *directive == '\t')

204 
dúe˘ive
++;

206 
p
 = 
dúe˘ive
;

207 *
p
 >= 'a' && *p <= 'z')

208 
p
++;

209 
ßvech¨
 = *
p
;

210 *
p
 = '\0';

211 
ªt
 = 
	`m©ch
(
dúe˘ive
, 
dúe˘ives
);

212 *
p
 = 
ßvech¨
;

220 i‡(
ªt
 =
ELIF
 && !
∑r£_ô
)

222 *
p
 == ' ' || *p == '\t')

223 
p
++;

227 
	`debug
(0,("%s,Üine %d: #elif %s ",

228 
fûe
->
i_fûe
, 
fûï
->
f_löe
, 
p
));

229 
ªt
 = 
	`zîo_vÆue
(
p
, 
fûï
, 
fûe_ªd
);

230 i‡(
ªt
 !
IF
)

232 
	`debug
(0,("false...\n"));

233 i‡(
ªt
 =
IFFALSE
)

234 (
ELIFFALSE
);

236 (
ELIFGUESSFALSE
);

240 
	`debug
(0,("true...\n"));

241 (
ELIF
);

245 i‡(
ªt
 < 0 || ! 
∑r£_ô
)

246 (
ªt
);

251 *
p
 == ' ' || *p == '\t')

252 
p
++;

253 
ªt
) {

254 
IF
:

258 
	`debug
(0,("%s,Üine %d: #if %s\n",

259 
fûe
->
i_fûe
, 
fûï
->
f_löe
, 
p
));

260 
ªt
 = 
	`zîo_vÆue
(
p
, 
fûï
, 
fûe_ªd
);

262 
IFDEF
:

263 
IFNDEF
:

264 
	`debug
(0,("%s,Üine %d: #%s %s\n",

265 
fûe
->
i_fûe
, 
fûï
->
f_löe
, 
dúe˘ives
[
ªt
], 
p
));

266 
UNDEF
:

270 
	`iß um
(*
p
) || *p == '_')

271 *
löe
++ = *
p
++;

272 *
löe
 = '\0';

274 
INCLUDE
:

275 
	`debug
(2,("%s,Üine %d: #include %s\n",

276 
fûe
->
i_fûe
, 
fûï
->
f_löe
, 
p
));

280 
symèb
 *
sym
 = 
	`isdeföed
(
p
, 
fûe_ªd
);

281 
sym
) {

282 
p
 = 
sym
->
s_vÆue
;

283 
	`debug
(3,("%s : #includes SYMBOL %s = %s\n",

284 
fûe
->
i_öc°rög
,

285 
sym
 -> 
s_«me
,

286 
sym
 -> 
s_vÆue
));

288 
fûe
->
i_ö˛uded_sym
 = 
TRUE
;

289 
sym
 = 
	`isdeföed
(
p
, 
fûe_ªd
);

296 *
p
 && *p != '"' && *p != '<')

297 
p
++;

298 i‡(! *
p
)

300 i‡(*
p
++ == '"') {

301 
ªt
 = 
INCLUDEDOT
;

302 *
p
 && *p != '"')

303 *
löe
++ = *
p
++;

305 *
p
 && *p != '>')

306 *
löe
++ = *
p
++;

307 *
löe
 = '\0';

309 
DEFINE
:

313 
	`°r˝y
 (
löe
, 
p
);

315 
ELSE
:

316 
ENDIF
:

317 
ELIF
:

318 
PRAGMA
:

319 
ERROR
:

320 
IDENT
:

321 
SCCS
:

322 
EJECT
:

323 
	`debug
(0,("%s,Üine %d: #%s\n",

324 
fûe
->
i_fûe
, 
fûï
->
f_löe
, 
dúe˘ives
[
ªt
]));

330 (
ªt
);

331 
	}
}

333 
symèb
 *
	$isdeföed
(
symbﬁ
, 
fûe
)

334 *
symbﬁ
;

335 
ö˛i°
 *
fûe
;

337 
symèb
 *
vÆ
;

339 i‡(
vÆ
 = 
	`¶ookup
(
symbﬁ
, 
deÊi°
)) {

340 
	`debug
(1,("%†deföed o¿comm™dÜöe\n", 
symbﬁ
));

341 (
vÆ
);

343 i‡(
vÆ
 = 
	`fdeföed
(
symbﬁ
, 
fûe
))

344 (
vÆ
);

345 
	`debug
(1,("%†nŸ deföed i¿%s\n", 
symbﬁ
, 
fûe
->
i_fûe
));

346 (
NULL
);

347 
	}
}

349 
symèb
 *
	$fdeföed
(
symbﬁ
, 
fûe
)

350 *
symbﬁ
;

351 
ö˛i°
 *
fûe
;

353 
ö˛i°
 **
ù
;

354 
symèb
 *
vÆ
;

355 
i
;

356 
ªcur£_lvl
 = 0;

358 i‡(
fûe
->
i_defchecked
)

359 (
NULL
);

360 
fûe
->
i_defchecked
 = 
TRUE
;

361 i‡(
vÆ
 = 
	`¶ookup
(
symbﬁ
, 
fûe
->
i_defs
))

362 
	`debug
(1,("%†deföed i¿%s\n", 
symbﬁ
, 
fûe
->
i_fûe
));

363 i‡(
vÆ
 =
NULL
 && 
fûe
->
i_li°
)

364 
ù
 = 
fûe
->
i_li°
, 
i
=0; i < fûe->
i_li°Àn
; i++, ip++)

365 i‡(
vÆ
 = 
	`fdeföed
(
symbﬁ
, *
ù
)) {

366 
	`debug
(1,("%s defined in %s\n",

367 
symbﬁ
, (*
ù
)->
i_fûe
));

370 
ªcur£_lvl
--;

371 
fûe
->
i_defchecked
 = 
FALSE
;

373 (
vÆ
);

374 
	}
}

376 
symèb
 *
	$¶ookup
(
symbﬁ
, 
°ab
)

377 *
symbﬁ
;

378 
symèb
 *
°ab
;

380 i‡(
°ab
)

381 ; 
°ab
->
s_«me
; stab++)

382 i‡(
	`°rcmp
(
symbﬁ
, 
°ab
->
s_«me
) == 0)

383 (
°ab
);

384 (
NULL
);

385 
	}
}

390 
	$zîo_vÆue
(
exp
, 
fûï
, 
fûe_ªd
)

391 *
exp
;

392 
fûïoöãr
 *
fûï
;

393 
ö˛i°
 *
fûe_ªd
;

395 #ifdef 
CPP


396 i‡(
	`˝p£tup
(
exp
, 
fûï
, 
fûe_ªd
))

397 (
IFFALSE
);

399 (
IF
);

401 (
IFGUESSFALSE
);

403 
	}
}

405 
	$deföe
(
def
, 
fûe
)

406 *
def
;

407 
ö˛i°
 *
fûe
;

409 *
p
;

410 
symèb
 *
•
 = 
fûe
->
i_œ°def
++;

411 
i
;

416 i‡(
fûe
->
i_defs
 =
NULL


417 || 
fûe
->
i_œ°def
 =fûe->
i_defs
 + fûe->
i_deÊí
) {

418 i‡(
fûe
->
i_defs
)

419 
fûe
->
i_defs
 = (
symèb
 *Ë
	`ªÆloc
(file->i_defs,

420 (
symèb
)*(
fûe
->
i_deÊí
+
SYMTABINC
));

422 
fûe
->
i_defs
 = (
symèb
 *)

423 
	`mÆloc
( (
symèb
Ë* 
SYMTABINC
);

424 
i
=
fûe
->
i_deÊí
;

425 
fûe
->
i_deÊí
 +
SYMTABINC
;

426 
i
 < 
fûe
->
i_deÊí
)

427 
fûe
->
i_defs
[ 
i
++ ].
s_«me
 = 
NULL
;

428 
fûe
->
i_œ°def
 = fûe->
i_defs
 + fûe->
i_deÊí
 - 
SYMTABINC
;

429 i‡(
•
)

430 
fûe
->
i_œ°def
--;

431 
•
 = 
fûe
->
i_œ°def
++;

433 i‡(
fûe
->
i_œ°def
 > fûe->
i_defs
 + fûe->
i_deÊí
)

434 
	`Áèl
("define() botch\n");

439 
p
 = 
def
;

440 
	`iß um
(*
p
) || *p == '_')

441 
p
++;

442 i‡(*
p
)

443 *
p
++ = '\0';

444 
•
->
s_«me
 = 
	`c›y
(
def
);

449 *
p
 == ' ' && *p == '\t')

450 
p
++;

451 
•
->
s_vÆue
 = 
	`c›y
(
p
);

452 
	}
}

	@makedepend/pr.c

4 
	~"def.h
"

6 
ö˛i°
 in˛i°[ 
MAXFILES
 ],

7 *
ö˛i°p
;

8 *
obj¥efix
;

9 *
objsuffix
;

10 
width
;

11 
boﬁón
 
¥öãd
;

12 
boﬁón
 
vîbo£
;

13 
boﬁón
 
show_whîe_nŸ
;

15 
	$add_ö˛ude
(
fûe
, 
fûe_ªd
, 
ö˛ude
, 
dŸ
, 
ÁûOK
)

16 
ö˛i°
 *
fûe
, *
fûe_ªd
;

17 *
ö˛ude
;

18 
boﬁón
 
dŸ
;

20 
ö˛i°
 *
√wfûe
;

21 
fûïoöãr
 *
c⁄ã¡
;

26 
√wfûe
 = 
	`öc_∑th
(
fûe
->
i_fûe
, 
ö˛ude
, 
dŸ
);

27 i‡(
√wfûe
 =
NULL
) {

28 i‡(
ÁûOK
)

30 i‡(
fûe
 !
fûe_ªd
)

31 
	`w¨nög
("%s (reading %s): ",

32 
fûe_ªd
->
i_fûe
, 
fûe
->i_file);

34 
	`w¨nög
("%s: ", 
fûe
->
i_fûe
);

35 
	`w¨nög1
("ˇ¬Ÿ föd in˛udêfûê\"%s\"\n", 
ö˛ude
);

36 
show_whîe_nŸ
 = 
TRUE
;

37 
√wfûe
 = 
	`öc_∑th
(
fûe
->
i_fûe
, 
ö˛ude
, 
dŸ
);

38 
show_whîe_nŸ
 = 
FALSE
;

41 i‡(
√wfûe
) {

42 
	`ö˛uded_by
(
fûe
, 
√wfûe
);

43 i‡(!
√wfûe
->
i_£¨ched
) {

44 
√wfûe
->
i_£¨ched
 = 
TRUE
;

45 
c⁄ã¡
 = 
	`gëfûe
(
√wfûe
->
i_fûe
);

46 
	`föd_ö˛udes
(
c⁄ã¡
, 
√wfûe
, 
fûe_ªd
, 0, 
ÁûOK
);

47 
	`‰ìfûe
(
c⁄ã¡
);

50 
	}
}

52 
	$ªcursive_¥_ö˛ude
(
hód
, 
fûe
, 
ba£
)

53 
ö˛i°
 *
hód
;

54 *
fûe
, *
ba£
;

56 
i
;

58 i‡(
hód
->
i_m¨ked
)

60 
hód
->
i_m¨ked
 = 
TRUE
;

61 i‡(
hód
->
i_fûe
 !
fûe
)

62 
	`¥
(
hód
, 
fûe
, 
ba£
);

63 
i
=0; i<
hód
->
i_li°Àn
; i++)

64 
	`ªcursive_¥_ö˛ude
(
hód
->
i_li°
[ 
i
 ], 
fûe
, 
ba£
);

65 
	}
}

67 
	$¥
(
ù
, 
fûe
, 
ba£
)

68 
ö˛i°
 *
ù
;

69 *
fûe
, *
ba£
;

71 *
œ°fûe
;

72 
cuºít_Àn
;

73 
Àn
, 
i
;

74 
buf
[ 
BUFSIZ
 ];

76 
¥öãd
 = 
TRUE
;

77 
Àn
 = 
	`°æí
(
ù
->
i_fûe
)+1;

78 i‡(
cuºít_Àn
 + 
Àn
 > 
width
 || 
fûe
 !
œ°fûe
) {

79 
œ°fûe
 = 
fûe
;

80 
	`•rötf
(
buf
, "\n%s%s%s: %s", 
obj¥efix
, 
ba£
, 
objsuffix
,

81 
ù
->
i_fûe
);

82 
Àn
 = 
cuºít_Àn
 = 
	`°æí
(
buf
);

85 
buf
[0] = ' ';

86 
	`°r˝y
(
buf
+1, 
ù
->
i_fûe
);

87 
cuºít_Àn
 +
Àn
;

89 
	`fwrôe
(
buf
, 
Àn
, 1, 
°dout
);

94 i‡(! 
vîbo£
 || 
ù
->
i_li°
 =
NULL
 || ip->
i_nŸifõd
)

96 
ù
->
i_nŸifõd
 = 
TRUE
;

97 
œ°fûe
 = 
NULL
;

98 
	`¥ötf
("\n# %†ö˛udes:", 
ù
->
i_fûe
);

99 
i
=0; i<
ù
->
i_li°Àn
; i++)

100 
	`¥ötf
("\n#\t%s", 
ù
->
i_li°
[ 
i
 ]->
i_öc°rög
);

101 
	}
}

	@mase-checker.c

56 
	~"ma£.h
"

57 
	~"ma£-ma¸os-‹a˛e.h
"

61 
ö°_°©e
 *
	gISQ
;

62 
	gISQ_hód
;

63 
	gISQ_èû
;

64 
	gISQ_size
;

65 
	gISQ_num
;

68 
ªgs_t
 
	gpu_ªgs
;

71 
ªgs_t
 
	gªgs
;

74 
mem_t
 *
	gmem
;

77 
	gis_å≠
;

80 
	gis_sysˇŒ
;

83 
	gchk_•ec_mode
;

86 
	#STORE_HASH_SIZE
 32

	)

87 
	#HASH_ADDR
(
ADDR
) \

88 ((((
ADDR
Ë>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

89 
pu_hash_ít
 *
	gpu_hèbÀ
[
STORE_HASH_SIZE
];

92 
pu_hash_ít
 *
	gpu_buckë_‰ì_li°
 = 
NULL
;

96 
md_Áu…_ty≥


97 
	$pu_mem_ac˚ss
(
mem_t
 *
mem
,

98 
mem_cmd
 
cmd
,

99 
md_addr_t
 
addr
,

100 *
vp
,

101 
nbyãs
 )

103 
md_Áu…_ty≥
 
Áu…
;

104 
ödex
;

105 
md_addr_t
 
èg
;

106 
found_m©ch
 = 0;

107 
byã_t
 *
dp
;

108 
pu_hash_ít
 *
ít
, *
√w_ít
;

111 
Áu…
 = 
	`mem_check_Áu…
(
mem
, 
cmd
, 
addr
, 
nbyãs
);

112 i‡(
Áu…
 !
md_Áu…_n⁄e
)  fault;

114 
ödex
 = 
	`HASH_ADDR
(
addr
 & ~7);

115 
èg
 = 
addr
 & ~7;

118 i‡(
cmd
 =
Ród
) {

121 
ít
 = 
pu_hèbÀ
[
ödex
];É¡;É¡ =É¡->
√xt
) {

122 i‡(
ít
->
löe_èg
 =
èg
) {

123 
found_m©ch
 = 1;

128 i‡(
found_m©ch
) {

130 
dp
 = (
byã_t
 *)(&
ít
->
d©a
Ë+ (
addr
 - 
èg
);

131 
	`mem˝y
(
vp
, 
dp
, 
nbyãs
);

135 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, 
vp
, 
nbyãs
);

141 
ít
 = 
pu_hèbÀ
[
ödex
];É¡;É¡ =É¡->
√xt
) {

142 i‡(
ít
->
löe_èg
 =
èg
) {

143 
found_m©ch
 = 1;

151 i‡(
found_m©ch
 && (
ít
->
isq_ödex
 =
ISQ_èû
)) {

152 
	`w¨n
("Mutiple stores forÅhe same instruction.");

153 
ít
 = 
√w_ít
;

158 i‡(!
pu_buckë_‰ì_li°
) {

159 
pu_buckë_‰ì_li°
 = 
	`ˇŒoc
(1, (
pu_hash_ít
));

160 i‡(!
pu_buckë_‰ì_li°
Ë
	`Áèl
("out of virtual memory");

162 
√w_ít
 = 
pu_buckë_‰ì_li°
;

163 
pu_buckë_‰ì_li°
 =Öu_buckë_‰ì_li°->
√xt
;

166 i‡(
found_m©ch
)

167 
√w_ít
->
d©a
 = 
ít
->data;

169 
	`mem_ac˚ss
(
mem
, 
Ród
, 
èg
, &(
√w_ít
->
d©a
), 8);

170 
√w_ít
->
isq_ödex
 = 
ISQ_èû
;

171 
√w_ít
->
löe_èg
 = 
èg
;

172 
√w_ít
->
√xt
 = 
pu_hèbÀ
[
ödex
];

173 
pu_hèbÀ
[
ödex
] = 
√w_ít
;

177 
dp
 = (
byã_t
 *)&
√w_ít
->
d©a
 + (
addr
 - 
èg
);

178 
	`mem˝y
(
dp
, 
vp
, 
nbyãs
);

181 
ISQ
[
ISQ_èû
].
is_wrôe
 = 1;

183  
md_Áu…_n⁄e
;

184 
	}
}

188 
	$ªÀa£_hèbÀ_löe
(
isq_ödex
)

190 
md_addr_t
 
addr
;

191 
ödex
;

192 
md_addr_t
 
èg
;

193 
pu_hash_ít
 *
¥ev
, *
ít
;

195 
addr
 = 
ISQ
[
isq_ödex
].
mem_addr
;

196 
ödex
 = 
	`HASH_ADDR
(
addr
 & ~7);

197 
èg
 = 
addr
 & ~7;

199 
¥ev
 = 
NULL
;

200 
ít
 = 
pu_hèbÀ
[
ödex
];

201 
ít
) {

202 i‡(
ít
->
isq_ödex
 == isq_index) {

203 i‡(
ít
->
löe_èg
 !
èg
Ë
	`Áèl
("tag mismatch inÑelease_htable_line");

205 i‡(
¥ev
 !
NULL
)

206 
¥ev
->
√xt
 = 
ít
->next;

208 
pu_hèbÀ
[
ödex
] = 
ít
->
√xt
;

210 
ít
->
√xt
 = 
pu_buckë_‰ì_li°
;

211 
pu_buckë_‰ì_li°
 = 
ít
;

213 i‡(
¥ev
 !
NULL
)

214 
ít
 = 
¥ev
->
√xt
;

216 
ít
 = 
pu_hèbÀ
[
ödex
];

219 
¥ev
 = 
ít
;

220 
ít
 =É¡->
√xt
;

223 
	}
}

230 
	$ßve_ªg_°©e
(
ªg_°©e_t
 *
ªg_°©e
, 
ªg_«me
)

239 
dï_«me
 = 
	`DEP_NAME
(
ªg_«me
);

240 
vÆ_ty≥
 
ty≥
 = 
	`GET_TYPE
(
ªg_«me
);

243 
ªg_°©e
->
dï_«me
 = dep_name;

244 
ªg_°©e
->
ªg_ty≥
 = 
ty≥
;

246 i‡(
dï_«me
 =
DNA
) ;

249 #i‡
	`deföed
(
TARGET_PISA
)

250 i‡(
	`REG_IS_FP
(
dï_«me
)) {

251 
ty≥
) {

252 
vt_sÊﬂt
:

253 
ªg_°©e
->
ªg_vÆue
.
f
 = 
	`FPR_F
(
	`FP_REG_INDEX
(
dï_«me
));

255 
vt_dÊﬂt
:

256 
ªg_°©e
->
ªg_vÆue
.
d
 = 
	`FPR_D
(
	`FP_REG_INDEX
(
dï_«me
));

259 
	`Áèl
("InvalidÅype");

262 i‡(
dï_«me
 =
DFCC
) {

263 
ªg_°©e
->
ªg_vÆue
.
sw
 = 
FCC
;

265 i‡(
dï_«me
 =
DHI
) {

266 
ªg_°©e
->
ªg_vÆue
.
sw
 = 
HI
;

268 i‡(
dï_«me
 =
DLO
) {

269 
ªg_°©e
->
ªg_vÆue
.
sw
 = 
LO
;

272 
ªg_°©e
->
ªg_vÆue
.
sw
 = 
	`GPR
(
	`INT_REG_INDEX
(
dï_«me
));

274 #ñi‡
	`deföed
(
TARGET_ALPHA
)

275 i‡(
	`REG_IS_FP
(
dï_«me
)) {

276 
ªg_°©e
->
ªg_vÆue
.
d
 = 
	`FPR
(
	`FP_REG_INDEX
(
dï_«me
));

278 i‡(
dï_«me
 =
DFPCR
) {

279 
ªg_°©e
->
ªg_vÆue
.
q
 = 
FPCR
;

281 i‡(
dï_«me
 =
DUNIQ
) {

282 
ªg_°©e
->
ªg_vÆue
.
q
 = 
UNIQ
;

285 
ªg_°©e
->
ªg_vÆue
.
q
 = 
	`GPR
(
	`INT_REG_INDEX
(
dï_«me
));

288 
	}
}

295 
	$commô_ªg_°©e
(
ªg_°©e_t
 *
ªg_°©e
)

298 
dï_«me
 = 
ªg_°©e
->dep_name;

299 
vÆ_ty≥
 
ªg_ty≥
 = 
ªg_°©e
->reg_type;

301 i‡(
dï_«me
 =
DNA
) ;

304 #i‡
	`deföed
(
TARGET_PISA
)

305 i‡(
	`REG_IS_FP
(
dï_«me
)) {

306 
ªg_ty≥
) {

307 
vt_sÊﬂt
:

308 
ªgs
.
ªgs_F
.
f
[
	`FP_REG_INDEX
(
dï_«me
)] = 
ªg_°©e
->
ªg_vÆue
.f;

310 
vt_dÊﬂt
:

311 
ªgs
.
ªgs_F
.
d
[
	`FP_REG_INDEX
(
dï_«me
Ë>> 1] = 
ªg_°©e
->
ªg_vÆue
.d;

314 
	`Áèl
("InvalidÅype");

317 i‡(
dï_«me
 =
DFCC
) {

318 
ªgs
.
ªgs_C
.
fcc
 = 
ªg_°©e
->
ªg_vÆue
.
sw
;

320 i‡(
dï_«me
 =
DHI
) {

321 
ªgs
.
ªgs_C
.
hi
 = 
ªg_°©e
->
ªg_vÆue
.
sw
;

323 i‡(
dï_«me
 =
DLO
) {

324 
ªgs
.
ªgs_C
.
lo
 = 
ªg_°©e
->
ªg_vÆue
.
sw
;

327 
ªgs
.
ªgs_R
[
	`INT_REG_INDEX
(
dï_«me
)] = 
ªg_°©e
->
ªg_vÆue
.
sw
;

329 #ñi‡
	`deföed
(
TARGET_ALPHA
)

330 i‡(
	`REG_IS_FP
(
dï_«me
)) {

331 
ªgs
.
ªgs_F
.
d
[
	`FP_REG_INDEX
(
dï_«me
)] = 
ªg_°©e
->
ªg_vÆue
.d;

333 i‡(
dï_«me
 =
DFPCR
) {

334 
ªgs
.
ªgs_C
.
Â¸
 = 
ªg_°©e
->
ªg_vÆue
.
q
;

336 i‡(
dï_«me
 =
DUNIQ
) {

337 
ªgs
.
ªgs_C
.
uniq
 = 
ªg_°©e
->
ªg_vÆue
.
q
;

340 
ªgs
.
ªgs_R
[
	`INT_REG_INDEX
(
dï_«me
)] = 
ªg_°©e
->
ªg_vÆue
.
q
;

345 
ªg_°©e
->
dï_«me
 = 
DNA
;

346 
	}
}

350 
	$isq_ª£t
(
rﬁlback_ödex
)

352 
isq_ödex
;

353 
ªmoved
 = 0;

358 
isq_ödex
 = (
rﬁlback_ödex
 + 1Ë% 
ISQ_size
;

359 
isq_ödex
 !
ISQ_èû
;

360 
isq_ödex
 = (isq_ödex + 1Ë% 
ISQ_size


362 
ISQ
[
isq_ödex
].
vÆid
 = 0;

363 i‡(
ISQ
[
isq_ödex
].
is_å≠
) is_trap = 0;

364 i‡(
ISQ
[
isq_ödex
].
is_sysˇŒ
) is_syscall = 0;

365 i‡(
ISQ
[
isq_ödex
].
is_wrôe
)

366 
	`ªÀa£_hèbÀ_löe
(
isq_ödex
);

367 
ªmoved
++;

371 
ISQ_èû
 = (
rﬁlback_ödex
 + 1Ë% 
ISQ_size
;

372 
ISQ_num
 = ISQ_num - 
ªmoved
;

373 
	}
}

377 
	$isq_¥öt_mem_vÆue
(
FILE
 *
°ªam
, 
size
, 
vÆ_uni⁄
 
u
)

379 
size
) {

380 1: 
	`myÂrötf
(
°ªam
, "0x%p", 
u
.
b
); ;

381 2: 
	`myÂrötf
(
°ªam
, "0x%p", 
u
.
h
); ;

382 4: 
	`myÂrötf
(
°ªam
, "0x%p", 
u
.
w
); ;

383 8: 
	`myÂrötf
(
°ªam
, "0x%p", 
u
.
q
); ;

384 : 
	`Áèl
("invlaid size in isq_print_mem_value");

386 
	}
}

390 
	$isq_¥öt_ªg_vÆue
(
FILE
 *
°ªam
, 
ªg_°©e_t
 *
ªg_°©e
)

392 
ªg_°©e
->
ªg_ty≥
) {

393 
vt_n⁄e
: 
	`myÂrötf
(
°ªam
, "none"); ;

394 
vt_byã
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
b
); ;

395 
vt_sbyã
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
sb
); ;

396 
vt_hÆf
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
h
); ;

397 
vt_shÆf
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
sh
); ;

398 
vt_w‹d
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
w
); ;

399 
vt_sw‹d
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
sw
); ;

400 
vt_qw‹d
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
q
); ;

401 
vt_sqw‹d
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
sq
); ;

402 
vt_sÊﬂt
: 
	`myÂrötf
(
°ªam
, "%f", 
ªg_°©e
->
ªg_vÆue
.
f
); ;

403 
vt_dÊﬂt
: 
	`myÂrötf
(
°ªam
, "%f", 
ªg_°©e
->
ªg_vÆue
.
d
); ;

404 
vt_addr
: 
	`myÂrötf
(
°ªam
, "0x%p", 
ªg_°©e
->
ªg_vÆue
.
addr
); ;

405 : 
	`Áèl
("invlaid size in isq_print_reg_value");

407 
	}
}

411 
	$isq_dump
(
FILE
 *
°ªam
)

413 
num
, 
hód
, 
i
;

414 
	`Ârötf
(
°ªam
, "** ISQ contents **\n");

415 
	`Ârötf
(
°ªam
, "ISQ_num: %d\n", 
ISQ_num
);

416 
	`Ârötf
(
°ªam
, "ISQ_hód: %d, ISQ_èû: %d\n", 
ISQ_hód
, 
ISQ_èû
);

418 
num
 = 
ISQ_num
;

419 
hód
 = 
ISQ_hód
;

420 
num
) {

421 
	`Ârötf
(
°ªam
, "idx: %2d in°: `", 
hód
);

422 
	`md_¥öt_ö¢
(
ISQ
[
hód
].
IR
, ISQ[hód].
PC
, 
°ªam
);

423 
	`Ârötf
(
°ªam
, "'\n");

425 
	`myÂrötf
(
°ªam
, "\tPC: 0x%08p, NPC: 0x%08p\n", 
ISQ
[
hód
].
PC
, ISQ[hód].
NPC
);

426 
	`Ârötf
(
°ªam
, "\ttrap: %d, syscall: %d, spec_mode: %d, fault: %d\n",

427 
ISQ
[
hód
].
is_å≠
, ISQ[hód].
is_sysˇŒ
, ISQ[hód].
•ec_mode
, ISQ[hód].
Áu…
);

429 i‡(
	`MD_OP_FLAGS
(
ISQ
[
hód
].
›
Ë& 
F_MEM
) {

430 
	`myÂrötf
(
°ªam
, "\tmem_addr: 0x%08p, mem_size: %d\n",

431 
ISQ
[
hód
].
mem_addr
, ISQ[hód].
mem_size
);

432 
	`myÂrötf
(
°ªam
, "\tmem_value: ");

433 
	`isq_¥öt_mem_vÆue
(
°ªam
, 
ISQ
[
hód
].
mem_size
, ISQ[hód].
mem_vÆue
);

434 
	`Ârötf
(
°ªam
, ", is_wrôe: %d\n", 
ISQ
[
hód
].
is_wrôe
);

437 
i
 = 0; i < 
MAX_ODEPS
; i++) {

438 
	`Ârötf
(
°ªam
, "\åeg_°©ê%d -- ", 
i
);

439 i‡(
ISQ
[
hód
].
ªg_°©e
[
i
].
dï_«me
 =
DNA
) {

440 
	`Ârötf
(
°ªam
, "reg_dep_name: DNA\n");

443 
	`Ârötf
(
°ªam
, "ªg_dï_«me: %d,Ñeg_vÆue: ", 
ISQ
[
hód
].
ªg_°©e
[
i
].
dï_«me
);

444 
	`isq_¥öt_ªg_vÆue
(
°ªam
, &(
ISQ
[
hód
].
ªg_°©e
[
i
]));

445 
	`Ârötf
(
°ªam
, "\n");

449 
hód
 = (hód + 1Ë% 
ISQ_size
;

450 
num
--;

452 
	}
}

456 
	$checkî_öô
()

458 
ISQ_size
 = 
IFQ_size
 + 
ROB_size
;

459 
ISQ
 = 
	`ˇŒoc
(
ISQ_size
, (
ö°_°©e
));

460 i‡(!
ISQ
Ë
	`Áèl
("out of virtual memory");

462 
ISQ_hód
 = 
ISQ_èû
 = 0;

463 
ISQ_num
 = 0;

464 
ISQ_cou¡
 = 0;

465 
ISQ_fcou¡
 = 0;

467 
is_å≠
 = 0;

468 
is_sysˇŒ
 = 0;

469 
	}
}

473 
	$checkî_exec
(
md_addr_t
 
„tch_PC
, 
„tch_ªc
 *
IFQ
)

475 c⁄° 
Á°fwd_mode
 = 0;

476 
md_ö°_t
 
ö°
;

477 
md_›code
 
›
;

478 
md_Áu…_ty≥
 
Áu…
;

479 
md_addr_t
 
èrgë_addr
;

480 
md_addr_t
 
mem_addr
;

481 
vÆ_uni⁄
 
mem_vÆue
;

482 
mem_size
;

483 
out1
, 
out2
;

484 
ö1
, 
ö2
, 
ö3
;

485 
isq_íåy
;

486 
i
;

489 i‡(
is_å≠
Ë
	`Áèl
("Cannot call checker_exec untilÅrap is committed.\n");

490 i‡(
is_sysˇŒ
Ë
	`Áèl
("Cannot call checker_exec until syscall is committed.\n");

493 
Áu…
 = 
md_Áu…_n⁄e
;

494 
mem_addr
 = 0;

495 
mem_size
 = 0;

500 
pu_ªgs
.
ªgs_PC
 =Öu_ªgs.
ªgs_NPC
;

501 i‡(!
chk_•ec_mode
) {

502 
chk_•ec_mode
 = (
„tch_PC
 !
pu_ªgs
.
ªgs_PC
);

507 
pu_ªgs
.
ªgs_PC
 = 
„tch_PC
;

510 
pu_ªgs
.
ªgs_NPC
 =Öu_ªgs.
ªgs_PC
 + (
md_ö°_t
);

513 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
pu_ªgs
.
ªgs_PC
);

514 
	`MD_SET_OPCODE
(
›
, 
ö°
);

518 
sim_tŸÆ_ö¢
++;

519 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
Ë
sim_tŸÆ_bønches
++;

520 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
) {

521 
sim_tŸÆ_ªfs
++;

522 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)) {

523 
sim_tŸÆ_lﬂds
++;

526 i‡(!
chk_•ec_mode
Ë
sim_‹a˛e_ö¢
++;

529 
pu_ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

530 #i‡
	`deföed
(
TARGET_ALPHA
)

531 
pu_ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

535 
ISQ
[
ISQ_èû
].
is_wrôe
 = 0;

540 
	#DECLARE_FAULT
(
FAULT
Ë{ 
Áu…
 = (FAULT); ; }

	)

541 
	#SYSCALL
(
INST
Ë
is_sysˇŒ
 = 1

	)

544 
›
) {

545 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

546 
OP
: \

547 
out1
 = 
O1
; 
out2
 = 
O2
; 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

548 
	`SYMCAT
(
OP
,
_IMPL
); \

549 ;

	)

550 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

551 
OP
: \

552 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

553 
	#CONNECT
(
OP
)

	)

554 
	~"machöe.def
"

556  
INVALID_ISQ
;

560 i‡(
vîbo£
 &&

561 (
sim_‹a˛e_ö¢
 >
åiggî_ö°
) &&

562 (!
max_ö°s
 || (
sim_‹a˛e_ö¢
 <= max_insts)))

564 i‡(
chk_•ec_mode
)

565 
	`myÂrötf
(
°dîr
, " ORACLE: %10s [xor: 0x%08x] @ 0x%08p: ",

566 "•ec", 
	`md_x‹_ªgs
(&
pu_ªgs
),Öu_ªgs.
ªgs_PC
);

568 
	`myÂrötf
(
°dîr
, " ORACLE: %10n [xor: 0x%08x] @ 0x%08p: ",

569 
sim_‹a˛e_ö¢
, 
	`md_x‹_ªgs
(&
pu_ªgs
),Öu_ªgs.
ªgs_PC
);

570 
	`md_¥öt_ö¢
(
ö°
, 
pu_ªgs
.
ªgs_PC
, 
°dîr
);

571 
	`Ârötf
(
°dîr
, "\n");

572 i‡(
vîbo£_ªgs
) {

573 
	`md_¥öt_úegs
(
pu_ªgs
.
ªgs_R
, 
°dîr
);

574 
	`md_¥öt_Âªgs
(
pu_ªgs
.
ªgs_F
, 
°dîr
);

575 
	`md_¥öt_¸egs
(
pu_ªgs
.
ªgs_C
, 
°dîr
);

576 
	`Ârötf
(
°dîr
, "\n");

581 
is_å≠
 = (
	`MD_OP_FLAGS
(
›
Ë& 
F_TRAP
);

584 i‡((
ISQ_hód
 =
ISQ_èû
Ë&& (
ISQ
[ISQ_hód].
vÆid
))

585 
	`Áèl
("full ISQ");

588 
ISQ
[
ISQ_èû
].
vÆid
 = 1;

589 
ISQ
[
ISQ_èû
].
IR
 = 
ö°
;

590 
ISQ
[
ISQ_èû
].
›
 = op;

591 
ISQ
[
ISQ_èû
].
PC
 = 
pu_ªgs
.
ªgs_PC
;

592 
ISQ
[
ISQ_èû
].
NPC
 = 
pu_ªgs
.
ªgs_NPC
;

593 
ISQ
[
ISQ_èû
].
is_å≠
 = is_trap;

594 
ISQ
[
ISQ_èû
].
is_sysˇŒ
 = is_syscall;

595 
ISQ
[
ISQ_èû
].
•ec_mode
 = 
chk_•ec_mode
;

596 
ISQ
[
ISQ_èû
].
Áu…
 = fault;

597 
ISQ
[
ISQ_èû
].
mem_addr
 = mem_addr;

598 
ISQ
[
ISQ_èû
].
mem_size
 = mem_size;

599 
ISQ
[
ISQ_èû
].
mem_vÆue
 = mem_value;

602 
	`ßve_ªg_°©e
(&(
ISQ
[
ISQ_èû
].
ªg_°©e
[0]), 
out1
);

603 
	`ßve_ªg_°©e
(&(
ISQ
[
ISQ_èû
].
ªg_°©e
[1]), 
out2
);

606 
IFQ
->
ö1
 = in1;

607 
IFQ
->
ö2
 = in2;

608 
IFQ
->
ö3
 = in3;

609 
IFQ
->
out1
 = out1;

610 
IFQ
->
out2
 = out2;

611 
IFQ
->
èrgë_addr
 =Åarget_addr;

612 
IFQ
->
mem_size
 = mem_size;

615 
isq_íåy
 = 
ISQ_èû
;

616 
ISQ_èû
 = (ISQ_èû + 1Ë% 
ISQ_size
;

617 
ISQ_num
++;

620 
i
=0; i<
•ec_pc°©_√…
; i++) {

622 
cou¡î_t
 
√wvÆ
;

623 
dñè
;

626 
√wvÆ
 = 
	`STATVAL
(
•ec_pc°©_°©s
[
i
]);

627 
dñè
 = 
√wvÆ
 - 
•ec_pc°©_œ°vÆs
[
i
];

628 i‡(
dñè
 != 0) {

629 
	`°©_add_ßm∂es
(
•ec_pc°©_sdi°s
[
i
], 
pu_ªgs
.
ªgs_PC
, 
dñè
);

630 
•ec_pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

634  
isq_íåy
;

635 
	}
}

645 
	$checkî_ªcovî
(
rﬁlback_ödex
)

647 
isq_ödex
;

648 
i
;

649 
found_m©ch
 = 0;

652 
pu_ªgs
 = 
ªgs
;

655 
isq_ödex
 = 
ISQ_hód
; !
found_m©ch
; isq_ödex = (isq_ödex + 1Ë% 
ISQ_size
) {

657 i‡(
isq_ödex
 =
rﬁlback_ödex
Ë
found_m©ch
 = 1;

658 i‡(
ISQ
[
isq_ödex
].
vÆid
 == 0) ;

661 
i
 = 0; i < 
MAX_ODEPS
; i++) {

662 
ªg_°©e_t
 *
ªg_°©e
 = &(
ISQ
[
isq_ödex
].ªg_°©e[
i
]);

664 i‡(
ªg_°©e
->
dï_«me
 =
DNA
) ;

666 #i‡
	`deföed
(
TARGET_PISA
)

667 i‡(
	`REG_IS_FP
(
ªg_°©e
->
dï_«me
)) {

668 
ªg_°©e
->
ªg_ty≥
) {

669 
vt_sÊﬂt
:

670 
	`SET_FPR_F
(
	`FP_REG_INDEX
(
ªg_°©e
->
dï_«me
),Ñeg_°©e->
ªg_vÆue
.
f
);

672 
vt_dÊﬂt
:

673 
	`SET_FPR_D
(
	`FP_REG_INDEX
(
ªg_°©e
->
dï_«me
),Ñeg_°©e->
ªg_vÆue
.
d
);

676 
	`Áèl
("InvalidÅype");

679 i‡(
ªg_°©e
->
dï_«me
 =
DFCC
) {

680 
	`SET_FCC
(
ªg_°©e
->
ªg_vÆue
.
sw
);

682 i‡(
ªg_°©e
->
dï_«me
 =
DHI
) {

683 
	`SET_HI
(
ªg_°©e
->
ªg_vÆue
.
sw
);

685 i‡(
ªg_°©e
->
dï_«me
 =
DLO
) {

686 
	`SET_LO
(
ªg_°©e
->
ªg_vÆue
.
sw
);

689 
	`SET_GPR
(
	`INT_REG_INDEX
(
ªg_°©e
->
dï_«me
),Ñeg_°©e->
ªg_vÆue
.
sw
);

691 #ñi‡
	`deföed
(
TARGET_ALPHA
)

692 i‡(
	`REG_IS_FP
(
ªg_°©e
->
dï_«me
)) {

693 
	`SET_FPR
(
	`FP_REG_INDEX
(
ªg_°©e
->
dï_«me
),Ñeg_°©e->
ªg_vÆue
.
d
);

695 i‡(
ªg_°©e
->
dï_«me
 =
DFPCR
) {

696 
	`SET_FPCR
(
ªg_°©e
->
ªg_vÆue
.
q
);

698 i‡(
ªg_°©e
->
dï_«me
 =
DUNIQ
) {

699 
	`SET_UNIQ
(
ªg_°©e
->
ªg_vÆue
.
q
);

702 
	`SET_GPR
(
	`INT_REG_INDEX
(
ªg_°©e
->
dï_«me
),Ñeg_°©e->
ªg_vÆue
.
q
);

709 
	`isq_ª£t
(
rﬁlback_ödex
);

715 
chk_•ec_mode
 = 
ISQ
[
rﬁlback_ödex
].
•ec_mode
;

716 
	}
}

720 
	$¥o˚ss_timög_dï
(
ROB_íåy
 *
ª
, 
ö°_°©e
 *
isq
)

722 
i
, 
j
;

724 
isq
->
NPC
 = 
ª
->NPC;

725 
isq
->
Áu…
 = 
ª
->fault;

728 i‡(
ª
->
ö_LSQ
 && 
isq
->
is_wrôe
) {

729 
ª
->
mem_size
) {

731 
isq
->
mem_vÆue
.
b
 = 
ª
->mem_value.b;

734 
isq
->
mem_vÆue
.
h
 = 
ª
->mem_value.h;

737 
isq
->
mem_vÆue
.
w
 = 
ª
->mem_value.w;

740 
isq
->
mem_vÆue
.
q
 = 
ª
->mem_value.q;

743 
	`Áèl
("invalid memory size in isqÉntry");

749 
i
 = 0; i < 
MAX_ODEPS
; i++) {

751 #i‡
	`deföed
(
TARGET_PISA
)

752 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)))

754 #ñi‡
	`deföed
(
TARGET_ALPHA
)

755 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)) ||

756 (
ª
->
odï_«me
[
i
] =
	`DFPR
(
MD_REG_ZERO
))) ;

759 
j
 = 0; j < 
MAX_ODEPS
; j++) {

760 i‡(
ª
->
ó_comp
) {

761 i‡(
ª
->
odï_«me
[
i
] =
DTMP
) {

762 
isq
->
mem_addr
 = 
ª
->
odï_vÆue
[
i
].
addr
;

765 i‡(
ª
->
odï_«me
[
i
] =
isq
->
ªg_°©e
[
j
].
dï_«me
) {

766 
isq
->
ªg_°©e
[
j
].
ªg_ty≥
) {

767 
vt_byã
:

768 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
b
 = 
ª
->
odï_vÆue
[
i
].b;

770 
vt_sbyã
:

771 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
sb
 = 
ª
->
odï_vÆue
[
i
].sb;

773 
vt_hÆf
:

774 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
h
 = 
ª
->
odï_vÆue
[
i
].h;

776 
vt_shÆf
:

777 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
sh
 = 
ª
->
odï_vÆue
[
i
].sh;

779 
vt_w‹d
:

780 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
w
 = 
ª
->
odï_vÆue
[
i
].w;

782 
vt_sw‹d
:

783 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
sw
 = 
ª
->
odï_vÆue
[
i
].sw;

785 
vt_qw‹d
:

786 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
q
 = 
ª
->
odï_vÆue
[
i
].q;

788 
vt_sqw‹d
:

789 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
sq
 = 
ª
->
odï_vÆue
[
i
].sq;

791 
vt_sÊﬂt
:

792 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
f
 = 
ª
->
odï_vÆue
[
i
].f;

794 
vt_dÊﬂt
:

795 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
d
 = 
ª
->
odï_vÆue
[
i
].d;

797 
vt_addr
:

798 
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.
addr
 = 
ª
->
odï_vÆue
[
i
].addr;

801 
	`Áèl
("InvalidÅypeÅo check");

806 
	}
}

810 
	$checkî_¥öt_îr‹s
(
ROB_íåy
 *
ª
, 
ö°_°©e
 *
isq
)

812 
i
, 
j
;

815 i‡(
ª
->
NPC
 !
isq
->NPC) {

816 
	`myÂrötf
(
°dîr
,

818 
ª
->
NPC
, 
isq
->NPC, 
sim_cy˛e


823 i‡(
ª
->
Áu…
 !
isq
->fault) {

824 
	`myÂrötf
(
°dîr
,

826 
ª
->
Áu…
, 
isq
->Áu…, isq->
PC
, 
sim_cy˛e


831 i‡(
ª
->
ö_LSQ
 && 
isq
->
is_wrôe
) {

832 
isq
->
mem_size
) {

834 i‡(
ª
->
mem_vÆue
.
b
 !
isq
->mem_value.b) {

835 
	`myÂrötf
(
°dîr
,

837 
isq
->
PC
, 
sim_cy˛e


842 i‡(
ª
->
mem_vÆue
.
h
 !
isq
->mem_value.h) {

843 
	`myÂrötf
(
°dîr
,

845 
isq
->
PC
, 
sim_cy˛e


850 i‡(
ª
->
mem_vÆue
.
w
 !
isq
->mem_value.w) {

851 
	`myÂrötf
(
°dîr
,

853 
isq
->
PC
, 
sim_cy˛e


858 i‡(
ª
->
mem_vÆue
.
q
 !
isq
->mem_value.q) {

859 
	`myÂrötf
(
°dîr
,

861 
isq
->
PC
, 
sim_cy˛e


866 
	`Áèl
("invalid memory size in isqÉntry");

872 
i
 = 0; i < 
MAX_ODEPS
; i++) {

874 
found_m©ch
 = 0;

876 #i‡
	`deföed
(
TARGET_PISA
)

877 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)))

879 #ñi‡
	`deföed
(
TARGET_ALPHA
)

880 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)) ||

881 (
ª
->
odï_«me
[
i
] =
	`DFPR
(
MD_REG_ZERO
))) ;

884 
j
 = 0; j < 
MAX_ODEPS
; j++) {

885 i‡(
ª
->
ó_comp
) {

886 i‡(
ª
->
odï_«me
[
i
] =
DTMP
) {

887 
found_m©ch
 = 1;

888 i‡(
ª
->
odï_vÆue
[
i
].
addr
 !
isq
->
mem_addr
) {

889 
	`Ârötf
(
°dîr
, "CHECKER ERROR! memoryáddress differsát ");

890 
	`myÂrötf
(
°dîr
,

892 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
addr
,

893 
isq
->
mem_addr
, 
sim_cy˛e


898 i‡(
ª
->
odï_«me
[
i
] =
isq
->
ªg_°©e
[
j
].
dï_«me
) {

899 
found_m©ch
 = 1;

901 
isq
->
ªg_°©e
[
j
].
ªg_ty≥
) {

902 
vt_byã
:

903 i‡(
ª
->
odï_vÆue
[
i
].
b
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.b) {

904 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

905 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

906 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
b
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.b, 
sim_cy˛e
);

909 
vt_sbyã
:

910 i‡(
ª
->
odï_vÆue
[
i
].
sb
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sb) {

911 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

912 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

913 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
sb
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.sb, 
sim_cy˛e
);

916 
vt_hÆf
:

917 i‡(
ª
->
odï_vÆue
[
i
].
h
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.h) {

918 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

919 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

920 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
h
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.h, 
sim_cy˛e
);

923 
vt_shÆf
:

924 i‡(
ª
->
odï_vÆue
[
i
].
sh
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sh) {

925 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

926 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

927 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
sh
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.sh, 
sim_cy˛e
);

930 
vt_w‹d
:

931 i‡(
ª
->
odï_vÆue
[
i
].
w
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.w) {

932 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

933 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

934 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
w
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.w, 
sim_cy˛e
);

937 
vt_sw‹d
:

938 i‡(
ª
->
odï_vÆue
[
i
].
sw
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sw) {

939 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

940 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

941 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
sw
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.sw, 
sim_cy˛e
);

944 
vt_qw‹d
:

945 i‡(
ª
->
odï_vÆue
[
i
].
q
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.q) {

946 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

947 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

948 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
q
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.q, 
sim_cy˛e
);

951 
vt_sqw‹d
:

952 i‡(
ª
->
odï_vÆue
[
i
].
sq
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sq) {

953 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

954 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

955 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
sq
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.sq, 
sim_cy˛e
);

958 
vt_sÊﬂt
:

959 i‡(
ª
->
odï_vÆue
[
i
].
f
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.f) {

960 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

961 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%f oracle: 0x%f (cycle %d)\n",

962 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
f
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.f, 
sim_cy˛e
);

965 
vt_dÊﬂt
:

966 i‡(
ª
->
odï_vÆue
[
i
].
d
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.d) {

967 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

968 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%f oracle: 0x%f (cycle %d)\n",

969 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
d
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.d, 
sim_cy˛e
);

972 
vt_addr
:

973 i‡(
ª
->
odï_vÆue
[
i
].
addr
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.addr) {

974 
	`Ârötf
(
°dîr
, "CHECKER ERROR!Ñegi°î %d dif„r†© PC ", 
ª
->
odï_«me
[
i
]);

975 
	`myÂrötf
(
°dîr
, "0x%08p,Ñe: 0x%08p oracle: 0x%08p (cycle %d)\n",

976 
isq
->
PC
, 
ª
->
odï_vÆue
[
i
].
addr
, isq->
ªg_°©e
[
j
].
ªg_vÆue
.addr, 
sim_cy˛e
);

980 
	`Áèl
("InvalidÅypeÅo check");

986 i‡(!
found_m©ch
) {

987 
	`Ârötf
(
°dîr
, "CHECKER ERROR! oø˛êd€†nŸ wrôêªgi°î %dáà", 
ª
->
odï_«me
[
i
]);

988 
	`myÂrötf
(
°dîr
, "PC 0x%08∞(cy˛ê%d)\n", 
isq
->
PC
, 
sim_cy˛e
);

992 
	`Ârötf
(
°dîr
, "Failing instruction: ");

993 
	`md_¥öt_ö¢
(
ª
->
IR
,Ñe->
PC
, 
°dîr
);

994 
	`Ârötf
(
°dîr
, "\n");

995 
	}
}

1000 
	$checkî_check
(
ROB_íåy
 *
ª
, 
ö°_°©e
 *
isq
)

1002 
found_îr‹
 = 0;

1003 
i
, 
j
;

1006 i‡(
ª
->
isq_ödex
 !
ISQ_hód
Ë
	`Áèl
("ISQánd ROB out of sync");

1007 i‡(
ª
->
PC
 !
isq
->PCË
	`Áèl
("ISQánd ROB out of sync");

1010 i‡(
isq
->
•ec_mode
Ë
	`Áèl
("tryingÅo commit in spec mode");

1014 i‡(
ª
->
NPC
 !
isq
->NPCË
found_îr‹
 = 1;

1017 i‡(
ª
->
Áu…
 !
isq
->Áu…Ë
found_îr‹
 = 1;

1020 i‡(
ª
->
ö_LSQ
 && 
isq
->
is_wrôe
) {

1021 
isq
->
mem_size
) {

1023 i‡(
ª
->
mem_vÆue
.
b
 !
isq
->mem_vÆue.bË
found_îr‹
 = 1;

1026 i‡(
ª
->
mem_vÆue
.
h
 !
isq
->mem_vÆue.hË
found_îr‹
 = 1;

1029 i‡(
ª
->
mem_vÆue
.
w
 !
isq
->mem_vÆue.wË
found_îr‹
 = 1;

1032 i‡(
ª
->
mem_vÆue
.
q
 !
isq
->mem_vÆue.qË
found_îr‹
 = 1;

1035 
	`Áèl
("invalid memory size in isqÉntry");

1041 
i
 = 0; i < 
MAX_ODEPS
; i++) {

1043 
found_m©ch
 = 0;

1045 #i‡
	`deföed
(
TARGET_PISA
)

1046 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)))

1048 #ñi‡
	`deföed
(
TARGET_ALPHA
)

1049 i‡((
ª
->
odï_«me
[
i
] =
DNA
Ë|| (ª->odï_«me[i] =
	`DGPR
(
MD_REG_ZERO
)) ||

1050 (
ª
->
odï_«me
[
i
] =
	`DFPR
(
MD_REG_ZERO
))) ;

1053 
j
 = 0; j < 
MAX_ODEPS
; j++) {

1054 i‡(
ª
->
ó_comp
) {

1055 i‡(
ª
->
odï_«me
[
i
] =
DTMP
) {

1056 
found_m©ch
 = 1;

1057 i‡(
ª
->
odï_vÆue
[
i
].
addr
 !
isq
->
mem_addr
)

1058 
found_îr‹
 = 1;

1061 i‡(
ª
->
odï_«me
[
i
] =
isq
->
ªg_°©e
[
j
].
dï_«me
) {

1062 
found_m©ch
 = 1;

1064 
isq
->
ªg_°©e
[
j
].
ªg_ty≥
) {

1065 
vt_byã
:

1066 i‡(
ª
->
odï_vÆue
[
i
].
b
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.b)

1067 
found_îr‹
 = 1;

1069 
vt_sbyã
:

1070 i‡(
ª
->
odï_vÆue
[
i
].
sb
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sb)

1071 
found_îr‹
 = 1;

1073 
vt_hÆf
:

1074 i‡(
ª
->
odï_vÆue
[
i
].
h
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.h)

1075 
found_îr‹
 = 1;

1077 
vt_shÆf
:

1078 i‡(
ª
->
odï_vÆue
[
i
].
sh
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sh)

1079 
found_îr‹
 = 1;

1081 
vt_w‹d
:

1082 i‡(
ª
->
odï_vÆue
[
i
].
w
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.w)

1083 
found_îr‹
 = 1;

1085 
vt_sw‹d
:

1086 i‡(
ª
->
odï_vÆue
[
i
].
sw
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sw)

1087 
found_îr‹
 = 1;

1089 
vt_qw‹d
:

1090 i‡(
ª
->
odï_vÆue
[
i
].
q
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.q)

1091 
found_îr‹
 = 1;

1093 
vt_sqw‹d
:

1094 i‡(
ª
->
odï_vÆue
[
i
].
sq
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.sq)

1095 
found_îr‹
 = 1;

1097 
vt_sÊﬂt
:

1098 i‡(
ª
->
odï_vÆue
[
i
].
f
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.f)

1099 
found_îr‹
 = 1;

1101 
vt_dÊﬂt
:

1102 i‡(
ª
->
odï_vÆue
[
i
].
d
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.d)

1103 
found_îr‹
 = 1;

1105 
vt_addr
:

1106 i‡(
ª
->
odï_vÆue
[
i
].
addr
 !
isq
->
ªg_°©e
[
j
].
ªg_vÆue
.addr)

1107 
found_îr‹
 = 1;

1110 
	`Áèl
("InvalidÅypeÅo check");

1116 i‡(!
found_m©ch
Ë
found_îr‹
 = 1;

1120 i‡(
ª
->
timög_dï
 && 
found_îr‹
Ë
	`¥o˚ss_timög_dï
‘e,
isq
);

1121 i‡(
¥öt_chk_îr
 && 
found_îr‹
Ë
	`checkî_¥öt_îr‹s
(
ª
, 
isq
);

1122  
found_îr‹
;

1123 
	}
}

1134 
	$checkî_commô
(
ROB_íåy
 *
ª
, 
lsq_chk_îr‹
)

1136 
found_îr‹
;

1137 
i
;

1140 
found_îr‹
 = 
	`checkî_check
(
ª
, &(
ISQ
[
ISQ_hód
]));

1141 i‡(
lsq_chk_îr‹
Ë
found_îr‹
 = 1;

1144 i‡(
ISQ
[
ISQ_hód
].
Áu…
 !
md_Áu…_n⁄e
)

1145 
	`Áèl
("n⁄-•e¯Áu… (%dËdëe˘ed @ 0x%08p", 
ISQ
[
ISQ_hód
].
Áu…
, ISQ[ISQ_hód].
PC
);

1148 
sim_num_ö¢
++;

1149 i‡(
	`MD_OP_FLAGS
(
ISQ
[
ISQ_hód
].
›
Ë& 
F_CTRL
Ë
sim_num_bønches
++;

1150 i‡(
	`MD_OP_FLAGS
(
ISQ
[
ISQ_hód
].
›
Ë& 
F_MEM
) {

1151 
sim_num_ªfs
++;

1152 i‡(!(
ISQ
[
ISQ_hód
].
is_wrôe
)) {

1153 
sim_num_lﬂds
++;

1156 i‡(
ª
->
timög_dï
Ë
timög_dï_ö¢
++;

1159 
i
=0; i<
pc°©_√…
; i++) {

1161 
cou¡î_t
 
√wvÆ
;

1162 
dñè
;

1165 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

1166 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

1167 i‡(
dñè
 != 0) {

1168 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
pu_ªgs
.
ªgs_PC
, 
dñè
);

1169 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

1175 
ªgs
.
ªgs_PC
 = 
ISQ
[
ISQ_hód
].
PC
;

1176 
ªgs
.
ªgs_NPC
 = 
ISQ
[
ISQ_hód
].
NPC
;

1179 i‡(
ISQ
[
ISQ_hód
].
is_sysˇŒ
) {

1183 i‡(
ISQ_èû
 !((
ISQ_hód
 + 1Ë% 
ISQ_size
))

1184 
	`Áèl
("syscall isÇotÅhe only instruction in ISQ");

1185 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
ª
->
IR
, 
TRUE
);

1186 
pu_ªgs
 = 
ªgs
;

1187 
is_sysˇŒ
 = 0;

1189 i‡(
ISQ
[
ISQ_hód
].
is_wrôe
) {

1190 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ISQ
[
ISQ_hód
].
mem_addr
, &(ISQ[ISQ_hód].
mem_vÆue
), ISQ[ISQ_hód].
mem_size
);

1191 
	`ªÀa£_hèbÀ_löe
(
ISQ_hód
);

1194 
	`commô_ªg_°©e
(&(
ISQ
[
ISQ_hód
].
ªg_°©e
[0]));

1195 
	`commô_ªg_°©e
(&(
ISQ
[
ISQ_hód
].
ªg_°©e
[1]));

1199 i‡(
ISQ
[
ISQ_hód
].
is_å≠
) is_trap = 0;

1201 i‡(
found_îr‹
) {

1202 i‡(!
ª
->
timög_dï
Ë
checkî_îr‹s
++;

1203 i‡(
°›_⁄_chk_îr
Ë
	`Áèl
("Aborting simulation dueÅo checkerÉrror!");

1206 
	`checkî_ªcovî
(
ISQ_hód
);

1207 
	`rob_ªcovî
(&(
ROB
[
ROB_hód
]) - ROB);

1208 
	`„_ªcovî
(
ISQ
[
ISQ_hód
].
NPC
);

1212 
ISQ
[
ISQ_hód
].
vÆid
 = 0;

1213 
ISQ_hód
 = (ISQ_hód + 1Ë% 
ISQ_size
;

1214 
ISQ_num
--;

1216  
found_îr‹
;

1217 
	}
}

	@mase-checker.h

58 
ö°_°©e
 *
ISQ
;

59 
ISQ_hód
;

60 
ISQ_èû
;

61 
ISQ_size
;

62 
ISQ_num
;

63 
	#INVALID_ISQ
 -1

	)

66 
ªgs_t
 
pu_ªgs
;

69 
ªgs_t
 
ªgs
;

72 
mem_t
 *
mem
;

75 
is_å≠
;

78 
is_sysˇŒ
;

82 
md_Áu…_ty≥


83 
pu_mem_ac˚ss
(
mem_t
 *
mem
,

84 
mem_cmd
 
cmd
,

85 
md_addr_t
 
addr
,

86 *
vp
,

87 
nbyãs
 );

91 
isq_ª£t
(
rﬁlback_ödex
);

95 
isq_dump
(
FILE
 *
°ªam
);

99 
checkî_öô
();

103 
checkî_exec
(
md_addr_t
 
„tch_PC
, 
„tch_ªc
 *
IFQ
);

113 
checkî_ªcovî
(
rﬁlback_ödex
);

118 
checkî_check
(
ROB_íåy
 *
ª
, 
ö°_°©e
 *
isq
);

121 
checkî_c‹ª˘
(
ROB_íåy
 *
ª
, );

124 
¥o˚ss_timög_dï
(
ROB_íåy
 *
ª
, 
ö°_°©e
 *
isq
);

136 
checkî_commô
(
ROB_íåy
 *
ª
, 
lsq_chk_îr‹
);

	@mase-commit.c

56 
	~"ma£.h
"

65 
	$ma£_commô
()

67 
i
;

68 
œt
;

69 
evíts
;

70 
is_wrôe
;

71 
lsq_chk_îr‹
;

72 
commôãd
 = 0;

73 
dlôe_made_check
 = 
FALSE
;

74 
md_addr_t
 
mem_addr
 = 0;

77 
ROB_num
 > 0 && 
commôãd
 < 
commô_width
) {

79 
ROB_íåy
 *
ª
 = &(
ROB
[
ROB_hód
]);

82 i‡(!
ª
->
com∂ëed
) ;

85 
evíts
 = 0;

86 
is_wrôe
 = 
FALSE
;

87 
lsq_chk_îr‹
 = 0;

90 i‡(
ROB
[
ROB_hód
].
ó_comp
) {

93 i‡(
LSQ_num
 <0 || !
LSQ
[
LSQ_hód
].
ö_LSQ
)

94 
	`∑nic
("ROB out of sync with LSQ");

97 i‡(!
LSQ
[
LSQ_hód
].
com∂ëed
) ;

100 
mem_addr
 = 
	`ªad_idï_li°
(&
LSQ
[
LSQ_hód
], 
	`DEP_NAME
(
DTMP
)).
addr
;

104 i‡((
	`MD_OP_FLAGS
(
LSQ
[
LSQ_hód
].
›
Ë& (
F_MEM
|
F_STORE
))

105 =(
F_MEM
|
F_STORE
))

107 
ªs_ãm∂©e
 *
fu
;

109 
is_wrôe
 = 
TRUE
;

112 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
LSQ
[
LSQ_hód
].
›
));

114 i‡(
fu
) {

117 i‡(
déb
) {

118 
mem_°©us
 
°©us
 = 
	`ma£_ˇche_ac˚ss
(

119 
déb
, 
Ród
, (
mem_addr
 & ~(
LSQ
[
LSQ_hód
].
mem_size
-1)),

120 
NULL
, 
LSQ
[
LSQ_hód
].
mem_size
, 
sim_cy˛e
,

121 
NULL
, NULL, NULL, 0, &
œt
);

122 i‡(
°©us
 =
MEM_RETRY
) ;

123 i‡(
œt
 > 1Ë
evíts
 |
PEV_TLBMISS
;

127 i‡(
ˇche_dl1
) {

128 
mem_°©us
 
°©us
 = 
	`ma£_ˇche_ac˚ss
(

129 
ˇche_dl1
, 
Wrôe
, (
mem_addr
 & ~(
LSQ
[
LSQ_hód
].
mem_size
-1)),

130 
NULL
, 
LSQ
[
LSQ_hód
].
mem_size
, 
sim_cy˛e
,

131 
NULL
, NULL, NULL, 0, &
œt
);

132 i‡(
°©us
 =
MEM_RETRY
) ;

133 i‡(
œt
 > 
ˇche_dl1_œt
Ë
evíts
 |
PEV_CACHEMISS
;

137 i‡(
fu
->
ma°î
->
busy
Ë
	`∑nic
("functional unitálready in use");

138 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

147 
lsq_chk_îr‹
 = 
	`checkî_check
(&(
LSQ
[
LSQ_hód
]), &(
ISQ
[
ISQ_hód
]));

150 
i
=0; i<
MAX_ODEPS
; i++) {

151 
	`ª«me_ªmove_íåy
(
LSQ
[
LSQ_hód
].
odï_ª«me
[
i
], LSQ[LSQ_hód].
odï_«me
[i]);

152 
LSQ
[
LSQ_hód
].
odï_ª«me
[
i
] = 
NULL
;

156 
LSQ
[
LSQ_hód
].
èg
++;

157 
sim_¶ù
 +(
sim_cy˛e
 - 
LSQ
[
LSQ_hód
].
¶ù
);

160 
	`±ø˚_√w°age
(
LSQ
[
LSQ_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

161 
	`±ø˚_ídö°
(
LSQ
[
LSQ_hód
].
±ø˚_£q
);

164 
LSQ_hód
 = (LSQ_hód + 1Ë% 
LSQ_size
;

165 
LSQ_num
--;

169 i‡(
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_CT


170 && (
	`MD_OP_FLAGS
(
ª
->
›
Ë& 
F_CTRL
))

172 
	`b¥ed_upd©e
(
¥ed
,

173  
ª
->
PC
,

174  
ª
->
NPC
,

175  
ª
->
NPC
 !‘e->
PC
 + (
md_ö°_t
)),

176  
ª
->
¥ed_NPC
 !‘e->
PC
 + (
md_ö°_t
)),

177  
ª
->
¥ed_NPC
 =ª->
NPC
,

178  
ª
->
›
,

179  &
ª
->
dú_upd©e


184 i‡(
öje˘_îr‹s
) {

185 i‡(
	`ønd
(Ë% 10 =0Ë
ª
->
Áu…
 = 43;

189 i‡(
	`checkî_commô
(
ª
, 
lsq_chk_îr‹
)Ë
evíts
 |
PEV_CHKERROR
;

192 
md_›code
 
›
;

193 
	`MD_SET_OPCODE
(
›
, 
ª
->
IR
);

197 
	`fÊush
(
°dout
);

202 
i
=0; i<
MAX_ODEPS
; i++) {

203 
	`ª«me_ªmove_íåy
(
ª
->
odï_ª«me
[
i
],Ñe->
odï_«me
[i]);

204 
ª
->
odï_ª«me
[
i
] = 
NULL
;

208 
ROB
[
ROB_hód
].
èg
++;

209 
sim_¶ù
 +(
sim_cy˛e
 - 
ROB
[
ROB_hód
].
¶ù
);

212 i‡(
vîbo£
 &&

213 (
sim_num_ö¢
 >
åiggî_ö°
) &&

214 (!
max_ö°s
 || (
sim_num_ö¢
 <= max_insts)))

216 
	`myÂrötf
(
°dîr
, "COMMIT: %10n [xor: 0x%08x] @ 0x%08p: ",

217 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),Ñegs.
ªgs_PC
);

218 
	`md_¥öt_ö¢
(
ROB
[
ROB_hód
].
IR
, 
ªgs
.
ªgs_PC
, 
°dîr
);

219 
	`Ârötf
(
°dîr
, "\n");

220 i‡(
vîbo£_ªgs
) {

221 
	`md_¥öt_úegs
(
ªgs
.
ªgs_R
, 
°dîr
);

222 
	`md_¥öt_Âªgs
(
ªgs
.
ªgs_F
, 
°dîr
);

223 
	`md_¥öt_¸egs
(
ªgs
.
ªgs_C
, 
°dîr
);

224 
	`Ârötf
(
°dîr
, "\n");

229 
	`±ø˚_√w°age
(
ROB
[
ROB_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

230 
	`±ø˚_ídö°
(
ROB
[
ROB_hód
].
±ø˚_£q
);

233 
ROB_hód
 = (ROB_hód + 1Ë% 
ROB_size
;

234 
ROB_num
--;

237 
commôãd
++;

240 
i
=0; i<
MAX_ODEPS
; i++) {

241 i‡(
ª
->
odï_li°
[
i
]Ë
	`∑nic
 ("retired instruction has odeps\n");

245 
dlôe_made_check
 = 
TRUE
;

246 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

247 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

248 
mem_addr
, 
sim_num_ö¢
, 
sim_cy˛e
)

250 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_cy˛e
, &ªgs, 
mem
);

255 i‡(!
dlôe_made_check
) {

256 i‡(
	`dlôe_check_bªak
(0, 0, 0, 
sim_num_ö¢
, 
sim_cy˛e
))

257 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &ªgs, 
mem
);

259 
	}
}

267 
	$rob_ªcovî
(
ªcovî_ödex
)

269 
i
;

270 
ROB_ödex
 = 
ROB_èû
;

271 
LSQ_ödex
 = 
LSQ_èû
;

272 
ROB_¥ev_èû
 = 
ROB_èû
;

273 
LSQ_¥ev_èû
 = 
LSQ_èû
;

276 
ROB_ödex
 = (ROB_ödex + (
ROB_size
-1)) % ROB_size;

277 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

282 
ROB_ödex
 !
ªcovî_ödex
) {

285 i‡(!
ROB_num
Ë
	`∑nic
("empty ROB");

288 i‡(
ROB_ödex
 =
ROB_hód
Ë
	`∑nic
("ROB headándÅail broken");

291 i‡(
ROB
[
ROB_ödex
].
ó_comp
) {

294 i‡(!
LSQ_num
Ë
	`∑nic
("ROBánd LSQ out of sync");

297 
i
=0; i<
MAX_ODEPS
; i++) {

298 
	`ª«me_ªmove_íåy
(
LSQ
[
LSQ_ödex
].
odï_ª«me
[
i
], LSQ[LSQ_ödex].
odï_«me
[i]);

299 
	`RELINK_FREE_LIST
(
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

300 
LSQ
[
LSQ_ödex
].
odï_ª«me
[
i
] = 
NULL
;

301 
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

305 
LSQ
[
LSQ_ödex
].
èg
++;

308 
	`±ø˚_ídö°
(
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

311 
LSQ_¥ev_èû
 = 
LSQ_ödex
;

312 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

313 
LSQ_num
--;

317 
i
=0; i<
MAX_ODEPS
; i++) {

318 
	`ª«me_ªmove_íåy
(
ROB
[
ROB_ödex
].
odï_ª«me
[
i
], ROB[ROB_ödex].
odï_«me
[i]);

319 
	`RELINK_FREE_LIST
(
ROB
[
ROB_ödex
].
odï_li°
[
i
]);

320 
ROB
[
ROB_ödex
].
odï_ª«me
[
i
] = 
NULL
;

321 
ROB
[
ROB_ödex
].
odï_li°
[
i
] = 
NULL
;

325 
ROB
[
ROB_ödex
].
èg
++;

328 
	`±ø˚_ídö°
(
ROB
[
ROB_ödex
].
±ø˚_£q
);

331 
ROB_¥ev_èû
 = 
ROB_ödex
;

332 
ROB_ödex
 = (ROB_ödex + (
ROB_size
-1)) % ROB_size;

333 
ROB_num
--;

337 
ROB_èû
 = 
ROB_¥ev_èû
;

338 
LSQ_èû
 = 
LSQ_¥ev_èû
;

341 
RS_num
 = 0;

343 
ROB_ödex
 = 
ROB_èû
;

344 
ROB_ödex
 = (ROB_ödex + (
ROB_size
-1)) % ROB_size;

346 if(
scheduÀr_ª∂ay
) {

347 
ROB_ödex
 !
ROB_hód
) {

348 if(!(
ROB
[
ROB_ödex
].
com∂ëed
)) {

349 
RS_num
++;

351 
ROB_ödex
 = (ROB_ödex + (
ROB_size
-1)) % ROB_size;

353 if(!(
ROB
[
ROB_hód
].
com∂ëed
)) {

354 
RS_num
++;

357 
ROB_ödex
 !
ROB_hód
) {

358 if(!(
ROB
[
ROB_ödex
].
issued
)) {

359 
RS_num
++;

361 
ROB_ödex
 = (ROB_ödex + (
ROB_size
-1)) % ROB_size;

363 if(!(
ROB
[
ROB_hód
].
issued
)) {

364 
RS_num
++;

368 if(
RS_num
 > 
RS_size
) {

369 
	`∑nic
("Too manyÑeservation stationsáfterÑecovery");

373 
	}
}

382 
	$ma£_ªÀa£_fu
()

384 
i
;

387 
i
=0; i<
fu_poﬁ
->
num_ªsour˚s
; i++) {

390 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

391 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

393 
	}
}

403 
	$ma£_wrôeback
()

405 
i
;

406 
ROB_íåy
 *
ª
;

409 (
ª
 = 
	`evítq_√xt_evít
())) {

411 i‡(!
	`OPERANDS_READY
(
ª
Ë||Ñe->
queued
 || !ª->
issued
 ||Ñe->
com∂ëed
) {

412 
	`∑nic
("inst completedándÑeady, !issued, or completed");

416 i‡(
ª
->
déb_miss
) {

417 
ª
->
issued
 = 
FALSE
;

418 
	`ªadyq_íqueue
(
ª
);

423 
ª
->
com∂ëed
 = 
TRUE
;

427 if(
scheduÀr_ª∂ay
)

428 i‡(!(
ª
->
ö_LSQ
)Ë
RS_num
--;

431 i‡(
ª
->
ªcovî_ö°
) {

432 i‡(
ª
->
ö_LSQ
Ë
	`∑nic
("mis-predictedÜoad or store?!?!?");

435 
	`checkî_ªcovî
(
ª
->
isq_ödex
);

436 
	`rob_ªcovî
(
ª
 - 
ROB
);

437 
	`„_ªcovî
(
ª
->
NPC
);

438 
	`b¥ed_ªcovî
(
¥ed
, 
ª
->
PC
,Ñe->
°ack_ªcovî_idx
);

442 i‡(
¥ed


443 && 
b¥ed_•ec_upd©e
 =
•ec_WB


444 && !
ª
->
ö_LSQ


445 && (
	`MD_OP_FLAGS
(
ª
->
›
Ë& 
F_CTRL
)

446 && (!
ISQ
[
ª
->
isq_ödex
].
•ec_mode
)

448 
	`b¥ed_upd©e
(
¥ed
,

449  
ª
->
PC
,

450  
ª
->
NPC
,

451  
ª
->
NPC
 !‘e->
PC
 + (
md_ö°_t
)),

452  
ª
->
¥ed_NPC
 !‘e->
PC
 + (
md_ö°_t
)),

453  
ª
->
¥ed_NPC
 =ª->
NPC
,

454  
ª
->
›
,

455  &
ª
->
dú_upd©e


460 
	`±ø˚_√w°age
(
ª
->
±ø˚_£q
, 
PST_WRITEBACK
,

461 
ª
->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

466 
i
=0; i<
MAX_ODEPS
; i++) {

468 
RE_lök
 *
ﬁök
, *
ﬁök_√xt
;

471 
ª
->
odï_vÆid
[
i
] = 
TRUE
;

474 
ﬁök
=
ª
->
odï_li°
[
i
]; olök; olök=
ﬁök_√xt
) {

476 i‡(
	`RELINK_VALID
(
ﬁök
)) {

477 i‡(
ﬁök
->
ª
->
idï_ªady
[ﬁök->
x
.
›num
])

478 
	`∑nic
("output dependenceálready satisfied");

481 
ﬁök
->
ª
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

482 
ﬁök
->
ª
->
idï_vÆue
[ﬁök->
x
.
›num
] =Ñe->
odï_vÆue
[
i
];

485 i‡(
	`OPERANDS_READY
(
ﬁök
->
ª
)) {

490 i‡(!
ﬁök
->
ª
->
ö_LSQ


491 || ((
	`MD_OP_FLAGS
(
ﬁök
->
ª
->
›
)&(
F_MEM
|
F_STORE
))

492 =(
F_MEM
|
F_STORE
))

494 
	`ªadyq_íqueue
(
ﬁök
->
ª
);

499 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

502 
	`RELINK_FREE
(
ﬁök
);

506 
ª
->
odï_li°
[
i
] = 
NULL
;

509 
	}
}

	@mase-commit.h

59 
blöd_•ec_ªcovî
();

65 
ma£_commô
();

70 
rob_ªcovî
(
ªcovî_ödex
);

76 
ma£_ªÀa£_fu
();

83 
ma£_wrôeback
();

	@mase-debug.c

56 
	~"ma£.h
"

60 
	$ma£_mem_obj
(
mem_t
 *
mem
,

61 
is_wrôe
,

62 
md_addr_t
 
addr
,

63 *
p
,

64 
nbyãs
)

66 i‡(
is_wrôe
Ë
	`∑nic
("ThisÑoutine doesÇotÉxpectá writeÅo memory");

69 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, 
p
, 
nbyãs
);

72  
NULL
;

73 
	}
}

77 
	$ma£_ªg_obj
(
ªgs_t
 *
ªgs
,

78 
is_wrôe
,

79 
md_ªg_ty≥
 
π
,

80 
ªg
,

81 
evÆ_vÆue_t
 *
vÆ
)

86 i‡(
is_wrôe
)  "continueátáddrÇot supported in MASE";

88 
π
) {

90 
π_g¥
:

91 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

93 
vÆ
->
ty≥
 = 
ë_uöt
;

94 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_R
[
ªg
];

96 
π_Âr
:

97 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

99 
vÆ
->
ty≥
 = 
ë_Êﬂt
;

100 #i‡
	`deföed
(
TARGET_PISA
)

101 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
f
[
ªg
];

102 #ñi‡
	`deföed
(
TARGET_ALPHA
)

103 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

106 
π_Õr
:

107 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

109 
vÆ
->
ty≥
 = 
ë_uöt
;

110 #i‡
	`deföed
(
TARGET_PISA
)

111 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
l
[
ªg
];

112 #ñi‡
	`deföed
(
TARGET_ALPHA
)

113 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

116 
π_˘æ
:

117 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_CREGS
)

119 
vÆ
->
ty≥
 = 
ë_uöt
;

120 
ªg
) {

121 #i‡
	`deföed
(
TARGET_PISA
)

122 0: 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
hi
; ;

123 1: 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
lo
; ;

124 2: 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
fcc
; ;

125 #ñi‡
	`deföed
(
TARGET_ALPHA
)

126 0: 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
Â¸
; ;

127 1: 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
uniq
; ;

129 : 
	`Áèl
("Invalid controlÑegister\n");

132 
π_PC
:

133 
vÆ
->
ty≥
 = 
ë_addr
;

134 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

136 
π_NPC
:

137 
vÆ
->
ty≥
 = 
ë_addr
;

138 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

141 
	`∑nic
("bogusÑegister bank");

145  
NULL
;

146 
	}
}

150 
	$ma£_m°©e_obj
(
FILE
 *
°ªam
,

151 *
cmd
,

152 
ªgs_t
 *
ªgs
,

153 
mem_t
 *
mem
)

155 i‡(!
°ªam
Ë°ªam = 
°dîr
;

157 i‡(!
cmd
 || !
	`°rcmp
(cmd, "help"))

158 
	`Ârötf
(
°ªam
,

175 i‡(!
	`°rcmp
(
cmd
, "stats")) {

177 
	`sim_¥öt_°©s
(
°ªam
);

179 i‡(!
	`°rcmp
(
cmd
, "fetch")) {

181 
	`„tch_dump
(
°ªam
);

183 i‡(!
	`°rcmp
(
cmd
, "ifq")) {

185 
	`ifq_dump
(
°ªam
);

187 i‡(!
	`°rcmp
(
cmd
, "isq")) {

189 
	`isq_dump
(
°ªam
);

191 i‡(!
	`°rcmp
(
cmd
, "rename")) {

193 
	`ª«me_dump
(
°ªam
);

195 i‡(!
	`°rcmp
(
cmd
, "rob")) {

197 
	`rob_dump
(
°ªam
);

199 i‡(!
	`°rcmp
(
cmd
, "lsq")) {

201 
	`lsq_dump
(
°ªam
);

203 i‡(!
	`°rcmp
(
cmd
, "rs")) {

205 
	`rs_dump
(
°ªam
);

207 i‡(!
	`°rcmp
(
cmd
, "readyq")) {

209 
	`ªadyq_dump
(
°ªam
);

211 i‡(!
	`°rcmp
(
cmd
, "eventq")) {

213 
	`evítq_dump
(
°ªam
);

215 i‡(!
	`°rcmp
(
cmd
, "res")) {

217 
	`ªs_dump
(
fu_poﬁ
, 
°ªam
);

223  
NULL
;

224 
	}
}

	@mase-debug.h

58 
ma£_mem_obj
(
mem_t
 *
mem
,

59 
is_wrôe
,

60 
md_addr_t
 
addr
,

61 *
p
,

62 
nbyãs
);

66 
ma£_ªg_obj
(
ªgs_t
 *
ªgs
,

67 
is_wrôe
,

68 
md_ªg_ty≥
 
π
,

69 
ªg
,

70 
evÆ_vÆue_t
 *
vÆ
);

74 
ma£_m°©e_obj
(
FILE
 *
°ªam
,

75 *
cmd
,

76 
ªgs_t
 *
ªgs
,

77 
mem_t
 *
mem
);

	@mase-decode.h

56 
	#DNA
 (-1)

	)

80 #i‡
deföed
(
TARGET_PISA
)

98 
	#DGPR
(
N
Ë(N)

	)

99 
	#DGPR_D
(
N
Ë((NË& ~1)

	)

100 
	#DFPR_L
(
N
Ë((N)+32)

	)

101 
	#DFPR_F
(
N
Ë((N)+32)

	)

102 
	#DFPR_D
(
N
Ë(((NË& ~1)+68)

	)

103 
	#DHI
 (64)

	)

104 
	#DLO
 (65)

	)

105 
	#DFCC
 (66)

	)

106 
	#DTMP
 (67)

	)

109 
	#GET_TYPE
(
N
) \

110 (
N
 =
DNA
Ë? 
vt_n⁄e
 : \

111 (
N
 >0 && N < 32Ë? 
vt_sw‹d
 : \

112 (
N
 >32 && N < 64Ë? 
vt_sÊﬂt
 : \

113 (
N
 >68Ë? 
vt_dÊﬂt
 : \

114 (
N
 =
DHI
Ë? 
vt_sw‹d
 : \

115 (
N
 =
DLO
Ë? 
vt_sw‹d
 : \

116 (
N
 =
DFCC
Ë? 
vt_sw‹d
 : \

117 (
N
 =
DTMP
Ë? 
vt_addr
 : 
vt_n⁄e


	)

120 
	#DEP_NAME
(
N
Ë((N >68Ë? N - 36 : N)

	)

123 
	#REG_IS_FP
(
N
Ë(((NË>32Ë&& ((NË< 64))

	)

126 
	#INT_REG_INDEX
(
N
Ë(N)

	)

127 
	#FP_REG_INDEX
(
N
Ë((N)-32)

	)

130 
	#REG_NAME
(
N
) \

131 (
N
 =
DTMP
) ? "$tmp" : \

132 (
N
 =
DFCC
) ? "$fcc" : \

133 (
N
 =
DHI
) ? "$hi" : \

134 (
N
 =
DLO
) ? "$lo" : \

135 (
	`REG_IS_FP
(
N
)) ? \

136 
	`md_ªg_«me
(
π_Âr
, 
	`FP_REG_INDEX
(
N
)) : \

137 
	`md_ªg_«me
(
π_g¥
, 
	`INT_REG_INDEX
(
N
))

	)

140 #ñi‡
deföed
(
TARGET_ALPHA
)

147 
	#DGPR
(
N
Ë(N)

	)

148 
	#DFPR
(
N
Ë((N)+32)

	)

149 
	#DFPCR
 (64)

	)

150 
	#DUNIQ
 (65)

	)

151 
	#DTMP
 (66)

	)

154 
	#GET_TYPE
(
N
) \

155 (
N
 =
DNA
Ë? 
vt_n⁄e
 : \

156 (
N
 >0 && N < 32Ë? 
vt_qw‹d
 : \

157 (
N
 >32 && N < 64Ë? 
vt_dÊﬂt
 : \

158 (
N
 =
DFPCR
Ë? 
vt_qw‹d
 : \

159 (
N
 =
DUNIQ
Ë? 
vt_qw‹d
 : \

160 (
N
 =
DTMP
Ë? 
vt_addr
 : 
vt_n⁄e


	)

163 
	#DEP_NAME
(
N
Ë(N)

	)

166 
	#REG_IS_FP
(
N
Ë(((NË>32Ë&& ((NË< 64))

	)

169 
	#INT_REG_INDEX
(
N
Ë(N)

	)

170 
	#FP_REG_INDEX
(
N
Ë((N)-32)

	)

173 
	#REG_NAME
(
N
) \

174 (
N
 =
DTMP
) ? "$tmp" : \

175 (
N
 =
DUNIQ
) ? "$uniq" : \

176 (
N
 =
DFPCR
) ? "$fpcr" : \

177 (
	`REG_IS_FP
(
N
)) ? \

178 
	`md_ªg_«me
(
π_Âr
, 
	`FP_REG_INDEX
(
N
)) : \

179 
	`md_ªg_«me
(
π_g¥
, 
	`INT_REG_INDEX
(
N
))

	)

182 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

	@mase-exec.c

56 
	~"ma£.h
"

57 
	~"ma£-ma¸os-exec.h
"

60 
ROB_íåy
 *
	gROB
;

61 
	gROB_hód
, 
	gROB_èû
;

62 
	gROB_num
;

64 
	gRS_num
;

67 
ROB_íåy
 *
	gLSQ
;

68 
	gLSQ_hód
, 
	gLSQ_èû
;

69 
	gLSQ_num
;

72 
RE_lök
 *
	gªlök_‰ì_li°
;

75 
	gªq_id
 = 0;

80 
RE_lök
 *
	gevít_queue
;

83 
RE_lök
 *
	gmp_queue
;

93 
RE_lök
 *
	gªady_queue
;

96 
	smem_ªq
 {

97 
	mrid
;

98 
INST_TAG_TYPE
 
	mèg
;

99 
ROB_íåy
 *
	mª
;

101 
mem_ªq
 *
	gmem_ªq_èbÀ
;

102 
	#MEMREQ_VALID
(
ENTRY
Ë((ENTRY.
ª
 !
NULL
Ë&& (ENTRY.
èg
 =ENTRY.ª->èg))

	)

105 
	s°‹e_öfo
 {

106 
md_addr_t
 
	maddr
;

107 
	mödex
;

108 
	m°a_unknown
;

109 
	m°d_unknown
;

111 
°‹e_öfo
 *
	gsöfo_èbÀ
;

115 
	$lﬂd_cb
(
rid
, 
œt
)

117 
i
;

120 
i
 = 0; i <
LSQ_size
; i++) {

121 i‡(
mem_ªq_èbÀ
[
i
].
rid
 ==Ñid) ;

123 i‡(
i
 =
LSQ_size
Ë
	`Áèl
("cannot findÉntry in memÑeqÅable");

124 i‡(
mem_ªq_èbÀ
[
i
].
ª
 =
NULL
Ë
	`Áèl
("no REÉntry for memoryÑeq");

125 i‡(!(
	`MEMREQ_VALID
(
mem_ªq_èbÀ
[
i
]))) ;

128 
	`evítq_queue_evít
(
mem_ªq_èbÀ
[
i
].
ª
, 
sim_cy˛e
 + 
œt
);

131 
mem_ªq_èbÀ
[
i
].
ª
 = 
NULL
;

132 
	}
}

137 
vÆ_uni⁄


138 
	$ªad_idï_li°
(
ROB_íåy
 *
ª
, 
ªg_«me
)

140 
i
;

141 
vÆ_uni⁄
 
zîo
;

143 
zîo
.
q
 = 0;

145 
i
 = 0; i < 
MAX_IDEPS
; i++) {

146 i‡(
ªg_«me
 =
ª
->
idï_«me
[
i
]) {

147 i‡(!(
ª
->
idï_ªady
[
i
])Ë
	`Áèl
("TryingÅoÑead inputÅhat isÇotÑeady");

148  (
ª
->
idï_vÆue
[
i
]);

153 i‡(
ª
->
ó_comp
Ë 
zîo
;

154 i‡(
ª
->
ö_LSQ
Ë 
zîo
;

155 i‡(
ª
->
›
 =
MD_NOP_OP
Ë 
zîo
;

157 
	`Áèl
("CouldÇot find intÑegister in inputÜist");

158  
zîo
;

159 
	}
}

163 
	$£t_odï_li°
(
ROB_íåy
 *
ª
, 
ªg_«me
, 
vÆ_uni⁄
 
ªg_vÆue
, 
vÆ_ty≥
 
ªg_ty≥
)

165 
i
;

167 
i
 = 0; i < 
MAX_ODEPS
; i++) {

168 i‡(
ªg_«me
 =
ª
->
odï_«me
[
i
]) {

169 
ªg_ty≥
) {

170 
vt_byã
:

171 
ª
->
odï_vÆue
[
i
].
b
 = 
ªg_vÆue
.b;

173 
vt_sbyã
:

174 
ª
->
odï_vÆue
[
i
].
sb
 = 
ªg_vÆue
.sb;

176 
vt_hÆf
:

177 
ª
->
odï_vÆue
[
i
].
h
 = 
ªg_vÆue
.h;

179 
vt_shÆf
:

180 
ª
->
odï_vÆue
[
i
].
sh
 = 
ªg_vÆue
.sh;

182 
vt_w‹d
:

183 
ª
->
odï_vÆue
[
i
].
w
 = 
ªg_vÆue
.w;

185 
vt_sw‹d
:

186 
ª
->
odï_vÆue
[
i
].
sw
 = 
ªg_vÆue
.sw;

188 
vt_qw‹d
:

189 
ª
->
odï_vÆue
[
i
].
q
 = 
ªg_vÆue
.q;

191 
vt_sqw‹d
:

192 
ª
->
odï_vÆue
[
i
].
sq
 = 
ªg_vÆue
.sq;

194 
vt_sÊﬂt
:

195 
ª
->
odï_vÆue
[
i
].
f
 = 
ªg_vÆue
.f;

197 
vt_dÊﬂt
:

198 
ª
->
odï_vÆue
[
i
].
d
 = 
ªg_vÆue
.d;

200 
vt_addr
:

201 
ª
->
odï_vÆue
[
i
].
addr
 = 
ªg_vÆue
.addr;

204 
	`Áèl
("InvalidÅype for set_odep_list");

208 
	}
}

213 
md_Áu…_ty≥


214 
	$ªad_lﬂd_d©a
(
ROB_íåy
 *
ª
, *
mem_vÆue
, 
size
)

216 
md_Áu…_ty≥
 
Áu…
;

217 
md_addr_t
 
mem_addr
 = 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr
;

220 
Áu…
 = 
	`mem_check_Áu…
(
mem
, 
Ród
, 
mem_addr
, 
size
);

221 i‡(
Áu…
 !
md_Áu…_n⁄e
)  fault;

224 i‡(
ª
->
m©ch_ö_LSQ
) {

225 
size
) {

226 1: *((
byã_t
 *)
mem_vÆue
Ë
ª
->mem_vÆue.
b
; ;

227 2: *((
hÆf_t
 *)
mem_vÆue
Ë
ª
->mem_vÆue.
h
; ;

228 4: *((
w‹d_t
 *)
mem_vÆue
Ë
ª
->mem_vÆue.
w
; ;

229 8: *((
qw‹d_t
 *)
mem_vÆue
Ë
ª
->mem_vÆue.
q
; ;

230 : 
	`Áèl
("Invalid size");

234 
	`mem_ac˚ss
(
mem
, 
Ród
, 
mem_addr
, 
mem_vÆue
, 
size
);

237  
md_Áu…_n⁄e
;

238 
	}
}

241 
md_Áu…_ty≥


242 
	$ªad_°‹e_d©a
(
ROB_íåy
 *
ª
, 
vÆ_uni⁄
 *
mem_vÆue
, 
qw‹d_t
 
d©a
, 
size
)

244 
md_Áu…_ty≥
 
Áu…
;

245 
md_addr_t
 
mem_addr
 = 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr
;

248 
Áu…
 = 
	`mem_check_Áu…
(
mem
, 
Wrôe
, 
mem_addr
, 
size
);

249 i‡(
Áu…
 !
md_Áu…_n⁄e
)  fault;

252 
size
) {

253 1: 
mem_vÆue
->
b
 = (
byã_t
)
d©a
; ;

254 2: 
mem_vÆue
->
h
 = (
hÆf_t
)
d©a
; ;

255 4: 
mem_vÆue
->
w
 = (
w‹d_t
)
d©a
; ;

256 8: 
mem_vÆue
->
q
 = 
d©a
; ;

257 : 
	`Áèl
("Invalid size");

260  
md_Áu…_n⁄e
;

261 
	}
}

266 
	$å™s„r_°‹e_d©a
(
ROB_íåy
 *
§c
, ROB_íåy *
de°
)

270 
vÆ_uni⁄
 
§c_vÆue
 = 
§c
->
idï_vÆue
[
STORE_OP_INDEX
];

271 
§c_size
 = 
§c
->
mem_size
;

273 i‡(
de°
->
mem_size
 =
§c_size
) {

274 
de°
->
mem_size
) {

275 1: 
de°
->
mem_vÆue
.
b
 = 
§c_vÆue
.b; ;

276 2: 
de°
->
mem_vÆue
.
h
 = 
§c_vÆue
.h; ;

277 4: 
de°
->
mem_vÆue
.
w
 = 
§c_vÆue
.w; ;

278 8: 
de°
->
mem_vÆue
.
q
 = 
§c_vÆue
.q; ;

279 : 
	`Áèl
("Unsupported memory size");

283 i‡(
de°
->
mem_size
 < 
§c_size
) {

285 
de°
->
mem_size
) {

288 
de°
->
mem_vÆue
.
b
 = (
§c_size
 =2Ë? (
byã_t
Ë
§c_vÆue
.
h
 :

289 (
§c_size
 =4Ë? (
byã_t
Ë
§c_vÆue
.
w
 :

290 (
byã_t
Ë
§c_vÆue
.
q
;

293 
de°
->
mem_vÆue
.
h
 = (
§c_size
 =4Ë? (
hÆf_t
Ë
§c_vÆue
.
w
 :

294 (
hÆf_t
Ë
§c_vÆue
.
q
;

297 
de°
->
mem_vÆue
.
w
 = (
w‹d_t
Ë
§c_vÆue
.
q
;

300 
	`Áèl
("Unsupported memory size");

307 
	}
}

310 
	$execuã_ö°
(
ROB_íåy
 *
ª
)

312 
md_ö°_t
 
ö°
 = 
ª
->
IR
;

313 
md_›code
 
›
;

314 
vÆ_uni⁄
 
mem_vÆue
;

315 
vÆ_uni⁄
 
ªg_vÆue
;

318 
ª
->
NPC
 =Ñe->
PC
 + (
md_ö°_t
);

321 
	#DECLARE_FAULT
(
FAULT
Ë{ 
ª
->
Áu…
 = (FAULT); ; }

	)

322 
	#SYSCALL
(
INST
Ë;

	)

325 
	`MD_SET_OPCODE
(
›
, 
ö°
);

326 
›
) {

327 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

328 
OP
: \

329 
	`SYMCAT
(
OP
,
_IMPL
); \

330 ;

	)

331 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

332 
OP
: \

333 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

334 
	#CONNECT
(
OP
)

	)

335 
	~"machöe.def
"

337 
	`Áèl
 ("Invalid operation");

339 
	}
}

349 
	$ª£t_ö°
(
ROB_íåy
 *
ª
)

351 
i
;

353 
ª
->
queued
 = 
FALSE
;

354 
ª
->
issued
 = 
FALSE
;

355 
ª
->
com∂ëed
 = 
FALSE
;

356 
ª
->
m©ch_ö_LSQ
 = 
FALSE
;

358 
i
 = 0; i < 
MAX_ODEPS
; i++) {

360 #i‡
	`deföed
(
TARGET_PISA
)

361 i‡((
ª
->
odï_«me
[
i
] !
DNA
) &&

362 (
ª
->
odï_«me
[
i
] !
	`DGPR
(
MD_REG_ZERO
)))

364 #ñi‡
	`deföed
(
TARGET_ALPHA
)

365 i‡((
ª
->
odï_«me
[
i
] !
DNA
) &&

366 (
ª
->
odï_«me
[
i
] !
	`DGPR
(
MD_REG_ZERO
)) &&

367 (
ª
->
odï_«me
[
i
] !
	`DFPR
(
MD_REG_ZERO
)))

370 
ª
->
odï_vÆid
[
i
] = 
FALSE
;

373 
ª
->
èg
++;

374 
	}
}

378 
	$rob_öô
()

380 
ROB
 = 
	`ˇŒoc
(
ROB_size
, (
ROB_íåy
));

381 i‡(!
ROB
Ë
	`Áèl
("out of virtual memory");

383 
ROB_num
 = 0;

384 
ROB_hód
 = 
ROB_èû
 = 0;

385 
ROB_cou¡
 = 0;

386 
ROB_fcou¡
 = 0;

387 
	}
}

391 
	$rs_öô
()

393 
RS_num
 = 0;

394 
RS_cou¡
 = 0;

395 
RS_fcou¡
 = 0;

396 
	}
}

400 
	$rob_dum≥¡
(
ROB_íåy
 *
ª
,

401 
ödex
,

402 
FILE
 *
°ªam
,

403 
hódî
)

405 i‡(!
°ªam
Ë°ªam = 
°dîr
;

407 i‡(
hódî
)

408 
	`Ârötf
(
°ªam
, "idx: %2d in°: `", 
ödex
);

410 
	`Ârötf
(
°ªam
, "\tinst: `");

411 
	`md_¥öt_ö¢
(
ª
->
IR
,Ñe->
PC
, 
°ªam
);

412 
	`Ârötf
(
°ªam
, "'");

413 i‡(
ª
->
ó_comp
)

414 
	`Ârötf
(
°ªam
, " (ea_comp)\n");

416 
	`Ârötf
(
°ªam
, "\n");

418 
	`myÂrötf
(
°ªam
, "\tPC: 0x%08p,Öred_NPC: 0x%08p\n",

419 
ª
->
PC
,Ñe->
¥ed_NPC
);

421 i‡(
ª
->
ö_LSQ
)

422 
	`Ârötf
(
°ªam
, "\tisq_index: %d,Ñob_index: %d\n",

423 
ª
->
isq_ödex
,Ñe->
rob_ödex
);

425 
	`Ârötf
(
°ªam
, "\tisq_ödex: %d\n", 
ª
->
isq_ödex
);

427 
	`Ârötf
(
°ªam
, "\ttag: %u, seq: %u,Ötrace_seq: %u\n",

428 
ª
->
èg
,Ñe->
£q
,Ñe->
±ø˚_£q
);

429 
	`Ârötf
(
°ªam
, "\trecover_inst: %s,Åiming_dep: %s\n",

430 
ª
->
ªcovî_ö°
 ? "T" : "F",

431 
ª
->
timög_dï
 ? "T" : "F");

433 i‡(
ª
->
ö_LSQ
) {

434 
	`Ârötf
(
°ªam
, "\tmatch_in_LSQ: %s\n",

435 
ª
->
m©ch_ö_LSQ
 ? "T" : "F");

436 i‡(
u£_blöd_•ec
) {

437 
	`Ârötf
(
°ªam
, "\tblind_recover: %s\n",

438 
ª
->
blöd_ªcovî
 ? "T" : "F");

442 
	`Ârötf
(
°ªam
, "\tstatus: ");

443 i‡(
ª
->
com∂ëed
Ë
	`Ârötf
(
°ªam
, "COMPLETED\n");

444 i‡(
ª
->
issued
Ë
	`Ârötf
(
°ªam
, "ISSUED\n");

445 i‡(
ª
->
queued
Ë
	`Ârötf
(
°ªam
, "READY (Scheduler delay: %d)\n",

446 
ª
->
scheduÀ_waô_time
);

447 
	`Ârötf
(
°ªam
, "NOT READY\n");

449 
	}
}

453 
	$rob_dump
(
FILE
 *
°ªam
)

455 
num
, 
hód
;

456 
ROB_íåy
 *
ª
;

458 
	`Ârötf
(
°ªam
, "** ROB state **\n");

459 
	`Ârötf
(
°ªam
, "ROB_hód: %d, ROB_èû: %d\n", 
ROB_hód
, 
ROB_èû
);

460 
	`Ârötf
(
°ªam
, "ROB_num: %d\n", 
ROB_num
);

462 
num
 = 
ROB_num
;

463 
hód
 = 
ROB_hód
;

464 
num
) {

465 
ª
 = &
ROB
[
hód
];

466 
	`rob_dum≥¡
(
ª
,Ñê- 
ROB
, 
°ªam
, 
TRUE
);

467 
hód
 = (hód + 1Ë% 
ROB_size
;

468 
num
--;

470 
	}
}

474 
	$rs_dump
(
FILE
 *
°ªam
)

476 
num
, 
hód
;

477 
ROB_íåy
 *
ª
;

479 
	`Ârötf
(
°ªam
, "** RS state **\n");

480 
	`Ârötf
(
°ªam
, "RS_num: %d\n", 
RS_num
);

482 
num
 = 
ROB_num
;

483 
hód
 = 
ROB_hód
;

484 
num
) {

485 
ª
 = &
ROB
[
hód
];

486 i‡(!
ª
->
com∂ëed
)

487 
	`rob_dum≥¡
(
ª
,Ñê- 
ROB
, 
°ªam
, 
TRUE
);

488 
hód
 = (hód + 1Ë% 
ROB_size
;

489 
num
--;

491 
	}
}

495 
	$lsq_öô
()

497 
LSQ
 = 
	`ˇŒoc
(
LSQ_size
, (
ROB_íåy
));

498 i‡(!
LSQ
Ë
	`Áèl
("out of virtual memory");

500 
LSQ_num
 = 0;

501 
LSQ_hód
 = 
LSQ_èû
 = 0;

502 
LSQ_cou¡
 = 0;

503 
LSQ_fcou¡
 = 0;

505 
söfo_èbÀ
 = 
	`ˇŒoc
(
LSQ_size
, (
°‹e_öfo
));

506 i‡(!
söfo_èbÀ
Ë
	`Áèl
("out of virtual memory");

508 
mem_ªq_èbÀ
 = 
	`ˇŒoc
(
LSQ_size
, (
mem_ªq
));

509 i‡(!
mem_ªq_èbÀ
Ë
	`Áèl
("out of virtual memory");

510 
	}
}

514 
	$lsq_dump
(
FILE
 *
°ªam
)

516 
num
, 
hód
;

517 
ROB_íåy
 *
ª
;

519 i‡(!
°ªam
Ë°ªam = 
°dîr
;

521 
	`Ârötf
(
°ªam
, "** LSQ state **\n");

522 
	`Ârötf
(
°ªam
, "LSQ_hód: %d, LSQ_èû: %d\n", 
LSQ_hód
, 
LSQ_èû
);

523 
	`Ârötf
(
°ªam
, "LSQ_num: %d\n", 
LSQ_num
);

525 
num
 = 
LSQ_num
;

526 
hód
 = 
LSQ_hód
;

527 
num
) {

528 
ª
 = &
LSQ
[
hód
];

529 
	`rob_dum≥¡
(
ª
,Ñê- 
LSQ
, 
°ªam
, 
TRUE
);

530 
hód
 = (hód + 1Ë% 
LSQ_size
;

531 
num
--;

533 
	}
}

537 
	$ªlök_öô
(
∆öks
)

539 
i
;

540 
RE_lök
 *
lök
;

542 
ªlök_‰ì_li°
 = 
NULL
;

543 
i
=0; i<
∆öks
; i++) {

544 
lök
 = 
	`ˇŒoc
(1, (
RE_lök
));

545 i‡(!
lök
Ë
	`Áèl
("out of virtual memory");

546 
lök
->
√xt
 = 
ªlök_‰ì_li°
;

547 
ªlök_‰ì_li°
 = 
lök
;

549 
	}
}

553 
	$evítq_öô
()

555 
evít_queue
 = 
NULL
;

556 
	}
}

560 
	$evítq_dump
(
FILE
 *
°ªam
)

562 
RE_lök
 *
ev
;

564 i‡(!
°ªam
Ë°ªam = 
°dîr
;

566 
	`Ârötf
(
°ªam
, "**Évent queue state **\n");

568 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
) {

570 i‡(
	`RELINK_VALID
(
ev
)) {

571 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
ev
);

572 
	`Ârötf
(
°ªam
, "idx: %2d when: %.0f\n",

573 ()(
ª
 - (ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
)), ()
ev
->
x
.
whí
);

574 
	`rob_dum≥¡
(
ª
,Ñê- (ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
),

575 
°ªam
, 
FALSE
);

578 
	}
}

584 
	$evítq_queue_evít
(
ROB_íåy
 *
ª
, 
tick_t
 
whí
)

586 
RE_lök
 *
¥ev
, *
ev
, *
√w_ev
;

588 i‡(
ª
->
com∂ëed
Ë
	`∑nic
("event completed");

590 i‡(
whí
 <
sim_cy˛e
Ë
	`∑nic
("event occurred inÅheÖast");

593 
	`RELINK_NEW
(
√w_ev
, 
ª
);

594 
√w_ev
->
x
.
whí
 = when;

597 
¥ev
=
NULL
, 
ev
=
evít_queue
;

598 
ev
 &&Év->
x
.
whí
 < when;

599 
¥ev
=
ev
,ÉvÛv->
√xt
);

601 i‡(
¥ev
) {

603 
√w_ev
->
√xt
 = 
¥ev
->next;

604 
¥ev
->
√xt
 = 
√w_ev
;

608 
√w_ev
->
√xt
 = 
evít_queue
;

609 
evít_queue
 = 
√w_ev
;

611 
	}
}

616 
ROB_íåy
 *

617 
	$evítq_√xt_evít
()

619 
RE_lök
 *
ev
;

621 i‡(
evít_queue
 &&Évít_queue->
x
.
whí
 <
sim_cy˛e
) {

624 
ev
 = 
evít_queue
;

625 
evít_queue
 =Évít_queue->
√xt
;

627 i‡(
	`RELINK_VALID
(
ev
)) {

628 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
ev
);

631 
	`RELINK_FREE
(
ev
);

634  
ª
;

638 
	`RELINK_FREE
(
ev
);

641  
	`evítq_√xt_evít
();

646  
NULL
;

648 
	}
}

654 
	$mpq_öô
()

656 
mp_queue
 = 
NULL
;

657 
	}
}

661 
	$mpq_dump
(
FILE
 *
°ªam
)

663 
RE_lök
 *
ev
;

665 i‡(!
°ªam
Ë°ªam = 
°dîr
;

667 
	`Ârötf
(
°ªam
, "** mp_queue state **\n");

669 
ev
 = 
mp_queue
;Év !
NULL
;Év =Év->
√xt
) {

671 i‡(
	`RELINK_VALID
(
ev
)) {

672 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
ev
);

673 
	`Ârötf
(
°ªam
, "idx: %2d: @ %.0f\n",

674 ()(
ª
 - (ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
)), ()
ev
->
x
.
whí
);

675 
	`rob_dum≥¡
(
ª
,Ñê- (ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
),

676 
°ªam
, 
FALSE
);

679 
	}
}

683 
	$mpq_queue_evít
(
ROB_íåy
 *
ª
, 
tick_t
 
whí
)

685 
RE_lök
 *
¥ev
, *
ev
, *
√w_ev
;

687 i‡(
ª
->
com∂ëed
Ë
	`∑nic
("event completed");

689 i‡(
whí
 <
sim_cy˛e
Ë
	`∑nic
("event occurred inÅheÖast");

692 
	`RELINK_NEW
(
√w_ev
, 
ª
);

693 
√w_ev
->
x
.
whí
 = when;

696 
¥ev
=
NULL
, 
ev
=
mp_queue
;

697 
ev
 &&Év->
√xt
 !
NULL
;

698 
¥ev
=
ev
,ÉvÛv->
√xt
);

700 i‡(
¥ev
) {

702 
√w_ev
->
√xt
 = 
¥ev
->next;

703 
¥ev
->
√xt
 = 
√w_ev
;

707 
√w_ev
->
√xt
 = 
mp_queue
;

708 
mp_queue
 = 
√w_ev
;

710 
	}
}

714 
ROB_íåy
 *

715 
	$mpq_√xt_evít
()

717 
RE_lök
 *
ev
;

719 i‡(
mp_queue
 && mp_queue->
x
.
whí
 <
sim_cy˛e
) {

722 
ev
 = 
mp_queue
;

723 
mp_queue
 = mp_queue->
√xt
;

725 i‡(
	`RELINK_VALID
(
ev
)) {

726 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
ev
);

729 
	`RELINK_FREE
(
ev
);

732  
ª
;

736 
	`RELINK_FREE
(
ev
);

739  
	`mpq_√xt_evít
();

744  
NULL
;

746 
	}
}

750 
	$ªadyq_öô
()

752 
ªady_queue
 = 
NULL
;

753 
	}
}

757 
	$ªadyq_dump
(
FILE
 *
°ªam
)

759 
RE_lök
 *
lök
;

761 i‡(!
°ªam
Ë°ªam = 
°dîr
;

763 
	`Ârötf
(
°ªam
, "**Ñeady queue state **\n");

765 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
) {

768 i‡(
	`RELINK_VALID
(
lök
)) {

769 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
lök
);

770 
	`rob_dum≥¡
(
ª
,Ñê- (ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
),

771 
°ªam
, 
TRUE
);

774 
	}
}

789 
	$ªadyq_íqueue
(
ROB_íåy
 *
ª
)

791 
RE_lök
 *
¥ev
, *
node
, *
√w_node
;

794 i‡(
ª
->
queued
Ë
	`∑nic
("node isálready queued");

795 
ª
->
queued
 = 
TRUE
;

798 
	`RELINK_NEW
(
√w_node
, 
ª
);

799 
√w_node
->
x
.
£q
 = 
ª
->seq;

802 i‡(
ª
->
ö_LSQ
 || 
	`MD_OP_FLAGS
‘e->
›
Ë& (
F_LONGLAT
|
F_CTRL
)) {

804 
¥ev
 = 
NULL
;

805 
node
 = 
ªady_queue
;

809 
¥ev
=
NULL
, 
node
=
ªady_queue
;

810 
node
 &&Çode->
x
.
£q
 < 
ª
->seq;

811 
¥ev
=
node
,ÇodeÚode->
√xt
);

814 i‡(
¥ev
) {

816 
√w_node
->
√xt
 = 
¥ev
->next;

817 
¥ev
->
√xt
 = 
√w_node
;

821 
√w_node
->
√xt
 = 
ªady_queue
;

822 
ªady_queue
 = 
√w_node
;

824 
	}
}

835 
	$lsq_ª‰esh
()

837 
i
, 
j
;

838 
ödex
;

839 
söfo_cou¡
 = 0;

840 
¥evít_queue
;

841 
md_addr_t
 
lﬂd_addr
;

842 
blöd_södex
;

847 
i
=0, 
ödex
=
LSQ_hód
;

848 
i
 < 
LSQ_num
;

849 
i
++, 
ödex
=(ödex + 1Ë% 
LSQ_size
)

852 i‡((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE)) {

855 
söfo_èbÀ
[
söfo_cou¡
].
addr
 = 
ISQ
[
LSQ
[
ödex
].
isq_ödex
].
mem_addr
;

856 
söfo_èbÀ
[
söfo_cou¡
].
ödex
 = index;

859 i‡(!
	`STORE_ADDR_READY
(&
LSQ
[
ödex
])) {

860 
söfo_èbÀ
[
söfo_cou¡
].
°a_unknown
 = 1;

861 
söfo_èbÀ
[
söfo_cou¡
].
°d_unknown
 = 0;

863 i‡(!
	`OPERANDS_READY
(&
LSQ
[
ödex
])) {

864 
söfo_èbÀ
[
söfo_cou¡
].
°a_unknown
 = 0;

865 
söfo_èbÀ
[
söfo_cou¡
].
°d_unknown
 = 1;

868 
söfo_èbÀ
[
söfo_cou¡
].
°a_unknown
 = 0;

869 
söfo_èbÀ
[
söfo_cou¡
].
°d_unknown
 = 0;

871 
söfo_cou¡
++;

875 i‡(((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))

876 && !
LSQ
[
ödex
].
queued


877 && !
LSQ
[
ödex
].
issued


878 && !
LSQ
[
ödex
].
com∂ëed


879 && 
	`OPERANDS_READY
(&
LSQ
[
ödex
])

883 
¥evít_queue
 = 0;

884 
lﬂd_addr
 = 
	`ªad_idï_li°
(&(
LSQ
[
ödex
]), 
	`DEP_NAME
(
DTMP
)).
addr
;

885 
blöd_södex
 = -1;

889 
j
 = 
söfo_cou¡
 - 1; j >= 0; j--) {

892 i‡(
söfo_èbÀ
[
j
].
°a_unknown
 && !
u£_blöd_•ec
 && !
≥r„˘_dißmbig
) {

893 
¥evít_queue
 = 1;

898 i‡(
söfo_èbÀ
[
j
].
addr
 =
lﬂd_addr
) {

911 i‡(
söfo_èbÀ
[
j
].
°a_unknown
 && 
u£_blöd_•ec
) {

912 i‡(
blöd_södex
 =-1Ëblöd_södex = 
söfo_èbÀ
[
j
].
ödex
;

917 i‡(
söfo_èbÀ
[
j
].
°a_unknown
 && 
≥r„˘_dißmbig
) {

918 
¥evít_queue
 = 1;

921 i‡(
söfo_èbÀ
[
j
].
°a_unknown
) {

922 
	`Áèl
("FailureÅo blockán STA unknown.\n");

924 i‡(
söfo_èbÀ
[
j
].
°d_unknown
) {

925 
¥evít_queue
 = 1;

929 
å™s„r_ok
;

935 
å™s„r_ok
 = 
	`å™s„r_°‹e_d©a
(&(
LSQ
[
söfo_èbÀ
[
j
].
ödex
]), &(LSQ[index]));

936 i‡(
å™s„r_ok
) {

937 
LSQ
[
ödex
].
m©ch_ö_LSQ
 = 1;

940 
¥evít_queue
 = 1;

948 i‡(!
¥evít_queue
) {

951 i‡(
blöd_södex
 != -1) {

952 
LSQ
[
blöd_södex
].
blöd_ªcovî
 = 
TRUE
;

953 
LSQ
[
ödex
].
blöd_ªcovî
 = 
TRUE
;

955 
	`ªadyq_íqueue
(&
LSQ
[
ödex
]);

959 
	}
}

970 
	$ma£_issue
()

972 
i
;

973 
ödex
;

974 
¥evít_issue
;

975 
¥evít_queue
;

976 
evíts
;

977 
œt
;

978 
mem_°©us
 
°©us
;

979 
n_issued
;

980 
RE_lök
 *
node
, *
√xt_node
;

981 
ªs_ãm∂©e
 *
fu
;

982 
ROB_íåy
 *
rob_e
;

990 
node
 = 
ªady_queue
;

991 
ªady_queue
 = 
NULL
;

994 if(
scheduÀr_ª∂ay
) {

995 
ª∂ay_Êag
 = 0;

996 (
rob_e
 = 
	`mpq_√xt_evít
())) {

1000 
ROB_íåy
 *
ª
;

1001 
ª∂ay_Êag
 = 1;

1002 
i
=0;ò< 
ROB_size
; i++) {

1003 
ª
 = &(
ROB
[
i
]);

1004 if(!
ª
->
issued
 && !ª->
com∂ëed
) {

1005 
ª
->
scheduÀ_waô_time
 = 
scheduÀ_dñay
;

1010 if(
ª∂ay_Êag
Ë
num_ª∂ays
++;

1016 
n_issued
=0;

1017 
node
 && 
n_issued
 < 
issue_width
;

1018 
node
 = 
√xt_node
)

1020 
√xt_node
 = 
node
->
√xt
;

1021 
¥evít_issue
 = 
FALSE
;

1022 
¥evít_queue
 = 
FALSE
;

1023 
evíts
 = 0;

1025 i‡(
	`RELINK_VALID
(
node
)) {

1026 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
node
);

1028 i‡(!
	`OPERANDS_READY
(
ª
Ë|| !ª->
queued


1029 || 
ª
->
issued
 ||Ñe->
com∂ëed
)

1030 
	`∑nic
("issued inst !ready, issued, or completed");

1033 if(
ª
->
scheduÀ_waô_time
 > 0) {

1034 
ª
->
queued
 = 
FALSE
;

1035 
	`ªadyq_íqueue
(
ª
);

1036 
	`RELINK_FREE
(
node
);

1041 
ª
->
queued
 = 
FALSE
;

1044 i‡(
ª
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
‘e->
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))) {

1049 
ª
->
issued
 = 
TRUE
;

1050 
ª
->
com∂ëed
 = 
TRUE
;

1051 i‡((
ª
->
odï_«me
[0] !
DNA
Ë|| (ª->odï_«me[1] !DNA)Ë
	`∑nic
("store createsÑesult");

1052 i‡(
ª
->
ªcovî_ö°
Ë
	`∑nic
("mis-predicted store");

1055 
	`±ø˚_√w°age
(
ª
->
±ø˚_£q
, 
PST_WRITEBACK
,

1056 (
ª
->
blöd_ªcovî
Ë? 
PEV_BSPECMISS
 : 0);

1059 
n_issued
++;

1062 i‡(
ª
->
blöd_ªcovî
 && (‘ê- 
LSQ
Ë!
LSQ_èû
)) {

1063 
ROB_íåy
 *
lﬂd_ª
;

1064 
ªcovîy_√eded
 = 
FALSE
;

1067 
ödex
 = (
ª
 - 
LSQ
 + 1Ë% 
LSQ_size
;

1068 
ödex
 !
LSQ_èû
;

1069 
ödex
 = (ödex + 1Ë% 
LSQ_size
)

1072 i‡(((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))) {

1073 i‡(
ISQ
[
LSQ
[
ödex
].
isq_ödex
].
mem_addr
 =
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr
)

1076 i‡(((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))) {

1078 i‡(!
LSQ
[
ödex
].
blöd_ªcovî
) ;

1079 i‡(
ISQ
[
LSQ
[
ödex
].
isq_ödex
].
mem_addr
 =
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr
) {

1081 
å™s„r_ok
;

1082 
lﬂd_ª
 = &(
LSQ
[
ödex
]);

1090 
å™s„r_ok
 = 
	`å™s„r_°‹e_d©a
(
ª
, 
lﬂd_ª
);

1091 i‡(
å™s„r_ok
) {

1092 
lﬂd_ª
->
m©ch_ö_LSQ
 = 
TRUE
;

1093 i‡(
lﬂd_ª
->
issued
Ë
	`execuã_ö°
(load_re);

1096 
	`ª£t_ö°
(
lﬂd_ª
);

1099 i‡(
lﬂd_ª
->
com∂ëed
) {

1100 
ªcovîy_√eded
 = 
TRUE
;

1109 
ªcovîy_√eded
=1;

1110 i‡(
ªcovîy_√eded
) {

1111 
isq_ödex
 = 
lﬂd_ª
->isq_index;

1112 
	`checkî_ªcovî
(
isq_ödex
);

1113 
	`rob_ªcovî
(
lﬂd_ª
->
rob_ödex
);

1114 
	`„_ªcovî
(
ISQ
[
isq_ödex
].
NPC
);

1115 
blöd_•ec_Æl_Êushes
++;

1116 i‡(
ISQ
[
isq_ödex
].
•ec_mode
 =0Ë
blöd_•ec_Êushes
++;

1120 i‡(
	`MD_OP_FUCLASS
(
ª
->
›
Ë=
FUCœss_NA
) {

1123 
ª
->
issued
 = 
TRUE
;

1126 
	`evítq_queue_evít
(
ª
, 
sim_cy˛e
 + 1);

1129 
	`±ø˚_√w°age
(
ª
->
±ø˚_£q
, 
PST_EXECUTE
,

1130 
ª
->
ó_comp
 ? 
PEV_AGEN
 : 0);

1133 
n_issued
++;

1138 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
ª
->
›
));

1141 i‡(!
fu
) {

1142 
¥evít_issue
 = 
TRUE
;

1146 i‡(
ª
->
ö_LSQ
 &&

1147 ((
	`MD_OP_FLAGS
(
ª
->
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD)))

1168 
md_addr_t
 
mem_addr
 = 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr
;

1169 
vÆid_addr
 = 
	`MD_VALID_ADDR
(
mem_addr
);

1170 
œt
 = 0;

1173 i‡(
déb
 && 
vÆid_addr
 && !
ª
->
déb_miss
) {

1175 
°©us
 = 
	`ma£_ˇche_ac˚ss
(
déb
,

1176 
Ród
, (
mem_addr
 & ~(
ª
->
mem_size
-1)), 
NULL
,Ñe->mem_size,

1177 
sim_cy˛e
, 
NULL
, NULL, 
lﬂd_cb
, 
ªq_id
, &
œt


1179 i‡((
°©us
 =
MEM_RETRY
Ë&& !
ª
->
m©ch_ö_LSQ
) {

1180 
¥evít_issue
 = 
TRUE
;

1183 i‡(
°©us
 =
MEM_UNKNOWN
) {

1184 i‡(!
ª
->
m©ch_ö_LSQ
) {

1185 
i
 = 0; i <
LSQ_size
; i++) {

1186 i‡(!(
	`MEMREQ_VALID
(
mem_ªq_èbÀ
[
i
]))) ;

1188 i‡(
i
 =
LSQ_size
Ë
	`Áèl
("memÑeqÅable is full");

1189 
mem_ªq_èbÀ
[
i
].
rid
 = 
ªq_id
;

1190 
mem_ªq_èbÀ
[
i
].
èg
 = 
ª
->tag;

1191 
mem_ªq_èbÀ
[
i
].
ª
 =Ñe;

1192 
¥evít_queue
 = 
TRUE
;

1194 
ªq_id
++;

1196 
ª
->
déb_miss
 = (
œt
 > 1Ë|| (
°©us
 =
MEM_UNKNOWN
);

1197 i‡(
ª
->
déb_miss
Ë
evíts
 |
PEV_TLBMISS
;

1201 
ª
->
déb_miss
 = 
FALSE
;

1205 i‡(
ˇche_dl1
 && 
vÆid_addr
 && !
¥evít_issue
 && !
ª
->
déb_miss
) {

1207 
°©us
 = 
	`ma£_ˇche_ac˚ss
(
ˇche_dl1
,

1208 
Ród
, (
mem_addr
 & ~(
ª
->
mem_size
-1)), 
NULL
,Ñe->mem_size,

1209 
sim_cy˛e
, 
NULL
, NULL, 
lﬂd_cb
, 
ªq_id
, &
œt


1211 i‡((
°©us
 =
MEM_RETRY
Ë&& !
ª
->
m©ch_ö_LSQ
) {

1212 
¥evít_issue
 = 
TRUE
;

1215 i‡(
°©us
 =
MEM_UNKNOWN
) {

1216 i‡(!
ª
->
m©ch_ö_LSQ
) {

1217 
i
 = 0; i <
LSQ_size
; i++) {

1218 i‡(!(
	`MEMREQ_VALID
(
mem_ªq_èbÀ
[
i
]))) ;

1220 i‡(
i
 =
LSQ_size
Ë
	`Áèl
("memÑeqÅable is full");

1221 
mem_ªq_èbÀ
[
i
].
rid
 = 
ªq_id
;

1222 
mem_ªq_èbÀ
[
i
].
èg
 = 
ª
->tag;

1223 
mem_ªq_èbÀ
[
i
].
ª
 =Ñe;

1224 
¥evít_queue
 = 
TRUE
;

1226 
ªq_id
++;

1228 i‡((
œt
 > 
ˇche_dl1_œt
Ë|| (
°©us
 =
MEM_UNKNOWN
)Ë
evíts
 |
PEV_CACHEMISS
;

1232 
œt
 = 
ˇche_dl1
 ? 
ˇche_dl1_œt
 : 
fu
->
›œt
;

1236 i‡(
ª
->
m©ch_ö_LSQ
Ë
œt
 = 1;

1240 i‡(
scheduÀr_ª∂ay
 && (
œt
 > 
ˇche_dl1_œt
)) {

1241 
	`mpq_queue_evít
(
ª
,
sim_cy˛e
 + 
ˇche_dl1_œt
);

1246 
œt
 = 
fu
->
›œt
;

1249 i‡(!
¥evít_issue
) {

1251 i‡(
fu
->
ma°î
->
busy
Ë
	`∑nic
("functional unitálready in use");

1252 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

1255 i‡(!
¥evít_queue
)

1256 
	`evítq_queue_evít
(
ª
, 
sim_cy˛e
 + 
œt
);

1259 
	`±ø˚_√w°age
(
ª
->
±ø˚_£q
, 
PST_EXECUTE
,

1260 ((
ª
->
ó_comp
 ? 
PEV_AGEN
 : 0)

1261 | 
evíts
));

1264 
ª
->
issued
 = 
TRUE
;

1265 
n_issued
++;

1269 
	`ªadyq_íqueue
(
ª
);

1275 i‡(
ª
->
issued
) {

1276 
	`execuã_ö°
(
ª
);

1277 if((!
scheduÀr_ª∂ay
Ë& !(
ª
->
ö_LSQ
)) {

1278 
RS_num
--;

1286 
	`RELINK_FREE
(
node
);

1291 ; 
node
;Çodê
√xt_node
) {

1292 
√xt_node
 = 
node
->
√xt
;

1294 i‡(
	`RELINK_VALID
(
node
)) {

1295 
ROB_íåy
 *
ª
 = 
	`RELINK_RE
(
node
);

1298 
ª
->
queued
 = 
FALSE
;

1301 
	`ªadyq_íqueue
(
ª
);

1306 
	`RELINK_FREE
(
node
);

1310 
i
=0;ò< 
ROB_size
;i++) {

1311 
ROB_íåy
 *
rob_ít
 = &(
ROB
[
i
]);

1312 if(
rob_ít
->
scheduÀ_waô_time
 > 0) {

1313 
rob_ít
->
scheduÀ_waô_time
--;

1316 
	}
}

	@mase-exec.h

57 
vÆ_uni⁄


58 
ªad_idï_li°
(
ROB_íåy
 *
ª
, 
dï_«me
);

62 
£t_odï_li°
(
ROB_íåy
 *
ª
, 
ªg_«me
, 
vÆ_uni⁄
 
ªg_vÆue
, 
vÆ_ty≥
 
ªg_ty≥
);

65 
md_Áu…_ty≥


66 
ªad_lﬂd_d©a
(
ROB_íåy
 *
ª
, *
mem_vÆue
, 
size
);

69 
md_Áu…_ty≥


70 
ªad_°‹e_d©a
(
ROB_íåy
 *
ª
, 
vÆ_uni⁄
 *
mem_vÆue
, 
qw‹d_t
 
d©a
, 
size
);

73 
ROB_íåy
 *
ROB
;

74 
ROB_hód
, 
ROB_èû
;

75 
ROB_num
;

77 
RS_num
;

109 
ROB_íåy
 *
LSQ
;

110 
LSQ_hód
, 
LSQ_èû
;

111 
LSQ_num
;

118 
	#STORE_OP_INDEX
 0

	)

119 
	#STORE_ADDR_INDEX
 1

	)

120 
	#STORE_OP_READY
(
RE
Ë((RE)->
idï_ªady
[
STORE_OP_INDEX
])

	)

121 
	#STORE_ADDR_READY
(
RE
Ë((RE)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

124 
RE_lök
 *
ªlök_‰ì_li°
;

127 
	#MAX_STA_UNKNOWNS
 128

	)

128 
	#MAX_STD_UNKNOWNS
 64

	)

131 
ªq_id
;

135 
rob_öô
();

138 
rs_öô
();

142 
rob_dum≥¡
(
ROB_íåy
 *
ª
,

143 
ödex
,

144 
FILE
 *
°ªam
,

145 
hódî
);

149 
rob_dump
(
FILE
 *
°ªam
);

153 
rs_dump
(
FILE
 *
°ªam
);

157 
lsq_öô
();

161 
lsq_dump
(
FILE
 *
°ªam
);

165 
ªlök_öô
(
∆öks
);

169 
evítq_öô
();

173 
evítq_dump
(
FILE
 *
°ªam
);

179 
evítq_queue_evít
(
ROB_íåy
 *
ª
, 
tick_t
 
whí
);

183 
ROB_íåy
 *

184 
evítq_√xt_evít
();

188 
ªadyq_öô
();

192 
ªadyq_dump
(
FILE
 *
°ªam
);

206 
ªadyq_íqueue
(
ROB_íåy
 *
ª
);

210 
mpq_öô
();

214 
mpq_dump
(
FILE
 *
°ªam
);

220 
mpq_queue_evít
(
ROB_íåy
 *
ª
, 
tick_t
 
whí
);

224 
ROB_íåy
 *

225 
mpq_√xt_evít
();

235 
lsq_ª‰esh
();

245 
ma£_issue
();

	@mase-fe.c

56 
	~"ma£.h
"

57 
	~"ma£-decode.h
"

62 
„tch_ªc
 *
	gIFQ
;

63 
	gIFQ_num
;

64 
	gIFQ_èû
, 
	gIFQ_hód
;

67 
b¥ed_t
 *
	g¥ed
;

70 
ª«me_íåy
 *
	gª«me_èbÀ
[
MD_TOTAL_REGS
];

73 
ª«me_íåy
 *
	gª«me_‰ì_li°
 = 
NULL
;

76 
	giˇche_block
 = 
FALSE
;

77 
	giˇche_dñay
 = 0;

80 
	gunknown_èrgë
 = 
FALSE
;

83 
	gdp_•ec_mode
 = 
FALSE
;

86 
md_addr_t
 
	g„tch_PC
;

87 
md_addr_t
 
	g„tch_¥ed_NPC
;

90 
md_addr_t
 
	gdp_PC
;

91 
md_addr_t
 
	gdp_¥ed_NPC
;

92 
md_addr_t
 
	gdp_‹a˛e_NPC
;

95 
	gœ°_ö°_mis£d
 = 
FALSE
;

96 
	gœ°_ö°_tmis£d
 = 
FALSE
;

99 
	g±ø˚_£q
 = 0;

102 
	gö°_£q
 = 0;

105 
	#RELINK_NULL_DATA
 { 
NULL
, NULL, 0 }

	)

106 
RE_lök
 
	gœ°_›
 = 
RELINK_NULL_DATA
;

107 
RE_lök
 
	gRELINK_NULL
 = 
RELINK_NULL_DATA
;

116 
	$„tch_cb
(
rid
, 
œt
)

118 
iˇche_dñay
 = 
œt
;

119 
iˇche_block
 = 
FALSE
;

120 
	}
}

126 
	$ª«me_öô
()

128 
i
;

131 
i
=0; i < 
MD_TOTAL_REGS
; i++Ë
ª«me_èbÀ
[i] = 
NULL
;

134 
ª«me_‰ì_li°
 = (
ª«me_íåy
 *)

135 
	`ˇŒoc
(
ISQ_size
 + 4, (
ª«me_íåy
));

136 
i
=0; i < 
ISQ_size
 + 3; i++) {

137 
ª«me_‰ì_li°
[
i
].
√xt
 = &(rename_free_list[i+1]);

139 
ª«me_‰ì_li°
[
ISQ_size
 + 3].
√xt
 = 
NULL
;

141 
	}
}

144 
ª«me_íåy
 *

145 
	$ª«me_gë_íåy
()

147 
ª«me_íåy
 *
ít
;

149 i‡(
ª«me_‰ì_li°
 =
NULL
) {

150 
ít
 = 
	`ˇŒoc
(1, (
ª«me_íåy
));

153 
ít
 = 
ª«me_‰ì_li°
;

154 
ª«me_‰ì_li°
 =Ñíame_‰ì_li°->
√xt
;

157  
ít
;

158 
	}
}

162 
	$ª«me_dump
(
FILE
 *
°ªam
)

164 
i
;

165 
ª«me_íåy
 *
ít
;

167 
	`Ârötf
(
°ªam
, "**ÑenameÅable state **\n");

169 
i
=0; i < 
MD_TOTAL_REGS
; i++) {

170 
ít
 = 
ª«me_èbÀ
[
i
];

171 i‡(
ít
Ë
	`Ârötf
(
°ªam
, "[%5s]: ", 
	`REG_NAME
(
i
));

172 
ít
) {

173 
	`Ârötf
(
°ªam
, "%s %2d",

174 (
ít
->
ª
->
ö_LSQ
 ? "LSQ" : "ROB"),

175 ()(
ít
->
ª
 - (ít->ª->
ö_LSQ
 ? 
LSQ
 : 
ROB
))

177 
ít
 =É¡->
√xt
;

178 
	`Ârötf
(
°ªam
, "%s", 
ít
 ? ", " : "\n");

181 
	}
}

185 
	$ª«me_ªmove_íåy
(
ª«me_íåy
 *
ít
, 
odï_«me
)

187 i‡(
ít
 =
NULL
) ;

189 i‡(
ít
->
¥ev
 =
NULL
)

190 
ª«me_èbÀ
[
odï_«me
] = 
ít
->
√xt
;

192 
ít
->
¥ev
->
√xt
 =Ént->next;

193 i‡(
ít
->
√xt
 !
NULL
Ëít->√xt->
¥ev
 =Ént->prev;

195 
ít
->
√xt
 = 
ª«me_‰ì_li°
;

196 
ª«me_‰ì_li°
 = 
ít
;

197 
	}
}

203 
	$„_öô
()

206 
IFQ
 = (
„tch_ªc
 *)
	`ˇŒoc
(
IFQ_size
, (fetch_rec));

207 i‡(!
IFQ
Ë
	`Áèl
("out of virtual memory");

210 
IFQ_num
 = 0;

211 
IFQ_èû
 = 
IFQ_hód
 = 0;

212 
IFQ_cou¡
 = 0;

213 
IFQ_fcou¡
 = 0;

216 
unknown_èrgë
 = 
FALSE
;

217 
dp_•ec_mode
 = 
FALSE
;

218 
	}
}

222 
	$„_ªcovî
(
md_addr_t
 
ªcovî_PC
)

226 
ªcovîy_cou¡
++;

229 
unknown_èrgë
 = 
FALSE
;

230 
dp_•ec_mode
 = 
FALSE
;

233 i‡(
±ø˚_a˘ive
) {

234 
IFQ_num
 != 0) {

236 
	`±ø˚_ídö°
(
IFQ
[
IFQ_hód
].
±ø˚_£q
);

239 
IFQ_hód
 = (IFQ_hód + 1Ë% 
IFQ_size
;

240 
IFQ_num
--;

245 
IFQ_num
 = 0;

246 
IFQ_èû
 = 0;

247 
IFQ_hód
 = 0;

250 
„tch_¥ed_NPC
 = 
ªcovî_PC
;

251 
pu_ªgs
.
ªgs_NPC
 = 
ªcovî_PC
;

252 
	}
}

256 
	$ifq_dump
(
FILE
 *
°ªam
)

258 
num
, 
hód
;

260 
	`Ârötf
(
°ªam
, "** IFQ contents **\n");

261 
	`Ârötf
(
°ªam
, "IFQ_num: %d\n", 
IFQ_num
);

262 
	`Ârötf
(
°ªam
, "IFQ_head: %d, IFQ_tail: %d\n",

263 
IFQ_hód
, 
IFQ_èû
);

265 
num
 = 
IFQ_num
;

266 
hód
 = 
IFQ_hód
;

268 
num
) {

269 
	`Ârötf
(
°ªam
, "idx: %2d in°: `", 
hód
);

270 
	`md_¥öt_ö¢
(
IFQ
[
hód
].
IR
, IFQ[hód].
PC
, 
°ªam
);

271 
	`Ârötf
(
°ªam
, "'\n");

273 
	`myÂrötf
(
°ªam
, "\tPC: 0x%08p,Öred_NPC: 0x%08p\n",

274 
IFQ
[
hód
].
PC
, IFQ[hód].
¥ed_NPC
);

275 
	`myÂrötf
(
°ªam
, "\tisq_ödex: %0d\n", 
IFQ
[
hód
].
isq_ödex
);

277 
hód
 = (hód + 1Ë& (
IFQ_size
 - 1);

278 
num
--;

280 
	}
}

287 
INLINE
 

288 
	$rob_lök_idï
(
ROB_íåy
 *
ª
,

289 
idï_num
,

290 
ªg_«me
)

292 
ª«me_íåy
 *
π_ít
;

293 
RE_lök
 *
ª_lök
;

294 
vÆ_ty≥
 
idï_ty≥
 = 
	`GET_TYPE
(
ªg_«me
);

295 
idï_«me
 = 
	`DEP_NAME
(
ªg_«me
);

297 
ª
->
idï_«me
[
idï_num
] = idep_name;

300 i‡(
idï_«me
 =
DNA
) {

301 
ª
->
idï_ªady
[
idï_num
] = 
TRUE
;

304 i‡(
idï_«me
 =
	`DGPR
(
MD_REG_ZERO
)) {

305 
ª
->
idï_ªady
[
idï_num
] = 
TRUE
;

306 
ª
->
idï_vÆue
[
idï_num
].
q
 = 0;

309 #i‡
	`deföed
(
TARGET_ALPHA
)

310 i‡(
idï_«me
 =
	`DFPR
(
MD_REG_ZERO
)) {

311 
ª
->
idï_ªady
[
idï_num
] = 
TRUE
;

312 
ª
->
idï_vÆue
[
idï_num
].
d
 = 0.0;

318 
π_ít
 = 
ª«me_èbÀ
[
idï_«me
];

321 i‡(!
π_ít
 || !π_ít->
ª
) {

324 #i‡
	`deföed
(
TARGET_PISA
)

325 i‡(
	`REG_IS_FP
(
idï_«me
)) {

326 
idï_ty≥
) {

327 
vt_sÊﬂt
:

328 
ª
->
idï_vÆue
[
idï_num
].
f
 = 
ªgs
.
ªgs_F
.f[
	`FP_REG_INDEX
(
idï_«me
)];

330 
vt_dÊﬂt
:

331 
ª
->
idï_vÆue
[
idï_num
].
d
 = 
ªgs
.
ªgs_F
.d[
	`FP_REG_INDEX
(
idï_«me
) >> 1];

334 
	`Áèl
("InvalidÅype inÑob_link_idep");

337 i‡(
idï_«me
 =
DFCC
) {

338 
ª
->
idï_vÆue
[
idï_num
].
sw
 = 
ªgs
.
ªgs_C
.
fcc
;

340 i‡(
idï_«me
 =
DHI
) {

341 
ª
->
idï_vÆue
[
idï_num
].
sw
 = 
ªgs
.
ªgs_C
.
hi
;

343 i‡(
idï_«me
 =
DLO
) {

344 
ª
->
idï_vÆue
[
idï_num
].
sw
 = 
ªgs
.
ªgs_C
.
lo
;

347 
ª
->
idï_vÆue
[
idï_num
].
sw
 = 
ªgs
.
ªgs_R
[
	`INT_REG_INDEX
(
idï_«me
)];

349 #ñi‡
	`deföed
(
TARGET_ALPHA
)

350 i‡(
	`REG_IS_FP
(
idï_«me
)) {

351 
ª
->
idï_vÆue
[
idï_num
].
d
 = 
ªgs
.
ªgs_F
.d[
	`FP_REG_INDEX
(
idï_«me
)];

353 i‡(
idï_«me
 =
DFPCR
) {

354 
ª
->
idï_vÆue
[
idï_num
].
q
 = 
ªgs
.
ªgs_C
.
Â¸
;

356 i‡(
idï_«me
 =
DUNIQ
) {

357 
ª
->
idï_vÆue
[
idï_num
].
q
 = 
ªgs
.
ªgs_C
.
uniq
;

360 
ª
->
idï_vÆue
[
idï_num
].
q
 = 
ªgs
.
ªgs_R
[
	`INT_REG_INDEX
(
idï_«me
)];

363 
ª
->
idï_ªady
[
idï_num
] = 
TRUE
;

365 i‡(
π_ít
->
ª
->
odï_vÆid
[π_ít->
odï_num
]) {

367 #i‡
	`deföed
(
TARGET_PISA
)

368 i‡(
	`REG_IS_FP
(
idï_«me
)) {

369 
idï_ty≥
) {

370 
vt_sÊﬂt
:

371 
ª
->
idï_vÆue
[
idï_num
].
f
 = 
π_ít
->ª->
odï_vÆue
[π_ít->
odï_num
].f;

373 
vt_dÊﬂt
:

374 
ª
->
idï_vÆue
[
idï_num
].
d
 = 
π_ít
->ª->
odï_vÆue
[π_ít->
odï_num
].d;

377 
	`Áèl
("InvalidÅype inÑob_link_idep");

381 
ª
->
idï_vÆue
[
idï_num
].
sw
 = 
π_ít
->ª->
odï_vÆue
[π_ít->
odï_num
].sw;

383 #ñi‡
	`deföed
(
TARGET_ALPHA
)

384 i‡(
	`REG_IS_FP
(
idï_«me
))

385 
ª
->
idï_vÆue
[
idï_num
].
d
 = 
π_ít
->ª->
odï_vÆue
[π_ít->
odï_num
].d;

387 
ª
->
idï_vÆue
[
idï_num
].
q
 = 
π_ít
->ª->
odï_vÆue
[π_ít->
odï_num
].q;

390 
ª
->
idï_ªady
[
idï_num
] = 
TRUE
;

395 
	`RELINK_NEW
(
ª_lök
, 
ª
);

396 
ª_lök
->
x
.
›num
 = 
idï_num
;

397 
ª_lök
->
√xt
 = 
π_ít
->
ª
->
odï_li°
[π_ít->
odï_num
];

398 
π_ít
->
ª
->
odï_li°
[π_ít->
odï_num
] = 
ª_lök
;

400 
ª
->
idï_ªady
[
idï_num
] = 
FALSE
;

402 
	}
}

405 
INLINE
 

406 
	$rob_ö°Æl_odï
(
ROB_íåy
 *
ª
,

407 
odï_num
,

408 
ªg_«me
)

410 
ª«me_íåy
 *
π_ít
;

411 
odï_«me
 = 
	`DEP_NAME
(
ªg_«me
);

414 
ª
->
odï_«me
[
odï_num
] = odep_name;

415 
ª
->
odï_li°
[
odï_num
] = 
NULL
;

418 #i‡
	`deföed
(
TARGET_PISA
)

419 i‡((
odï_«me
 =
DNA
Ë|| (odï_«mê=
	`DGPR
(
MD_REG_ZERO
))) {

420 #ñi‡
	`deföed
(
TARGET_ALPHA
)

421 i‡((
odï_«me
 =
DNA
Ë|| (odï_«mê=
	`DGPR
(
MD_REG_ZERO
)Ë|| (odï_«mê=
	`DFPR
(MD_REG_ZERO))) {

423 
ª
->
odï_ª«me
[
odï_num
] = 
NULL
;

424 
ª
->
odï_vÆid
[
odï_num
] = 
TRUE
;

430 
π_ít
 = 
	`ª«me_gë_íåy
();

431 
π_ít
->
ª
 =Ñe;

432 
π_ít
->
odï_num
 = odep_num;

433 
π_ít
->
√xt
 = 
ª«me_èbÀ
[
odï_«me
];

434 
π_ít
->
¥ev
 = 
NULL
;

435 i‡(
π_ít
->
√xt
 !
NULL
Ëπ_ít->√xt->
¥ev
 =Ñt_ent;

436 
ª«me_èbÀ
[
odï_«me
] = 
π_ít
;

439 
ª
->
odï_ª«me
[
odï_num
] = 
π_ít
;

440 
ª
->
odï_vÆid
[
odï_num
] = 
FALSE
;

441 
	}
}

447 
	$ma£_di•©ch
()

449 
md_›code
 
›
;

450 
br_èkí
;

451 
br_¥ed_èkí
;

452 
n_di•©ched
;

453 
mis„tch_⁄ly
;

454 
ROB_íåy
 *
ª
;

455 
ROB_íåy
 *
lsq
;

456 
isq_ödex
;

457 
md_ö°_t
 
ö°
;

458 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

459 
°ack_ªcovî_idx
;

460 
p£q
;

461 
mem_size
;

462 
ö1
, 
ö2
, 
ö3
, 
out1
, 
out2
;

463 
md_addr_t
 
èrgë_addr
;

464 
dp_°Æl_t
 
dp_°Æl_ty≥
;

467 
n_di•©ched
 = 0;

468 
mis„tch_⁄ly
 = 
FALSE
;

472 
n_di•©ched
 < (
decode_width
 * 
„tch_•ìd
) &&

474 
ROB_num
 < 
ROB_size
 &&

476 
RS_num
 < 
RS_size
 &&

478 
IFQ_num
 != 0 &&

480 (
IFQ
[
IFQ_hód
].
time°amp
 + 
IFQ_dñay
Ë< 
sim_cy˛e
 &&

482 (
ö˛ude_•ec
 || !
dp_•ec_mode
)

486 i‡(
ö‹dî_issue


487 && (
œ°_›
.
ª
 && 
	`RELINK_VALID
(&last_op)

488 && !
	`OPERANDS_READY
(
œ°_›
.
ª
)))

495 
ö°
 = 
IFQ
[
IFQ_hód
].
IR
;

496 
isq_ödex
 = 
IFQ
[
IFQ_hód
].isq_index;

497 
dp_PC
 = 
IFQ
[
IFQ_hód
].
PC
;

498 
dp_¥ed_NPC
 = 
IFQ
[
IFQ_hód
].
¥ed_NPC
;

499 
dú_upd©e_±r
 = &(
IFQ
[
IFQ_hód
].
dú_upd©e
);

500 
°ack_ªcovî_idx
 = 
IFQ
[
IFQ_hód
].stack_recover_idx;

501 
p£q
 = 
IFQ
[
IFQ_hód
].
±ø˚_£q
;

502 
out1
 = 
IFQ
[
IFQ_hód
].out1;

503 
out2
 = 
IFQ
[
IFQ_hód
].out2;

504 
ö1
 = 
IFQ
[
IFQ_hód
].in1;

505 
ö2
 = 
IFQ
[
IFQ_hód
].in2;

506 
ö3
 = 
IFQ
[
IFQ_hód
].in3;

507 
èrgë_addr
 = 
IFQ
[
IFQ_hód
].target_addr;

508 
mem_size
 = 
IFQ
[
IFQ_hód
].mem_size;

511 
	`MD_SET_OPCODE
(
›
, 
ö°
);

514 i‡((
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
Ë&& (
LSQ_num
 =
LSQ_size
)) ;

518 i‡(
isq_ödex
 !
INVALID_ISQ
)

519 
dp_‹a˛e_NPC
 = 
ISQ
[
isq_ödex
].
NPC
;

521 
dp_‹a˛e_NPC
 = 
dp_PC
 + (
md_ö°_t
);

524 
br_èkí
 = (
dp_‹a˛e_NPC
 !(
dp_PC
 + (
md_ö°_t
)));

525 
br_¥ed_èkí
 = (
dp_¥ed_NPC
 !(
dp_PC
 + (
md_ö°_t
)));

530 i‡(((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_DIRJMP
)) == (F_CTRL|F_DIRJMP))

531 && (
èrgë_addr
 !
dp_¥ed_NPC
Ë&& 
br_¥ed_èkí
)

534 
mis„tch_cou¡
++;

535 
ªcovîy_cou¡
++;

542 
„tch_¥ed_NPC
 = 
èrgë_addr
;

543 i‡(
èrgë_addr
 =
dp_‹a˛e_NPC
) {

544 
mis„tch_⁄ly
 = 
TRUE
;

545 
mis„tch_⁄ly_cou¡
++;

549 
IFQ_num
 = 1;

550 
IFQ_èû
 = (
IFQ_hód
 + 1Ë% 
IFQ_size
;

553 
pu_ªgs
.
ªgs_NPC
 = 
dp_‹a˛e_NPC
;

554 
	`isq_ª£t
(
isq_ödex
);

557 
unknown_èrgë
 = 
FALSE
;

561 i‡(
isq_ödex
 !
INVALID_ISQ
)

580 
RS_num
++;

583 
ª
 = &
ROB
[
ROB_èû
];

584 
ª
->
¶ù
 = 
sim_cy˛e
 - 1;

585 
ª
->
IR
 = 
ö°
;

586 
ª
->
›
 = op;

587 
ª
->
isq_ödex
 = isq_index;

588 
ª
->
PC
 = 
dp_PC
;

589 
ª
->
NPC
 = 0;

590 
ª
->
¥ed_NPC
 = 
dp_¥ed_NPC
;

591 
ª
->
ö_LSQ
 = 
FALSE
;

592 
ª
->
ó_comp
 = 
FALSE
;

593 
ª
->
mem_vÆue
.
q
 = 0;

594 
ª
->
mem_size
 = 0;

595 
ª
->
m©ch_ö_LSQ
 = 
FALSE
;

596 
ª
->
Áu…
 = 
md_Áu…_n⁄e
;

597 
ª
->
déb_miss
 = 
FALSE
;

598 
ª
->
rob_ödex
 = 0;

599 
ª
->
ªcovî_ö°
 = 
FALSE
;

600 
ª
->
dú_upd©e
 = *
dú_upd©e_±r
;

601 
ª
->
°ack_ªcovî_idx
 = stack_recover_idx;

602 
ª
->
timög_dï
 = 0;

604 
ª
->
£q
 = ++
ö°_£q
;

605 
ª
->
±ø˚_£q
 = 
p£q
;

606 
ª
->
blöd_ªcovî
 = 
FALSE
;

607 
ª
->
queued
 =Ñe->
issued
 =Ñe->
com∂ëed
 = 
FALSE
;

608 
ª
->
scheduÀ_waô_time
 = 
scheduÀ_dñay
;

611 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
) {

614 
ª
->
›
 = 
MD_AGEN_OP
;

615 
ª
->
ó_comp
 = 
TRUE
;

618 
lsq
 = &
LSQ
[
LSQ_èû
];

619 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

620 
lsq
->
IR
 = 
ö°
;

621 
lsq
->
isq_ödex
 = isq_index;

622 
lsq
->
›
 = op;

623 
lsq
->
PC
 = 
dp_PC
;

624 
lsq
->
NPC
 = 0;

625 
lsq
->
¥ed_NPC
 = 
dp_¥ed_NPC
;

626 
lsq
->
ö_LSQ
 = 
TRUE
;

627 
lsq
->
ó_comp
 = 
FALSE
;

628 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))

629 
lsq
->
mem_vÆue
 = 
ISQ
[
isq_ödex
].mem_value;

631 
lsq
->
mem_vÆue
.
q
 = 0;

632 
lsq
->
mem_size
 = mem_size;

633 
lsq
->
m©ch_ö_LSQ
 = 
FALSE
;

634 
lsq
->
Áu…
 = 
md_Áu…_n⁄e
;

635 
lsq
->
déb_miss
 = 
FALSE
;

636 
lsq
->
rob_ödex
 = 
ª
 - 
ROB
;

637 
lsq
->
ªcovî_ö°
 = 
FALSE
;

638 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

639 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

640 
lsq
->
°ack_ªcovî_idx
 = 0;

641 
lsq
->
timög_dï
 = 0;

643 
lsq
->
£q
 = ++
ö°_£q
;

644 
lsq
->
±ø˚_£q
 = 
p£q
 + 1;

645 
lsq
->
blöd_ªcovî
 = 
FALSE
;

646 
lsq
->
scheduÀ_waô_time
 = 0;

647 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

650 
	`±ø˚_√wu›
(
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

651 
	`±ø˚_√w°age
(
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

654 
	`rob_lök_idï
(
ª
, 0, 
DNA
);

655 
	`rob_lök_idï
(
ª
, 1, 
ö2
);

656 
	`rob_lök_idï
(
ª
, 2, 
ö3
);

659 
	`rob_ö°Æl_odï
(
ª
, 0, 
DTMP
);

660 
	`rob_ö°Æl_odï
(
ª
, 1, 
DNA
);

663 
	`rob_lök_idï
(
lsq
, 
STORE_OP_INDEX
 , 
ö1
);

664 
	`rob_lök_idï
(
lsq
, 
STORE_ADDR_INDEX
 , 
DTMP
);

665 
	`rob_lök_idï
(
lsq
, 2, 
DNA
);

668 
	`rob_ö°Æl_odï
(
lsq
, 0, 
out1
);

669 
	`rob_ö°Æl_odï
(
lsq
, 1, 
out2
);

672 
n_di•©ched
++;

673 
ROB_èû
 = (ROB_èû + 1Ë% 
ROB_size
;

674 
ROB_num
++;

675 
LSQ_èû
 = (LSQ_èû + 1Ë% 
LSQ_size
;

676 
LSQ_num
++;

679 i‡(
	`OPERANDS_READY
(
ª
)Ë
	`ªadyq_íqueue
(re);

682 
	`RELINK_INIT
(
œ°_›
, 
lsq
);

685 i‡(((
	`MD_OP_FLAGS
(
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

686 && 
	`OPERANDS_READY
(
lsq
))

688 
	`ªadyq_íqueue
(
lsq
);

694 
	`rob_lök_idï
(
ª
, 0, 
ö1
);

695 
	`rob_lök_idï
(
ª
, 1, 
ö2
);

696 
	`rob_lök_idï
(
ª
, 2, 
ö3
);

699 
	`rob_ö°Æl_odï
(
ª
, 0, 
out1
);

700 
	`rob_ö°Æl_odï
(
ª
, 1, 
out2
);

703 
n_di•©ched
++;

704 
ROB_èû
 = (ROB_èû + 1Ë% 
ROB_size
;

705 
ROB_num
++;

708 i‡(
	`OPERANDS_READY
(
ª
)) {

709 
	`ªadyq_íqueue
(
ª
);

710 
œ°_›
 = 
RELINK_NULL
;

713 
	`RELINK_INIT
(
œ°_›
, 
ª
);

719 
ª
 = 
NULL
;

723 i‡(
¥ed
 &&

724 !
dp_•ec_mode
 &&

725 
b¥ed_•ec_upd©e
 =
•ec_ID
 &&

726 (
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

728 
	`b¥ed_upd©e
(
¥ed
,

729  
dp_PC
,

730  
dp_‹a˛e_NPC
,

731  
dp_‹a˛e_NPC
 !(
dp_PC
 + (
md_ö°_t
)),

732  
dp_¥ed_NPC
 !(
dp_PC
 + (
md_ö°_t
)),

733  
dp_¥ed_NPC
 =
dp_‹a˛e_NPC
,

734  
›
,

735  &
ª
->
dú_upd©e


740 i‡(
dp_¥ed_NPC
 !
dp_‹a˛e_NPC
 && !
mis„tch_⁄ly
) {

741 i‡(
ªcovî_ö_shadow
 || !
dp_•ec_mode
Ë
ª
->
ªcovî_ö°
 = 
TRUE
;

742 
dp_•ec_mode
 = 
TRUE
;

746 
	`±ø˚_√w°age
(
p£q
, 
PST_DISPATCH
,

747 (
dp_¥ed_NPC
 !
dp_‹a˛e_NPC
Ë? 
PEV_MPOCCURED
 : 0);

748 i‡(
›
 =
MD_NOP_OP
Ë
	`±ø˚_ídö°
(
p£q
);

751 
IFQ_hód
 = (IFQ_hód + 1Ë% 
IFQ_size
;

752 
IFQ_num
--;

756 i‡(
n_di•©ched
 >(
decode_width
 * 
„tch_•ìd
))

757 
dp_°Æl_ty≥
 = 
dp_no_°Æl
;

758 i‡((
IFQ_num
 =0Ë|| (
IFQ
[
IFQ_hód
].
time°amp
 + 
IFQ_dñay
Ë>
sim_cy˛e
)

759 
dp_°Æl_ty≥
 = 
dp_ifq_em±y
;

760 i‡(
RS_num
 >
RS_size
)

761 
dp_°Æl_ty≥
 = 
dp_rs_fuŒ
;

762 i‡(
LSQ_num
 >
LSQ_size
)

763 
dp_°Æl_ty≥
 = 
dp_lsq_fuŒ
;

764 i‡(
ROB_num
 >
ROB_size
)

765 
dp_°Æl_ty≥
 = 
dp_rob_fuŒ
;

767 
dp_°Æl_ty≥
 = 
dp_Ÿhî
;

769 
	`°©_add_ßm∂e
(
dp_°Æl
, ()
dp_°Æl_ty≥
);

770 
	}
}

779 
	$„tch_£tup_PC
(
md_addr_t
 
PC
)

781 
„tch_¥ed_NPC
 = 
PC
;

782 
pu_ªgs
.
ªgs_NPC
 = 
PC
;

783 
	}
}

787 
	$„tch_dump
(
FILE
 *
°ªam
)

789 i‡(!
°ªam
Ë°ªam = 
°dîr
;

791 
	`Ârötf
(
°ªam
, "** fetch stage state **\n");

793 
	`myÂrötf
(
°ªam
, "fetch_PC: 0x%08p, fetch_pred_NPC: 0x%08p\n",

794 
„tch_PC
, 
„tch_¥ed_NPC
);

796 i‡(
iˇche_block
)

797 
	`Ârötf
(
°ªam
, "fetch blocked dueÅo icache miss (lat: unknown)\n");

798 i‡(
iˇche_dñay
)

799 
	`Ârötf
(
°ªam
, "„tch blocked duêtÿiˇchêmis†÷©: %d)\n", 
iˇche_dñay
);

800 
	}
}

804 
	$ma£_„tch
()

806 
i
;

807 
œt
;

808 
mem_°©us
 
°©us
;

809 
miss
;

810 
md_ö°_t
 
ö°
;

811 
°ack_ªcovî_idx
;

812 
bønch_˙t
;

813 
isq_ödex
;

814 
max_bønches
;

815 
md_›code
 
›
;

816 
„tch_°Æl_t
 
„tch_°Æl_ty≥
;

819 
bønch_˙t
 = 0;

820 
max_bønches
 = 
FALSE
;

823 i‡(
iˇche_block
) {

824 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

827 i‡(
iˇche_dñay
) {

828 
iˇche_dñay
--;

829 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

833 
i
=0;

835 
i
 < (
decode_width
 * 
„tch_•ìd
) &&

837 
IFQ_num
 < 
IFQ_size
 &&

839 !
unknown_èrgë
 &&

841 !
is_å≠
 &&

843 !
is_sysˇŒ
 &&

845 !
max_bønches
;

846 
i
++)

850 
„tch_PC
 = 
„tch_¥ed_NPC
;

853 i‡(1 ||(
ld_ãxt_ba£
 <
„tch_PC


854 && 
„tch_PC
 < (
ld_ãxt_ba£
+
ld_ãxt_size
)

855 && !(
„tch_PC
 & ((
md_ö°_t
)-1))))

858 i‡((
i
 != 0) &&

859 !
„tch_mu…_löes
 &&

860 !
	`IS_CACHE_FAST_HIT
(
ˇche_û1
, 
	`IACOMPRESS
(
„tch_PC
))

862 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_Æign
);

867 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
„tch_PC
);

870 i‡(
ôlb
) {

871 
°©us
 = 
	`ma£_ˇche_ac˚ss
(
ôlb
, 
Ród
,

872 
	`IACOMPRESS
(
„tch_PC
), 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)),

873 
sim_cy˛e
, 
NULL
, NULL, 
„tch_cb
, 0, &
œt
);

874 
miss
 = (
œt
 > 1Ë|| (
°©us
 !
MEM_KNOWN
);

875 i‡((
œt
 > 1Ë|| (
°©us
 =
MEM_UNKNOWN
))

876 
œ°_ö°_tmis£d
 = 
TRUE
;

879 
°©us
 = 
MEM_KNOWN
;

880 
miss
 = 
FALSE
;

886 i‡(
miss
) {

887 i‡(
°©us
 =
MEM_KNOWN
) {

888 
iˇche_block
 = 
FALSE
;

889 
iˇche_dñay
 = 
œt
 - 1;

890 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

893 i‡(
°©us
 =
MEM_UNKNOWN
) {

894 
iˇche_block
 = 
TRUE
;

895 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

898 i‡(
°©us
 =
MEM_RETRY
) {

899 
iˇche_block
 = 
FALSE
;

900 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

906 i‡(
ˇche_û1
) {

907 
°©us
 = 
	`ma£_ˇche_ac˚ss
(
ˇche_û1
, 
Ród
,

908 
	`IACOMPRESS
(
„tch_PC
), 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)),

909 
sim_cy˛e
, 
NULL
, NULL, 
„tch_cb
, 0, &
œt
);

910 
miss
 = (
œt
 > 
ˇche_û1_œt
Ë|| (
°©us
 !
MEM_KNOWN
);

911 i‡((
œt
 > 
ˇche_û1_œt
Ë|| (
°©us
 =
MEM_UNKNOWN
))

912 
œ°_ö°_mis£d
 = 
TRUE
;

915 
°©us
 = 
MEM_KNOWN
;

916 
œt
 = 
ˇche_û1_œt
;

917 
miss
 = 
FALSE
;

923 i‡(
miss
) {

924 i‡(
°©us
 =
MEM_KNOWN
) {

925 
iˇche_block
 = 
FALSE
;

926 
iˇche_dñay
 = 
œt
 - 1;

927 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

930 i‡(
°©us
 =
MEM_UNKNOWN
) {

931 
iˇche_block
 = 
TRUE
;

932 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

935 i‡(
°©us
 =
MEM_RETRY
) {

936 
iˇche_block
 = 
FALSE
;

937 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_ˇche_miss
);

946 
isq_ödex
 = 
	`checkî_exec
(
„tch_PC
, &(
IFQ
[
IFQ_èû
]));

950 
ö°
 = 
MD_NOP_INST
;

951 
isq_ödex
 = 
INVALID_ISQ
;

952 
IFQ
[
IFQ_èû
].
ö1
 = 
DNA
;

953 
IFQ
[
IFQ_èû
].
ö2
 = 
DNA
;

954 
IFQ
[
IFQ_èû
].
ö3
 = 
DNA
;

955 
IFQ
[
IFQ_èû
].
out1
 = 
DNA
;

956 
IFQ
[
IFQ_èû
].
out2
 = 
DNA
;

957 
IFQ
[
IFQ_èû
].
èrgë_addr
 = 
„tch_PC
 + (
md_ö°_t
);

958 
	`¥ötf
("BOGUS!!!");

962 
	`MD_SET_OPCODE
(
›
, 
ö°
);

965 i‡(
¥ed_≥r„˘
) {

967 
„tch_¥ed_NPC
 = 
pu_ªgs
.
ªgs_NPC
;

968 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
) {

969 i‡(
pu_ªgs
.
ªgs_NPC
 !pu_ªgs.
ªgs_PC
 + (
md_ö°_t
)Ë
bønch_˙t
++;

970 i‡(
bønch_˙t
 >
„tch_•ìd
Ë
max_bønches
 = 
TRUE
;

973 i‡(!
¥ed
) {

975 
„tch_¥ed_NPC
 = 
„tch_PC
 + (
md_ö°_t
);

979 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

984 
„tch_¥ed_NPC
 =

985 
	`b¥ed_lookup
(
¥ed
,

986  
„tch_PC
,

987  
IFQ
[
IFQ_èû
].
èrgë_addr
,

988  
›
,

989  
	`MD_IS_CALL
(
›
),

990  
	`MD_IS_RETURN
(
›
),

991  &(
IFQ
[
IFQ_èû
].
dú_upd©e
),

992  &
°ack_ªcovî_idx


995 
„tch_¥ed_NPC
 = 0;

998 i‡(!
„tch_¥ed_NPC
) {

1000 
„tch_¥ed_NPC
 = 
„tch_PC
 + (
md_ö°_t
);

1008 i‡(
„tch_¥ed_NPC
 =1Ë
unknown_èrgë
 = 
TRUE
;

1011 
bønch_˙t
++;

1012 i‡(
bønch_˙t
 >
„tch_•ìd
Ë
max_bønches
 = 
TRUE
;

1017 
IFQ
[
IFQ_èû
].
isq_ödex
 = isq_index;

1018 
IFQ
[
IFQ_èû
].
IR
 = 
ö°
;

1019 
IFQ
[
IFQ_èû
].
PC
 = 
„tch_PC
;

1020 
IFQ
[
IFQ_èû
].
¥ed_NPC
 = 
„tch_¥ed_NPC
;

1021 
IFQ
[
IFQ_èû
].
°ack_ªcovî_idx
 = stack_recover_idx;

1022 
IFQ
[
IFQ_èû
].
±ø˚_£q
 =Ötrace_seq++;

1023 
IFQ
[
IFQ_èû
].
time°amp
 = 
sim_cy˛e
;

1026 
	`±ø˚_√wö°
(
IFQ
[
IFQ_èû
].
±ø˚_£q
,

1027 
ö°
, 
IFQ
[
IFQ_èû
].
PC
,

1029 
	`±ø˚_√w°age
(
IFQ
[
IFQ_èû
].
±ø˚_£q
,

1030 
PST_IFETCH
,

1031 ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0)

1032 | (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

1033 
œ°_ö°_mis£d
 = 
FALSE
;

1034 
œ°_ö°_tmis£d
 = 
FALSE
;

1037 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
Ë
±ø˚_£q
++;

1040 
IFQ_èû
 = (IFQ_èû + 1Ë% 
IFQ_size
;

1041 
IFQ_num
++;

1045 i‡(
i
 >(
decode_width
 * 
„tch_•ìd
))

1046 
„tch_°Æl_ty≥
 = 
„tch_no_°Æl
;

1047 i‡(
is_sysˇŒ
 || 
is_å≠
)

1048 
„tch_°Æl_ty≥
 = 
„tch_sysˇŒ
;

1049 i‡(
unknown_èrgë
)

1050 
„tch_°Æl_ty≥
 = 
„tch_unknown
;

1051 i‡(
max_bønches
)

1052 
„tch_°Æl_ty≥
 = 
„tch_bønches
;

1053 i‡(
IFQ_num
 >
IFQ_size
)

1054 
„tch_°Æl_ty≥
 = 
„tch_ifq_fuŒ
;

1056 
„tch_°Æl_ty≥
 = 
„tch_Ÿhî
;

1058 
	`°©_add_ßm∂e
(
„tch_°Æl
, ()
„tch_°Æl_ty≥
);

1059 
	}
}

	@mase-fe.h

57 
„tch_ªc
 *
IFQ
;

58 
IFQ_num
;

59 
IFQ_èû
, 
IFQ_hód
;

62 
b¥ed_t
 *
¥ed
;

65 
ª«me_íåy
 *
	gª«me_èbÀ
[
MD_TOTAL_REGS
];

66 
	#IS_RENAME_HEAD
(
REN
, 
NAME
Ë(
ª«me_èbÀ
[NAME] =REN)

	)

70 
ª«me_öô
();

73 
ª«me_íåy
 *

74 
ª«me_gë_íåy
();

78 
ª«me_dump
(
FILE
 *
°ªam
);

82 
ª«me_ªmove_íåy
(
ª«me_íåy
 *
ít
, 
odï_«me
);

86 
„_öô
();

90 
„_ªcovî
(
md_addr_t
 
ªcovî_PC
);

94 
ifq_dump
(
FILE
 *
°ªam
);

100 
ma£_di•©ch
();

105 
„tch_£tup_PC
(
md_addr_t
 
PC
);

109 
„tch_dump
(
FILE
 *
°ªam
);

113 
ma£_„tch
();

	@mase-macros-exec.h

57 #unde‡
SET_TPC


58 
	#SET_TPC
(
EXPR
Ë(
ª
->
PC
 +0)

	)

59 
	#SET_NPC
(
EXPR
Ë(
ª
->
NPC
 = (EXPR))

	)

60 
	#CPC
 (
ª
->
PC
)

	)

62 
	#TMP
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
)).
addr


	)

63 
	#SET_TMP
(
EXPR
Ë
ªg_vÆue
.
addr
 = EXPR, \

64 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DTMP
), 
ªg_vÆue
, 
vt_addr
)

	)

66 #i‡
deföed
(
TARGET_PISA
)

69 
	#GPR
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DGPR
(N))).
sw


	)

70 
	#SET_GPR
(
N
, 
EXPR
Ë
ªg_vÆue
.
sw
 = EXPR, \

71 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DGPR
(
N
)), 
ªg_vÆue
, 
vt_sw‹d
)

	)

73 
	#FPR_L
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_L
(N))).
sw


	)

74 
	#SET_FPR_L
(
N
,
EXPR
Ë
ªg_vÆue
.
sw
 = EXPR, \

75 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_L
(
N
)), 
ªg_vÆue
, 
vt_sw‹d
)

	)

77 
	#FPR_F
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_L
(N))).
f


	)

78 
	#SET_FPR_F
(
N
,
EXPR
Ë
ªg_vÆue
.
f
 = EXPR, \

79 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_F
(
N
)), 
ªg_vÆue
, 
vt_sÊﬂt
)

	)

81 
	#FPR_D
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_L
(N))).
d


	)

82 
	#SET_FPR_D
(
N
,
EXPR
Ë
ªg_vÆue
.
d
 = EXPR, \

83 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR_D
(
N
)), 
ªg_vÆue
, 
vt_dÊﬂt
)

	)

85 
	#HI
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DHI
)).
sw


	)

86 
	#SET_HI
(
EXPR
Ë
ªg_vÆue
.
sw
 = EXPR, \

87 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DHI
), 
ªg_vÆue
, 
vt_sw‹d
)

	)

89 
	#LO
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DLO
)).
sw


	)

90 
	#SET_LO
(
EXPR
Ë
ªg_vÆue
.
sw
 = EXPR, \

91 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DLO
), 
ªg_vÆue
, 
vt_sw‹d
)

	)

93 
	#FCC
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DFCC
)).
sw


	)

94 
	#SET_FCC
(
EXPR
Ë
ªg_vÆue
.
sw
 = EXPR, \

95 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DFCC
), 
ªg_vÆue
, 
vt_sw‹d
)

	)

97 #ñi‡
deföed
(
TARGET_ALPHA
)

99 
	#GPR
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DGPR
(N))).
q


	)

100 
	#SET_GPR
(
N
, 
EXPR
Ë
ªg_vÆue
.
q
 = EXPR, \

101 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DGPR
(
N
)), 
ªg_vÆue
, 
vt_qw‹d
)

	)

103 
	#FPR_Q
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR
(N))).
q


	)

104 
	#SET_FPR_Q
(
N
,
EXPR
Ë
ªg_vÆue
.
q
 = EXPR, \

105 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR
(
N
)), 
ªg_vÆue
, 
vt_qw‹d
)

	)

107 
	#FPR
(
N
Ë
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR
(N))).
d


	)

108 
	#SET_FPR
(
N
,
EXPR
Ë
ªg_vÆue
.
d
 = EXPR, \

109 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
	`DFPR
(
N
)), 
ªg_vÆue
, 
vt_dÊﬂt
)

	)

111 
	#FPCR
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DFPCR
)).
q


	)

112 
	#SET_FPCR
(
EXPR
Ë
ªg_vÆue
.
q
 = EXPR, \

113 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DFPCR
), 
ªg_vÆue
, 
vt_qw‹d
)

	)

115 
	#UNIQ
 
	`ªad_idï_li°
(
ª
, 
	`DEP_NAME
(
DUNIQ
)).
q


	)

116 
	#SET_UNIQ
(
EXPR
Ë
ªg_vÆue
.
q
 = EXPR, \

117 
	`£t_odï_li°
(
ª
, 
	`DEP_NAME
(
DUNIQ
), 
ªg_vÆue
, 
vt_qw‹d
)

	)

120 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

124 
	#__READ_SPECMEM
(
DATA
, 
FAULT
) \

125 (
FAULT
 = 
	`ªad_lﬂd_d©a
(
ª
, &
DATA
, (DATA))), 
	)
DATA

126 
	#READ_BYTE
(
ADDR
, 
FAULT
) \

127 (
	`__READ_SPECMEM
(
mem_vÆue
.
b
, 
FAULT
)); \

128 i‡(
ª
->
ó_comp
Ë{ 
	`SET_TMP
(
ADDR
); ; }

	)

129 
	#READ_HALF
(
ADDR
, 
FAULT
) \

130 (
	`MD_SWAPH
(
	`__READ_SPECMEM
(
mem_vÆue
.
h
, 
FAULT
))); \

131 i‡(
ª
->
ó_comp
Ë{ 
	`SET_TMP
(
ADDR
); ; }

	)

132 
	#READ_WORD
(
ADDR
, 
FAULT
) \

133 (
	`MD_SWAPW
(
	`__READ_SPECMEM
(
mem_vÆue
.
w
, 
FAULT
))); \

134 i‡(
ª
->
ó_comp
Ë{ 
	`SET_TMP
(
ADDR
); ; }

	)

135 
	#READ_QWORD
(
ADDR
, 
FAULT
) \

136 (
	`MD_SWAPQ
(
	`__READ_SPECMEM
(
mem_vÆue
.
q
, 
FAULT
))); \

137 i‡(
ª
->
ó_comp
Ë{ 
	`SET_TMP
(
ADDR
); ; }

	)

139 
	#__WRITE_SPECMEM
(
DATA
, 
ADDR
, 
SIZE
, 
FAULT
) \

140 i‡(
ª
->
ó_comp
Ë{ 
	`SET_TMP
(
ADDR
); ; } \

141 
FAULT
 = 
	`ªad_°‹e_d©a
(
ª
, &
mem_vÆue
, 
DATA
, 
SIZE
); \

142 {
ª
->
mem_vÆue
 = mem_vÆue; }

	)

143 
	#WRITE_BYTE
(
DATA
, 
ADDR
, 
FAULT
) \

144 
	`__WRITE_SPECMEM
(
DATA
, 
ADDR
, 1, 
FAULT
);

	)

145 
	#WRITE_HALF
(
DATA
, 
ADDR
, 
FAULT
) \

146 
	`__WRITE_SPECMEM
(
	`MD_SWAPH
(
DATA
), 
ADDR
, 2, 
FAULT
);

	)

147 
	#WRITE_WORD
(
DATA
, 
ADDR
, 
FAULT
) \

148 
	`__WRITE_SPECMEM
(
	`MD_SWAPW
(
DATA
), 
ADDR
, 4, 
FAULT
);

	)

149 
	#WRITE_QWORD
(
DATA
, 
ADDR
, 
FAULT
) \

150 {
	`__WRITE_SPECMEM
(
	`MD_SWAPQ
(
DATA
), 
ADDR
, 8, 
FAULT
); }

	)

	@mase-macros-oracle.h

64 #unde‡
SET_TPC


65 
	#SET_TPC
(
EXPR
Ë(
èrgë_addr
 = (EXPR))

	)

66 
	#SET_NPC
(
EXPR
Ë(
pu_ªgs
.
ªgs_NPC
 = (EXPR))

	)

67 
	#CPC
 (
pu_ªgs
.
ªgs_PC
)

	)

69 #i‡
deföed
(
TARGET_PISA
)

71 
	#GPR
(
N
Ë(
pu_ªgs
.
ªgs_R
[N])

	)

72 
	#SET_GPR
(
N
, 
EXPR
Ë(
pu_ªgs
.
ªgs_R
[N] = (EXPR))

	)

73 
	#FPR_L
(
N
Ë(
pu_ªgs
.
ªgs_F
.
l
[(N)])

	)

74 
	#SET_FPR_L
(
N
,
EXPR
Ë(
pu_ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

75 
	#FPR_F
(
N
Ë(
pu_ªgs
.
ªgs_F
.
f
[(N)])

	)

76 
	#SET_FPR_F
(
N
,
EXPR
Ë(
pu_ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

77 
	#FPR_D
(
N
Ë(
pu_ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

78 
	#SET_FPR_D
(
N
,
EXPR
Ë(
pu_ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

79 
	#HI
 (
pu_ªgs
.
ªgs_C
.
hi
)

	)

80 
	#SET_HI
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

81 
	#LO
 (
pu_ªgs
.
ªgs_C
.
lo
)

	)

82 
	#SET_LO
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

83 
	#FCC
 (
pu_ªgs
.
ªgs_C
.
fcc
)

	)

84 
	#SET_FCC
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

86 #ñi‡
deföed
(
TARGET_ALPHA
)

88 
	#GPR
(
N
Ë(
pu_ªgs
.
ªgs_R
[N])

	)

89 
	#SET_GPR
(
N
, 
EXPR
Ë(
pu_ªgs
.
ªgs_R
[N] = (EXPR))

	)

90 
	#FPR_Q
(
N
Ë(
pu_ªgs
.
ªgs_F
.
q
[(N)])

	)

91 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
pu_ªgs
.
ªgs_F
.
q
[(N)] = (EXPR))

	)

92 
	#FPR
(
N
Ë(
pu_ªgs
.
ªgs_F
.
d
[(N)])

	)

93 
	#SET_FPR
(
N
,
EXPR
Ë(
pu_ªgs
.
ªgs_F
.
d
[(N)] = (EXPR))

	)

94 
	#FPCR
 (
pu_ªgs
.
ªgs_C
.
Â¸
)

	)

95 
	#SET_FPCR
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

96 
	#UNIQ
 (
pu_ªgs
.
ªgs_C
.
uniq
)

	)

97 
	#SET_UNIQ
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

98 
	#FCC
 (
pu_ªgs
.
ªgs_C
.
fcc
)

	)

99 
	#SET_FCC
(
EXPR
Ë(
pu_ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

102 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

106 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
) \

107 (
mem_addr
 = (
SRC
), \

108 
mem_size
 = (
SRC_V
), \

109 ((
FAULT
Ë
	`pu_mem_ac˚ss
(
mem
, 
Ród
, 
mem_addr
, &
SRC_V
, (SRC_V)), SRC_V))

	)

110 
	#READ_BYTE
(
SRC
, 
FAULT
) \

111 
	`__READ_SPECMEM
((
SRC
), 
mem_vÆue
.
b
, (
FAULT
))

	)

112 
	#READ_HALF
(
SRC
, 
FAULT
) \

113 
	`MD_SWAPH
(
	`__READ_SPECMEM
((
SRC
), 
mem_vÆue
.
h
, (
FAULT
)))

	)

114 
	#READ_WORD
(
SRC
, 
FAULT
) \

115 
	`MD_SWAPW
(
	`__READ_SPECMEM
((
SRC
), 
mem_vÆue
.
w
, (
FAULT
)))

	)

116 
	#READ_QWORD
(
SRC
, 
FAULT
) \

117 
	`MD_SWAPQ
(
	`__READ_SPECMEM
((
SRC
), 
mem_vÆue
.
q
, (
FAULT
)))

	)

119 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
) \

120 (
DST_V
 = (
SRC
), 
mem_addr
 = (
DST
), \

121 ((
FAULT
Ë(!
Á°fwd_mode
 \

122 ? 
	`pu_mem_ac˚ss
(
mem
, 
Wrôe
, 
mem_addr
, &
DST_V
, (DST_V)) \

123 : 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
mem_addr
, &
DST_V
, (DST_V)) \

124 )))

	)

125 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

126 
	`__WRITE_SPECMEM
((
SRC
), (
DST
), 
mem_vÆue
.
b
, (
FAULT
)), \

127 
mem_size
 = (
mem_vÆue
.
b
);

	)

128 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

129 
	`__WRITE_SPECMEM
(
	`MD_SWAPH
(
SRC
), (
DST
), 
mem_vÆue
.
h
, (
FAULT
)), \

130 
mem_size
 = (
mem_vÆue
.
h
);

	)

131 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

132 
	`__WRITE_SPECMEM
(
	`MD_SWAPW
(
SRC
), (
DST
), 
mem_vÆue
.
w
, (
FAULT
)), \

133 
mem_size
 = (
mem_vÆue
.
w
);

	)

134 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

135 
	`__WRITE_SPECMEM
(
	`MD_SWAPQ
(
SRC
), (
DST
), 
mem_vÆue
.
q
, (
FAULT
)), \

136 
mem_size
 = (
mem_vÆue
.
q
);

	)

	@mase-mem.c

56 
	~"ma£.h
"

59 
ˇche_t
 *
	gˇche_û1
;

62 
ˇche_t
 *
	gˇche_û2
;

65 
ˇche_t
 *
	gˇche_dl1
;

68 
ˇche_t
 *
	gˇche_dl2
;

71 
ˇche_t
 *
	gôlb
;

74 
ˇche_t
 *
	gdéb
;

76 #ifde‡
TEST_CB


77 (*
cb_‚
Ë(
rid
, 
œt
Ë
NULL
;

78 
cb_rid
;

82 
mem_°©us


83 
	`ma£_ˇche_ac˚ss
(

84 
ˇche_t
 *
˝
,

85 
mem_cmd
 
cmd
,

86 
md_addr_t
 
addr
,

87 *
vp
,

88 
nbyãs
,

89 
tick_t
 
now
,

90 
byã_t
 **
ud©a
,

91 
md_addr_t
 *
ª∂_addr
,

92 (*
ˇŒback_‚
)

93 (
rid
, 
œt
),

94 
rid
,

95 *
œt
)

97 #ifde‡
TEST_CB


98 
øndom
 = 
	`ønd
() % 10;

100 *
œt
 = 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
vp
, 
nbyãs
, 
now
, 
ud©a
, 
ª∂_addr
);

102 i‡(
øndom
 =0Ë 
MEM_RETRY
;

103 i‡((
øndom
 =5Ë&& (
cb_‚
 =
NULL
Ë&& (
ˇŒback_‚
 != NULL)) {

104 
cb_‚
 = 
ˇŒback_‚
;

105 
cb_rid
 = 
rid
;

106  
MEM_UNKNOWN
;

109  
MEM_KNOWN
;

112 *
œt
 = 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
vp
, 
nbyãs
, 
now
, 
ud©a
, 
ª∂_addr
);

113  
MEM_KNOWN
;

116 
	}
}

118 #ifde‡
TEST_CB


121 
	$cb_ã°î
()

123 i‡(
cb_‚
 =
NULL
) ;

124 i‡(
	`ønd
() % 10 == 0) {

125 
	`cb_‚
(
cb_rid
, 5);

126 
cb_‚
 = 
NULL
;

128 
	}
}

133 
	$mem_ac˚ss_œãncy
(
blk_sz
)

135 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

137 
	`as£π
(
chunks
 > 0);

139  ( 
mem_œt
[0] +

140 –
mem_œt
[1] * (
chunks
 - 1)));

141 
	}
}

149 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

150 
md_addr_t
 
baddr
,

151 
bsize
,

152 
ˇche_blk_t
 *
blk
,

153 
tick_t
 
now
)

155 
œt
;

157 i‡(
ˇche_dl2
)

160 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

161  
now
, 
NULL
, NULL);

162 i‡(
cmd
 =
Ród
)

163  
œt
;

173 i‡(
cmd
 =
Ród
)

174  
	`mem_ac˚ss_œãncy
(
bsize
);

181 
	}
}

185 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

186 
md_addr_t
 
baddr
,

187 
bsize
,

188 
ˇche_blk_t
 *
blk
,

189 
tick_t
 
now
)

192 i‡(
cmd
 =
Ród
)

193  
	`mem_ac˚ss_œãncy
(
bsize
);

199 
	}
}

203 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

204 
md_addr_t
 
baddr
,

205 
bsize
,

206 
ˇche_blk_t
 *
blk
,

207 
tick_t
 
now
)

209 
œt
;

211 i‡(
ˇche_û2
)

214 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

215  
now
, 
NULL
, NULL);

216 i‡(
cmd
 =
Ród
)

217  
œt
;

219 
	`∑nic
("writesÅo instruction memoryÇot supported");

224 i‡(
cmd
 =
Ród
)

225  
	`mem_ac˚ss_œãncy
(
bsize
);

227 
	`∑nic
("writesÅo instruction memoryÇot supported");

229 
	}
}

233 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

234 
md_addr_t
 
baddr
,

235 
bsize
,

236 
ˇche_blk_t
 *
blk
,

237 
tick_t
 
now
)

240 i‡(
cmd
 =
Ród
)

241  
	`mem_ac˚ss_œãncy
(
bsize
);

243 
	`∑nic
("writesÅo instruction memoryÇot supported");

244 
	}
}

250 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

251 
md_addr_t
 
baddr
,

252 
bsize
,

253 
ˇche_blk_t
 *
blk
,

254 
tick_t
 
now
)

256 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

259 
	`as£π
(
phy_∑ge_±r
);

262 *
phy_∑ge_±r
 = 0;

265  
éb_miss_œt
;

266 
	}
}

270 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

271 
md_addr_t
 
baddr
,

272 
bsize
,

273 
ˇche_blk_t
 *
blk
,

274 
tick_t
 
now
)

276 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

279 
	`as£π
(
phy_∑ge_±r
);

282 *
phy_∑ge_±r
 = 0;

285  
éb_miss_œt
;

286 
	}
}

	@mase-mem.h

57 
	emem_°©us
 {

58 
	mMEM_RETRY
,

59 
	mMEM_KNOWN
,

60 
	mMEM_UNKNOWN


65 
ˇche_t
 *
ˇche_û1
;

68 
ˇche_t
 *
ˇche_û2
;

71 
ˇche_t
 *
ˇche_dl1
;

74 
ˇche_t
 *
ˇche_dl2
;

77 
ˇche_t
 *
ôlb
;

80 
ˇche_t
 *
déb
;

82 #ifde‡
TEST_CB


83 
cb_ã°î
();

87 
mem_°©us


88 
ma£_ˇche_ac˚ss
(

89 
ˇche_t
 *
˝
,

90 
mem_cmd
 
cmd
,

91 
md_addr_t
 
addr
,

92 *
vp
,

93 
nbyãs
,

94 
tick_t
 
now
,

95 
byã_t
 **
ud©a
,

96 
md_addr_t
 *
ª∂_addr
,

97 (*
ˇŒback_‚
)

98 (
rid
, 
œt
),

99 
rid
,

100 *
œt
);

104 
	`mem_ac˚ss_œãncy
(
blk_sz
);

110 
	`dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

111 
md_addr_t
 
baddr
,

112 
bsize
,

113 
ˇche_blk_t
 *
blk
,

114 
tick_t
 
now
);

118 
	`dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

119 
md_addr_t
 
baddr
,

120 
bsize
,

121 
ˇche_blk_t
 *
blk
,

122 
tick_t
 
now
);

126 
	`û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

127 
md_addr_t
 
baddr
,

128 
bsize
,

129 
ˇche_blk_t
 *
blk
,

130 
tick_t
 
now
);

134 
	`û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

135 
md_addr_t
 
baddr
,

136 
bsize
,

137 
ˇche_blk_t
 *
blk
,

138 
tick_t
 
now
);

144 
	`ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

145 
md_addr_t
 
baddr
,

146 
bsize
,

147 
ˇche_blk_t
 *
blk
,

148 
tick_t
 
now
);

152 
	`déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

153 
md_addr_t
 
baddr
,

154 
bsize
,

155 
ˇche_blk_t
 *
blk
,

156 
tick_t
 
now
);

	@mase-opts.c

56 
	~"ma£.h
"

63 
	gmax_ö°s
;

68 
	gÁ°fwd_cou¡
;

71 
	g±ø˚_√…
 = 0;

72 *
	g±ø˚_›ts
[2];

77 
	g„tch_•ìd
;

80 
	g„tch_mu…_löes
;

83 
	gmf_com∑t
;

88 
	gIFQ_size
;

91 
	gIFQ_dñay
;

96 *
	g¥ed_ty≥
;

99 
	g¥ed_≥r„˘
 = 
FALSE
;

102 
	gbimod_√…
 = 1;

103 
	gbimod_c⁄fig
[1] =

107 
	gtwﬁev_√…
 = 4;

108 
	gtwﬁev_c⁄fig
[4] =

109 { 1, 1024, 8, 
FALSE
};

112 
	gcomb_√…
 = 1;

113 
	gcomb_c⁄fig
[1] =

117 
	gøs_size
 = 8;

120 
	gbtb_√…
 = 2;

121 
	gbtb_c⁄fig
[2] =

125 *
	gb¥ed_•ec_›t
;

126 
b¥ed_upd©e_°age
 
	gb¥ed_•ec_upd©e
;

129 
	gªcovî_ö_shadow
 = 
TRUE
;

134 
	gdecode_width
;

137 
	gissue_width
;

140 
	gcommô_width
;

145 
	gö‹dî_issue
;

148 
	gö˛ude_•ec
 = 
TRUE
;

153 
	gROB_size
;

156 
	gRS_size
;

159 
	gscheduÀ_dñay
 = 0;

162 
	gscheduÀr_ª∂ay
 = 0;

168 
	gLSQ_size
 = 4;

171 
	g≥r„˘_dißmbig
 = 
FALSE
;

174 
	gu£_blöd_•ec
 = 
FALSE
;

179 *
	gˇche_dl1_›t
;

182 
	gˇche_dl1_œt
;

185 *
	gˇche_dl2_›t
;

188 
	gˇche_dl2_œt
;

191 *
	gˇche_û1_›t
;

194 
	gˇche_û1_œt
;

197 *
	gˇche_û2_›t
;

200 
	gˇche_û2_œt
;

203 
	gÊush_⁄_sysˇŒs
;

206 
	gcom¥ess_iˇche_addrs
;

211 
	gmem_√…
 = 2;

212 
	gmem_œt
[2] =

216 
	gmem_bus_width
;

221 *
	gôlb_›t
;

224 *
	gdéb_›t
;

227 
	géb_miss_œt
;

232 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

239 
ªs_desc
 
	gfu_c⁄fig
[] = {

242 { { 
I¡ALU
, 0, 0 } }

246 { { 
I¡MULT
, 0, 0 }, { 
I¡DIV
, 0, 0 } }

250 { { 
RdP‹t
, 0, 0 }, { 
WrP‹t
, 0, 0 } }

254 { { 
FlﬂtADD
, 0, 0 }, { 
FlﬂtCMP
, 0, 0 }, { 
FlﬂtCVT
, 0, 0 } }

258 { { 
FlﬂtMULT
, 0, 0 }, { 
FlﬂtDIV
, 0, 0 }, { 
FlﬂtSQRT
, 0, 0 } }

263 
	gªs_ülu
 = 4;

264 
	gªs_imu…
 = 1;

265 
	gªs_memp‹t
 = 2;

266 
	gªs_ÂÆu
 = 4;

267 
	gªs_Âmu…
 = 1;

270 
	gªs_ülu_›œt
 = 1;

271 
	gªs_ülu_i¶©
 = 1;

272 
	gªs_imul_›œt
 = 7;

273 
	gªs_imul_i¶©
 = 1;

274 
	gªs_idiv_›œt
 = 12;

275 
	gªs_idiv_i¶©
 = 9;

276 
	gªs_ªad_›œt
 = 1;

277 
	gªs_ªad_i¶©
 = 1;

278 
	gªs_wrôe_›œt
 = 1;

279 
	gªs_wrôe_i¶©
 = 1;

280 
	gªs_Ádd_›œt
 = 4;

281 
	gªs_Ádd_i¶©
 = 1;

282 
	gªs_fcmp_›œt
 = 4;

283 
	gªs_fcmp_i¶©
 = 1;

284 
	gªs_fcvt_›œt
 = 3;

285 
	gªs_fcvt_i¶©
 = 1;

286 
	gªs_fmul_›œt
 = 4;

287 
	gªs_fmul_i¶©
 = 1;

288 
	gªs_fdiv_›œt
 = 12;

289 
	gªs_fdiv_i¶©
 = 9;

290 
	gªs_fsqπ_›œt
 = 18;

291 
	gªs_fsqπ_i¶©
 = 15;

296 
	göje˘_îr‹s
 = 
FALSE
;

299 
	g¥öt_chk_îr
 = 
FALSE
;

302 
	g°›_⁄_chk_îr
 = 
FALSE
;

305 
	gchk_thªshﬁd
 = 1.0;

312 
cou¡î_t
 
	gsim_¶ù
 = 0;

319 
cou¡î_t
 
	gsim_‹a˛e_ö¢
 = 0;

322 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

325 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

328 
cou¡î_t
 
	gsim_num_bønches
 = 0;

331 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

334 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

337 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

340 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

349 
tick_t
 
	gsim_cy˛e
 = 0;

353 
cou¡î_t
 
	gIFQ_cou¡
;

354 
cou¡î_t
 
	gIFQ_fcou¡
;

355 
cou¡î_t
 
	gISQ_cou¡
;

356 
cou¡î_t
 
	gISQ_fcou¡
;

357 
cou¡î_t
 
	gRS_cou¡
;

358 
cou¡î_t
 
	gRS_fcou¡
;

359 
cou¡î_t
 
	gROB_cou¡
;

360 
cou¡î_t
 
	gROB_fcou¡
;

361 
cou¡î_t
 
	gLSQ_cou¡
;

362 
cou¡î_t
 
	gLSQ_fcou¡
;

367 
cou¡î_t
 
	gtimög_dï_ö¢
 = 0;

370 
cou¡î_t
 
	gcheckî_îr‹s
 = 0;

373 
cou¡î_t
 
	gnum_ª∂ays
 = 0;

378 
cou¡î_t
 
	gmis„tch_cou¡
 = 0;

379 
cou¡î_t
 
	gmis„tch_⁄ly_cou¡
 = 0;

380 
cou¡î_t
 
	gªcovîy_cou¡
 = 0;

384 
cou¡î_t
 
	gblöd_•ec_Êushes
 = 0;

385 
cou¡î_t
 
	gblöd_•ec_Æl_Êushes
 = 0;

388 
°©_°©_t
 *
	g„tch_°Æl
 = 
NULL
;

389 *
	g„tch_°Æl_°r
[
„tch_NUM
] = {

401 
°©_°©_t
 *
	gdp_°Æl
 = 
NULL
;

402 *
	gdp_°Æl_°r
[
dp_NUM
] = {

413 
	gpc°©_√…
 = 0;

414 
	g•ec_pc°©_√…
 = 0;

415 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

416 *
	g•ec_pc°©_v¨s
[
MAX_PCSTAT_VARS
];

417 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

418 
°©_°©_t
 *
	g•ec_pc°©_°©s
[
MAX_PCSTAT_VARS
];

419 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

420 
cou¡î_t
 
	g•ec_pc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

421 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

422 
°©_°©_t
 *
	g•ec_pc°©_sdi°s
[
MAX_PCSTAT_VARS
];

426 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

428 
	`›t_ªg_hódî
(
odb
, "sim-mase: A detailed micro-architectural simulationÉnvironment.\n");

432 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

433 &
max_ö°s
, 0,

434  
TRUE
, 
NULL
);

438 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅiming starts",

439 &
Á°fwd_cou¡
, 0,

440  
TRUE
, 
NULL
);

442 
	`›t_ªg_°rög_li°
(
odb
, "-ptrace",

444 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

445  
FALSE
, 
NULL
, FALSE);

449 
	`›t_ªg_öt
(
odb
, "-fetch:speed",

451 &
„tch_•ìd
, 1,

452  
TRUE
, 
NULL
);

454 
	`›t_ªg_Êag
(
odb
, "-fetch:mult_lines",

456 &
„tch_mu…_löes
, 
FALSE
,

457  
TRUE
, 
NULL
);

459 
	`›t_ªg_Êag
(
odb
, "-fetch:mf_compat",

461 &
mf_com∑t
, 
FALSE
,

462  
TRUE
, 
NULL
);

466 
	`›t_ªg_öt
(
odb
, "-ifq:size", "instruction fetch queue size (in insts)",

467 &
IFQ_size
, 16,

468  
TRUE
, 
NULL
);

470 
	`›t_ªg_öt
(
odb
, "-ifq:delay", "instruction fetch queue delay (in cycles)",

471 &
IFQ_dñay
, 3,

472  
TRUE
, 
NULL
);

476 
	`›t_ªg_°rög
(
odb
, "-bpred",

478 &
¥ed_ty≥
, "bimod",

479  
TRUE
, 
NULL
);

481 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

483 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

484  
bimod_c⁄fig
,

485  
TRUE
, 
NULL
, 
FALSE
);

487 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

490 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

491  
twﬁev_c⁄fig
,

492  
TRUE
, 
NULL
, 
FALSE
);

494 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

496 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

497  
comb_c⁄fig
,

498  
TRUE
, 
NULL
, 
FALSE
);

500 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

502 &
øs_size
,Ñas_size,

503  
TRUE
, 
NULL
);

505 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

507 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

508  
btb_c⁄fig
,

509  
TRUE
, 
NULL
, 
FALSE
);

511 
	`›t_ªg_°rög
(
odb
, "-bpred:spec_update",

513 &
b¥ed_•ec_›t
, 
NULL
,

514  
TRUE
, 
NULL
);

516 
	`›t_ªg_Êag
(
odb
, "-bpred:rcvr_shadow",

518 &
ªcovî_ö_shadow
, 
TRUE
, TRUE, 
NULL
);

522 
	`›t_ªg_öt
(
odb
, "-decode:width",

524 &
decode_width
, 4,

525  
TRUE
, 
NULL
);

529 
	`›t_ªg_öt
(
odb
, "-issue:width",

531 &
issue_width
, 4,

532  
TRUE
, 
NULL
);

534 
	`›t_ªg_Êag
(
odb
, "-issue:inorder", "runÖipeline with in-order issue",

535 &
ö‹dî_issue
, 
FALSE
,

536  
TRUE
, 
NULL
);

538 
	`›t_ªg_Êag
(
odb
, "-issue:wrongpath",

540 &
ö˛ude_•ec
, 
TRUE
,

541  
TRUE
, 
NULL
);

543 
	`›t_ªg_öt
(
odb
, "-commit:width",

545 &
commô_width
, 4,

546  
TRUE
, 
NULL
);

550 
	`›t_ªg_öt
(
odb
, "-rob:size",

552 &
ROB_size
, 16,

553  
TRUE
, 
NULL
);

555 
	`›t_ªg_öt
(
odb
, "-rs:size",

557 &
RS_size
, 
ROB_size
,

558  
TRUE
, 
NULL
);

560 
	`›t_ªg_öt
(
odb
, "-scheduler:delay",

562 &
scheduÀ_dñay
, 0,

563  
TRUE
, 
NULL
);

565 
	`›t_ªg_Êag
(
odb
, "-scheduler:replay",

567 &
scheduÀr_ª∂ay
, 
FALSE
, 
TRUE
, 
NULL
);

572 
	`›t_ªg_öt
(
odb
, "-lsq:size",

574 &
LSQ_size
, 8,

575  
TRUE
, 
NULL
);

577 
	`›t_ªg_Êag
(
odb
, "-lsq:perfect",

579 &
≥r„˘_dißmbig
, 
FALSE
, 
TRUE
, 
NULL
);

581 
	`›t_ªg_Êag
(
odb
, "-lsq:blind", "use blind speculation forÜoads",

582 &
u£_blöd_•ec
, 
FALSE
,

583  
TRUE
, 
NULL
);

587 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

589 &
ˇche_dl1_›t
, "dl1:128:32:4:l",

590  
TRUE
, 
NULL
);

592 
	`›t_ªg_öt
(
odb
, "-cache:dl1lat",

594 &
ˇche_dl1_œt
, 1,

595  
TRUE
, 
NULL
);

597 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

599 &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

600  
TRUE
, 
NULL
);

602 
	`›t_ªg_öt
(
odb
, "-cache:dl2lat",

604 &
ˇche_dl2_œt
, 6,

605  
TRUE
, 
NULL
);

607 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

609 &
ˇche_û1_›t
, "il1:512:32:1:l",

610  
TRUE
, 
NULL
);

612 
	`›t_ªg_öt
(
odb
, "-cache:il1lat",

614 &
ˇche_û1_œt
, 1,

615  
TRUE
, 
NULL
);

617 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

619 &
ˇche_û2_›t
, "dl2",

620  
TRUE
, 
NULL
);

622 
	`›t_ªg_öt
(
odb
, "-cache:il2lat",

624 &
ˇche_û2_œt
, 6,

625  
TRUE
, 
NULL
);

627 
	`›t_ªg_Êag
(
odb
, "-cache:flush", "flush caches on system calls",

628 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

630 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

632 &
com¥ess_iˇche_addrs
, 
FALSE
,

633  
TRUE
, 
NULL
);

637 
	`›t_ªg_öt_li°
(
odb
, "-mem:lat",

639 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

640  
TRUE
, 
NULL
, 
FALSE
);

642 
	`›t_ªg_öt
(
odb
, "-mem:width", "memoryáccess bus width (in bytes)",

643 &
mem_bus_width
, 8,

644  
TRUE
, 
NULL
);

648 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

650 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

652 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

654 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

656 
	`›t_ªg_öt
(
odb
, "-tlb:lat",

658 &
éb_miss_œt
, 30,

659  
TRUE
, 
NULL
);

663 
	`›t_ªg_öt
(
odb
, "-res:ialu",

665 &
ªs_ülu
,Ñes_ialu,

666  
TRUE
, 
NULL
);

668 
	`›t_ªg_öt
(
odb
, "-res:imult",

670 &
ªs_imu…
,Ñes_imult,

671  
TRUE
, 
NULL
);

673 
	`›t_ªg_öt
(
odb
, "-res:memport",

675 &
ªs_memp‹t
,Ñes_memport,

676  
TRUE
, 
NULL
);

678 
	`›t_ªg_öt
(
odb
, "-res:fpalu",

680 &
ªs_ÂÆu
,Ñes_fpalu,

681  
TRUE
, 
NULL
);

683 
	`›t_ªg_öt
(
odb
, "-res:fpmult",

685 &
ªs_Âmu…
,Ñes_fpmult,

686  
TRUE
, 
NULL
);

688 
	`›t_ªg_öt
(
odb
, "-res:ialu_oplat",

690 &
ªs_ülu_›œt
,Ñes_ialu_oplat,

691  
TRUE
, 
NULL
);

693 
	`›t_ªg_öt
(
odb
, "-res:ialu_islat",

695 &
ªs_ülu_i¶©
,Ñes_ialu_islat,

696  
TRUE
, 
NULL
);

698 
	`›t_ªg_öt
(
odb
, "-res:imul_oplat",

700 &
ªs_imul_›œt
,Ñes_imul_oplat,

701  
TRUE
, 
NULL
);

703 
	`›t_ªg_öt
(
odb
, "-res:imul_islat",

705 &
ªs_imul_i¶©
,Ñes_imul_islat,

706  
TRUE
, 
NULL
);

708 
	`›t_ªg_öt
(
odb
, "-res:idiv_oplat",

710 &
ªs_idiv_›œt
,Ñes_idiv_oplat,

711  
TRUE
, 
NULL
);

713 
	`›t_ªg_öt
(
odb
, "-res:idiv_islat",

715 &
ªs_idiv_i¶©
,Ñes_idiv_islat,

716  
TRUE
, 
NULL
);

718 
	`›t_ªg_öt
(
odb
, "-res:read_oplat",

720 &
ªs_ªad_›œt
,Ñes_read_oplat,

721  
TRUE
, 
NULL
);

723 
	`›t_ªg_öt
(
odb
, "-res:read_islat",

725 &
ªs_ªad_i¶©
,Ñes_read_islat,

726  
TRUE
, 
NULL
);

728 
	`›t_ªg_öt
(
odb
, "-res:write_oplat",

730 &
ªs_wrôe_›œt
,Ñes_write_oplat,

731  
TRUE
, 
NULL
);

733 
	`›t_ªg_öt
(
odb
, "-res:write_islat",

735 &
ªs_wrôe_i¶©
,Ñes_write_islat,

736  
TRUE
, 
NULL
);

738 
	`›t_ªg_öt
(
odb
, "-res:fadd_oplat",

740 &
ªs_Ádd_›œt
,Ñes_fadd_oplat,

741  
TRUE
, 
NULL
);

743 
	`›t_ªg_öt
(
odb
, "-res:fadd_islat",

745 &
ªs_Ádd_i¶©
,Ñes_fadd_islat,

746  
TRUE
, 
NULL
);

748 
	`›t_ªg_öt
(
odb
, "-res:fcmp_oplat",

750 &
ªs_fcmp_›œt
,Ñes_fcmp_oplat,

751  
TRUE
, 
NULL
);

753 
	`›t_ªg_öt
(
odb
, "-res:fcmp_islat",

755 &
ªs_fcmp_i¶©
,Ñes_fcmp_islat,

756  
TRUE
, 
NULL
);

758 
	`›t_ªg_öt
(
odb
, "-res:fcvt_oplat",

760 &
ªs_fcvt_›œt
,Ñes_fcvt_oplat,

761  
TRUE
, 
NULL
);

763 
	`›t_ªg_öt
(
odb
, "-res:fcvt_islat",

765 &
ªs_fcvt_i¶©
,Ñes_fcvt_islat,

766  
TRUE
, 
NULL
);

768 
	`›t_ªg_öt
(
odb
, "-res:fmul_oplat",

770 &
ªs_fmul_›œt
,Ñes_fmul_oplat,

771  
TRUE
, 
NULL
);

773 
	`›t_ªg_öt
(
odb
, "-res:fmul_islat",

775 &
ªs_fmul_i¶©
,Ñes_fmul_islat,

776  
TRUE
, 
NULL
);

778 
	`›t_ªg_öt
(
odb
, "-res:fdiv_oplat",

780 &
ªs_fdiv_›œt
,Ñes_fdiv_oplat,

781  
TRUE
, 
NULL
);

783 
	`›t_ªg_öt
(
odb
, "-res:fdiv_islat",

785 &
ªs_fdiv_i¶©
,Ñes_fdiv_islat,

786  
TRUE
, 
NULL
);

788 
	`›t_ªg_öt
(
odb
, "-res:fsqrt_oplat",

790 &
ªs_fsqπ_›œt
,Ñes_fsqrt_oplat,

791  
TRUE
, 
NULL
);

793 
	`›t_ªg_öt
(
odb
, "-res:fsqrt_islat",

795 &
ªs_fsqπ_i¶©
,Ñes_fsqrt_islat,

796  
TRUE
, 
NULL
);

800 
	`›t_ªg_Êag
(
odb
, "-chk:inject_err",

802 &
öje˘_îr‹s
, 
FALSE
, 
TRUE
, 
NULL
);

804 
	`›t_ªg_Êag
(
odb
, "-chk:print_err",

806 &
¥öt_chk_îr
, 
FALSE
, 
TRUE
, 
NULL
);

808 
	`›t_ªg_Êag
(
odb
, "-chk:stop_on_err",

810 &
°›_⁄_chk_îr
, 
FALSE
, 
TRUE
, 
NULL
);

812 
	`›t_ªg_Êﬂt
(
odb
, "-chk:threshold",

814 &
chk_thªshﬁd
, chk_threshold,

815  
TRUE
, 
NULL
);

819 
	`›t_ªg_°rög_li°
(
odb
, "-spec_pcstat",

821 
•ec_pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
•ec_pc°©_√…
, 
NULL
,

822  
FALSE
, 
NULL
, 
TRUE
);

824 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

826 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

827  
FALSE
, 
NULL
, 
TRUE
);

828 
	}
}

832 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

833 
¨gc
, **
¨gv
)

835 
«me
[128], 
c
;

836 
n£ts
, 
bsize
, 
assoc
;

838 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

839 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

841 i‡(
IFQ_size
 < 1)

842 
	`Áèl
("inst fetch queue size must beÖositive > 0");

844 i‡(
„tch_•ìd
 < 1)

845 
	`Áèl
("front-end speed must beÖositiveándÇon-zero");

847 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "perfect"))

850 
¥ed
 = 
NULL
;

851 
¥ed_≥r„˘
 = 
TRUE
;

853 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

856 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

858 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

861 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

863 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

866 i‡(
bimod_√…
 != 1)

867 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

868 i‡(
btb_√…
 != 2)

869 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

872 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

873  
bimod_c⁄fig
[0],

879  
btb_c⁄fig
[0],

880  
btb_c⁄fig
[1],

881  
øs_size
);

883 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

886 i‡(
twﬁev_√…
 != 4)

887 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

888 i‡(
btb_√…
 != 2)

889 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

891 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

893  
twﬁev_c⁄fig
[0],

894  
twﬁev_c⁄fig
[1],

896  
twﬁev_c⁄fig
[2],

897  
twﬁev_c⁄fig
[3],

898  
btb_c⁄fig
[0],

899  
btb_c⁄fig
[1],

900  
øs_size
);

902 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

905 i‡(
twﬁev_√…
 != 4)

906 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

907 i‡(
bimod_√…
 != 1)

908 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

909 i‡(
comb_√…
 != 1)

910 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

911 i‡(
btb_√…
 != 2)

912 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

914 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

915  
bimod_c⁄fig
[0],

916  
twﬁev_c⁄fig
[0],

917  
twﬁev_c⁄fig
[1],

918  
comb_c⁄fig
[0],

919  
twﬁev_c⁄fig
[2],

920  
twﬁev_c⁄fig
[3],

921  
btb_c⁄fig
[0],

922  
btb_c⁄fig
[1],

923  
øs_size
);

926 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

928 i‡(!
b¥ed_•ec_›t
)

929 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

930 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "ID"))

931 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

932 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "WB"))

933 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

935 
	`Áèl
("bad speculative update stage specifier, use {ID|WB}");

937 i‡(
decode_width
 < 1)

938 
	`Áèl
("decode width must beÖositiveÇon-zeroándáÖower ofÅwo");

940 i‡(
issue_width
 < 1)

941 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

943 i‡(
commô_width
 < 1)

944 
	`Áèl
("commit width must beÖositiveÇon-zero");

946 i‡(
ROB_size
 < 2)

947 
	`Áèl
("ROB size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

949 i‡(
LSQ_size
 < 2)

950 
	`Áèl
("LSQ size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

953 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

955 
ˇche_dl1
 = 
NULL
;

958 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

959 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

960 
ˇche_dl2
 = 
NULL
;

964 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

965 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

966 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

967 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

968  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

969 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
);

972 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

973 
ˇche_dl2
 = 
NULL
;

976 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

977 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

978 
	`Áèl
("badÜ2 D-cacheÖarms: "

980 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

981  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

982 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
);

987 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

989 
ˇche_û1
 = 
NULL
;

992 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

993 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

994 
ˇche_û2
 = 
NULL
;

996 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

998 i‡(!
ˇche_dl1
)

999 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

1000 
ˇche_û1
 = 
ˇche_dl1
;

1003 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1004 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1005 
ˇche_û2
 = 
NULL
;

1007 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

1009 i‡(!
ˇche_dl2
)

1010 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

1011 
ˇche_û1
 = 
ˇche_dl2
;

1014 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1015 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1016 
ˇche_û2
 = 
NULL
;

1020 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

1021 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1022 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1023 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1024  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1025 
û1_ac˚ss_‚
, 
ˇche_û1_œt
);

1028 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

1029 
ˇche_û2
 = 
NULL
;

1030 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

1032 i‡(!
ˇche_dl2
)

1033 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

1034 
ˇche_û2
 = 
ˇche_dl2
;

1038 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

1039 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1040 
	`Áèl
("badÜ2 I-cacheÖarms: "

1042 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1043  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1044 
û2_ac˚ss_‚
, 
ˇche_û2_œt
);

1049 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

1050 
ôlb
 = 
NULL
;

1053 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

1054 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1055 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1056 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1057  (
md_addr_t
), 
assoc
,

1058 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

1063 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

1064 
déb
 = 
NULL
;

1067 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

1068 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1069 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1070 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1071  (
md_addr_t
), 
assoc
,

1072 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

1076 i‡(
ˇche_dl1_œt
 < 1)

1077 
	`Áèl
("l1 data cacheÜatency must be greaterÅhan zero");

1078 i‡(
ˇche_dl1
)

1079 
	`ªs_upd©e_›œt
(
fu_c⁄fig
, 
FU_NUM_INDICES
, 
RdP‹t
, 
ˇche_dl1_œt
);

1081 i‡(
ˇche_dl2_œt
 < 1)

1082 
	`Áèl
("l2 data cacheÜatency must be greaterÅhan zero");

1084 i‡(
ˇche_û1_œt
 < 1)

1085 
	`Áèl
("l1 instruction cacheÜatency must be greaterÅhan zero");

1087 i‡(
ˇche_û2_œt
 < 1)

1088 
	`Áèl
("l2 instruction cacheÜatency must be greaterÅhan zero");

1090 i‡(
mem_√…
 != 2)

1091 
	`Áèl
("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

1093 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

1094 
	`Áèl
("all memoryáccessÜatencies must be greaterÅhan zero");

1096 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width-1)) != 0)

1097 
	`Áèl
("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

1099 i‡(
éb_miss_œt
 < 1)

1100 
	`Áèl
("TLB missÜatency must be greaterÅhan zero");

1102 i‡(
ªs_ülu
 < 1)

1103 
	`Áèl
("number of integer ALU's must be greaterÅhan zero");

1104 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

1105 
	`Áèl
("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

1106 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

1108 i‡(
ªs_imu…
 < 1)

1109 
	`Áèl
("number of integer multiplier/dividers must be greaterÅhan zero");

1110 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

1111 
	`Áèl
("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

1112 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

1114 i‡(
ªs_memp‹t
 < 1)

1115 
	`Áèl
("number of memory systemÖorts must be greaterÅhan zero");

1116 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

1117 
	`Áèl
("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

1118 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

1120 i‡(
ªs_ÂÆu
 < 1)

1121 
	`Áèl
("number of floatingÖoint ALU's must be greaterÅhan zero");

1122 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

1123 
	`Áèl
("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

1124 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

1126 i‡(
ªs_Âmu…
 < 1)

1127 
	`Áèl
("number of floatingÖoint multiplier/dividers must be > zero");

1128 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

1129 
	`Áèl
("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

1130 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

1133 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡ALU
, 
ªs_ülu_›œt
);

1134 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡ALU
, 
ªs_ülu_i¶©
);

1135 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡MULT
, 
ªs_imul_›œt
);

1136 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡MULT
, 
ªs_imul_i¶©
);

1137 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡DIV
, 
ªs_idiv_›œt
);

1138 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
I¡DIV
, 
ªs_idiv_i¶©
);

1139 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
RdP‹t
, 
ªs_ªad_›œt
);

1140 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
RdP‹t
, 
ªs_ªad_i¶©
);

1141 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
WrP‹t
, 
ªs_wrôe_›œt
);

1142 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
WrP‹t
, 
ªs_wrôe_i¶©
);

1143 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtADD
, 
ªs_Ádd_›œt
);

1144 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtADD
, 
ªs_Ádd_i¶©
);

1145 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtCMP
, 
ªs_fcmp_›œt
);

1146 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtCMP
, 
ªs_fcmp_i¶©
);

1147 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtCVT
, 
ªs_fcvt_›œt
);

1148 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtCVT
, 
ªs_fcvt_i¶©
);

1149 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtMULT
, 
ªs_fmul_›œt
);

1150 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtMULT
, 
ªs_fmul_i¶©
);

1151 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtDIV
, 
ªs_fdiv_›œt
);

1152 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtDIV
, 
ªs_fdiv_i¶©
);

1153 
	`ªs_upd©e_›œt
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtSQRT
, 
ªs_fsqπ_›œt
);

1154 
	`ªs_upd©e_issuñ©
–
fu_c⁄fig
, 
FU_NUM_INDICES
, 
FlﬂtSQRT
, 
ªs_fsqπ_i¶©
);

1155 
	}
}

1159 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

1162 
	}
}

1166 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

1168 
i
;

1172 
	`°©_ªg_cou¡î
(
sdb
, "sim_slip",

1174 &
sim_¶ù
, 0, 
NULL
);

1175 
	`°©_ªg_f‹muœ
(
sdb
, "avg_sim_slip",

1177 "sim_¶ù / sim_num_ö¢", 
NULL
);

1181 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

1183 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

1184 
	`°©_ªg_cou¡î
(
sdb
, "sim_oracle_insn",

1186 &
sim_‹a˛e_ö¢
, 0, 
NULL
);

1187 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

1189 &
sim_num_ªfs
, 0, 
NULL
);

1190 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_loads",

1192 &
sim_num_lﬂds
, 0, 
NULL
);

1193 
	`°©_ªg_f‹muœ
(
sdb
, "sim_num_stores",

1195 "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

1196 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

1198 &
sim_num_bønches
, 0, 
NULL
);

1200 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_insn",

1202 &
sim_tŸÆ_ö¢
, 0, 
NULL
);

1203 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_refs",

1205 &
sim_tŸÆ_ªfs
, 0, 
NULL
);

1206 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_loads",

1208 &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

1209 
	`°©_ªg_f‹muœ
(
sdb
, "sim_total_stores",

1211 "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

1212 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_branches",

1214 &
sim_tŸÆ_bønches
, 0, 
NULL
);

1218 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

1220 &
sim_ñ≠£d_time
, 0, 
NULL
);

1221 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

1223 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

1227 
	`°©_ªg_cou¡î
(
sdb
, "sim_cycle",

1229 &
sim_cy˛e
, 0, 
NULL
);

1230 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPC",

1232 "sim_num_ö¢ / sim_cy˛e", 
NULL
);

1233 
	`°©_ªg_f‹muœ
(
sdb
, "sim_CPI",

1235 "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

1236 
	`°©_ªg_f‹muœ
(
sdb
, "sim_exec_BW",

1238 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1239 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

1241 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

1245 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_count", "cumulative IFQ occupancy",

1246 &
IFQ_cou¡
, 0, 
NULL
);

1247 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_fcount", "cumulative IFQ full count",

1248 &
IFQ_fcou¡
, 0, 
NULL
);

1249 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_occupancy", "avg IFQ occupancy (insn's)",

1250 "IFQ_cou¡ / sim_cy˛e", 
NULL
);

1251 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_rate", "avg IFQ dispatchÑate (insn/cycle)",

1252 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1253 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_latency", "avg IFQ occupantÜatency (cycle's)",

1254 "ifq_occu∑ncy / ifq_øã", 
NULL
);

1255 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_full", "fraction ofÅime (cycle's) IFQ was full",

1256 "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

1258 
	`°©_ªg_cou¡î
(
sdb
, "ISQ_count", "cumulative ISQ occupancy",

1259 &
ISQ_cou¡
, 0, 
NULL
);

1260 
	`°©_ªg_cou¡î
(
sdb
, "ISQ_fcount", "cumulative ISQ full count",

1261 &
ISQ_fcou¡
, 0, 
NULL
);

1262 
	`°©_ªg_f‹muœ
(
sdb
, "isq_occupancy", "avg ISQ occupancy (insn's)",

1263 "ISQ_cou¡ / sim_cy˛e", 
NULL
);

1264 
	`°©_ªg_f‹muœ
(
sdb
, "isq_rate", "avg ISQ dispatchÑate (insn/cycle)",

1265 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1266 
	`°©_ªg_f‹muœ
(
sdb
, "isq_latency", "avg ISQ occupantÜatency (cycle's)",

1267 "isq_occu∑ncy / isq_øã", 
NULL
);

1268 
	`°©_ªg_f‹muœ
(
sdb
, "isq_full", "fraction ofÅime (cycle's) ISQ was full",

1269 "ISQ_fcou¡ / sim_cy˛e", 
NULL
);

1271 
	`°©_ªg_cou¡î
(
sdb
, "RS_count", "cumulative RS occupancy",

1272 &
RS_cou¡
, 0, 
NULL
);

1273 
	`°©_ªg_cou¡î
(
sdb
, "RS_fcount", "cumulative RS full count",

1274 &
RS_fcou¡
, 0, 
NULL
);

1275 
	`°©_ªg_f‹muœ
(
sdb
, "rs_occupancy", "avg RS occupancy (insn's)",

1276 "RS_cou¡ / sim_cy˛e", 
NULL
);

1277 
	`°©_ªg_f‹muœ
(
sdb
, "rs_rate", "avg RS dispatchÑate (insn/cycle)",

1278 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1279 
	`°©_ªg_f‹muœ
(
sdb
, "rs_latency", "avg RS occupantÜatency (cycle's)",

1280 "rs_occu∑ncy /Ñs_øã", 
NULL
);

1281 
	`°©_ªg_f‹muœ
(
sdb
, "rs_full", "fraction ofÅime (cycle's) RS was full",

1282 "RS_fcou¡ / sim_cy˛e", 
NULL
);

1284 
	`°©_ªg_cou¡î
(
sdb
, "ROB_count", "cumulative ROB occupancy",

1285 &
ROB_cou¡
, 0, 
NULL
);

1286 
	`°©_ªg_cou¡î
(
sdb
, "ROB_fcount", "cumulative ROB full count",

1287 &
ROB_fcou¡
, 0, 
NULL
);

1288 
	`°©_ªg_f‹muœ
(
sdb
, "rob_occupancy", "avg ROB occupancy (insn's)",

1289 "ROB_cou¡ / sim_cy˛e", 
NULL
);

1290 
	`°©_ªg_f‹muœ
(
sdb
, "rob_rate", "avg ROB dispatchÑate (insn/cycle)",

1291 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1292 
	`°©_ªg_f‹muœ
(
sdb
, "rob_latency", "avg ROB occupantÜatency (cycle's)",

1293 "rob_occu∑ncy /Ñob_øã", 
NULL
);

1294 
	`°©_ªg_f‹muœ
(
sdb
, "rob_full", "fraction ofÅime (cycle's) ROB was full",

1295 "ROB_fcou¡ / sim_cy˛e", 
NULL
);

1297 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_count", "cumulative LSQ occupancy",

1298 &
LSQ_cou¡
, 0, 
NULL
);

1299 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_fcount", "cumulative LSQ full count",

1300 &
LSQ_fcou¡
, 0, 
NULL
);

1301 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_occupancy", "avg LSQ occupancy (insn's)",

1302 "LSQ_cou¡ / sim_cy˛e", 
NULL
);

1303 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_rate", "avg LSQ dispatchÑate (insn/cycle)",

1304 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1305 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_latency", "avg LSQ occupantÜatency (cycle's)",

1306 "lsq_occu∑ncy /Üsq_øã", 
NULL
);

1307 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_full", "fraction ofÅime (cycle's) LSQ was full",

1308 "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

1312 
	`°©_ªg_cou¡î
(
sdb
, "timing_dep_insn", "timing dependent instructions",

1313 &
timög_dï_ö¢
, 0, 
NULL
);

1314 
	`°©_ªg_cou¡î
(
sdb
, "checker_errors", "checkerÉrrors",

1315 &
checkî_îr‹s
, 0, 
NULL
);

1320 
	`°©_ªg_cou¡î
(
sdb
, "num_replays", "schedulerÑeplays",

1321 &
num_ª∂ays
, 0, 
NULL
);

1326 
	`°©_ªg_cou¡î
(
sdb
, "misfetch_count", "misfetch count",

1327 &
mis„tch_cou¡
, 0, 
NULL
);

1328 
	`°©_ªg_cou¡î
(
sdb
, "misfetch_only_count", "misfetch only count",

1329 &
mis„tch_⁄ly_cou¡
, 0, 
NULL
);

1330 
	`°©_ªg_cou¡î
(
sdb
, "recovery_count", "recovery count",

1331 &
ªcovîy_cou¡
, 0, 
NULL
);

1332 i‡(
¥ed
Ë
	`b¥ed_ªg_°©s
’ªd, 
sdb
);

1336 
	`°©_ªg_cou¡î
(
sdb
, "blind_spec_flushes", "blind spec flushes (non-spec instrs only)",

1337 &
blöd_•ec_Êushes
, 0, 
NULL
);

1338 
	`°©_ªg_cou¡î
(
sdb
, "blind_spec_all_flushes", "blind spec flushes (all instructions)",

1339 &
blöd_•ec_Æl_Êushes
, 0, 
NULL
);

1343 i‡(
ˇche_û1
 && (ˇche_û1 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

1344 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

1345 i‡(
ˇche_û2
 && (ˇche_û2 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

1346 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

1347 i‡(
ˇche_dl1
Ë
	`ˇche_ªg_°©s
(ˇche_dl1, 
sdb
);

1348 i‡(
ˇche_dl2
Ë
	`ˇche_ªg_°©s
(ˇche_dl2, 
sdb
);

1352 i‡(
ôlb
Ë
	`ˇche_ªg_°©s
(ôlb, 
sdb
);

1353 i‡(
déb
Ë
	`ˇche_ªg_°©s
(déb, 
sdb
);

1357 
	`mem_ªg_°©s
(
mem
, 
sdb
);

1361 
	`ld_ªg_°©s
(
sdb
);

1365 
„tch_°Æl
 = 
	`°©_ªg_di°
(
sdb
, "fetch_stall",

1368  
„tch_NUM
,

1370  (
PF_COUNT
|
PF_PDF
),

1371  
NULL
,

1372  
„tch_°Æl_°r
,

1373  
NULL
);

1377 
dp_°Æl
 = 
	`°©_ªg_di°
(
sdb
, "dp_stall",

1380  
dp_NUM
,

1382  (
PF_COUNT
|
PF_PDF
),

1383  
NULL
,

1384  
dp_°Æl_°r
,

1385  
NULL
);

1389 
i
=0; i<
•ec_pc°©_√…
; i++) {

1391 
buf
[512], 
buf1
[512];

1392 
°©_°©_t
 *
°©
;

1397 
°©
 = 
	`°©_föd_°©
(
sdb
, 
•ec_pc°©_v¨s
[
i
]);

1398 i‡(!
°©
)

1399 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
•ec_pc°©_v¨s
[
i
]);

1402 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

1403 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

1404 
°©
->
«me
);

1407 
•ec_pc°©_°©s
[
i
] = 
°©
;

1408 
•ec_pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

1411 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

1412 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

1413 
•ec_pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

1415  (
PF_COUNT
|
PF_PDF
),

1417  
NULL
);

1420 
i
=0; i<
pc°©_√…
; i++) {

1422 
buf
[512], 
buf1
[512];

1423 
°©_°©_t
 *
°©
;

1428 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

1429 i‡(!
°©
)

1430 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

1433 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

1434 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

1435 
°©
->
«me
);

1438 
pc°©_°©s
[
i
] = 
°©
;

1439 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

1442 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

1443 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

1444 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

1446  (
PF_COUNT
|
PF_PDF
),

1448  
NULL
);

1450 
	}
}

1454 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

1457 
	}
}

	@mase-opts.h

61 
max_ö°s
;

66 
Á°fwd_cou¡
;

69 
±ø˚_√…
;

70 *
±ø˚_›ts
[2];

75 
„tch_•ìd
;

78 
„tch_mu…_löes
;

81 
mf_com∑t
;

86 
IFQ_size
;

89 
IFQ_dñay
;

94 *
¥ed_ty≥
;

97 
¥ed_≥r„˘
;

100 
bimod_√…
;

101 
bimod_c⁄fig
[1];

104 
twﬁev_√…
;

105 
twﬁev_c⁄fig
[4];

108 
comb_√…
;

109 
comb_c⁄fig
[1];

112 
øs_size
;

115 
btb_√…
;

116 
btb_c⁄fig
[2];

119 
	eb¥ed_upd©e_°age
 { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 };

120 *
b¥ed_•ec_›t
;

121 
b¥ed_upd©e_°age
 
b¥ed_•ec_upd©e
;

124 
ªcovî_ö_shadow
;

129 
decode_width
;

132 
issue_width
;

135 
commô_width
;

140 
ö‹dî_issue
;

143 
ö˛ude_•ec
;

148 
ROB_size
;

151 
RS_size
;

154 
scheduÀ_dñay
;

156 
scheduÀr_ª∂ay
;

161 
LSQ_size
;

164 
≥r„˘_dißmbig
;

167 
u£_blöd_•ec
;

172 *
ˇche_dl1_›t
;

175 
ˇche_dl1_œt
;

178 *
ˇche_dl2_›t
;

181 
ˇche_dl2_œt
;

184 *
ˇche_û1_›t
;

187 
ˇche_û1_œt
;

190 *
ˇche_û2_›t
;

193 
ˇche_û2_œt
;

196 
Êush_⁄_sysˇŒs
;

199 
com¥ess_iˇche_addrs
;

204 
mem_√…
;

205 
mem_œt
[2];

208 
mem_bus_width
;

213 *
ôlb_›t
;

216 *
déb_›t
;

219 
éb_miss_œt
;

224 
	#FU_IALU_INDEX
 0

	)

225 
	#FU_IMULT_INDEX
 1

	)

226 
	#FU_MEMPORT_INDEX
 2

	)

227 
	#FU_FPALU_INDEX
 3

	)

228 
	#FU_FPMULT_INDEX
 4

	)

229 
	#FU_NUM_INDICES
 5

	)

232 
ªs_poﬁ
 *
fu_poﬁ
;

235 
ªs_desc
 
fu_c⁄fig
[
FU_NUM_INDICES
];

240 
öje˘_îr‹s
;

243 
¥öt_chk_îr
;

246 
°›_⁄_chk_îr
;

249 
chk_thªshﬁd
;

256 
cou¡î_t
 
sim_¶ù
;

263 
cou¡î_t
 
sim_‹a˛e_ö¢
;

266 
cou¡î_t
 
sim_num_ªfs
;

269 
cou¡î_t
 
sim_num_lﬂds
;

272 
cou¡î_t
 
sim_num_bønches
;

275 
cou¡î_t
 
sim_tŸÆ_ö¢
;

278 
cou¡î_t
 
sim_tŸÆ_ªfs
;

281 
cou¡î_t
 
sim_tŸÆ_lﬂds
;

284 
cou¡î_t
 
sim_tŸÆ_bønches
;

293 
tick_t
 
sim_cy˛e
;

297 
cou¡î_t
 
IFQ_cou¡
;

298 
cou¡î_t
 
IFQ_fcou¡
;

299 
cou¡î_t
 
ISQ_cou¡
;

300 
cou¡î_t
 
ISQ_fcou¡
;

301 
cou¡î_t
 
RS_cou¡
;

302 
cou¡î_t
 
RS_fcou¡
;

303 
cou¡î_t
 
ROB_cou¡
;

304 
cou¡î_t
 
ROB_fcou¡
;

305 
cou¡î_t
 
LSQ_cou¡
;

306 
cou¡î_t
 
LSQ_fcou¡
;

311 
cou¡î_t
 
timög_dï_ö¢
;

314 
cou¡î_t
 
checkî_îr‹s
;

318 
cou¡î_t
 
num_ª∂ays
;

322 
cou¡î_t
 
mis„tch_cou¡
;

323 
cou¡î_t
 
mis„tch_⁄ly_cou¡
;

324 
cou¡î_t
 
ªcovîy_cou¡
;

328 
cou¡î_t
 
blöd_•ec_Êushes
;

329 
cou¡î_t
 
blöd_•ec_Æl_Êushes
;

332 
	e„tch_°Æl_t
 {

333 
	m„tch_no_°Æl
,

334 
	m„tch_ˇche_miss
,

335 
	m„tch_Æign
,

336 
	m„tch_sysˇŒ
,

337 
	m„tch_unknown
,

338 
	m„tch_bønches
,

339 
	m„tch_ifq_fuŒ
,

340 
	m„tch_Ÿhî
,

341 
	m„tch_NUM


343 
°©_°©_t
 *
„tch_°Æl
;

346 
	edp_°Æl_t
 {

347 
	mdp_no_°Æl
,

348 
	mdp_ifq_em±y
,

349 
	mdp_rs_fuŒ
,

350 
	mdp_lsq_fuŒ
,

351 
	mdp_rob_fuŒ
,

352 
	mdp_Ÿhî
,

353 
	mdp_NUM


355 
°©_°©_t
 *
dp_°Æl
;

358 
	#MAX_PCSTAT_VARS
 8

	)

359 
pc°©_√…
;

360 
•ec_pc°©_√…
;

361 *
pc°©_v¨s
[
MAX_PCSTAT_VARS
];

362 *
•ec_pc°©_v¨s
[
MAX_PCSTAT_VARS
];

363 
°©_°©_t
 *
pc°©_°©s
[
MAX_PCSTAT_VARS
];

364 
°©_°©_t
 *
•ec_pc°©_°©s
[
MAX_PCSTAT_VARS
];

365 
cou¡î_t
 
pc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

366 
cou¡î_t
 
•ec_pc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

367 
°©_°©_t
 *
pc°©_sdi°s
[
MAX_PCSTAT_VARS
];

368 
°©_°©_t
 *
•ec_pc°©_sdi°s
[
MAX_PCSTAT_VARS
];

371 
	#STATVAL
(
STAT
) \

372 ((
STAT
)->
sc
 =
sc_öt
 \

373 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

374 : ((
STAT
)->
sc
 =
sc_uöt
 \

375 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

376 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

377 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

378 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

382 
sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

386 
sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

387 
¨gc
, **
¨gv
);

391 
sim_aux_c⁄fig
(
FILE
 *
°ªam
);

395 
sim_ªg_°©s
(
°©_sdb_t
 *
sdb
);

399 
sim_aux_°©s
(
FILE
 *
°ªam
);

	@mase-structs.h

57 
	#MAX_IDEPS
 3

	)

60 
	#MAX_ODEPS
 2

	)

63 
	evÆ_ty≥
 {

64 
	mvt_n⁄e
,

65 
	mvt_byã
,

66 
	mvt_sbyã
,

67 
	mvt_hÆf
,

68 
	mvt_shÆf
,

69 
	mvt_w‹d
,

70 
	mvt_sw‹d
,

71 
	mvt_qw‹d
,

72 
	mvt_sqw‹d
,

73 
	mvt_sÊﬂt
,

74 
	mvt_dÊﬂt
,

75 
	mvt_addr


79 
	uvÆ_uni⁄
 {

80 
byã_t
 
	mb
;

81 
sbyã_t
 
	msb
;

82 
hÆf_t
 
	mh
;

83 
shÆf_t
 
	msh
;

84 
w‹d_t
 
	mw
;

85 
sw‹d_t
 
	msw
;

86 
qw‹d_t
 
	mq
;

87 
sqw‹d_t
 
	msq
;

88 
sÊﬂt_t
 
	mf
;

89 
dÊﬂt_t
 
	md
;

90 
md_addr_t
 
	maddr
;

94 
	spu_hash_ít
 {

95 
pu_hash_ít
 *
	m√xt
;

96 
md_addr_t
 
	mlöe_èg
;

97 
qw‹d_t
 
	md©a
;

98 
	misq_ödex
;

102 
	sªg_°©e_t
 {

103 
	mdï_«me
;

104 
vÆ_uni⁄
 
	mªg_vÆue
;

105 
vÆ_ty≥
 
	mªg_ty≥
;

109 
	sö°_°©e
 {

110 
	mvÆid
;

111 
md_ö°_t
 
	mIR
;

112 
md_›code
 
	m›
;

113 
md_addr_t
 
	mPC
;

114 
md_addr_t
 
	mNPC
;

115 
	mis_å≠
;

116 
	mis_sysˇŒ
;

117 
	m•ec_mode
;

118 
md_Áu…_ty≥
 
	mÁu…
;

119 
md_addr_t
 
	mmem_addr
;

120 
	mmem_size
;

121 
vÆ_uni⁄
 
	mmem_vÆue
;

122 
	mis_wrôe
;

123 
ªg_°©e_t
 
	mªg_°©e
[
MAX_ODEPS
];

128 
	s„tch_ªc
 {

129 
md_ö°_t
 
	mIR
;

130 
	misq_ödex
;

131 
md_addr_t
 
	mPC
;

132 
md_addr_t
 
	m¥ed_NPC
;

133 
b¥ed_upd©e_t
 
	mdú_upd©e
;

134 
	m°ack_ªcovî_idx
;

135 
	m±ø˚_£q
;

136 
tick_t
 
	mtime°amp
;

137 
	mö1
, 
	mö2
, 
	mö3
, 
	mout1
, 
	mout2
;

138 
md_addr_t
 
	mèrgë_addr
;

139 
	mmem_size
;

144 
	sª«me_íåy
 {

145 
ROB_íåy
 *
	mª
;

146 
	modï_num
;

147 
ª«me_íåy
 *
	m¥ev
;

148 
ª«me_íåy
 *
	m√xt
;

154 
	tINST_TAG_TYPE
;

159 
	tINST_SEQ_TYPE
;

162 
	#OPERANDS_READY
(
RE
) \

163 ((
RE
)->
idï_ªady
[0] && (RE)->idï_ªady[1] && (RE)->idï_ªady[2])

	)

173 
	sROB_íåy
 {

174 
md_ö°_t
 
	mIR
;

175 
md_›code
 
	m›
;

177 
md_addr_t
 
	mPC
;

178 
md_addr_t
 
	mNPC
;

179 
md_addr_t
 
	m¥ed_NPC
;

181 
	mö_LSQ
;

182 
	misq_ödex
;

183 
	mrob_ödex
;

185 
	m¶ù
;

187 
INST_TAG_TYPE
 
	mèg
;

188 
INST_SEQ_TYPE
 
	m£q
;

189 
	m±ø˚_£q
;

191 
	mdéb_miss
;

192 
	mtimög_dï
;

193 
	mó_comp
;

194 
	mm©ch_ö_LSQ
;

195 
	mªcovî_ö°
;

196 
	m°ack_ªcovî_idx
;

197 
b¥ed_upd©e_t
 
	mdú_upd©e
;

198 
	mscheduÀ_waô_time
;

201 
	mqueued
;

202 
	missued
;

203 
	mcom∂ëed
;

206 
	mblöd_ªcovî
;

209 
vÆ_uni⁄
 
	mmem_vÆue
;

210 
	mmem_size
;

213 
md_Áu…_ty≥
 
	mÁu…
;

219 
	modï_«me
[
MAX_ODEPS
];

220 
ª«me_íåy
 *
	modï_ª«me
[
MAX_ODEPS
];

221 
RE_lök
 *
	modï_li°
[
MAX_ODEPS
];

222 
vÆ_uni⁄
 
	modï_vÆue
[
MAX_ODEPS
];

223 
	modï_vÆid
[
MAX_ODEPS
];

229 
	midï_«me
[
MAX_IDEPS
];

230 
	midï_ªady
[
MAX_IDEPS
];

231 
vÆ_uni⁄
 
	midï_vÆue
[
MAX_IDEPS
];

262 
	sRE_lök
 {

263 
RE_lök
 *
	m√xt
;

264 
ROB_íåy
 *
	mª
;

265 
INST_TAG_TYPE
 
	mèg
;

267 
tick_t
 
	mwhí
;

268 
INST_SEQ_TYPE
 
	m£q
;

269 
	m›num
;

270 } 
	mx
;

274 
	#MAX_RE_LINKS
 4096

	)

277 
	#RELINK_INIT
(
REL
, 
RE
) \

278 ((
REL
).
√xt
 = 
NULL
, (REL).
ª
 = (
RE
), (REL).
èg
 = (RE)->èg)

	)

281 
	#RELINK_IS_NULL
(
LINK
Ë((LINK)->
ª
 =
NULL
)

	)

285 
	#RELINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
ª
->èg)

	)

288 
	#RELINK_RE
(
LINK
Ë((LINK)->
ª
)

	)

291 
	#RELINK_NEW
(
DST
, 
RE
) \

292 { 
RE_lök
 *
n_lök
; \

293 i‡(!
ªlök_‰ì_li°
) \

294 
	`∑nic
("out ofÑeÜinks"); \

295 
n_lök
 = 
ªlök_‰ì_li°
; \

296 
ªlök_‰ì_li°
 =Ññök_‰ì_li°->
√xt
; \

297 
n_lök
->
√xt
 = 
NULL
; \

298 
n_lök
->
ª
 = (
RE
);Ç_lök->
èg
 =Ç_link->re->tag; \

299 (
DST
Ë
n_lök
; \

300 }

	)

303 
	#RELINK_FREE
(
LINK
) \

304 { 
RE_lök
 *
f_lök
 = (
LINK
); \

305 
f_lök
->
ª
 = 
NULL
; f_lök->
èg
 = 0; \

306 
f_lök
->
√xt
 = 
ªlök_‰ì_li°
; \

307 
ªlök_‰ì_li°
 = 
f_lök
; \

308 }

	)

311 
	#RELINK_FREE_LIST
(
LINK
) \

312 { 
RE_lök
 *
Ê_lök
, *
Ê_lök_√xt
; \

313 
Ê_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

315 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

316 
	`RELINK_FREE
(
Ê_lök
); \

318 }

	)

	@mase.c

52 
	~"ma£.h
"

53 
	~"ma£-ma¸os-‹a˛e.h
"

57 
	$sim_öô
()

59 
sim_num_ªfs
 = 0;

62 
	`ªgs_öô
(&
ªgs
);

63 
	`ªgs_öô
(&
pu_ªgs
);

66 
mem
 = 
	`mem_¸óã
("mem");

67 
	`mem_öô
(
mem
);

68 
	}
}

72 
	$sim_lﬂd_¥og
(*
‚ame
,

73 
¨gc
, **
¨gv
,

74 **
ívp
)

77 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

80 
pu_ªgs
 = 
ªgs
;

83 i‡(
±ø˚_√…
 == 2) {

85 
	`±ø˚_›í
–
±ø˚_›ts
[0],Ötrace_opts[1]);

87 i‡(
±ø˚_√…
 == 0) {

91 
	`Áèl
("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

95 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
("fu-poﬁ", 
fu_c⁄fig
, 
FU_NUM_INDICES
);

96 
	`ªlök_öô
(
MAX_RE_LINKS
);

97 
	`„_öô
();

98 
	`checkî_öô
();

99 
	`ª«me_öô
();

100 
	`evítq_öô
();

101 
	`ªadyq_öô
();

102 
	`mpq_öô
();

103 
	`rs_öô
();

104 
	`rob_öô
();

105 
	`lsq_öô
();

108 
	`dlôe_öô
(
ma£_ªg_obj
, 
ma£_mem_obj
, 
ma£_m°©e_obj
);

109 
	}
}

113 
	$sim_unöô
()

115 i‡(
±ø˚_√…
 > 0Ë
	`±ø˚_˛o£
();

117 i‡(((Ë
checkî_îr‹s
 / (Ë
sim_num_ö¢
 * 100.0Ë>
chk_thªshﬁd
) {

118 
	`w¨n
("CheckerÉrrorsÉxceededÅhreshold");

120 
	}
}

124 
	$sim_maö
()

128 
	`sig«l
(
SIGFPE
, 
SIG_IGN
);

131 
pu_ªgs
.
ªgs_PC
 = 
ld_¥og_íåy
;

132 
pu_ªgs
.
ªgs_NPC
 =Öu_ªgs.
ªgs_PC
 + (
md_ö°_t
);

135 i‡(
	`dlôe_check_bªak
(
pu_ªgs
.
ªgs_PC
, 0, 0, 0, 0))

136 
	`dlôe_maö
(0, 
pu_ªgs
.
ªgs_PC
, 
sim_cy˛e
, &
ªgs
, 
mem
);

140 i‡(
Á°fwd_cou¡
 > 0) {

145 
icou¡
;

146 
md_ö°_t
 
ö°
;

147 
md_›code
 
›
;

148 
md_Áu…_ty≥
 
Áu…
;

149 
md_addr_t
 
èrgë_addr
;

150 
md_addr_t
 
mem_addr
;

151 
vÆ_uni⁄
 
mem_vÆue
;

152 
mem_size
;

153 
is_wrôe
;

154 
Á°fwd_mode
 = 1;

156 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

162 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++) {

165 
pu_ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

166 #i‡
	`deföed
(
TARGET_ALPHA
)

167 
pu_ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

171 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
pu_ªgs
.
ªgs_PC
);

174 
mem_addr
 = 0;

175 
is_wrôe
 = 
FALSE
;

176 
Áu…
 = 
md_Áu…_n⁄e
;

179 
	`MD_SET_OPCODE
(
›
, 
ö°
);

181 
	#DECLARE_FAULT
(
FAULT
Ë{ 
Áu…
 = (FAULT); ; }

	)

182 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
pu_ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

185 
›
) {

187 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

188 
OP
: \

189 
	`SYMCAT
(
OP
,
_IMPL
); \

190 ;

	)

191 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

192 
OP
: \

193 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

194 
	#CONNECT
(
OP
)

	)

195 
	~"machöe.def
"

197 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

201 i‡(
Áu…
 !
md_Áu…_n⁄e
)

202 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
pu_ªgs
.
ªgs_PC
);

205 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
Ë
is_wrôe
 = 
TRUE
;

208 i‡(
	`dlôe_check_bªak
(
pu_ªgs
.
ªgs_NPC
,

209 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

210 
mem_addr
, 
sim_num_ö¢
, sim_num_insn)

212 
	`dlôe_maö
(
pu_ªgs
.
ªgs_PC
,Öu_ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &pu_ªgs, 
mem
);

216 
pu_ªgs
.
ªgs_PC
 =Öu_ªgs.
ªgs_NPC
;

217 
pu_ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

221 
ªgs
 = 
pu_ªgs
;

225 
	`„tch_£tup_PC
(
pu_ªgs
.
ªgs_PC
);

227 
	`Ârötf
(
°dîr
, "sim: ** startingÖerformance simulation **\n");

234 i‡(
ROB_num
 < 
LSQ_num
Ë
	`∑nic
("ROB_num < LSQ_num");

235 i‡(((
ROB_hód
 + 
ROB_num
Ë% 
ROB_size
Ë!
ROB_èû
Ë
	`∑nic
("ROB_head/ROB_tail wedged");

236 i‡(((
LSQ_hód
 + 
LSQ_num
Ë% 
LSQ_size
Ë!
LSQ_èû
Ë
	`∑nic
("LSQ_head/LSQ_tail wedged");

239 
	`±ø˚_check_a˘ive
(
pu_ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

242 
	`±ø˚_√wcy˛e
(
sim_cy˛e
);

245 
	`ma£_commô
();

248 
	`ma£_ªÀa£_fu
();

252 
	`ma£_wrôeback
();

256 
	`lsq_ª‰esh
();

260 
	`ma£_issue
();

264 
	`ma£_di•©ch
();

267 
	`ma£_„tch
();

269 #ifde‡
TEST_CB


270 
	`cb_ã°î
();

274 
IFQ_cou¡
 +
IFQ_num
;

275 
IFQ_fcou¡
 +((
IFQ_num
 =
IFQ_size
) ? 1 : 0);

276 
ISQ_cou¡
 +
ISQ_num
;

277 
ISQ_fcou¡
 +((
ISQ_num
 =
ISQ_size
) ? 1 : 0);

278 
RS_cou¡
 +
RS_num
;

279 
RS_fcou¡
 +((
RS_num
 =
RS_size
) ? 1 : 0);

280 
ROB_cou¡
 +
ROB_num
;

281 
ROB_fcou¡
 +((
ROB_num
 =
ROB_size
) ? 1 : 0);

282 
LSQ_cou¡
 +
LSQ_num
;

283 
LSQ_fcou¡
 +((
LSQ_num
 =
LSQ_size
) ? 1 : 0);

286 
sim_cy˛e
++;

289 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts) ;

290 i‡(
¥ogøm_com∂ëe
) ;

292 
	}
}

	@mase.h

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

56 
	~<sig«l.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"b¥ed.h
"

67 
	~"ªsour˚.h
"

68 
	~"bôm≠.h
"

69 
	~"›ti⁄s.h
"

70 
	~"evÆ.h
"

71 
	~"°©s.h
"

72 
	~"±ø˚.h
"

73 
	~"dlôe.h
"

74 
	~"sim.h
"

76 
	~"ma£-°ru˘s.h
"

77 
	~"ma£-›ts.h
"

78 
	~"ma£-checkî.h
"

79 
	~"ma£-debug.h
"

80 
	~"ma£-„.h
"

81 
	~"ma£-decode.h
"

82 
	~"ma£-exec.h
"

83 
	~"ma£-mem.h
"

84 
	~"ma£-commô.h
"

87 #i‡
deföed
 (
TARGET_PISA
)

88 
	#IACOMPRESS
(
A
) \

89 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

90 
	#ISCOMPRESS
(
SZ
) \

91 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

93 
	#IACOMPRESS
(
A
Ë(A)

	)

94 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

99 
sim_öô
();

103 
sim_lﬂd_¥og
(*
‚ame
,

104 
¨gc
, **
¨gv
,

105 **
ívp
);

109 
sim_unöô
();

113 
sim_maö
();

	@memory.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"›ti⁄s.h
"

59 
	~"°©s.h
"

60 
	~"mem‹y.h
"

63 
mem_t
 *

64 
	$mem_¸óã
(*
«me
)

66 
mem_t
 *
mem
;

68 
mem
 = 
	`ˇŒoc
(1, (
mem_t
));

69 i‡(!
mem
)

70 
	`Áèl
("out of virtual memory");

72 
mem
->
«me
 = 
	`my°rdup
(name);

73  
mem
;

74 
	}
}

77 
byã_t
 *

78 
	$mem_å™¶©e
(
mem_t
 *
mem
,

79 
md_addr_t
 
addr
)

81 
mem_±e_t
 *
±e
, *
¥ev
;

84 
mem
->
±ab_mis£s
++; mem->
±ab_ac˚s£s
++;

87 
¥ev
=
NULL
, 
±e
=
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

88 
±e
 !
NULL
;

89 
¥ev
=
±e
,Öãıã->
√xt
)

91 i‡(
±e
->
èg
 =
	`MEM_PTAB_TAG
(
addr
))

94 i‡(
¥ev
)

96 
¥ev
->
√xt
 = 
±e
->next;

97 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

98 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

100  
±e
->
∑ge
;

105  
NULL
;

106 
	}
}

110 
	$mem_√w∑ge
(
mem_t
 *
mem
,

111 
md_addr_t
 
addr
)

113 
byã_t
 *
∑ge
;

114 
mem_±e_t
 *
±e
;

117 
∑ge
 = 
	`gëc‹e
(
MD_PAGE_SIZE
);

118 i‡(!
∑ge
)

119 
	`Áèl
("out of virtual memory");

122 
±e
 = 
	`ˇŒoc
(1, (
mem_±e_t
));

123 i‡(!
±e
)

124 
	`Áèl
("out of virtual memory");

125 
±e
->
èg
 = 
	`MEM_PTAB_TAG
(
addr
);

126 
±e
->
∑ge
 =Öage;

129 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

130 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

133 
mem
->
∑ge_cou¡
++;

134 
	}
}

137 
md_Áu…_ty≥


138 
	$mem_check_Áu…
(
mem_t
 *
mem
,

139 
mem_cmd
 
cmd
,

140 
md_addr_t
 
addr
,

141 
nbyãs
)

144 i‡–(
nbyãs
 & (nbytes-1)) != 0

145 || 
nbyãs
 > 
MD_PAGE_SIZE
)

146  
md_Áu…_ac˚ss
;

148 i‡–(
addr
 & (
nbyãs
-1)) != 0)

149  
md_Áu…_Æignmít
;

151  
md_Áu…_n⁄e
;

152 
	}
}

157 
md_Áu…_ty≥


158 
	$mem_ac˚ss
(
mem_t
 *
mem
,

159 
mem_cmd
 
cmd
,

160 
md_addr_t
 
addr
,

161 *
vp
,

162 
nbyãs
)

164 
md_Áu…_ty≥
 
Áu…
;

165 
byã_t
 *
p
 = 
vp
;

168 
Áu…
 = 
	`mem_check_Áu…
(
mem
, 
cmd
, 
addr
, 
nbyãs
);

169 i‡(
Áu…
 !
md_Áu…_n⁄e
)  fault;

172 i‡(
cmd
 =
Ród
) {

174 
nbyãs
-- > 0) {

175 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

176 
p
 +(
byã_t
);

177 
addr
 +(
byã_t
);

182 
nbyãs
-- > 0) {

183 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

184 
p
 +(
byã_t
);

185 
addr
 +(
byã_t
);

190  
md_Áu…_n⁄e
;

191 
	}
}

195 
	$mem_ªg_°©s
(
mem_t
 *
mem
,

196 
°©_sdb_t
 *
sdb
)

198 
buf
[512], 
buf1
[512];

200 
	`•rötf
(
buf
, "%s.∑ge_cou¡", 
mem
->
«me
);

201 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÖagesállocated",

202 &
mem
->
∑ge_cou¡
, mem->∑ge_cou¡, 
NULL
);

204 
	`•rötf
(
buf
, "%s.∑ge_mem", 
mem
->
«me
);

205 
	`•rötf
(
buf1
, "%s.∑ge_cou¡ * %d / 1024", 
mem
->
«me
, 
MD_PAGE_SIZE
);

206 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "total size of memoryÖagesállocated",

207 
buf1
, "%11.0fk");

209 
	`•rötf
(
buf
, "%s.±ab_mis£s", 
mem
->
«me
);

210 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "total firstÜevelÖageÅable misses",

211 &
mem
->
±ab_mis£s
, mem->±ab_mis£s, 
NULL
);

213 
	`•rötf
(
buf
, "%s.±ab_ac˚s£s", 
mem
->
«me
);

214 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÖageÅableáccesses",

215 &
mem
->
±ab_ac˚s£s
, mem->±ab_ac˚s£s, 
NULL
);

217 
	`•rötf
(
buf
, "%s.±ab_miss_øã", 
mem
->
«me
);

218 
	`•rötf
(
buf1
, "%s.±ab_mis£†/ %s.±ab_ac˚s£s", 
mem
->
«me
, mem->name);

219 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "fú°ÜevñÖagêèbÀ mis†øã", 
buf1
, 
NULL
);

220 
	}
}

224 
	$mem_öô
(
mem_t
 *
mem
)

226 
i
;

229 
i
=0; i < 
MEM_PTAB_SIZE
; i++)

230 
mem
->
±ab
[
i
] = 
NULL
;

232 
mem
->
∑ge_cou¡
 = 0;

233 
mem
->
±ab_mis£s
 = 0;

234 
mem
->
±ab_ac˚s£s
 = 0;

235 
	}
}

238 
md_Áu…_ty≥


239 
	$mem_dump
(
mem_t
 *
mem
,

240 
md_addr_t
 
addr
,

241 
Àn
,

242 
FILE
 *
°ªam
)

244 
d©a
;

245 
md_Áu…_ty≥
 
Áu…
;

247 i‡(!
°ªam
)

248 
°ªam
 = 
°dîr
;

250 
addr
 &~(
w‹d_t
);

251 
Àn
 = (À¿+ ((
w‹d_t
) - 1)) & ~(word_t);

252 
Àn
-- > 0)

254 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
d©a
, (
w‹d_t
));

255 i‡(
Áu…
 !
md_Áu…_n⁄e
)

256  
Áu…
;

258 
	`myÂrötf
(
°ªam
, "0x%08p: %08x\n", 
addr
, 
d©a
);

259 
addr
 +(
w‹d_t
);

263  
md_Áu…_n⁄e
;

264 
	}
}

268 
md_Áu…_ty≥


269 
	$mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

270 
mem_t
 *
mem
,

271 
mem_cmd
 
cmd
,

272 
md_addr_t
 
addr
,

273 *
s
)

275 
n
 = 0;

276 
c
;

277 
md_Áu…_ty≥
 
Áu…
;

279 
cmd
)

281 
Ród
:

284 
Áu…
 = 
	`mem_‚
(
mem
, 
Ród
, 
addr
++, &
c
, 1);

285 i‡(
Áu…
 !
md_Áu…_n⁄e
)

286  
Áu…
;

287 *
s
++ = 
c
;

288 
n
++;

289 } 
c
);

292 
Wrôe
:

295 
c
 = *
s
++;

296 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

297 i‡(
Áu…
 !
md_Áu…_n⁄e
)

298  
Áu…
;

299 
n
++;

300 } 
c
);

304  
md_Áu…_öã∫Æ
;

308  
md_Áu…_n⁄e
;

309 
	}
}

312 
md_Áu…_ty≥


313 
	$mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

314 
mem_t
 *
mem
,

315 
mem_cmd
 
cmd
,

316 
md_addr_t
 
addr
,

317 *
vp
,

318 
nbyãs
)

320 
byã_t
 *
p
 = 
vp
;

321 
md_Áu…_ty≥
 
Áu…
;

324 
nbyãs
-- > 0)

326 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
++, 
p
++, 1);

327 i‡(
Áu…
 !
md_Áu…_n⁄e
)

328  
Áu…
;

332  
md_Áu…_n⁄e
;

333 
	}
}

338 
md_Áu…_ty≥


339 
	$mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

340 
mem_t
 *
mem
,

341 
mem_cmd
 
cmd
,

342 
md_addr_t
 
addr
,

343 *
vp
,

344 
nbyãs
)

346 
byã_t
 *
p
 = 
vp
;

347 
w‹ds
 = 
nbyãs
 >> 2;

348 
md_Áu…_ty≥
 
Áu…
;

350 
w‹ds
-- > 0)

352 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
, 
p
, (
w‹d_t
));

353 i‡(
Áu…
 !
md_Áu…_n⁄e
)

354  
Áu…
;

356 
addr
 +(
w‹d_t
);

357 
p
 +(
w‹d_t
);

361  
md_Áu…_n⁄e
;

362 
	}
}

365 
md_Áu…_ty≥


366 
	$mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

367 
mem_t
 *
mem
,

368 
md_addr_t
 
addr
,

369 
nbyãs
)

371 
byã_t
 
c
 = 0;

372 
md_Áu…_ty≥
 
Áu…
;

375 
nbyãs
-- > 0)

377 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

378 i‡(
Áu…
 !
md_Áu…_n⁄e
)

379  
Áu…
;

383  
md_Áu…_n⁄e
;

384 
	}
}

	@memory.h

52 #i‚de‡
MEMORY_H


53 
	#MEMORY_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"›ti⁄s.h
"

61 
	~"°©s.h
"

64 
	#MEM_PTAB_SIZE
 (32*1024)

	)

65 
	#MEM_LOG_PTAB_SIZE
 15

	)

68 
	smem_±e_t
 {

69 
mem_±e_t
 *
	m√xt
;

70 
md_addr_t
 
	mèg
;

71 
byã_t
 *
	m∑ge
;

75 
	smem_t
 {

77 *
	m«me
;

78 
mem_±e_t
 *
	m±ab
[
MEM_PTAB_SIZE
];

81 
cou¡î_t
 
	m∑ge_cou¡
;

82 
cou¡î_t
 
	m±ab_mis£s
;

83 
cou¡î_t
 
	m±ab_ac˚s£s
;

87 
	emem_cmd
 {

88 
	mRód
,

89 
	mWrôe


94 
	gmd_Áu…_ty≥


95 (*
	tmem_ac˚ss_‚
)(
	tmem_t
 *
	tmem
,

96 
	tmem_cmd
 
	tcmd
,

97 
	tmd_addr_t
 
	taddr
,

98 *
	tp
,

99 
	tnbyãs
);

106 
	#MEM_PTAB_SET
(
ADDR
) \

107 (((
ADDR
Ë>> 
MD_LOG_PAGE_SIZE
Ë& (
MEM_PTAB_SIZE
 - 1))

	)

110 
	#MEM_PTAB_TAG
(
ADDR
) \

111 ((
ADDR
Ë>> (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
))

	)

114 
	#MEM_PTE_ADDR
(
PTE
, 
IDX
) \

115 (((
PTE
)->
èg
 << (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
)) \

116 | ((
IDX
Ë<< 
MD_LOG_PAGE_SIZE
))

	)

119 
	#MEM_PAGE
(
MEM
, 
ADDR
) \

121 ((
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)] \

122 && (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
èg
 =
	`MEM_PTAB_TAG
(ADDR)) \

124 (
MEM
)->
±ab_ac˚s£s
++, \

125 (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
∑ge
) \

127 
	`mem_å™¶©e
((
MEM
), (
ADDR
))))

	)

130 
	#MEM_OFFSET
(
ADDR
Ë((ADDRË& (
MD_PAGE_SIZE
 - 1))

	)

133 
	#MEM_TICKLE
(
MEM
, 
ADDR
) \

134 (!
	`MEM_PAGE
(
MEM
, 
ADDR
) \

136 
	`mem_√w∑ge
(
MEM
, 
ADDR
)) \

137 : ( ()0))

	)

140 
	#MEM_FORALL
(
MEM
, 
ITER
, 
PTE
) \

141 (
ITER
)=0; (ITERË< 
MEM_PTAB_SIZE
; (ITER)++) \

142 (
PTE
)=(
MEM
)->
±ab
[
i
]; (PTEË!
NULL
; (PTE)=(PTE)->
√xt
)

	)

151 
	#MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

152 (
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)) \

153 ? *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))) \

154 : 0)

	)

157 
	#__UNCHK_MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

158 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))))

	)

162 
	#MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

163 (
	`MEM_TICKLE
(
MEM
, (
md_addr_t
)(
ADDR
)), \

164 *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

167 
	#__UNCHK_MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

168 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

172 
	#MEM_READ_BYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
byã_t
)

	)

173 
	#MEM_READ_SBYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
sbyã_t
)

	)

174 
	#MEM_READ_HALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
hÆf_t
))

	)

175 
	#MEM_READ_SHALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
shÆf_t
))

	)

176 
	#MEM_READ_WORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
w‹d_t
))

	)

177 
	#MEM_READ_SWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
sw‹d_t
))

	)

179 #ifde‡
HOST_HAS_QWORD


180 
	#MEM_READ_QWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
qw‹d_t
))

	)

181 
	#MEM_READ_SQWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
sqw‹d_t
))

	)

184 
	#MEM_WRITE_BYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
byã_t
, VAL)

	)

185 
	#MEM_WRITE_SBYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
sbyã_t
, VAL)

	)

186 
	#MEM_WRITE_HALF
(
MEM
, 
ADDR
, 
VAL
) \

187 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
hÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

188 
	#MEM_WRITE_SHALF
(
MEM
, 
ADDR
, 
VAL
) \

189 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
shÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

190 
	#MEM_WRITE_WORD
(
MEM
, 
ADDR
, 
VAL
) \

191 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
w‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

192 
	#MEM_WRITE_SWORD
(
MEM
, 
ADDR
, 
VAL
) \

193 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sw‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

194 
	#MEM_WRITE_SFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

195 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sÊﬂt_t
, 
	`MD_SWAPW
(
VAL
))

	)

196 
	#MEM_WRITE_DFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

197 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
dÊﬂt_t
, 
	`MD_SWAPQ
(
VAL
))

	)

199 #ifde‡
HOST_HAS_QWORD


200 
	#MEM_WRITE_QWORD
(
MEM
, 
ADDR
, 
VAL
) \

201 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
qw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

202 
	#MEM_WRITE_SQWORD
(
MEM
, 
ADDR
, 
VAL
) \

203 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sqw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

208 
mem_t
 *

209 
mem_¸óã
(*
«me
);

212 
byã_t
 *

213 
mem_å™¶©e
(
mem_t
 *
mem
,

214 
md_addr_t
 
addr
);

218 
mem_√w∑ge
(
mem_t
 *
mem
,

219 
md_addr_t
 
addr
);

222 
md_Áu…_ty≥


223 
mem_check_Áu…
(
mem_t
 *
mem
,

224 
mem_cmd
 
cmd
,

225 
md_addr_t
 
addr
,

226 
nbyãs
);

231 
md_Áu…_ty≥


232 
mem_ac˚ss
(
mem_t
 *
mem
,

233 
mem_cmd
 
cmd
,

234 
md_addr_t
 
addr
,

235 *
vp
,

236 
nbyãs
);

240 
mem_ªg_°©s
(
mem_t
 *
mem
,

241 
°©_sdb_t
 *
sdb
);

245 
mem_öô
(
mem_t
 *
mem
);

248 
md_Áu…_ty≥


249 
mem_dump
(
mem_t
 *
mem
,

250 
md_addr_t
 
addr
,

251 
Àn
,

252 
FILE
 *
°ªam
);

265 
md_Áu…_ty≥


266 
mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

267 
mem_t
 *
mem
,

268 
mem_cmd
 
cmd
,

269 
md_addr_t
 
addr
,

270 *
s
);

273 
md_Áu…_ty≥


274 
mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

275 
mem_t
 *
mem
,

276 
mem_cmd
 
cmd
,

277 
md_addr_t
 
addr
,

278 *
vp
,

279 
nbyãs
);

284 
md_Áu…_ty≥


285 
mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

286 
mem_t
 *
mem
,

287 
mem_cmd
 
cmd
,

288 
md_addr_t
 
addr
,

289 *
vp
,

290 
nbyãs
);

293 
md_Áu…_ty≥


294 
mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

295 
mem_t
 *
mem
,

296 
md_addr_t
 
addr
,

297 
nbyãs
);

	@misc.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<°rög.h
>

56 
	~<˘y≥.h
>

57 
	~<î∫o.h
>

59 #i‡
deföed
(
__Æpha
Ë|| deföed(
löux
)

60 
	~<uni°d.h
>

63 
	~"ho°.h
"

64 
	~"misc.h
"

65 
	~"machöe.h
"

68 
	gvîbo£
 = 
FALSE
;

70 
	g¥ogøm_com∂ëe
 = 0;

73 
	gvîbo£_ªgs
 = 
FALSE
;

76 
	gåiggî_ö°
 = 0;

78 #ifde‡
DEBUG


80 
	gdebuggög
 = 
FALSE
;

85 (*
hook_‚
)(
FILE
 *
°ªam
Ë
NULL
;

89 
	$Áèl_hook
((*
‚
)(
FILE
 *
°ªam
))

91 
hook_‚
 = 
‚
;

92 
	}
}

97 #ifde‡
__GNUC__


99 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

102 
	$Áèl
(*
fmt
, ...)

105 
va_li°
 
v
;

106 
	`va_°¨t
(
v
, 
fmt
);

108 
	`Ârötf
(
°dîr
, "fatal: ");

109 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

110 #ifde‡
__GNUC__


111 i‡(
vîbo£
)

112 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

114 
	`Ârötf
(
°dîr
, "\n");

115 i‡(
hook_‚
)

116 (*
hook_‚
)(
°dîr
);

117 
	`exô
(1);

118 
	}
}

121 #ifde‡
__GNUC__


123 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

126 
	$∑nic
(*
fmt
, ...)

129 
va_li°
 
v
;

130 
	`va_°¨t
(
v
, 
fmt
);

132 
	`Ârötf
(
°dîr
, "panic: ");

133 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

134 #ifde‡
__GNUC__


135 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

137 
	`Ârötf
(
°dîr
, "\n");

138 i‡(
hook_‚
)

139 (*
hook_‚
)(
°dîr
);

140 
	`ab‹t
();

141 
	}
}

144 #ifde‡
__GNUC__


146 
	$_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

149 
	$w¨n
(*
fmt
, ...)

152 
va_li°
 
v
;

153 
	`va_°¨t
(
v
, 
fmt
);

155 
	`Ârötf
(
°dîr
, "warning: ");

156 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

157 #ifde‡
__GNUC__


158 i‡(
vîbo£
)

159 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

161 
	`Ârötf
(
°dîr
, "\n");

162 
	}
}

165 #ifde‡
__GNUC__


167 
	$_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

170 
	$öfo
(*
fmt
, ...)

173 
va_li°
 
v
;

174 
	`va_°¨t
(
v
, 
fmt
);

176 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

177 #ifde‡
__GNUC__


178 i‡(
vîbo£
)

179 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

181 
	`Ârötf
(
°dîr
, "\n");

182 
	}
}

184 #ifde‡
DEBUG


186 #ifde‡
__GNUC__


188 
	$_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

191 
	$debug
(*
fmt
, ...)

194 
va_li°
 
v
;

195 
	`va_°¨t
(
v
, 
fmt
);

197 i‡(
debuggög
)

199 
	`Ârötf
(
°dîr
, "debug: ");

200 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

201 #ifde‡
__GNUC__


202 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

204 
	`Ârötf
(
°dîr
, "\n");

206 
	}
}

212 
	$my§™d
(
£ed
)

214 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

215 
	`§™d
(
£ed
);

217 
	`§™dom
(
£ed
);

219 
	}
}

223 
	$myønd
()

225 #i‡!
	`deföed
(
__Æpha
Ë&& !deföed(
löux
)

226 
	`øndom
();

229 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

230  
	`ønd
();

232  
	`øndom
();

234 
	}
}

239 
	$my°rdup
(*
s
)

241 *
buf
;

243 i‡(!(
buf
 = (*)
	`mÆloc
(
	`°æí
(
s
)+1)))

244  
NULL
;

245 
	`°r˝y
(
buf
, 
s
);

246  
buf
;

247 
	}
}

251 
	$my°ºchr
(*
s
, 
c
)

253 *
πnvÆ
 = 0;

256 i‡(*
s
 =
c
)

257 
πnvÆ
 = 
s
;

258 } *
s
++);

260  
πnvÆ
;

261 
	}
}

266 
	$my°ricmp
(*
s1
, *
s2
)

268 
u1
, 
u2
;

272 
u1
 = ()*
s1
++; u1 = 
	`tﬁowî
(u1);

273 
u2
 = ()*
s2
++; u2 = 
	`tﬁowî
(u2);

275 i‡(
u1
 !
u2
)

276  
u1
 - 
u2
;

277 i‡(
u1
 == '\0')

280 
	}
}

285 
	$gëc‹e
(
nbyãs
)

287  
	`ˇŒoc
(
nbyãs
, 1);

290 #i‡!
	`deföed
(
PURIFY
Ë&& !deföed(
_MSC_VER
)

291 *
p
 = (*)
	`sbrk
(
nbyãs
);

293 i‡(
p
 == (*)-1)

294  
NULL
;

297 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
_MSC_VER
)

298 
	`mem£t
(
p
, '\0', 
nbyãs
);

300 
	`bzîo
(
p
, 
nbyãs
);

302  
p
;

304  
	`ˇŒoc
(
nbyãs
, 1);

307 
	}
}

311 
	$log_ba£2
(
n
)

313 
powî
 = 0;

315 i‡(
n
 <= 0 || (n & (n-1)) != 0)

316 
	`∑nic
("log2() only works forÖositiveÖower ofÅwo values");

318 
n
 >>= 1)

319 
powî
++;

321  
powî
;

322 
	}
}

326 
	$ñ≠£d_time
(
£c
)

328 
t°r
[256];

329 
ãmp
[256];

331 i‡(
£c
 <= 0)

334 
t°r
[0] = '\0';

337 i‡(
£c
 >= 86400)

339 
	`•rötf
(
ãmp
, "%ldD ", 
£c
/86400);

340 
	`°rˇt
(
t°r
, 
ãmp
);

341 
£c
 = sec % 86400;

344 i‡(
£c
 >= 3600)

346 
	`•rötf
(
ãmp
, "%ldh ", 
£c
/3600);

347 
	`°rˇt
(
t°r
, 
ãmp
);

348 
£c
 = sec % 3600;

351 i‡(
£c
 >= 60)

353 
	`•rötf
(
ãmp
, "%ldm ", 
£c
/60);

354 
	`°rˇt
(
t°r
, 
ãmp
);

355 
£c
 = sec % 60;

358 i‡(
£c
 >= 1)

360 
	`•rötf
(
ãmp
, "%ld†", 
£c
);

361 
	`°rˇt
(
t°r
, 
ãmp
);

363 
t°r
[
	`°æí
(tstr)-1] = '\0';

364  
t°r
;

365 
	}
}

373 
	$exåa˘l
(
w‹d
,

374 
pos
,

375 
num
)

377 (((Ë
w‹d
 >> (
pos
 + 1 - 
num
)) & ~(~0 <<Çum));

378 
	}
}

380 
	#PUT
(
p
, 
n
) \

382 
¬
, 
cc
; \

384 
¬
 = 0;Ç¿< 
n
;Çn++) \

386 
cc
 = *(
p
+
¬
); \

387 *
obuf
++ = 
cc
; \

389 }

	)

391 
	#PAD
(
s
, 
n
) \

393 
¬
, 
cc
; \

395 
cc
 = *
s
; \

396 
¬
 = 
n
;Çn > 0;Çn--) \

397 *
obuf
++ = 
cc
; \

398 }

	)

400 #ifde‡
HOST_HAS_QWORD


401 
	#HIBITL
 
	`LL
(0x8000000000000000)

	)

402 
sqw‹d_t
 
	t¶¨geöt_t
;

403 
qw‹d_t
 
	tœrgeöt_t
;

405 
	#HIBITL
 0x80000000L

	)

406 
sw‹d_t
 
	t¶¨geöt_t
;

407 
w‹d_t
 
	tœrgeöt_t
;

411 
	$_lowdigô
(
¶¨geöt_t
 *
vÆ±r
)

418 
lowbô
 = ()(*
vÆ±r
 & 1);

419 
¶¨geöt_t
 
vÆue
 = (*
vÆ±r
 >> 1Ë& ~
HIBITL
;

421 *
vÆ±r
 = 
vÆue
 / 5;

422  ()(
vÆue
 % 5 * 2 + 
lowbô
 + '0');

423 
	}
}

427 
	$myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
)

429 
_bœnks
[] = " ";

430 
_zî€s
[] = "00000000000000000000";

433 
cou¡
 = 0;

436 
fcode
;

439 
width
, 
¥ec
;

442 
lzîo
;

445 
¥efixÀngth
;

448 
ŸhîÀngth
;

451 
	#PADZERO
 0x0001

	)

452 
	#RZERO
 0x0002

	)

453 
	#LZERO
 0x0004

	)

454 
	#DOTSEEN
 0x0008

	)

455 
	#LENGTH
 0x0010

	)

456 
Êagw‹d
;

459 
	#MAXDIGS
 22

	)

462 *
bp
, *
p
;

465 
k
, 
Ãadix
, 
mødix
;

468 *
¥efix
;

471 
buf
[
MAXDIGS
*4], 
buf1
[MAXDIGS*4];

474 *
èb
;

477 
¶¨geöt_t
 
vÆ
;

480 
dÊﬂt_t
 
fvÆ
;

484 
n
;

486 (
fcode
 = *
f‹m©
) != '\0' && fcode != '%')

488 *
obuf
++ = 
fcode
;

489 
f‹m©
++;

490 
cou¡
++;

493 i‡(
fcode
 == '\0')

496 *
obuf
 = '\0';

497  
obuf
;

506 
width
 = 
¥efixÀngth
 = 
ŸhîÀngth
 = 
Êagw‹d
 = 0;

507 
f‹m©
++;

509 
ch¨swôch
:

510 
fcode
 = *
f‹m©
++)

513 
Êagw‹d
 |
PADZERO
;

524 
num
 = 
fcode
 - '0';

525 
	`isdigô
(
fcode
 = *
f‹m©
))

527 
num
 =Çum * 10 + 
fcode
 - '0';

528 
f‹m©
++;

530 i‡(
Êagw‹d
 & 
DOTSEEN
)

531 
¥ec
 = 
num
;

533 
width
 = 
num
;

534 
ch¨swôch
;

538 
Êagw‹d
 |
DOTSEEN
;

539 
ch¨swôch
;

542 
Êagw‹d
 |
LENGTH
;

543 
ch¨swôch
;

546 #ifde‡
HOST_HAS_QWORD


547 
Êagw‹d
 |
LENGTH
;

550 
Êagw‹d
 |
DOTSEEN
;

551 i‡(!
width
)

552 
width
 = 12;

553 
¥ec
 = 0;

554 
¥o˚ss_Êﬂt
;

559 i‡(
Êagw‹d
 & 
LENGTH
)

560 
vÆ
 = 
	`va_¨g
(
v
, 
¶¨geöt_t
);

562 
vÆ
 = (
¶¨geöt_t
)
	`va_¨g
(
v
, 
sw‹d_t
);

565 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

568 i‡(
vÆ
 < 0)

570 
¥efix
 = "-";

571 
¥efixÀngth
 = 1;

573 i‡(
vÆ
 !(
¶¨geöt_t
)
HIBITL
)

574 
vÆ
 = -val;

578 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

582 
decimÆ
:

584 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

586 i‡(
qvÆ
 <= 9)

587 *--
bp
 = ()
qvÆ
 + '0';

591 
n
 = ()
qvÆ
;

592 
qvÆ
 /= 10;

593 *--
bp
 = 
n
 - ()
qvÆ
 * 10 + '0';

595 
qvÆ
 > 9);

596 *--
bp
 = ()
qvÆ
 + '0';

603 i‡(
Êagw‹d
 & 
LENGTH
)

604 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

606 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

609 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

611 i‡(
vÆ
 & 
HIBITL
)

612 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

613 
decimÆ
;

616 
mødix
 = 7;

617 
Ãadix
 = 2;

618 
fixed
;

621 i‡((
md_addr_t
) > 4)

622 
Êagw‹d
 |
LENGTH
;

627 
mødix
 = 15;

628 
Ãadix
 = 3;

630 
fixed
:

632 i‡(
Êagw‹d
 & 
LENGTH
)

633 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

635 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

638 
èb
 = (
fcode
 == 'X') ? "0123456789ABCDEF" : "0123456789abcdef";

641 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

644 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

646 i‡(
qvÆ
 == 0)

648 
ŸhîÀngth
 = 
lzîo
 = 1;

649 
Êagw‹d
 |
LZERO
;

653 *--
bp
 = 
èb
[
qvÆ
 & 
mødix
];

654 
qvÆ
 = ((qvÆ >> 1Ë& ~
HIBITL
Ë>> 
Ãadix
;

655 } 
qvÆ
 != 0);

659 #i‚de‡
HOST_HAS_QWORD


660 
¥o˚ss_Êﬂt
:

664 i‡(
Êagw‹d
 & 
DOTSEEN
)

665 
	`•rötf
(
buf1
, "%%%d.%df", 
width
, 
¥ec
);

666 i‡(
width
)

667 
	`•rötf
(
buf1
, "%%%df", 
width
);

669 
	`•rötf
(
buf1
, "%%f");

672 
fvÆ
 = 
	`va_¨g
(
v
, 
dÊﬂt_t
);

675 
	`•rötf
(
buf
, 
buf1
, 
fvÆ
);

676 
bp
 = 
buf
;

677 
p
 = 
bp
 + 
	`°æí
(bp);

681 
bp
 = 
	`va_¨g
(
v
, *);

682 i‡(
bp
 =
NULL
)

683 
bp
 = "(null)";

684 
p
 = 
bp
 + 
	`°æí
(bp);

688 
buf
[0] = 
fcode
;

689 
c_mîge
;

692 
buf
[0] = 
	`va_¨g
(
v
, );

693 
c_mîge
:

694 
p
 = (
bp
 = &
buf
[0]) + 1;

700 
f‹m©
--;

705 
k
 = (
n
 = 
p
 - 
bp
Ë+ 
¥efixÀngth
 + 
ŸhîÀngth
;

706 i‡(
width
 <
k
)

707 
cou¡
 +
k
;

710 
cou¡
 +
width
;

714 i‡(
Êagw‹d
 & 
PADZERO
)

716 i‡(!(
Êagw‹d
 & 
LZERO
))

718 
Êagw‹d
 |
LZERO
;

719 
lzîo
 = 
width
 - 
k
;

722 
lzîo
 +
width
 - 
k
;

725 
k
 = 
width
;

730 
	`PAD
(
_bœnks
, 
width
 - 
k
);

735 i‡(
¥efixÀngth
 != 0)

737 
	`PUT
(
¥efix
, 
¥efixÀngth
);

741 i‡(
Êagw‹d
 & 
LZERO
)

743 
	`PAD
(
_zî€s
, 
lzîo
);

747 i‡(
n
 > 0)

749 
	`PUT
(
bp
, 
n
);

752 
	}
}

756 
	$my•rötf
(*
obuf
, *
f‹m©
, ...)

759 
va_li°
 
v
;

760 
	`va_°¨t
(
v
, 
f‹m©
);

762  
	`myv•rötf
(
obuf
, 
f‹m©
, 
v
);

763 
	}
}

767 
	$myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
)

770 
buf
[2048];

772 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

773 
	`Âuts
(
buf
, 
°ªam
);

774 
	}
}

778 
	$myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...)

781 
buf
[2048];

784 
va_li°
 
v
;

785 
	`va_°¨t
(
v
, 
f‹m©
);

787 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

788 
	`Âuts
(
buf
, 
°ªam
);

789 
	}
}

791 #ifde‡
HOST_HAS_QWORD


793 
	#LL_MAX
 
	`LL
(9223372036854775807)

	)

794 
	#LL_MIN
 (-
LL_MAX
 - 1)

	)

795 
	#ULL_MAX
 (
	`ULL
(9223372036854775807Ë* ULL(2Ë+ 1)

	)

798 
sqw‹d_t


799 
	$my©osq
(*
≈å
, **
ídp
, 
ba£
)

801 *
s
, *
ßve
;

802 
√g©ive
, 
ovîÊow
;

803 
sqw‹d_t
 
cutoff
, 
cuéim
, 
i
;

804 
c
;

805 
î∫o
;

807 i‡(!
≈å
 || !*nptr)

808 
	`∑nic
("strtoll()Öassedá NULL string");

810 
s
 = 
≈å
;

813 
	`is•a˚
(()(*
s
)))

814 ++
s
;

815 i‡(*
s
 == '\0')

816 
noc⁄v
;

818 i‡(
ba£
 == 0)

820 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

821 
ba£
 = 16;

823 
ba£
 = 10;

826 i‡(
ba£
 <= 1 || base > 36)

827 
	`∑nic
("bogu†ba£: %d", 
ba£
);

830 i‡(*
s
 == '-')

832 
√g©ive
 = 1;

833 ++
s
;

835 i‡(*
s
 == '+')

837 
√g©ive
 = 0;

838 ++
s
;

841 
√g©ive
 = 0;

843 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

844 
s
 += 2;

847 
ßve
 = 
s
;

849 
cutoff
 = 
LL_MAX
 / (Ë
ba£
;

850 
cuéim
 = 
LL_MAX
 % (Ë
ba£
;

852 
ovîÊow
 = 0;

853 
i
 = 0;

854 
c
 = *
s
; c != '\0'; c = *++s)

856 i‡(
	`isdigô
 (
c
))

857 
c
 -= '0';

858 i‡(
	`ißÕha
 (
c
))

859 
c
 = 
	`touµî
(c) - 'A' + 10;

862 i‡(
c
 >
ba£
)

866 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

867 
ovîÊow
 = 1;

870 
i
 *(Ë
ba£
;

871 
i
 +
c
;

876 i‡(
s
 =
ßve
)

877 
noc⁄v
;

881 i‡(
ídp
 !
NULL
)

882 *
ídp
 = (*Ë
s
;

884 i‡(
ovîÊow
)

886 
î∫o
 = 
ERANGE
;

887  
√g©ive
 ? 
LL_MIN
 : 
LL_MAX
;

891 
î∫o
 = 0;

894  (
√g©ive
 ? -
i
 : i);

897 
noc⁄v
:

899 i‡(
ídp
 !
NULL
)

900 *
ídp
 = (*Ë
≈å
;

902 
	}
}

905 
qw‹d_t


906 
	$my©oq
(*
≈å
, **
ídp
, 
ba£
)

908 *
s
, *
ßve
;

909 
ovîÊow
;

910 
qw‹d_t
 
cutoff
, 
cuéim
, 
i
;

911 
c
;

912 
î∫o
;

914 i‡(!
≈å
 || !*nptr)

915 
	`∑nic
("strtoll()Öassedá NULL string");

917 
s
 = 
≈å
;

920 
	`is•a˚
(()(*
s
)))

921 ++
s
;

922 i‡(*
s
 == '\0')

923 
noc⁄v
;

925 i‡(
ba£
 == 0)

927 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

928 
ba£
 = 16;

930 
ba£
 = 10;

933 i‡(
ba£
 <= 1 || base > 36)

934 
	`∑nic
("bogu†ba£: %d", 
ba£
);

936 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

937 
s
 += 2;

940 
ßve
 = 
s
;

942 
cutoff
 = 
ULL_MAX
 / (Ë
ba£
;

943 
cuéim
 = 
ULL_MAX
 % (Ë
ba£
;

945 
ovîÊow
 = 0;

946 
i
 = 0;

947 
c
 = *
s
; c != '\0'; c = *++s)

949 i‡(
	`isdigô
 (
c
))

950 
c
 -= '0';

951 i‡(
	`ißÕha
 (
c
))

952 
c
 = 
	`touµî
(c) - 'A' + 10;

955 i‡(
c
 >
ba£
)

959 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

960 
ovîÊow
 = 1;

963 
i
 *(Ë
ba£
;

964 
i
 +
c
;

969 i‡(
s
 =
ßve
)

970 
noc⁄v
;

974 i‡(
ídp
 !
NULL
)

975 *
ídp
 = (*Ë
s
;

977 i‡(
ovîÊow
)

979 
î∫o
 = 
ERANGE
;

980  
ULL_MAX
;

984 
î∫o
 = 0;

987  
i
;

990 
noc⁄v
:

992 i‡(
ídp
 !
NULL
)

993 *
ídp
 = (*Ë
≈å
;

995 
	}
}

999 #ifde‡
GZIP_PATH


1002 *
	mty≥
;

1003 *
	mext
;

1004 *
	mcmd
;

1005 } 
	ggzcmds
[] = {

1017 
FILE
 *

1018 
	$gz›í
(*
‚ame
, *
ty≥
)

1020 
i
;

1021 *
cmd
 = 
NULL
, *
ext
;

1022 
FILE
 *
fd
;

1023 
°r
[2048];

1026 
ext
 = 
	`my°ºchr
(
‚ame
, '.');

1029 i‡(
ext
 !
NULL
 && *ext != '\0')

1031 
i
=0; i < 
	`N_ELT
(
gzcmds
); i++)

1033 i‡(!
	`°rcmp
(
gzcmds
[
i
].
ty≥
,Åy≥Ë&& !°rcmp(gzcmds[i].
ext
,Éxt))

1035 
cmd
 = 
gzcmds
[
i
].cmd;

1041 i‡(!
cmd
)

1044 
fd
 = 
	`f›í
(
‚ame
, 
ty≥
);

1049 
	`•rötf
(
°r
, 
cmd
, 
GZIP_PATH
, 
‚ame
);

1050 
fd
 = 
	`p›í
(
°r
, 
ty≥
);

1053  
fd
;

1054 
	}
}

1058 
	$gz˛o£
(
FILE
 *
fd
)

1061 i‡(
	`p˛o£
(
fd
) == -1)

1062 
	`f˛o£
(
fd
);

1063 
	}
}

1067 
FILE
 *

1068 
	$gz›í
(*
‚ame
, *
ty≥
)

1070  
	`f›í
(
‚ame
, 
ty≥
);

1071 
	}
}

1074 
	$gz˛o£
(
FILE
 *
fd
)

1076 
	`f˛o£
(
fd
);

1077 
	}
}

1083 
	#POLYNOMIAL
 0x04c11db7L

	)

1085 
	g¸c_öô
 = 
FALSE
;

1086 
	g¸c_èbÀ
[256];

1090 
	$¸c_gíèb
()

1092 
i
, 
j
;

1093 
w‹d_t
 
¸c_accum
;

1095 
i
=0; i < 256; i++)

1097 
¸c_accum
 = (()
i
 << 24);

1098 
j
=0; j < 8; j++)

1100 i‡(
¸c_accum
 & 0x80000000L)

1101 
¸c_accum
 = (¸c_accum << 1Ë^ 
POLYNOMIAL
;

1103 
¸c_accum
 = (crc_accum << 1);

1105 
¸c_èbÀ
[
i
] = 
¸c_accum
;

1108 
	}
}

1111 
w‹d_t


1112 
	$¸c
(
w‹d_t
 
¸c_accum
, w‹d_à
d©a
)

1114 
i
, 
j
;

1116 i‡(!
¸c_öô
)

1118 
	`¸c_gíèb
();

1119 
¸c_öô
 = 
TRUE
;

1122 
j
=0; j < (
w‹d_t
); j++)

1124 
i
 = (()(
¸c_accum
 >> 24Ë^ (
d©a
 >> (
j
*8))) & 0xff;

1125 
¸c_accum
 = (¸c_accum << 8Ë^ 
¸c_èbÀ
[
i
];

1127  
¸c_accum
;

1128 
	}
}

	@misc.h

52 #i‚de‡
MISC_H


53 
	#MISC_H


	)

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 
	~<°d¨g.h
>

58 
	~<°rög.h
>

59 
	~<sys/ty≥s.h
>

62 #i‚de‡
TRUE


63 
	#TRUE
 1

	)

65 #i‚de‡
FALSE


66 
	#FALSE
 0

	)

70 #i‚de‡
MAX


71 
	#MAX
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

73 #i‚de‡
MIN


74 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

78 
	#LLHIGH
(
L
Ë(()(((L)>>32Ë& 0xffffffff))

	)

79 
	#LLLOW
(
L
Ë(()((LË& 0xffffffff))

	)

82 
	#N_ELT
(
ARR
Ë((ARR)/((ARR)[0]))

	)

85 
	#ROUND_UP
(
N
,
ALIGN
Ë(((NË+ ((ALIGN)-1)Ë& ~((ALIGN)-1))

	)

86 
	#ROUND_DOWN
(
N
,
ALIGN
Ë((NË& ~((ALIGN)-1))

	)

89 
vîbo£
;

91 
¥ogøm_com∂ëe
;

94 
vîbo£_ªgs
;

97 
åiggî_ö°
;

99 #ifde‡
DEBUG


101 
debuggög
;

106 
Áèl_hook
((*
hook_‚
)(
FILE
 *
°ªam
));

108 #ifde‡
__GNUC__


110 
	#Áèl
(
fmt
, 
¨gs
...) \

111 
	`_Áèl
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

114 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

115 
	`__©åibuã__
 ((
n‹ëu∫
));

118 
	`Áèl
(*
fmt
, ...);

121 #ifde‡
__GNUC__


123 
	#∑nic
(
fmt
, 
¨gs
...) \

124 
	`_∑nic
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

127 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

128 
	`__©åibuã__
 ((
n‹ëu∫
));

131 
	`∑nic
(*
fmt
, ...);

134 #ifde‡
__GNUC__


136 
	#w¨n
(
fmt
, 
¨gs
...) \

137 
	`_w¨n
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

140 
	`_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

143 
	`w¨n
(*
fmt
, ...);

146 #ifde‡
__GNUC__


148 
	#öfo
(
fmt
, 
¨gs
...) \

149 
	`_öfo
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

152 
	`_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

155 
	`öfo
(*
fmt
, ...);

158 #ifde‡
DEBUG


160 #ifde‡
__GNUC__


162 
	#debug
(
fmt
, 
¨gs
...) \

164 i‡(
debuggög
) \

165 
	`_debug
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
); \

166 
	}
} 0)

	)

169 
_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

172 
debug
(*
fmt
, ...);

177 #ifde‡
__GNUC__


178 
	#debug
(
fmt
, 
¨gs
...)

	)

181 
	$debug
(*
fmt
, ...Ë{
	}
}

188 
my§™d
(
£ed
);

191 
myønd
();

196 
my°rdup
(*
s
);

200 
my°ºchr
(*
s
, 
c
);

205 
my°ricmp
(*
s1
, *
s2
);

209 *
gëc‹e
(
nbyãs
);

212 
log_ba£2
(
n
);

215 *
ñ≠£d_time
(
£c
);

223 
exåa˘l
(
w‹d
,

224 
pos
,

225 
num
);

227 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

228 
	#°πoul
 
°πﬁ


	)

234 *
myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
);

237 *
my•rötf
(*
obuf
, *
f‹m©
, ...);

240 
myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
);

243 
myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...);

245 #ifde‡
HOST_HAS_QWORD


248 
sqw‹d_t
 
my©osq
(*
≈å
, **
ídp
, 
ba£
);

251 
qw‹d_t
 
my©oq
(*
≈å
, **
ídp
, 
ba£
);

257 
FILE
 *
gz›í
(*
‚ame
, *
ty≥
);

260 
gz˛o£
(
FILE
 *
fd
);

263 
w‹d_t
 
¸c
(w‹d_à
¸c_accum
, w‹d_à
d©a
);

271 
	mbrk_poöt
;

272 
	mmm≠_íd
;

274 } 
	tAÕhaSy°emSèã
;

	@options.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#chdú
 
_chdú


	)

58 
	#gëcwd
 
_gëcwd


	)

60 
	~<°rög.h
>

61 
	~<˘y≥.h
>

62 
	~<Êﬂt.h
>

64 
	~"ho°.h
"

65 
	~"misc.h
"

66 
	~"›ti⁄s.h
"

69 
›t_odb_t
 *

70 
	$›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
)

72 
›t_odb_t
 *
odb
;

74 
odb
 = (
›t_odb_t
 *)
	`ˇŒoc
(1, (opt_odb_t));

75 i‡(!
odb
)

76 
	`Áèl
("out of virtual memory");

78 
odb
->
›ti⁄s
 = 
NULL
;

79 
odb
->
‹ph™_‚
 = orphan_fn;

80 
odb
->
hódî
 = 
NULL
;

81 
odb
->
nŸes
 = 
NULL
;

83  
odb
;

84 
	}
}

88 
	$›t_dñëe
(
›t_odb_t
 *
odb
)

90 
›t_›t_t
 *
›t
, *
›t_√xt
;

91 
›t_nŸe_t
 *
nŸe
, *
nŸe_√xt
;

94 
›t
=
odb
->
›ti⁄s
; o±; o±=
›t_√xt
)

96 
›t_√xt
 = 
›t
->
√xt
;

97 
›t
->
√xt
 = 
NULL
;

98 
	`‰ì
(
›t
);

102 
nŸe
 = 
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸê
nŸe_√xt
)

104 
nŸe_√xt
 = 
nŸe
->
√xt
;

105 
nŸe
->
√xt
 = 
NULL
;

106 
	`‰ì
(
nŸe
);

108 
odb
->
nŸes
 = 
NULL
;

110 
	`‰ì
(
odb
);

111 
	}
}

115 
	$add_›ti⁄
(
›t_odb_t
 *
odb
,

116 
›t_›t_t
 *
›t
)

118 
›t_›t_t
 *
ñt
, *
¥ev
;

121 i‡(
›t
->
«me
[0] != '-')

122 
	`∑nic
("›ti⁄ `%s' mu° sèπ wôhá `-'", 
›t
->
«me
);

125 
¥ev
=
NULL
, 
ñt
=
odb
->
›ti⁄s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

128 i‡(
ñt
->
«me
[0] =
›t
->«me[0] && !
	`°rcmp
(elt->name, opt->name))

129 
	`∑nic
("›ti⁄ `%s' i†mu…ùly deföed", 
›t
->
«me
);

132 i‡(
¥ev
 !
NULL
)

133 
¥ev
->
√xt
 = 
›t
;

135 
odb
->
›ti⁄s
 = 
›t
;

136 
›t
->
√xt
 = 
NULL
;

137 
	}
}

141 
	$›t_ªg_öt
(
›t_odb_t
 *
odb
,

142 *
«me
,

143 *
desc
,

144 *
v¨
,

145 
def_vÆ
,

146 
¥öt
,

147 *
f‹m©
)

149 
›t_›t_t
 *
›t
;

151 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

152 i‡(!
›t
)

153 
	`Áèl
("out of virtual memory");

155 
›t
->
«me
 =Çame;

156 
›t
->
desc
 = desc;

157 
›t
->
nv¨s
 = 1;

158 
›t
->
√…
 = 
NULL
;

159 
›t
->
f‹m©
 = format ? format : "%12d";

160 
›t
->
oc
 = 
oc_öt
;

161 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

162 
›t
->
¥öt
 =Örint;

163 
›t
->
ac¸ue
 = 
FALSE
;

166 
›t
->
√xt
 = 
NULL
;

167 
	`add_›ti⁄
(
odb
, 
›t
);

170 *
v¨
 = 
def_vÆ
;

171 
	}
}

175 
	$›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨s
,

179 
nv¨s
,

180 *
√…
,

181 *
def_vÆ
,

182 
¥öt
,

183 *
f‹m©
,

184 
ac¸ue
)

186 
i
;

187 
›t_›t_t
 *
›t
;

189 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

190 i‡(!
›t
)

191 
	`Áèl
("out of virtual memory");

193 
›t
->
«me
 =Çame;

194 
›t
->
desc
 = desc;

195 
›t
->
nv¨s
 =Çvars;

196 
›t
->
√…
 =Çelt;

197 
›t
->
f‹m©
 = format ? format : "%d";

198 
›t
->
oc
 = 
oc_öt
;

199 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = 
v¨s
;

200 
›t
->
¥öt
 =Örint;

201 
›t
->
ac¸ue
 =áccrue;

204 
›t
->
√xt
 = 
NULL
;

205 
	`add_›ti⁄
(
odb
, 
›t
);

208 
i
=0; i < *
√…
; i++)

209 
v¨s
[
i
] = 
def_vÆ
[i];

210 
	}
}

214 
	$›t_ªg_uöt
(
›t_odb_t
 *
odb
,

215 *
«me
,

216 *
desc
,

217 *
v¨
,

218 
def_vÆ
,

219 
¥öt
,

220 *
f‹m©
)

222 
›t_›t_t
 *
›t
;

224 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

225 i‡(!
›t
)

226 
	`Áèl
("out of virtual memory");

228 
›t
->
«me
 =Çame;

229 
›t
->
desc
 = desc;

230 
›t
->
nv¨s
 = 1;

231 
›t
->
√…
 = 
NULL
;

232 
›t
->
f‹m©
 = format ? format : "%12u";

233 
›t
->
oc
 = 
oc_uöt
;

234 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

235 
›t
->
¥öt
 =Örint;

236 
›t
->
ac¸ue
 = 
FALSE
;

239 
›t
->
√xt
 = 
NULL
;

240 
	`add_›ti⁄
(
odb
, 
›t
);

243 *
v¨
 = 
def_vÆ
;

244 
	}
}

248 
	$›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

249 *
«me
,

250 *
desc
,

251 *
v¨s
,

252 
nv¨s
,

253 *
√…
,

254 *
def_vÆ
,

255 
¥öt
,

256 *
f‹m©
,

257 
ac¸ue
)

259 
i
;

260 
›t_›t_t
 *
›t
;

262 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

263 i‡(!
›t
)

264 
	`Áèl
("out of virtual memory");

266 
›t
->
«me
 =Çame;

267 
›t
->
desc
 = desc;

268 
›t
->
nv¨s
 =Çvars;

269 
›t
->
√…
 =Çelt;

270 
›t
->
f‹m©
 = format ? format : "%u";

271 
›t
->
oc
 = 
oc_uöt
;

272 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = 
v¨s
;

273 
›t
->
¥öt
 =Örint;

274 
›t
->
ac¸ue
 =áccrue;

277 
›t
->
√xt
 = 
NULL
;

278 
	`add_›ti⁄
(
odb
, 
›t
);

281 
i
=0; i < *
√…
; i++)

282 
v¨s
[
i
] = 
def_vÆ
[i];

283 
	}
}

287 
	$›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨
,

291 
def_vÆ
,

292 
¥öt
,

293 *
f‹m©
)

295 
›t_›t_t
 *
›t
;

297 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

298 i‡(!
›t
)

299 
	`Áèl
("out of virtual memory");

301 
›t
->
«me
 =Çame;

302 
›t
->
desc
 = desc;

303 
›t
->
nv¨s
 = 1;

304 
›t
->
√…
 = 
NULL
;

305 
›t
->
f‹m©
 = format ? format : "%12.4f";

306 
›t
->
oc
 = 
oc_Êﬂt
;

307 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

308 
›t
->
¥öt
 =Örint;

309 
›t
->
ac¸ue
 = 
FALSE
;

312 
›t
->
√xt
 = 
NULL
;

313 
	`add_›ti⁄
(
odb
, 
›t
);

316 *
v¨
 = 
def_vÆ
;

317 
	}
}

321 
	$›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

322 *
«me
,

323 *
desc
,

324 *
v¨s
,

325 
nv¨s
,

326 *
√…
,

327 *
def_vÆ
,

328 
¥öt
,

329 *
f‹m©
,

330 
ac¸ue
)

332 
i
;

333 
›t_›t_t
 *
›t
;

335 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

336 i‡(!
›t
)

337 
	`Áèl
("out of virtual memory");

339 
›t
->
«me
 =Çame;

340 
›t
->
desc
 = desc;

341 
›t
->
nv¨s
 =Çvars;

342 
›t
->
√…
 =Çelt;

343 
›t
->
f‹m©
 = format ? format : "%.4f";

344 
›t
->
oc
 = 
oc_Êﬂt
;

345 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = 
v¨s
;

346 
›t
->
¥öt
 =Örint;

347 
›t
->
ac¸ue
 =áccrue;

350 
›t
->
√xt
 = 
NULL
;

351 
	`add_›ti⁄
(
odb
, 
›t
);

354 
i
=0; i < *
√…
; i++)

355 
v¨s
[
i
] = 
def_vÆ
[i];

356 
	}
}

360 
	$›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

361 *
«me
,

362 *
desc
,

363 *
v¨
,

364 
def_vÆ
,

365 
¥öt
,

366 *
f‹m©
)

368 
›t_›t_t
 *
›t
;

370 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

371 i‡(!
›t
)

372 
	`Áèl
("out of virtual memory");

374 
›t
->
«me
 =Çame;

375 
›t
->
desc
 = desc;

376 
›t
->
nv¨s
 = 1;

377 
›t
->
√…
 = 
NULL
;

378 
›t
->
f‹m©
 = format ? format : "%12.4f";

379 
›t
->
oc
 = 
oc_doubÀ
;

380 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

381 
›t
->
¥öt
 =Örint;

382 
›t
->
ac¸ue
 = 
FALSE
;

385 
›t
->
√xt
 = 
NULL
;

386 
	`add_›ti⁄
(
odb
, 
›t
);

389 *
v¨
 = 
def_vÆ
;

390 
	}
}

394 
	$›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

395 *
«me
,

396 *
desc
,

397 *
v¨s
,

398 
nv¨s
,

399 *
√…
,

400 *
def_vÆ
,

401 
¥öt
,

402 *
f‹m©
,

403 
ac¸ue
)

405 
i
;

406 
›t_›t_t
 *
›t
;

408 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

409 i‡(!
›t
)

410 
	`Áèl
("out of virtual memory");

412 
›t
->
«me
 =Çame;

413 
›t
->
desc
 = desc;

414 
›t
->
nv¨s
 =Çvars;

415 
›t
->
√…
 =Çelt;

416 
›t
->
f‹m©
 = format ? format : "%.4f";

417 
›t
->
oc
 = 
oc_doubÀ
;

418 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = 
v¨s
;

419 
›t
->
¥öt
 =Örint;

420 
›t
->
ac¸ue
 =áccrue;

423 
›t
->
√xt
 = 
NULL
;

424 
	`add_›ti⁄
(
odb
, 
›t
);

427 
i
=0; i < *
√…
; i++)

428 
v¨s
[
i
] = 
def_vÆ
[i];

429 
	}
}

433 
	$böd_to_íum
(*
°r
,

434 **
em≠
,

435 *
evÆ
,

436 
em≠_sz
,

437 *
ªs
)

439 
i
;

442 
i
=0; i<
em≠_sz
; i++)

444 i‡(!
	`°rcmp
(
°r
, 
em≠
[
i
]))

446 i‡(
evÆ
)

449 *
ªs
 = 
evÆ
[
i
];

454 *
ªs
 = 
i
;

456  
TRUE
;

461 *
ªs
 = -1;

462  
FALSE
;

463 
	}
}

467 
	$böd_to_°r
(
vÆ
,

468 **
em≠
,

469 *
evÆ
,

470 
em≠_sz
)

472 
i
;

474 i‡(
evÆ
)

477 
i
=0; i<
em≠_sz
; i++)

479 i‡(
evÆ
[
i
] =
vÆ
)

482  
em≠
[
i
];

486  
NULL
;

491 i‡(
vÆ
 >
em≠_sz
)

494  
NULL
;

497  
em≠
[
vÆ
];

499 
	}
}

505 
	$›t_ªg_íum
(
›t_odb_t
 *
odb
,

506 *
«me
,

507 *
desc
,

508 *
v¨
,

509 *
def_vÆ
,

510 **
em≠
,

511 *
evÆ
,

512 
em≠_sz
,

513 
¥öt
,

514 *
f‹m©
)

516 
íum_vÆ
;

517 
›t_›t_t
 *
›t
;

519 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

520 i‡(!
›t
)

521 
	`Áèl
("out of virtual memory");

523 
›t
->
«me
 =Çame;

524 
›t
->
desc
 = desc;

525 
›t
->
nv¨s
 = 1;

526 
›t
->
√…
 = 
NULL
;

527 
›t
->
f‹m©
 = format ? format : "%12s";

528 
›t
->
oc
 = 
oc_íum
;

529 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

530 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

531 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

532 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

533 i‡(
def_vÆ
)

535 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

536 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

539 
íum_vÆ
 = 0;

540 
›t
->
¥öt
 =Örint;

541 
›t
->
ac¸ue
 = 
FALSE
;

544 
›t
->
√xt
 = 
NULL
;

545 
	`add_›ti⁄
(
odb
, 
›t
);

548 *
v¨
 = 
íum_vÆ
;

549 
	}
}

555 
	$›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

556 *
«me
,

557 *
desc
,

558 *
v¨s
,

559 
nv¨s
,

560 *
√…
,

561 *
def_vÆ
,

562 **
em≠
,

563 *
evÆ
,

564 
em≠_sz
,

565 
¥öt
,

566 *
f‹m©
,

567 
ac¸ue
)

569 
i
, 
íum_vÆ
;

570 
›t_›t_t
 *
›t
;

572 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

573 i‡(!
›t
)

574 
	`Áèl
("out of virtual memory");

576 
›t
->
«me
 =Çame;

577 
›t
->
desc
 = desc;

578 
›t
->
nv¨s
 =Çvars;

579 
›t
->
√…
 =Çelt;

580 
›t
->
f‹m©
 = format ? format : "%s";

581 
›t
->
oc
 = 
oc_íum
;

582 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

583 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

584 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

585 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

586 i‡(
def_vÆ
)

588 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

589 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

592 
íum_vÆ
 = 0;

593 
›t
->
¥öt
 =Örint;

594 
›t
->
ac¸ue
 =áccrue;

597 
›t
->
√xt
 = 
NULL
;

598 
	`add_›ti⁄
(
odb
, 
›t
);

601 
i
=0; i < *
√…
; i++)

602 
v¨s
[
i
] = 
íum_vÆ
;

603 
	}
}

606 
	#NUM_FLAGS
 28

	)

607 *
	gÊag_em≠
[
NUM_FLAGS
] = {

613 
	gÊag_evÆ
[
NUM_FLAGS
] = {

620 
	$›t_ªg_Êag
(
›t_odb_t
 *
odb
,

621 *
«me
,

622 *
desc
,

623 *
v¨
,

624 
def_vÆ
,

625 
¥öt
,

626 *
f‹m©
)

628 
›t_›t_t
 *
›t
;

630 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

631 i‡(!
›t
)

632 
	`Áèl
("out of virtual memory");

634 
›t
->
«me
 =Çame;

635 
›t
->
desc
 = desc;

636 
›t
->
nv¨s
 = 1;

637 
›t
->
√…
 = 
NULL
;

638 
›t
->
f‹m©
 = format ? format : "%12s";

639 
›t
->
oc
 = 
oc_Êag
;

640 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

641 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

642 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

643 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

644 
›t
->
¥öt
 =Örint;

645 
›t
->
ac¸ue
 = 
FALSE
;

648 
›t
->
√xt
 = 
NULL
;

649 
	`add_›ti⁄
(
odb
, 
›t
);

652 *
v¨
 = 
def_vÆ
;

653 
	}
}

657 
	$›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

658 *
«me
,

659 *
desc
,

660 *
v¨s
,

661 
nv¨s
,

662 *
√…
,

663 *
def_vÆ
,

664 
¥öt
,

665 *
f‹m©
,

666 
ac¸ue
)

668 
i
;

669 
›t_›t_t
 *
›t
;

671 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

672 i‡(!
›t
)

673 
	`Áèl
("out of virtual memory");

675 
›t
->
«me
 =Çame;

676 
›t
->
desc
 = desc;

677 
›t
->
nv¨s
 =Çvars;

678 
›t
->
√…
 =Çelt;

679 
›t
->
f‹m©
 = format ? format : "%s";

680 
›t
->
oc
 = 
oc_Êag
;

681 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

682 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

683 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

684 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

685 
›t
->
¥öt
 =Örint;

686 
›t
->
ac¸ue
 =áccrue;

689 
›t
->
√xt
 = 
NULL
;

690 
	`add_›ti⁄
(
odb
, 
›t
);

693 
i
=0; i < *
√…
; i++)

694 
v¨s
[
i
] = 
def_vÆ
[i];

695 
	}
}

699 
	$›t_ªg_°rög
(
›t_odb_t
 *
odb
,

700 *
«me
,

701 *
desc
,

702 **
v¨
,

703 *
def_vÆ
,

704 
¥öt
,

705 *
f‹m©
)

707 
›t_›t_t
 *
›t
;

709 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

710 i‡(!
›t
)

711 
	`Áèl
("out of virtual memory");

713 
›t
->
«me
 =Çame;

714 
›t
->
desc
 = desc;

715 
›t
->
nv¨s
 = 1;

716 
›t
->
√…
 = 
NULL
;

717 
›t
->
f‹m©
 = format ? format : "%12s";

718 
›t
->
oc
 = 
oc_°rög
;

719 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = var;

720 
›t
->
¥öt
 =Örint;

721 
›t
->
ac¸ue
 = 
FALSE
;

724 
›t
->
√xt
 = 
NULL
;

725 
	`add_›ti⁄
(
odb
, 
›t
);

728 *
v¨
 = 
def_vÆ
;

729 
	}
}

733 
	$›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

734 *
«me
,

735 *
desc
,

736 **
v¨s
,

737 
nv¨s
,

738 *
√…
,

739 **
def_vÆ
,

740 
¥öt
,

741 *
f‹m©
,

742 
ac¸ue
)

744 
i
;

745 
›t_›t_t
 *
›t
;

747 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

748 i‡(!
›t
)

749 
	`Áèl
("out of virtual memory");

751 
›t
->
«me
 =Çame;

752 
›t
->
desc
 = desc;

753 
›t
->
nv¨s
 =Çvars;

754 
›t
->
√…
 =Çelt;

755 
›t
->
f‹m©
 = format ? format : "%s";

756 
›t
->
oc
 = 
oc_°rög
;

757 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = 
v¨s
;

758 
›t
->
¥öt
 =Örint;

759 
›t
->
ac¸ue
 =áccrue;

762 
›t
->
√xt
 = 
NULL
;

763 
	`add_›ti⁄
(
odb
, 
›t
);

766 
i
=0; i < *
√…
; i++)

767 
v¨s
[
i
] = 
def_vÆ
[i];

768 
	}
}

772 
	$¥o˚ss_›ti⁄
(
›t_odb_t
 *
odb
,

773 
ödex
,

774 
¨gc
,

775 **
¨gv
)

777 
˙t
, 
ít
, 
nv¨s
;

778 *
ídp
;

779 
tmp
;

780 
›t_›t_t
 *
›t
;

783 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

785 i‡(!
	`°rcmp
(
›t
->
«me
, 
¨gv
[
ödex
]))

788 i‡(!
›t
)

791 
	`Áèl
("›ti⁄ `%s' i†undeföed", 
¨gv
[
ödex
]);

793 
ödex
++;

796 
›t
->
oc
)

798 
oc_öt
:

800 i‡(
ödex
 >
¨gc


801 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

804 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

806 
˙t
 = 0;

807 i‡(
›t
->
ac¸ue
)

809 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

810 
nv¨s
 = 1;

811 i‡(
ít
 >
›t
->
nv¨s
)

812 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

816 
ít
 = 0;

817 i‡(
›t
->
√…
)

818 *
›t
->
√…
 = 0;

819 
nv¨s
 = 
›t
->nvars;

822 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

823 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

825 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
[
ít
] = 
	`°πﬁ
(
¨gv
[
ödex
], &
ídp
, 0);

826 i‡(*
ídp
)

829 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

830 
¨gv
[
ödex
], 
›t
->
«me
);

833 i‡(
›t
->
√…
)

834 (*
›t
->
√…
)++;

835 
˙t
++; 
ödex
++; 
ít
++;

838 
oc_uöt
:

840 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

843 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

845 
˙t
 = 0;

846 i‡(
›t
->
ac¸ue
)

848 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

849 
nv¨s
 = 1;

850 i‡(
ít
 >
›t
->
nv¨s
)

851 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

855 
ít
 = 0;

856 i‡(
›t
->
√…
)

857 *
›t
->
√…
 = 0;

858 
nv¨s
 = 
›t
->nvars;

861 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

863 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
[
ít
] = 
	`°πoul
(
¨gv
[
ödex
], &
ídp
, 0);

864 i‡(*
ídp
)

867 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

868 
¨gv
[
ödex
], 
›t
->
«me
);

871 i‡(
›t
->
√…
)

872 (*
›t
->
√…
)++;

873 
˙t
++; 
ödex
++; 
ít
++;

876 
oc_Êﬂt
:

878 i‡(
ödex
 >
¨gc


879 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

882 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

884 
˙t
 = 0;

885 i‡(
›t
->
ac¸ue
)

887 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

888 
nv¨s
 = 1;

889 i‡(
ít
 >
›t
->
nv¨s
)

890 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

894 
ít
 = 0;

895 i‡(
›t
->
√…
)

896 *
›t
->
√…
 = 0;

897 
nv¨s
 = 
›t
->nvars;

900 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

901 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

903 
tmp
 = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

904 i‡(*
ídp
)

907 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

908 
¨gv
[
ödex
], 
›t
->
«me
);

910 i‡(
tmp
 < 
FLT_MIN
 ||Åm∞> 
FLT_MAX
)

913 
	`Áèl
("FP over/underflow forárgument `%s' of option `%s'",

914 
¨gv
[
ödex
], 
›t
->
«me
);

917 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
ít
] = ()
tmp
;

918 i‡(
›t
->
√…
)

919 (*
›t
->
√…
)++;

920 
˙t
++; 
ödex
++; 
ít
++;

923 
oc_doubÀ
:

925 i‡(
ödex
 >
¨gc


926 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

929 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

931 
˙t
 = 0;

932 i‡(
›t
->
ac¸ue
)

934 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

935 
nv¨s
 = 1;

936 i‡(
ít
 >
›t
->
nv¨s
)

937 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

941 
ít
 = 0;

942 i‡(
›t
->
√…
)

943 *
›t
->
√…
 = 0;

944 
nv¨s
 = 
›t
->nvars;

947 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

948 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

950 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
ít
] = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

951 i‡(*
ídp
)

954 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

955 
¨gv
[
ödex
], 
›t
->
«me
);

958 i‡(
›t
->
√…
)

959 (*
›t
->
√…
)++;

960 
˙t
++; 
ödex
++; 
ít
++;

963 
oc_íum
:

965 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

968 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

970 
˙t
 = 0;

971 i‡(
›t
->
ac¸ue
)

973 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

974 
nv¨s
 = 1;

975 i‡(
ít
 >
›t
->
nv¨s
)

976 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

980 
ít
 = 0;

981 i‡(
›t
->
√…
)

982 *
›t
->
√…
 = 0;

983 
nv¨s
 = 
›t
->nvars;

986 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

988 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

989 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

990 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

991 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

992 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

995 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

996 
¨gv
[
ödex
], 
›t
->
«me
);

999 i‡(
›t
->
√…
)

1000 (*
›t
->
√…
)++;

1001 
˙t
++; 
ödex
++; 
ít
++;

1004 
oc_Êag
:

1006 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1009 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[0] = 
TRUE
;

1013 
˙t
 = 0;

1014 i‡(
›t
->
ac¸ue
)

1016 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1017 
nv¨s
 = 1;

1018 i‡(
ít
 >
›t
->
nv¨s
)

1019 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1023 
ít
 = 0;

1024 i‡(
›t
->
√…
)

1025 *
›t
->
√…
 = 0;

1026 
nv¨s
 = 
›t
->nvars;

1028 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1030 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1031 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1032 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1033 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1034 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1037 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
] = 
TRUE
;

1043 i‡(
›t
->
√…
)

1044 (*
›t
->
√…
)++;

1045 
˙t
++; 
ödex
++; 
ít
++;

1049 
oc_°rög
:

1051 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1054 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1056 
˙t
 = 0;

1057 i‡(
›t
->
ac¸ue
)

1059 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1060 
nv¨s
 = 1;

1061 i‡(
ít
 >
›t
->
nv¨s
)

1062 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1066 
ít
 = 0;

1067 i‡(
›t
->
√…
)

1068 *
›t
->
√…
 = 0;

1069 
nv¨s
 = 
›t
->nvars;

1072 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1074 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
ít
] = 
¨gv
[
ödex
];

1075 i‡(
›t
->
√…
)

1076 (*
›t
->
√…
)++;

1077 
˙t
++; 
ödex
++; 
ít
++;

1081 
	`∑nic
("bogus option class");

1084  
ödex
;

1085 
	}
}

1088 
¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
);

1089 
dump_c⁄fig
(
›t_odb_t
 *
odb
, *
‚ame
);

1093 
	$__›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1094 
¨gc
,

1095 **
¨gv
,

1096 
dïth
)

1098 
ödex
, 
do_dumpc⁄fig
;

1099 *
dumpc⁄fig_«me
;

1101 
ödex
 = 0;

1102 
do_dumpc⁄fig
 = 
FALSE
;

1103 
dumpc⁄fig_«me
 = 
NULL
;

1105 
ödex
 < 
¨gc
)

1108 
ödex
 < 
¨gc
 && 
¨gv
[index][0] != '-')

1110 i‡(
dïth
 > 0)

1113 
	`Áèl
("orphan `%s'Éncountered during config fileÖrocessing",

1114 
¨gv
[
ödex
]);

1117 i‡(
odb
->
‹ph™_‚
)

1119 i‡(!
odb
->
	`‹ph™_‚
(
ödex
+1, 
¨gc
, 
¨gv
))

1122 
d⁄e_¥o˚ssög
;

1128 
	`Áèl
("‹ph™árgumíà`%s' wa†un˛aimed", 
¨gv
[
ödex
]);

1134 i‡(
ödex
 =
¨gc
)

1137 
d⁄e_¥o˚ssög
;

1142 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-config"))

1145 
ödex
++;

1146 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1149 
	`Áèl
("option `-config'Ñequiresánárgument");

1151 
	`¥o˚ss_fûe
(
odb
, 
¨gv
[
ödex
], 
dïth
);

1152 
ödex
++;

1154 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-dumpconfig"))

1157 
do_dumpc⁄fig
 = 
TRUE
;

1159 
ödex
++;

1160 i‡(
ödex
 >
¨gc


1161 || (
¨gv
[
ödex
][0] == '-' &&árgv[index][1] != '\0'))

1164 
	`Áèl
("option `-dumpconfig'Ñequiresánárgument");

1166 
dumpc⁄fig_«me
 = 
¨gv
[
ödex
];

1167 
ödex
++;

1172 
ödex
 = 
	`¥o˚ss_›ti⁄
(
odb
, index, 
¨gc
, 
¨gv
);

1175 
d⁄e_¥o˚ssög
:

1177 i‡(
do_dumpc⁄fig
)

1178 
	`dump_c⁄fig
(
odb
, 
dumpc⁄fig_«me
);

1179 
	}
}

1183 
	$›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1184 
¨gc
,

1185 **
¨gv
)

1188 i‡(
¨gc
 < 2)

1192 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
-1, 
¨gv
+1, 0);

1193 
	}
}

1196 
	#MAX_LINE_ARGS
 256

	)

1197 
	#MAX_FILENAME_LEN
 1024

	)

1199 
	$¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
)

1201 
œrgc
;

1202 *
œrgv
[
MAX_LINE_ARGS
];

1203 
löe
[1024], *
p
, *
q
;

1204 
cwd
[
MAX_FILENAME_LEN
];

1205 *
hódî
;

1206 
FILE
 *
fd
;

1208 
fd
 = 
	`f›í
(
‚ame
, "r");

1209 i‡(!
fd
)

1210 
	`Áèl
("couldÇŸ o≥¿c⁄figuøti⁄ fûê`%s'", 
‚ame
);

1212 i‡(!
	`gëcwd
(
cwd
, 
MAX_FILENAME_LEN
))

1213 
	`Áèl
("can't get cwd");

1215 
hódî
 = 
	`°ºchr
(
‚ame
, '/');

1216 i‡(
hódî
 !
NULL
)

1219 *
hódî
 = '\0';

1220 i‡(
	`chdú
(
‚ame
) == -1)

1221 
	`Áèl
("ˇn'àchdúÅÿ%s\n", 
‚ame
);

1222 *
hódî
 = '/';

1225 !
	`„of
(
fd
))

1227 
löe
[0] = '\n';

1229 
	`fgës
(
löe
, 1024, 
fd
);

1230 i‡(
löe
[0] == '\0' ||Üine[0] == '\n')

1232 i‡(
löe
[
	`°æí
(line)-1] == '\n')

1233 
löe
[
	`°æí
(line)-1] = '\0';

1236 
œrgc
 = 0; 
p
 = 
löe
;

1237 *
p
)

1240 *
p
 != '\0' && (*p == ' ' || *p == '\t'))

1241 
p
++;

1244 i‡(*
p
 == '\0' || *p == '#')

1248 
q
 = 
p
;

1249 *
q
 != '\0' && *q != ' ' && *q != '\t')

1250 
q
++;

1251 i‡(*
q
)

1253 *
q
 = '\0';

1254 
q
++;

1258 
œrgv
[
œrgc
++] = 
	`my°rdup
(
p
);

1260 i‡(
œrgc
 =
MAX_LINE_ARGS
)

1262 i‡(
	`chdú
(
cwd
) == -1)

1263 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1264 
	`Áèl
("›ti⁄Üöêtoÿcom∂ex i¿fûê`%s'", 
‚ame
);

1268 
p
 = 
q
;

1272 i‡(
œrgc
 > 0)

1273 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
œrgc
, 
œrgv
, 
dïth
+1);

1277 
	`f˛o£
(
fd
);

1279 i‡(
	`chdú
(
cwd
) == -1)

1280 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1281 
	}
}

1285 
	$›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

1286 
FILE
 *
fd
)

1288 
i
, 
√…
;

1290 
›t
->
oc
)

1292 
oc_öt
:

1293 i‡(
›t
->
√…
)

1294 
√…
 = *(
›t
->nelt);

1296 
√…
 = 1;

1297 
i
=0; i<
√…
; i++)

1299 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_öt
.
v¨
[
i
]);

1300 
	`Ârötf
(
fd
, " ");

1303 
oc_uöt
:

1304 i‡(
›t
->
√…
)

1305 
√…
 = *(
›t
->nelt);

1307 
√…
 = 1;

1308 
i
=0; i<
√…
; i++)

1310 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_uöt
.
v¨
[
i
]);

1311 
	`Ârötf
(
fd
, " ");

1314 
oc_Êﬂt
:

1315 i‡(
›t
->
√…
)

1316 
√…
 = *(
›t
->nelt);

1318 
√…
 = 1;

1319 
i
=0; i<
√…
; i++)

1321 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, ()›t->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
i
]);

1322 
	`Ârötf
(
fd
, " ");

1325 
oc_doubÀ
:

1326 i‡(
›t
->
√…
)

1327 
√…
 = *(
›t
->nelt);

1329 
√…
 = 1;

1330 
i
=0; i<
√…
; i++)

1332 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
i
]);

1333 
	`Ârötf
(
fd
, " ");

1336 
oc_íum
:

1337 i‡(
›t
->
√…
)

1338 
√…
 = *(
›t
->nelt);

1340 
√…
 = 1;

1341 
i
=0; i<
√…
; i++)

1343 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1344 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1345 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1346 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1347 i‡(!
e°r
)

1348 
	`∑nic
("couldÇot bindÉnum `%d' for option `%s'",

1349 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1351 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1352 
	`Ârötf
(
fd
, " ");

1355 
oc_Êag
:

1356 i‡(
›t
->
√…
)

1357 
√…
 = *(
›t
->nelt);

1359 
√…
 = 1;

1360 
i
=0; i<
√…
; i++)

1362 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1363 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1364 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1365 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1366 i‡(!
e°r
)

1367 
	`∑nic
("couldÇot bind boolean `%d' for option `%s'",

1368 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1370 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1371 
	`Ârötf
(
fd
, " ");

1374 
oc_°rög
:

1375 i‡(!
›t
->
nv¨s
)

1377 
	`Ârötf
(
fd
, "%12s ", "<null>");

1380 i‡(
›t
->
√…
)

1381 
√…
 = *(
›t
->nelt);

1383 
√…
 = 1;

1384 i‡(
√…
 == 0)

1386 
	`Ârötf
(
fd
, "%12s ", "<null>");

1391 
i
=0; i<
√…
; i++)

1393 
	`Ârötf
(
fd
, 
›t
->
f‹m©
,

1394 (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1395 ? 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1397 
	`Ârötf
(
fd
, " ");

1402 
	`∑nic
("bogus option class");

1404 
	}
}

1408 
	$¥öt_›ti⁄_hódî
(
›t_odb_t
 *
odb
,

1409 
FILE
 *
fd
)

1411 i‡(!
odb
->
hódî
)

1414 
	`Ârötf
(
fd
, "\n%s\n", 
odb
->
hódî
);

1415 
	}
}

1419 
	$¥öt_›ti⁄_nŸes
(
›t_odb_t
 *
odb
,

1420 
FILE
 *
fd
)

1422 
›t_nŸe_t
 *
nŸe
;

1424 i‡(!
odb
->
nŸes
)

1427 
	`Ârötf
(
fd
, "\n");

1428 
nŸe
=
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸeÚŸe->
√xt
)

1429 
	`Ârötf
(
fd
, "%s\n", 
nŸe
->note);

1430 
	`Ârötf
(
fd
, "\n");

1431 
	}
}

1434 
›t_›t_t
 
	gdumpc⁄fig_›t
 =

1435 { 
NULL
, "-dumpconfig", "dump configurationÅoá file",

1436 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1437 
›t_›t_t
 
	gc⁄fig_›t
 =

1438 { &
dumpc⁄fig_›t
, "-config", "load configuration fromá file",

1439 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1440 
›t_›t_t
 *
	gbuûtö_›ti⁄s
 = &
c⁄fig_›t
;

1444 
	$›t_nuŒ_°rög
(
›t_›t_t
 *
›t
)

1446  (
›t
 !
NULL


1447 && 
›t
->
oc
 =
oc_°rög


1448 && (
›t
->
nv¨s
 == 0

1449 || (
›t
->
√…
 !
NULL
 && *opt->nelt == 0)

1450 || (
›t
->
√…
 =
NULL


1451 && (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 =
NULL


1452 || 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[0] =
NULL
))));

1453 
	}
}

1457 
	$›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

1458 
FILE
 *
fd
,

1459 
ãr£
,

1460 
nŸes
)

1462 
›t_›t_t
 *
›t
;

1464 i‡(!
odb
)

1471 i‡(
nŸes
)

1472 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1475 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1477 i‡(
ãr£
)

1478 
	`Ârötf
(
fd
, "# %-27†# %s\n", 
›t
->
«me
, o±->
desc
);

1481 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1482 
	`Ârötf
(
fd
, "# %-22s\n\n", 
›t
->
«me
);

1487 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1489 i‡(
ãr£
)

1491 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1492 
	`Ârötf
(
fd
, "# %-14†", 
›t
->
«me
);

1494 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1495 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1496 i‡(
›t
->
desc
)

1497 
	`Ârötf
(
fd
, "# %-22s", 
›t
->
desc
);

1498 
	`Ârötf
(
fd
, "\n");

1502 i‡(
›t
->
desc
)

1503 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1504 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1505 
	`Ârötf
(
fd
, "# %-20†", 
›t
->
«me
);

1507 
	`Ârötf
(
fd
, "%-22†", 
›t
->
«me
);

1508 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1509 
	`Ârötf
(
fd
, "\n\n");

1514 i‡(
nŸes
)

1515 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1516 
	}
}

1520 
	$¥öt_hñp
(
›t_›t_t
 *
›t
,

1521 
FILE
 *
fd
)

1523 *
s
 = 
NULL
;

1525 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1526 
›t
->
oc
)

1528 
oc_öt
:

1529 i‡(
›t
->
nv¨s
 == 1)

1530 
s
 = "<int>";

1532 
s
 = "<intÜist...>";

1534 
oc_uöt
:

1535 i‡(
›t
->
nv¨s
 == 1)

1536 
s
 = "<uint>";

1538 
s
 = "<uintÜist...>";

1540 
oc_Êﬂt
:

1541 i‡(
›t
->
nv¨s
 == 1)

1542 
s
 = "<float>";

1544 
s
 = "<floatÜist...>";

1546 
oc_doubÀ
:

1547 i‡(
›t
->
nv¨s
 == 1)

1548 
s
 = "<double>";

1550 
s
 = "<doubleÜist...>";

1552 
oc_íum
:

1553 i‡(
›t
->
nv¨s
 == 1)

1554 
s
 = "<enum>";

1556 
s
 = "<enumÜist...>";

1558 
oc_Êag
:

1559 i‡(
›t
->
nv¨s
 == 1)

1560 
s
 = "<true|false>";

1562 
s
 = "<true|falseÜist...>";

1564 
oc_°rög
:

1565 i‡(
›t
->
nv¨s
 == 0 || opt->nvars == 1)

1566 
s
 = "<string>";

1568 
s
 = "<stringÜist...>";

1571 
	`∑nic
("bogus option class");

1573 
	`Ârötf
(
fd
, "%-16†# ", 
s
);

1574 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1575 
	`Ârötf
(
fd
, "# %-22s\n", 
›t
->
desc
);

1576 
	}
}

1580 
	$›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

1581 
FILE
 *
fd
)

1583 
›t_›t_t
 *
›t
;

1586 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1588 
	`Ârötf
(
fd
, "#\n");

1589 
	`Ârötf
(
fd
, "%-16s %-16s # %12s # %-22s\n",

1591 
	`Ârötf
(
fd
, "#\n");

1594 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1595 
	`¥öt_hñp
(
›t
, 
fd
);

1598 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1599 
	`¥öt_hñp
(
›t
, 
fd
);

1602 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1603 
	}
}

1607 
	$dump_c⁄fig
(
›t_odb_t
 *
odb
,

1608 *
‚ame
)

1610 
FILE
 *
fd
;

1613 i‡(!
	`°rcmp
(
‚ame
, "-"))

1614 
fd
 = 
°dîr
;

1617 
fd
 = 
	`f›í
(
‚ame
, "w");

1618 i‡(!
fd
)

1619 
	`Áèl
("couldÇŸ o≥¿fûê`%s'", 
‚ame
);

1623 
	`›t_¥öt_›ti⁄s
(
odb
, 
fd
, 
FALSE
, FALSE);

1626 i‡(
fd
 !
°dout
 && fd !
°dîr
)

1627 
	`f˛o£
(
fd
);

1628 
	}
}

1631 
›t_›t_t
 *

1632 
	$›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

1633 *
›t_«me
)

1635 
›t_›t_t
 *
›t
;

1638 
›t
 = 
buûtö_›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1640 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1643  
›t
;

1648 
›t
 = 
odb
->
›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1650 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1653  
›t
;

1657  
NULL
;

1658 
	}
}

1662 
	$›t_ªg_hódî
(
›t_odb_t
 *
odb
,

1663 *
hódî
)

1665 
odb
->
hódî
 = header;

1666 
	}
}

1670 
	$›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

1671 *
nŸe_°r
)

1673 
›t_nŸe_t
 *
nŸe
, *
ñt
, *
¥ev
;

1675 
nŸe
 = (
›t_nŸe_t
 *)
	`ˇŒoc
(1, (opt_note_t));

1676 i‡(!
nŸe
)

1677 
	`Áèl
("out of virtual memory");

1680 
nŸe
->
√xt
 = 
NULL
;

1681 
nŸe
->nŸê
nŸe_°r
;

1684 
¥ev
=
NULL
, 
ñt
=
odb
->
nŸes
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

1687 i‡(
¥ev
 !
NULL
)

1688 
¥ev
->
√xt
 = 
nŸe
;

1690 
odb
->
nŸes
 = 
nŸe
;

1691 
nŸe
->
√xt
 = 
NULL
;

1692 
	}
}

	@options.h

52 #i‚de‡
OPTIONS_H


53 
	#OPTIONS_H


	)

67 
	e›t_˛ass_t
 {

68 
	moc_öt
 = 0,

69 
	moc_uöt
,

70 
	moc_Êﬂt
,

71 
	moc_doubÀ
,

72 
	moc_íum
,

73 
	moc_Êag
,

74 
	moc_°rög
,

75 
	moc_NUM


79 
	s›t_›t_t
 {

80 
›t_›t_t
 *
	m√xt
;

81 *
	m«me
;

82 *
	mdesc
;

83 
	mnv¨s
;

84 *
	m√…
;

85 *
	mf‹m©
;

86 
	m¥öt
;

87 
	mac¸ue
;

88 
›t_˛ass_t
 
	moc
;

89 
	u›t_v¨ü¡_t
 {

91 
	s›t_f‹_öt_t
 {

92 *
	mv¨
;

93 } 
	mf‹_öt
;

95 
	s›t_f‹_uöt_t
 {

96 *
	mv¨
;

97 } 
	mf‹_uöt
;

99 
	s›t_f‹_Êﬂt_t
 {

100 *
	mv¨
;

101 } 
	mf‹_Êﬂt
;

103 
	s›t_f‹_doubÀ_t
 {

104 *
	mv¨
;

105 } 
	mf‹_doubÀ
;

107 
	s›t_f‹_íum_t
 {

108 *
	mv¨
;

109 **
	mem≠
;

110 *
	mevÆ
;

111 
	mem≠_sz
;

112 } 
	mf‹_íum
;

114 
	s›t_f‹_°rög_t
 {

115 **
	mv¨
;

116 } 
	mf‹_°rög
;

117 } 
	mv¨ü¡
;

123 (*
	t‹ph™_‚_t
)(
	ti
,

124 
	t¨gc
,

125 **
	t¨gv
);

129 
	s›t_nŸe_t
 {

130 
›t_nŸe_t
 *
	m√xt
;

131 *
	mnŸe
;

135 
	s›t_odb_t
 {

136 
›t_›t_t
 *
	m›ti⁄s
;

137 
‹ph™_‚_t
 
	m‹ph™_‚
;

138 *
	mhódî
;

139 
›t_nŸe_t
 *
	mnŸes
;

143 
›t_odb_t
 *

144 
›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
);

148 
›t_dñëe
(
›t_odb_t
 *
odb
);

152 
›t_ªg_öt
(
›t_odb_t
 *
odb
,

153 *
«me
,

154 *
desc
,

155 *
v¨
,

156 
def_vÆ
,

157 
¥öt
,

158 *
f‹m©
);

162 
›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

163 *
«me
,

164 *
desc
,

165 *
v¨s
,

166 
nv¨s
,

167 *
√…
,

168 *
def_vÆ
,

169 
¥öt
,

170 *
f‹m©
,

171 
ac¸ue
);

175 
›t_ªg_uöt
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨
,

179 
def_vÆ
,

180 
¥öt
,

181 *
f‹m©
);

185 
›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

186 *
«me
,

187 *
desc
,

188 *
v¨s
,

189 
nv¨s
,

190 *
√…
,

191 *
def_vÆ
,

192 
¥öt
,

193 *
f‹m©
,

194 
ac¸ue
);

198 
›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

199 *
«me
,

200 *
desc
,

201 *
v¨
,

202 
def_vÆ
,

203 
¥öt
,

204 *
f‹m©
);

208 
›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

209 *
«me
,

210 *
desc
,

211 *
v¨s
,

212 
nv¨s
,

213 *
√…
,

214 *
def_vÆ
,

215 
¥öt
,

216 *
f‹m©
,

217 
ac¸ue
);

221 
›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

222 *
«me
,

223 *
desc
,

224 *
v¨
,

225 
def_vÆ
,

226 
¥öt
,

227 *
f‹m©
);

231 
›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

232 *
«me
,

233 *
desc
,

234 *
v¨s
,

235 
nv¨s
,

236 *
√…
,

237 *
def_vÆ
,

238 
¥öt
,

239 *
f‹m©
,

240 
ac¸ue
);

246 
›t_ªg_íum
(
›t_odb_t
 *
odb
,

247 *
«me
,

248 *
desc
,

249 *
v¨
,

250 *
def_vÆ
,

251 **
em≠
,

252 *
evÆ
,

253 
em≠_sz
,

254 
¥öt
,

255 *
f‹m©
);

261 
›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

262 *
«me
,

263 *
desc
,

264 *
v¨s
,

265 
nv¨s
,

266 *
√…
,

267 *
def_vÆ
,

268 **
em≠
,

269 *
evÆ
,

270 
em≠_sz
,

271 
¥öt
,

272 *
f‹m©
,

273 
ac¸ue
);

277 
›t_ªg_Êag
(
›t_odb_t
 *
odb
,

278 *
«me
,

279 *
desc
,

280 *
v¨
,

281 
def_vÆ
,

282 
¥öt
,

283 *
f‹m©
);

287 
›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨s
,

291 
nv¨s
,

292 *
√…
,

293 *
def_vÆ
,

294 
¥öt
,

295 *
f‹m©
,

296 
ac¸ue
);

300 
›t_ªg_°rög
(
›t_odb_t
 *
odb
,

301 *
«me
,

302 *
desc
,

303 **
v¨
,

304 *
def_vÆ
,

305 
¥öt
,

306 *
f‹m©
);

310 
›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

311 *
«me
,

312 *
desc
,

313 **
v¨s
,

314 
nv¨s
,

315 *
√…
,

316 **
def_vÆ
,

317 
¥öt
,

318 *
f‹m©
,

319 
ac¸ue
);

323 
›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

324 
¨gc
,

325 **
¨gv
);

329 
›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

330 
FILE
 *
fd
);

334 
›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

335 
FILE
 *
fd
,

336 
ãr£
,

337 
nŸes
);

341 
›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

342 
FILE
 *
fd
);

345 
›t_›t_t
 *

346 
›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

347 *
›t_«me
);

351 
›t_ªg_hódî
(
›t_odb_t
 *
odb
,

352 *
hódî
);

356 
›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

357 *
nŸe
);

	@ptrace.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

59 
	~"±ø˚.h
"

62 
FILE
 *
	g±ø˚_outfd
 = 
NULL
;

65 
	g±ø˚_a˘ive
 = 
FALSE
;

68 
ønge_ønge_t
 
	g±ø˚_ønge
;

71 
	g±ø˚_⁄eshŸ
 = 
FALSE
;

75 
	$±ø˚_›í
(*
‚ame
,

76 *
ønge
)

78 *
îr°r
;

81 i‡(!
ønge
)

84 
îr°r
 = 
	`ønge_∑r£_ønge
(":", &
±ø˚_ønge
);

85 i‡(
îr°r
)

86 
	`∑nic
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

87 
±ø˚_a˘ive
 = 
TRUE
;

91 
îr°r
 = 
	`ønge_∑r£_ønge
(
ønge
, &
±ø˚_ønge
);

92 i‡(
îr°r
)

93 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

94 
±ø˚_a˘ive
 = 
FALSE
;

97 i‡(
±ø˚_ønge
.
°¨t
.
±y≥
 !±ø˚_ønge.
íd
.ptype)

98 
	`Áèl
("rangeÉndpointsáreÇot ofÅhe sameÅype");

101 i‡(!
‚ame
 || !
	`°rcmp
(fname, "-") || !strcmp(fname, "stderr"))

102 
±ø˚_outfd
 = 
°dîr
;

103 i‡(!
	`°rcmp
(
‚ame
, "stdout"))

104 
±ø˚_outfd
 = 
°dout
;

107 
±ø˚_outfd
 = 
	`f›í
(
‚ame
, "w");

108 i‡(!
±ø˚_outfd
)

109 
	`Áèl
("ˇ¬Ÿ o≥¿pùëø˚ ouçuàfûê`%s'", 
‚ame
);

111 
	}
}

115 
	$±ø˚_˛o£
()

117 i‡(
±ø˚_outfd
 !
NULL
 &&Öåa˚_outfd !
°dîr
 &&Öåa˚_outfd !
°dout
)

118 
	`f˛o£
(
±ø˚_outfd
);

119 
	}
}

123 
	$__±ø˚_√wö°
(
i£q
,

124 
md_ö°_t
 
ö°
,

125 
md_addr_t
 
pc
,

126 
md_addr_t
 
addr
)

128 
	`myÂrötf
(
±ø˚_outfd
, "+ %u 0x%08∞0x%08∞", 
i£q
, 
pc
, 
addr
);

129 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
±ø˚_outfd
);

130 
	`Ârötf
(
±ø˚_outfd
, "\n");

132 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

133 
	`fÊush
(
±ø˚_outfd
);

134 
	}
}

138 
	$__±ø˚_√wu›
(
i£q
,

139 *
u›_desc
,

140 
md_addr_t
 
pc
,

141 
md_addr_t
 
addr
)

143 
	`myÂrötf
(
±ø˚_outfd
,

144 "+ %u 0x%08∞0x%08∞[%s]\n", 
i£q
, 
pc
, 
addr
, 
u›_desc
);

146 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

147 
	`fÊush
(
±ø˚_outfd
);

148 
	}
}

152 
	$__±ø˚_ídö°
(
i£q
)

154 
	`Ârötf
(
±ø˚_outfd
, "- %u\n", 
i£q
);

156 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

157 
	`fÊush
(
±ø˚_outfd
);

158 
	}
}

162 
	$__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
)

164 
	`Ârötf
(
±ø˚_outfd
, "@ %.0f\n", ()
cy˛e
);

166 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

167 
	`fÊush
(
±ø˚_outfd
);

168 
	}
}

172 
	$__±ø˚_√w°age
(
i£q
,

173 *
p°age
,

174 
≥víts
)

176 
	`Ârötf
(
±ø˚_outfd
, "* %u %†0x%08x\n", 
i£q
, 
p°age
, 
≥víts
);

178 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

179 
	`fÊush
(
±ø˚_outfd
);

180 
	}
}

	@ptrace.h

52 #i‚de‡
PTRACE_H


53 
	#PTRACE_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

78 
	#PST_IFETCH
 "IF"

	)

79 
	#PST_DISPATCH
 "DA"

	)

80 
	#PST_EXECUTE
 "EX"

	)

81 
	#PST_WRITEBACK
 "WB"

	)

82 
	#PST_COMMIT
 "CT"

	)

85 
	#PEV_CACHEMISS
 0x00000001

	)

86 
	#PEV_TLBMISS
 0x00000002

	)

87 
	#PEV_MPOCCURED
 0x00000004

	)

88 
	#PEV_MPDETECT
 0x00000008

	)

89 
	#PEV_AGEN
 0x00000010

	)

90 
	#PEV_CHKERROR
 0x00000020

	)

91 
	#PEV_BSPECMISS
 0x00000040

	)

94 
FILE
 *
±ø˚_outfd
;

97 
±ø˚_a˘ive
;

100 
ønge_ønge_t
 
±ø˚_ønge
;

103 
±ø˚_⁄eshŸ
;

107 
±ø˚_›í
(*
ønge
,

108 *
‚ame
);

112 
±ø˚_˛o£
();

116 
	#±ø˚_check_a˘ive
(
PC
, 
ICNT
, 
CYCLE
) \

117 ((
±ø˚_outfd
 !
NULL
 \

118 && !
	`ønge_cmp_ønge1
(&
±ø˚_ønge
, (
PC
), (
ICNT
), (
CYCLE
))) \

119 ? (!
±ø˚_⁄eshŸ
 ? (
±ø˚_a˘ive
 =Öåa˚_⁄eshŸ = 
TRUE
Ë: 
FALSE
)\

120 : (
±ø˚_a˘ive
 = 
FALSE
))

	)

123 
	#±ø˚_√wö°
(
A
,
B
,
C
,
D
) \

124 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wö°
((
A
),(
B
),(
C
),(
D
))

	)

125 
	#±ø˚_√wu›
(
A
,
B
,
C
,
D
) \

126 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wu›
((
A
),(
B
),(
C
),(
D
))

	)

127 
	#±ø˚_ídö°
(
A
) \

128 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_ídö°
((
A
))

	)

129 
	#±ø˚_√wcy˛e
(
A
) \

130 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wcy˛e
((
A
))

	)

131 
	#±ø˚_√w°age
(
A
,
B
,
C
) \

132 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√w°age
((
A
),(
B
),(
C
))

	)

134 
	#±ø˚_a˘ive
(
A
,
I
,
C
) \

135 (
±ø˚_outfd
 !
NULL
 && !
	`ønge_cmp_ønge
(&
±ø˚_ønge
, (
A
), (
I
), (
C
)))

	)

139 
__±ø˚_√wö°
(
i£q
,

140 
md_ö°_t
 
ö°
,

141 
md_addr_t
 
pc
,

142 
md_addr_t
 
addr
);

146 
__±ø˚_√wu›
(
i£q
,

147 *
u›_desc
,

148 
md_addr_t
 
pc
,

149 
md_addr_t
 
addr
);

153 
__±ø˚_ídö°
(
i£q
);

157 
__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
);

161 
__±ø˚_√w°age
(
i£q
,

162 *
p°age
,

163 
≥víts
);

	@range.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 #i‡
deföed
(
__CYGWIN32__
)

56 
	~<î∫o.h
>

59 
	~"ho°.h
"

60 
	~"misc.h
"

61 
	~"machöe.h
"

62 
	~"symbﬁ.h
"

63 
	~"lﬂdî.h
"

64 
	~"ønge.h
"

68 
	$ønge_∑r£_pos
(*
p°r
,

69 
ønge_pos_t
 *
pos
)

71 *
s
, *
ídp
;

72 
sym_sym_t
 *
sym
;

73 #i‡!
	`deföed
(
__CYGWIN32__
)

74 
î∫o
;

78 i‡(
p°r
[0] == '@')

81 
pos
->
±y≥
 = 
±_addr
;

82 
s
 = 
p°r
 + 1;

84 i‡(
p°r
[0] == '#')

87 
pos
->
±y≥
 = 
±_cy˛e
;

88 
s
 = 
p°r
 + 1;

93 
pos
->
±y≥
 = 
±_ö°
;

94 
s
 = 
p°r
;

98 
	~<î∫o.h
>

99 
pos
->po†(
cou¡î_t
)
	`°πoul
(
s
, &
ídp
, 0);

100 i‡(!
î∫o
 && !*
ídp
)

103  
NULL
;

107 
î∫o
 = 0;

108 
pos
->po†(
cou¡î_t
)
	`°πod
(
s
, &
ídp
);

109 i‡(!
î∫o
 && !*
ídp
)

113  
NULL
;

117 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

118 
sym
 = 
	`sym_böd_«me
(
s
, 
NULL
, 
sdb_™y
);

119 i‡(
sym
 !
NULL
)

121 
pos
->po†(
cou¡î_t
)
sym
->
addr
;

122  
NULL
;

127 
	}
}

131 
	$ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

132 
FILE
 *
°ªam
)

134 
pos
->
±y≥
)

136 
±_addr
:

137 
	`myÂrötf
(
°ªam
, "@0x%08p", (
md_addr_t
)
pos
->pos);

139 
±_ö°
:

140 
	`Ârötf
(
°ªam
, "%.0f", ()
pos
->pos);

142 
±_cy˛e
:

143 
	`Ârötf
(
°ªam
, "#%.0f", ()
pos
->pos);

146 
	`∑nic
("bogusÉxecutionÖositionÅype");

148 
	}
}

152 
	$ønge_∑r£_ønge
(*
r°r
,

153 
ønge_ønge_t
 *
ønge
)

155 *
pos1
, *
pos2
, *
p
, 
buf
[512], *
îr°r
;

158 
	`°r˝y
(
buf
, 
r°r
);

159 
pos1
 = 
buf
;

162 
p
 = 
buf
;

163 *
p
 != ':' && *p != '\0')

165 
p
++;

167 i‡(*
p
 != ':')

169 *
p
 = '\0';

172 
pos2
 = 
p
 + 1;

175 i‡(*
pos1
 && *pos1 != ':')

177 
îr°r
 = 
	`ønge_∑r£_pos
(
pos1
, &
ønge
->
°¨t
);

178 i‡(
îr°r
)

179  
îr°r
;

184 
ønge
->
°¨t
.
±y≥
 = 
±_ö°
;

185 
ønge
->
°¨t
.
pos
 = 0;

189 i‡(*
pos2
)

191 i‡(*
pos2
 == '+')

193 
dñè
;

194 *
ídp
;

195 #i‡!
	`deföed
(
__CYGWIN32__
)

196 
î∫o
;

200 
	~<î∫o.h
>

201 
dñè
 = 
	`°πﬁ
(
pos2
 + 1, &
ídp
, 0);

202 i‡(!
î∫o
 && !*
ídp
)

205 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

206 
ønge
->
íd
.
pos
 =Ñ™ge->
°¨t
.po†+ 
dñè
;

216 
îr°r
 = 
	`ønge_∑r£_pos
(
pos2
, &
ønge
->
íd
);

217 i‡(
îr°r
)

218  
îr°r
;

224 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

225 #ifde‡
HOST_HAS_QWORD


226 
ønge
->
íd
.
pos
 = 
	`ULL
(0x7fffffffffffffff);

228 
ønge
->
íd
.
pos
 = 281474976645120.0;

233  
NULL
;

234 
	}
}

238 
	$ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

239 
FILE
 *
°ªam
)

241 
	`ønge_¥öt_pos
(&
ønge
->
°¨t
, 
°ªam
);

242 
	`Ârötf
(
°ªam
, ":");

243 
	`ønge_¥öt_pos
(&
ønge
->
íd
, 
°ªam
);

244 
	}
}

248 
	$ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

249 
cou¡î_t
 
vÆ
)

251 i‡(
vÆ
 < 
pos
->pos)

253 i‡(
vÆ
 =
pos
->pos)

257 
	}
}

261 
	$ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

262 
cou¡î_t
 
vÆ
)

264 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

265 
	`∑nic
("invalidÑange");

267 i‡(
vÆ
 < 
ønge
->
°¨t
.
pos
)

269 i‡(
ønge
->
°¨t
.
pos
 <
vÆ
 && vÆ <ønge->
íd
.pos)

273 
	}
}

277 
	$ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

278 
md_addr_t
 
addr
,

279 
cou¡î_t
 
icou¡
,

280 
cou¡î_t
 
cy˛e
)

282 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

283 
	`∑nic
("invalidÑange");

285 
ønge
->
°¨t
.
±y≥
)

287 
±_addr
:

288 i‡(
addr
 < (
md_addr_t
)
ønge
->
°¨t
.
pos
)

290 i‡((
md_addr_t
)
ønge
->
°¨t
.
pos
 <
addr
 &&ádd∏<(md_addr_tÏ™ge->
íd
.pos)

295 
±_ö°
:

296 i‡(
icou¡
 < 
ønge
->
°¨t
.
pos
)

298 i‡(
ønge
->
°¨t
.
pos
 <
icou¡
 && icou¡ <ønge->
íd
.pos)

303 
±_cy˛e
:

304 i‡(
cy˛e
 < 
ønge
->
°¨t
.
pos
)

306 i‡(
ønge
->
°¨t
.
pos
 <
cy˛e
 && cy˛ê<ønge->
íd
.pos)

312 
	`∑nic
("bogusÑangeÅype");

314 
	}
}

	@range.h

52 #i‚de‡
RANGE_H


53 
	#RANGE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	eønge_±y≥_t
 {

62 
	m±_addr
 = 0,

63 
	m±_ö°
,

64 
	m±_cy˛e
,

65 
	m±_NUM


76 
	sønge_pos_t
 {

77 
ønge_±y≥_t
 
	m±y≥
;

78 
cou¡î_t
 
	mpos
;

82 
	sønge_ønge_t
 {

83 
ønge_pos_t
 
	m°¨t
;

84 
ønge_pos_t
 
	míd
;

89 
ønge_∑r£_pos
(*
p°r
,

90 
ønge_pos_t
 *
pos
);

94 
ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

95 
FILE
 *
°ªam
);

99 
ønge_∑r£_ønge
(*
r°r
,

100 
ønge_ønge_t
 *
ønge
);

104 
ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

105 
FILE
 *
°ªam
);

109 
ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

110 
cou¡î_t
 
vÆ
);

114 
ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

115 
cou¡î_t
 
vÆ
);

120 
ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

121 
md_addr_t
 
addr
,

122 
cou¡î_t
 
icou¡
,

123 
cou¡î_t
 
cy˛e
);

	@regs.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"lﬂdî.h
"

60 
	~"ªgs.h
"

63 
ªgs_t
 *

64 
	$ªgs_¸óã
()

66 
ªgs_t
 *
ªgs
;

68 
ªgs
 = 
	`ˇŒoc
(1, (
ªgs_t
));

69 i‡(!
ªgs
)

70 
	`Áèl
("out of virtual memory");

72  
ªgs
;

73 
	}
}

77 
	$ªgs_öô
(
ªgs_t
 *
ªgs
)

81 
	`mem£t
(
ªgs
, 0, (*regs));

82 
	}
}

	@regs.h

52 #i‚de‡
REGS_H


53 
	#REGS_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

100 
	sªgs_t
 {

101 
md_g¥_t
 
	mªgs_R
;

102 
md_Âr_t
 
	mªgs_F
;

103 
md_˘æ_t
 
	mªgs_C
;

104 
md_addr_t
 
	mªgs_PC
;

105 
md_addr_t
 
	mªgs_NPC
;

109 
ªgs_t
 *
ªgs_¸óã
();

113 
ªgs_öô
(
ªgs_t
 *
ªgs
);

	@resource.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"ªsour˚.h
"

61 
ªs_poﬁ
 *

62 
	$ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
)

64 
i
, 
j
, 
k
, 
ödex
, 
nö°s
;

65 
ªs_desc
 *
ö°_poﬁ
;

66 
ªs_poﬁ
 *
ªs
;

69 
nö°s
=0,
i
=0; i<
ndesc
; i++)

71 i‡(
poﬁ
[
i
].
qu™tôy
 > 
MAX_INSTS_PER_CLASS
)

72 
	`Áèl
("too many functional units, increase MAX_INSTS_PER_CLASS");

73 
nö°s
 +
poﬁ
[
i
].
qu™tôy
;

77 
ö°_poﬁ
 = (
ªs_desc
 *)
	`ˇŒoc
(
nö°s
, (res_desc));

78 i‡(!
ö°_poﬁ
)

79 
	`Áèl
("out of virtual memory");

82 
ödex
=0,
i
=0; i<
ndesc
; i++)

84 
j
=0; j<
poﬁ
[
i
].
qu™tôy
; j++)

86 
ö°_poﬁ
[
ödex
] = 
poﬁ
[
i
];

87 
ö°_poﬁ
[
ödex
].
qu™tôy
 = 1;

88 
ö°_poﬁ
[
ödex
].
busy
 = 
FALSE
;

89 
k
=0; k<
MAX_RES_CLASSES
 && 
ö°_poﬁ
[
ödex
].
x
[k].
˛ass
; k++)

90 
ö°_poﬁ
[
ödex
].
x
[
k
].
ma°î
 = &inst_pool[index];

91 
ödex
++;

94 
	`as£π
(
ödex
 =
nö°s
);

97 
ªs
 = (
ªs_poﬁ
 *)
	`ˇŒoc
(1, (res_pool));

98 i‡(!
ªs
)

99 
	`Áèl
("out of virtual memory");

100 
ªs
->
«me
 =Çame;

101 
ªs
->
num_ªsour˚s
 = 
nö°s
;

102 
ªs
->
ªsour˚s
 = 
ö°_poﬁ
;

105 
i
=0; i<
nö°s
; i++)

107 
ªs_ãm∂©e
 *
∂©e
;

108 
j
=0; j<
MAX_RES_CLASSES
; j++)

110 
∂©e
 = &
ªs
->
ªsour˚s
[
i
].
x
[
j
];

111 i‡(
∂©e
->
˛ass
)

113 
	`as£π
(
∂©e
->
˛ass
 < 
MAX_RES_CLASSES
);

114 
ªs
->
èbÀ
[
∂©e
->
˛ass
][ªs->
√¡s
[plate->class]++] =Ölate;

122  
ªs
;

123 
	}
}

131 
ªs_ãm∂©e
 *

132 
	$ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
)

134 
i
;

137 
	`as£π
(
˛ass
 < 
MAX_RES_CLASSES
);

140 
	`as£π
(
poﬁ
->
èbÀ
[
˛ass
][0]);

142 
i
=0; i<
MAX_INSTS_PER_CLASS
; i++)

144 i‡(
poﬁ
->
èbÀ
[
˛ass
][
i
])

146 i‡(!
poﬁ
->
èbÀ
[
˛ass
][
i
]->
ma°î
->
busy
)

147  
poﬁ
->
èbÀ
[
˛ass
][
i
];

153  
NULL
;

154 
	}
}

161 
	$ªs_upd©e_›œt
(
ªs_desc
 *
poﬁ
, 
ndesc
, 
˛ass
, 
›œt
)

163 
i
, 
j
;

165 
i
=0; i<
ndesc
; i++) {

166 
j
=0; j<
MAX_RES_CLASSES
 && 
poﬁ
[
i
].
x
[j].
˛ass
; j++) {

167 i‡(
poﬁ
[
i
].
x
[
j
].
˛ass
 == class) {

168 
poﬁ
[
i
].
x
[
j
].
›œt
 = oplat;

172 
	}
}

179 
	$ªs_upd©e_issuñ©
(
ªs_desc
 *
poﬁ
, 
ndesc
, 
˛ass
, 
issuñ©
)

181 
i
, 
j
;

183 
i
=0; i<
ndesc
; i++) {

184 
j
=0; j<
MAX_RES_CLASSES
 && 
poﬁ
[
i
].
x
[j].
˛ass
; j++) {

185 i‡(
poﬁ
[
i
].
x
[
j
].
˛ass
 == class) {

186 
poﬁ
[
i
].
x
[
j
].
issuñ©
 = issuelat;

190 
	}
}

194 
	$ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
)

196 
i
, 
j
;

198 i‡(!
°ªam
)

199 
°ªam
 = 
°dîr
;

201 
	`Ârötf
(
°ªam
, "Resour˚Öoﬁ: %s", 
poﬁ
->
«me
);

202 
	`Ârötf
(
°ªam
, " c⁄èö†%dÑesour˚ in°™˚s\n", 
poﬁ
->
num_ªsour˚s
);

203 
i
=0; i<
MAX_RES_CLASSES
; i++)

205 
	`Ârötf
(
°ªam
, "\tclass %d: %d matching instances\n",

206 
i
, 
poﬁ
->
√¡s
[i]);

207 
j
=0; j<
MAX_INSTS_PER_CLASS
; j++)

209 i‡(!
poﬁ
->
èbÀ
[
i
][
j
])

211 
	`Ârötf
(
°ªam
, "\t\t%s (busy for %d cycles)\n",

212 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
«me
,

213 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
busy
);

215 
	`as£π
(
j
 =
poﬁ
->
√¡s
[
i
]);

217 
	}
}

	@resource.h

52 #i‚de‡
RESOURCE_H


53 
	#RESOURCE_H


	)

55 
	~<°dio.h
>

58 
	#MAX_RES_CLASSES
 16

	)

61 
	#MAX_INSTS_PER_CLASS
 16

	)

64 
	sªs_desc
 {

65 *
	m«me
;

66 
	mqu™tôy
;

67 
	mbusy
;

68 
	sªs_ãm∂©e
 {

69 
	m˛ass
;

72 
	m›œt
;

74 
	missuñ©
;

77 
ªs_desc
 *
	mma°î
;

78 } 
	mx
[
MAX_RES_CLASSES
];

82 
	sªs_poﬁ
 {

83 *
	m«me
;

84 
	mnum_ªsour˚s
;

85 
ªs_desc
 *
	mªsour˚s
;

87 
	m√¡s
[
MAX_RES_CLASSES
];

88 
ªs_ãm∂©e
 *
	mèbÀ
[
MAX_RES_CLASSES
][
MAX_INSTS_PER_CLASS
];

92 
ªs_poﬁ
 *
ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
);

100 
ªs_ãm∂©e
 *
ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
);

103 
ªs_upd©e_›œt
(
ªs_desc
 *
poﬁ
, 
ndesc
, 
˛ass
, 
›œt
);

106 
ªs_upd©e_issuñ©
(
ªs_desc
 *
poﬁ
, 
ndesc
, 
˛ass
, 
issuñ©
);

109 
ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
);

	@sim-bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"b¥ed.h
"

67 
	~"sim.h
"

74 
ªgs_t
 
	gªgs
;

77 
mem_t
 *
	gmem
 = 
NULL
;

80 
	gmax_ö°s
;

83 *
	g¥ed_ty≥
;

86 
	gbimod_√…
 = 1;

87 
	gbimod_c⁄fig
[1] =

91 
	gtwﬁev_√…
 = 4;

92 
	gtwﬁev_c⁄fig
[4] =

93 { 1, 1024, 8, 
FALSE
};

96 
	gcomb_√…
 = 1;

97 
	gcomb_c⁄fig
[1] =

101 
	gøs_size
 = 8;

104 
	gbtb_√…
 = 2;

105 
	gbtb_c⁄fig
[2] =

109 
b¥ed_t
 *
	g¥ed
;

112 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

115 
cou¡î_t
 
	gsim_num_bønches
 = 0;

120 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

122 
	`›t_ªg_hódî
(
odb
,

127 
	`›t_ªg_nŸe
(
odb
,

144 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

145 &
max_ö°s
, 0,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög
(
odb
, "-bpred",

150 &
¥ed_ty≥
, "bimod",

151  
TRUE
, 
NULL
);

153 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

155 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

156  
bimod_c⁄fig
,

157  
TRUE
, 
NULL
, 
FALSE
);

159 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

162 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

163  
twﬁev_c⁄fig
,

164  
TRUE
, 
NULL
, 
FALSE
);

166 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

168 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

169  
comb_c⁄fig
,

170  
TRUE
, 
NULL
, 
FALSE
);

172 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

174 &
øs_size
,Ñas_size,

175  
TRUE
, 
NULL
);

177 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

179 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

180  
btb_c⁄fig
,

181  
TRUE
, 
NULL
, 
FALSE
);

182 
	}
}

186 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

188 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

191 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

193 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

196 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

198 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

200 i‡(
bimod_√…
 != 1)

201 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

202 i‡(
btb_√…
 != 2)

203 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

206 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

207  
bimod_c⁄fig
[0],

213  
btb_c⁄fig
[0],

214  
btb_c⁄fig
[1],

215  
øs_size
);

217 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

220 i‡(
twﬁev_√…
 != 4)

221 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

222 i‡(
btb_√…
 != 2)

223 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

225 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

227  
twﬁev_c⁄fig
[0],

228  
twﬁev_c⁄fig
[1],

230  
twﬁev_c⁄fig
[2],

231  
twﬁev_c⁄fig
[3],

232  
btb_c⁄fig
[0],

233  
btb_c⁄fig
[1],

234  
øs_size
);

236 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

239 i‡(
twﬁev_√…
 != 4)

240 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

241 i‡(
bimod_√…
 != 1)

242 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

243 i‡(
comb_√…
 != 1)

244 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

245 i‡(
btb_√…
 != 2)

246 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

248 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

249  
bimod_c⁄fig
[0],

250  
twﬁev_c⁄fig
[0],

251  
twﬁev_c⁄fig
[1],

252  
comb_c⁄fig
[0],

253  
twﬁev_c⁄fig
[2],

254  
twﬁev_c⁄fig
[3],

255  
btb_c⁄fig
[0],

256  
btb_c⁄fig
[1],

257  
øs_size
);

260 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

261 
	}
}

265 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

267 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

269 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

270 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

272 &
sim_num_ªfs
, 0, 
NULL
);

273 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

275 &
sim_ñ≠£d_time
, 0, 
NULL
);

276 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

278 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

280 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

282 &
sim_num_bønches
, 0, 
NULL
);

283 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

285 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

288 i‡(
¥ed
)

289 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

290 
	}
}

294 
	$sim_öô
()

296 
sim_num_ªfs
 = 0;

299 
	`ªgs_öô
(&
ªgs
);

302 
mem
 = 
	`mem_¸óã
("mem");

303 
	`mem_öô
(
mem
);

304 
	}
}

308 
	$b¥ed_m°©e_obj
(
FILE
 *
°ªam
,

309 *
cmd
,

310 
ªgs_t
 *
ªgs
,

311 
mem_t
 *
mem
)

314 
	`sim_¥öt_°©s
(
°ªam
);

317  
NULL
;

318 
	}
}

322 
	$sim_lﬂd_¥og
(*
‚ame
,

323 
¨gc
, **
¨gv
,

324 **
ívp
)

327 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

330 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
b¥ed_m°©e_obj
);

331 
	}
}

335 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

338 
	}
}

342 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

345 
	}
}

349 
	$sim_unöô
()

352 
	}
}

364 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

367 #unde‡
SET_TPC


368 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

371 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

374 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

375 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

377 #i‡
deföed
(
TARGET_PISA
)

380 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

381 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

382 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

383 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

384 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

385 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

388 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

389 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

390 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

391 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

392 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

393 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

395 #ñi‡
deföed
(
TARGET_ALPHA
)

398 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

399 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

400 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

401 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

404 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

405 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

406 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

407 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

410 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

414 
	#READ_BYTE
(
SRC
, 
FAULT
) \

415 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

	)

416 
	#READ_HALF
(
SRC
, 
FAULT
) \

417 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

	)

418 
	#READ_WORD
(
SRC
, 
FAULT
) \

419 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

	)

420 #ifde‡
HOST_HAS_QWORD


421 
	#READ_QWORD
(
SRC
, 
FAULT
) \

422 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, 
addr
 = (
SRC
)))

	)

425 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

426 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

427 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

428 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

429 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

430 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

431 #ifde‡
HOST_HAS_QWORD


432 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

433 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

437 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

441 
	$sim_maö
()

443 
md_ö°_t
 
ö°
;

444 
md_addr_t
 
addr
, 
èrgë_PC
;

445 
md_›code
 
›
;

446 
is_wrôe
;

447 
°ack_idx
;

448 
md_Áu…_ty≥
 
Áu…
;

450 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/Öredictors **\n");

453 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

456 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

457 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

458 
sim_num_ö¢
, &
ªgs
, 
mem
);

460 
TRUE
)

463 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

464 #ifde‡
TARGET_ALPHA


465 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

469 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

472 
sim_num_ö¢
++;

475 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

478 
Áu…
 = 
md_Áu…_n⁄e
;

481 
	`MD_SET_OPCODE
(
›
, 
ö°
);

484 
›
)

486 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

487 
OP
: \

488 
	`SYMCAT
(
OP
,
_IMPL
); \

489 ;

	)

490 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

491 
OP
: \

492 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

493 
	#CONNECT
(
OP
)

	)

494 
	#DECLARE_FAULT
(
FAULT
) \

495 { 
Áu…
 = (
FAULT
); ; }

	)

496 
	~"machöe.def
"

498 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

501 i‡(
Áu…
 !
md_Áu…_n⁄e
)

502 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

504 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

506 
sim_num_ªfs
++;

507 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

508 
is_wrôe
 = 
TRUE
;

511 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

513 
md_addr_t
 
¥ed_PC
;

514 
b¥ed_upd©e_t
 
upd©e_ªc
;

516 
sim_num_bønches
++;

518 i‡(
¥ed
)

521 
¥ed_PC
 = 
	`b¥ed_lookup
(
¥ed
,

522  
ªgs
.
ªgs_PC
,

523  
èrgë_PC
,

524  
›
,

525  
	`MD_IS_CALL
(
›
),

526  
	`MD_IS_RETURN
(
›
),

527  &
upd©e_ªc
,

528  &
°ack_idx
);

531 i‡(!
¥ed_PC
)

534 
¥ed_PC
 = 
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

537 
	`b¥ed_upd©e
(
¥ed
,

538  
ªgs
.
ªgs_PC
,

539  
ªgs
.
ªgs_NPC
,

540  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

541 (
md_ö°_t
)),

542  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

543 (
md_ö°_t
)),

544  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

545  
›
,

546  &
upd©e_ªc
);

551 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

552 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

553 
addr
, 
sim_num_ö¢
, sim_num_insn))

554 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

557 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

558 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

561 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

564 
	}
}

	@sim-cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<m©h.h
>

56 
	~<as£π.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"dlôe.h
"

67 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
ˇche_t
 *
	gˇche_û1
 = 
NULL
;

93 
ˇche_t
 *
	gˇche_û2
 = 
NULL
;

96 
ˇche_t
 *
	gˇche_dl1
 = 
NULL
;

99 
ˇche_t
 *
	gˇche_dl2
 = 
NULL
;

102 
ˇche_t
 *
	gôlb
 = 
NULL
;

105 
ˇche_t
 *
	gdéb
 = 
NULL
;

108 
	#MAX_PCSTAT_VARS
 8

	)

109 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

110 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

111 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

114 
	#STATVAL
(
STAT
) \

115 ((
STAT
)->
sc
 =
sc_öt
 \

116 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

117 : ((
STAT
)->
sc
 =
sc_uöt
 \

118 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

119 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

120 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

121 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

125 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

126 
md_addr_t
 
baddr
,

127 
bsize
,

128 
ˇche_blk_t
 *
blk
,

129 
tick_t
 
now
)

131 i‡(
ˇche_dl2
)

134  
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

135  
now
, 
NULL
, NULL);

142 
	}
}

146 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

147 
md_addr_t
 
baddr
,

148 
bsize
,

149 
ˇche_blk_t
 *
blk
,

150 
tick_t
 
now
)

155 
	}
}

159 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

160 
md_addr_t
 
baddr
,

161 
bsize
,

162 
ˇche_blk_t
 *
blk
,

163 
tick_t
 
now
)

165 i‡(
ˇche_û2
)

168  
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

169  
now
, 
NULL
, NULL);

176 
	}
}

180 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

181 
md_addr_t
 
baddr
,

182 
bsize
,

183 
ˇche_blk_t
 *
blk
,

184 
tick_t
 
now
)

189 
	}
}

193 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

194 
md_addr_t
 
baddr
,

195 
bsize
,

196 
ˇche_blk_t
 *
blk
,

197 
tick_t
 
now
)

199 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

202 
	`as£π
(
phy_∑ge_±r
);

205 *
phy_∑ge_±r
 = 0;

208 
	}
}

212 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

213 
md_addr_t
 
baddr
,

214 
bsize
,

215 
ˇche_blk_t
 *
blk
,

216 
tick_t
 
now
)

218 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

221 
	`as£π
(
phy_∑ge_±r
);

224 *
phy_∑ge_±r
 = 0;

227 
	}
}

230 *
	gˇche_dl1_›t
 ;

231 *
	gˇche_dl2_›t
 ;

232 *
	gˇche_û1_›t
 ;

233 *
	gˇche_û2_›t
 ;

234 *
	gôlb_›t
 ;

235 *
	gdéb_›t
 ;

236 
	gÊush_⁄_sysˇŒs
 ;

237 
	gcom¥ess_iˇche_addrs
 ;

240 
	gpc°©_√…
 = 0;

241 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

244 #ifde‡
TARGET_PISA


245 
	#IACOMPRESS
(
A
) \

246 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

247 
	#ISCOMPRESS
(
SZ
) \

248 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

250 
	#IACOMPRESS
(
A
Ë(A)

	)

251 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

256 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

258 
	`›t_ªg_hódî
(
odb
,

267 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

268 &
max_ö°s
, 0,

269  
TRUE
, 
NULL
);

271 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

273 &
ˇche_dl1_›t
, "dl1:256:32:1:l", 
TRUE
, 
NULL
);

274 
	`›t_ªg_nŸe
(
odb
,

288 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

290 &
ˇche_dl2_›t
, "ul2:1024:64:4:l", 
TRUE
, 
NULL
);

291 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

293 &
ˇche_û1_›t
, "û1:256:32:1:l", 
TRUE
, 
NULL
);

294 
	`›t_ªg_nŸe
(
odb
,

307 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

309 &
ˇche_û2_›t
, "dl2", 
TRUE
, 
NULL
);

310 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

312 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

313 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

315 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

316 
	`›t_ªg_Êag
(
odb
, "-flush", "flush caches on system calls",

317 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

318 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

320 &
com¥ess_iˇche_addrs
, 
FALSE
,

321  
TRUE
, 
NULL
);

323 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

325 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

326  
FALSE
, 
NULL
, 
TRUE
);

328 
	}
}

332 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

333 
¨gc
, **
¨gv
)

335 
«me
[128], 
c
;

336 
n£ts
, 
bsize
, 
assoc
;

339 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

341 
ˇche_dl1
 = 
NULL
;

344 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

345 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

346 
ˇche_dl2
 = 
NULL
;

350 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

351 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

352 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

353 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

354  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

355 
dl1_ac˚ss_‚
, 1);

358 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

359 
ˇche_dl2
 = 
NULL
;

362 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

363 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

364 
	`Áèl
("badÜ2 D-cacheÖarms: "

366 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

367  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

368 
dl2_ac˚ss_‚
, 1);

373 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

375 
ˇche_û1
 = 
NULL
;

378 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

379 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

380 
ˇche_û2
 = 
NULL
;

382 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

384 i‡(!
ˇche_dl1
)

385 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

386 
ˇche_û1
 = 
ˇche_dl1
;

389 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

390 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

391 
ˇche_û2
 = 
NULL
;

393 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

395 i‡(!
ˇche_dl2
)

396 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

397 
ˇche_û1
 = 
ˇche_dl2
;

400 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

401 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

402 
ˇche_û2
 = 
NULL
;

406 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

407 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

408 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

409 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

410  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

411 
û1_ac˚ss_‚
, 1);

414 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

415 
ˇche_û2
 = 
NULL
;

416 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

418 i‡(!
ˇche_dl2
)

419 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

420 
ˇche_û2
 = 
ˇche_dl2
;

424 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

425 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

426 
	`Áèl
("badÜ2 I-cacheÖarms: "

428 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

429  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

430 
û2_ac˚ss_‚
, 1);

435 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

436 
ôlb
 = 
NULL
;

439 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

440 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

441 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

442 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

443  (
md_addr_t
), 
assoc
,

444 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

449 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

450 
déb
 = 
NULL
;

453 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

454 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

455 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

456 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

457  (
md_addr_t
), 
assoc
,

458 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

461 
	}
}

465 
	$sim_öô
()

467 
sim_num_ªfs
 = 0;

470 
	`ªgs_öô
(&
ªgs
);

473 
mem
 = 
	`mem_¸óã
("mem");

474 
	`mem_öô
(
mem
);

475 
	}
}

479 
	$ˇche_m°©e_obj
(
FILE
 *
°ªam
,

480 *
cmd
,

481 
ªgs_t
 *
ªgs
,

482 
mem_t
 *
mem
)

485 
	`sim_¥öt_°©s
(
°ªam
);

488  
NULL
;

489 
	}
}

493 
	$sim_lﬂd_¥og
(*
‚ame
,

494 
¨gc
, **
¨gv
,

495 **
ívp
)

498 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

501 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
ˇche_m°©e_obj
);

502 
	}
}

506 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

509 
	}
}

513 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

515 
i
;

518 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

520 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

521 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

523 &
sim_num_ªfs
, 0, 
NULL
);

524 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

526 &
sim_ñ≠£d_time
, 0, 
NULL
);

527 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

529 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

532 i‡(
ˇche_û1


533 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

534 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

535 i‡(
ˇche_û2


536 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

537 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

538 i‡(
ˇche_dl1
)

539 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

540 i‡(
ˇche_dl2
)

541 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

542 i‡(
ôlb
)

543 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

544 i‡(
déb
)

545 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

547 
i
=0; i<
pc°©_√…
; i++)

549 
buf
[512], 
buf1
[512];

550 
°©_°©_t
 *
°©
;

555 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

556 i‡(!
°©
)

557 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

560 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

561 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

562 
°©
->
«me
);

565 
pc°©_°©s
[
i
] = 
°©
;

566 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

569 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

570 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

571 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

573  (
PF_COUNT
|
PF_PDF
),

575  
NULL
);

577 
	`ld_ªg_°©s
(
sdb
);

578 
	`mem_ªg_°©s
(
mem
, 
sdb
);

579 
	}
}

583 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

586 
	}
}

590 
	$sim_unöô
()

593 
	}
}

604 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

607 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

610 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

611 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

613 #i‡
deföed
(
TARGET_PISA
)

616 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

617 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

618 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

619 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

620 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

621 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

624 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

625 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

626 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

627 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

628 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

629 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

631 #ñi‡
deföed
(
TARGET_ALPHA
)

634 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

635 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

636 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

637 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

640 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

641 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

642 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

643 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

646 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

650 
	#__READ_CACHE
(
addr
, 
SRC_T
) \

651 ((
déb
 \

652 ? 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
addr
), 
NULL
, \

653 (
SRC_T
), 0, 
NULL
, NULL) \

655 (
ˇche_dl1
 \

656 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
, (
addr
), 
NULL
, \

657 (
SRC_T
), 0, 
NULL
, NULL) \

658 : 0))

	)

660 
	#READ_BYTE
(
SRC
, 
FAULT
) \

661 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

662 
	`__READ_CACHE
(
addr
, 
byã_t
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

663 
	#READ_HALF
(
SRC
, 
FAULT
) \

664 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

665 
	`__READ_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

666 
	#READ_WORD
(
SRC
, 
FAULT
) \

667 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

668 
	`__READ_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

669 #ifde‡
HOST_HAS_QWORD


670 
	#READ_QWORD
(
SRC
, 
FAULT
) \

671 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

672 
	`__READ_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

675 
	#__WRITE_CACHE
(
addr
, 
DST_T
) \

676 ((
déb
 \

677 ? 
	`ˇche_ac˚ss
(
déb
, 
Wrôe
, (
addr
), 
NULL
, \

678 (
DST_T
), 0, 
NULL
, NULL) \

680 (
ˇche_dl1
 \

681 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
addr
), 
NULL
, \

682 (
DST_T
), 0, 
NULL
, NULL) \

683 : 0))

	)

685 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

686 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

687 
	`__WRITE_CACHE
(
addr
, 
byã_t
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

688 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

689 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

690 
	`__WRITE_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

691 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

692 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

693 
	`__WRITE_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

694 #ifde‡
HOST_HAS_QWORD


695 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

696 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

697 
	`__WRITE_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

701 
md_Áu…_ty≥


702 
	$dˇche_ac˚ss_‚
(
mem_t
 *
mem
,

703 
mem_cmd
 
cmd
,

704 
md_addr_t
 
addr
,

705 *
p
,

706 
nbyãs
)

708 i‡(
déb
)

709 
	`ˇche_ac˚ss
(
déb
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

710 i‡(
ˇche_dl1
)

711 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

712  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

713 
	}
}

716 
	#SYSCALL
(
INST
) \

717 (
Êush_⁄_sysˇŒs
 \

718 ? ((
déb
 ? 
	`ˇche_Êush
(dtlb, 0) : 0), \

719 (
ˇche_dl1
 ? 
	`ˇche_Êush
(cache_dl1, 0) : 0), \

720 (
ˇche_dl2
 ? 
	`ˇche_Êush
(cache_dl2, 0) : 0), \

721 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
)) \

722 : 
	`sys_sysˇŒ
(&
ªgs
, 
dˇche_ac˚ss_‚
, 
mem
, 
INST
, 
TRUE
))

	)

726 
	$sim_maö
()

728 
i
;

729 
md_ö°_t
 
ö°
;

730 
md_addr_t
 
addr
;

731 
md_›code
 
›
;

732 
is_wrôe
;

733 
md_Áu…_ty≥
 
Áu…
;

735 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/ caches **\n");

738 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

741 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

742 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

743 
sim_num_ö¢
, &
ªgs
, 
mem
);

745 !
¥ogøm_com∂ëe
)

748 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

749 #ifde‡
TARGET_ALPHA


750 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

754 i‡(
ôlb
)

755 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

756 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

757 i‡(
ˇche_û1
)

758 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

759 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

760 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

763 
sim_num_ö¢
++;

766 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

769 
Áu…
 = 
md_Áu…_n⁄e
;

772 
	`MD_SET_OPCODE
(
›
, 
ö°
);

775 
›
)

777 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

778 
OP
: \

779 
	`SYMCAT
(
OP
,
_IMPL
); \

780 ;

	)

781 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

782 
OP
: \

783 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

784 
	#CONNECT
(
OP
)

	)

785 
	#DECLARE_FAULT
(
FAULT
) \

786 { 
Áu…
 = (
FAULT
); ; }

	)

787 
	~"machöe.def
"

789 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

792 i‡(
Áu…
 !
md_Áu…_n⁄e
)

793 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

795 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

797 
sim_num_ªfs
++;

798 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

799 
is_wrôe
 = 
TRUE
;

803 
i
=0; i < 
pc°©_√…
; i++)

805 
cou¡î_t
 
√wvÆ
;

806 
dñè
;

809 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

810 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

811 i‡(
dñè
 != 0)

813 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

814 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

820 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

821 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

822 
addr
, 
sim_num_ö¢
, sim_num_insn))

823 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

826 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

827 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

830 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

833 
	}
}

	@sim-cheetah.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"libchìèh/libchìèh.h
"

67 
	~"sim.h
"

79 
	#LIBCHEETAH_MAX_INST
 2147483647

	)

82 
ªgs_t
 
	gªgs
;

85 
mem_t
 *
	gmem
 = 
NULL
;

88 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

91 
	gmax_ö°s
;

94 *
	gª∂_°r
;

97 *
	gc⁄f_°r
;

100 
	gmö_£ts
;

103 
	gmax_£ts
;

106 
	glöe_size
;

109 
	gmax_assoc
;

112 
	gˇche_öãrvÆ
;

115 
	gmax_ˇche
;

118 
	gˇche_size
;

121 *
	gªf_°ªam
;

124 
	#REFS_INST
 0x01

	)

125 
	#REFS_DATA
 0x02

	)

126 
	gªfs
;

130 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

132 
	`›t_ªg_hódî
(
odb
,

142 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

143 &
max_ö°s
, 
LIBCHEETAH_MAX_INST
,

144  
TRUE
, 
NULL
);

146 
	`›t_ªg_°rög
(
odb
, "-refs",

148 &
ªf_°ªam
, "d©a", 
TRUE
, 
NULL
);

150 
	`›t_ªg_°rög
(
odb
, "-R", "replacementÖolicy, i.e.,Üru or opt",

151 &
ª∂_°r
, "Ãu", 
TRUE
, 
NULL
);

153 
	`›t_ªg_°rög
(
odb
, "-C", "cache configuration, i.e., fa, sa, or dm",

154 &
c⁄f_°r
, "ß", 
TRUE
, 
NULL
);

156 
	`›t_ªg_öt
(
odb
, "-a", "minÇumber of sets (log base 2,Üine size for DM)",

157 &
mö_£ts
, 7, 
TRUE
, 
NULL
);

159 
	`›t_ªg_öt
(
odb
, "-b", "maxÇumber of sets (log base 2,Üine size for DM)",

160 &
max_£ts
, 14, 
TRUE
, 
NULL
);

162 
	`›t_ªg_öt
(
odb
, "-l", "line size ofÅhe caches (log base 2)",

163 &
löe_size
, 4, 
TRUE
, 
NULL
);

165 
	`›t_ªg_öt
(
odb
, "-n", "max degree ofássociativityÅoánalyze (log base 2)",

166 &
max_assoc
, 1, 
TRUE
, 
NULL
);

168 
	`›t_ªg_öt
(
odb
, "-in", "cache size intervalsát which missÑatio is shown",

169 &
ˇche_öãrvÆ
, 512, 
TRUE
, 
NULL
);

171 
	`›t_ªg_öt
(
odb
, "-M", "maximum cache size of interest",

172 &
max_ˇche
, 524288, 
TRUE
, 
NULL
);

174 
	`›t_ªg_öt
(
odb
, "-c", "size of cache (log base 2) for DMánalysis",

175 &
ˇche_size
, 16, 
TRUE
, 
NULL
);

176 
	}
}

179 
	glib_¨gc
 = 0;

180 *
	glib_¨gv
[16];

184 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

186 
buf
[512];

188 
	`Ârötf
(
°dîr
,

192 i‡(
max_ö°s
 =0 || max_ö°†> 
LIBCHEETAH_MAX_INST
)

194 
	`w¨n
("sim-cheetah can onlyÖrocess %d instructions",

195 
LIBCHEETAH_MAX_INST
);

196 
max_ö°s
 = 
LIBCHEETAH_MAX_INST
;

199 i‡(!
	`°rcmp
(
ªf_°ªam
, "none"))

200 
ªfs
 = 0;

201 i‡(!
	`°rcmp
(
ªf_°ªam
, "inst"))

202 
ªfs
 = 
REFS_INST
;

203 i‡(!
	`°rcmp
(
ªf_°ªam
, "data"))

204 
ªfs
 = 
REFS_DATA
;

205 i‡(!
	`°rcmp
(
ªf_°ªam
, "unified"))

206 
ªfs
 = (
REFS_INST
|
REFS_DATA
);

208 
	`Áèl
("badÑeference stream specifier, use {inst|data|unified}");

211 
lib_¨gc
 = 0;

213 
	`•rötf
(
buf
, "-R%s", 
ª∂_°r
);

214 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

216 
	`•rötf
(
buf
, "-C%s", 
c⁄f_°r
);

217 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

219 
	`•rötf
(
buf
, "-a%d", 
mö_£ts
);

220 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

222 
	`•rötf
(
buf
, "-b%d", 
max_£ts
);

223 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

225 
	`•rötf
(
buf
, "-l%d", 
löe_size
);

226 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

228 
	`•rötf
(
buf
, "-n%d", 
max_assoc
);

229 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

231 
	`•rötf
(
buf
, "-i%d", 
ˇche_öãrvÆ
);

232 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

234 
	`•rötf
(
buf
, "-M%d", 
max_ˇche
);

235 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

237 
	`•rötf
(
buf
, "-c%d", 
ˇche_size
);

238 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

239 
	}
}

243 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

245 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

247 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

248 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

250 &
sim_num_ªfs
, 0, 
NULL
);

251 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

253 (*)&
sim_ñ≠£d_time
, 0, 
NULL
);

254 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

256 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

257 
	}
}

261 
	$sim_öô
()

263 
sim_num_ªfs
 = 0;

266 
	`ªgs_öô
(&
ªgs
);

269 
mem
 = 
	`mem_¸óã
("mem");

270 
	`mem_öô
(
mem
);

271 
	}
}

275 
	$chìèh_m°©e_obj
(
FILE
 *
°ªam
,

276 *
cmd
,

277 
ªgs_t
 *
ªgs
,

278 
mem_t
 *
mem
)

280 
sim_íd_time
 = 
	`time
((
time_t
 *)
NULL
);

281 
sim_ñ≠£d_time
 = 
	`MAX
(
sim_íd_time
 - 
sim_°¨t_time
, 1);

284 
	`Ârötf
(
°ªam
, "\nsim: ** simulation statistics **\n");

285 
	`°©_¥öt_°©s
(
sim_sdb
, 
°ªam
);

288 
	`chìèh_°©s
(
°ªam
, 
TRUE
);

291  
NULL
;

292 
	}
}

296 
	$sim_lﬂd_¥og
(*
‚ame
,

297 
¨gc
, **
¨gv
,

298 **
ívp
)

301 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

304 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
chìèh_m°©e_obj
);

307 
	`chìèh_öô
(
lib_¨gc
, 
lib_¨gv
);

308 
	}
}

312 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

315 
	`chìèh_c⁄fig
(
°ªam
);

316 
	}
}

320 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

323 
	`chìèh_°©s
(
°ªam
, 
FALSE
);

324 
	}
}

328 
	$sim_unöô
()

331 
	}
}

343 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

346 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

349 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

350 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

352 #i‡
deföed
(
TARGET_PISA
)

355 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

356 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

357 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

358 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

359 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

360 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

363 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

364 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

365 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

366 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

367 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

368 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

370 #ñi‡
deföed
(
TARGET_ALPHA
)

373 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

374 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

375 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

376 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

379 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

380 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

381 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

382 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

385 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

389 
	#READ_BYTE
(
SRC
, 
FAULT
) \

390 (
addr
 = (
SRC
), \

391 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

392 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, 
addr
))

	)

393 
	#READ_HALF
(
SRC
, 
FAULT
) \

394 (
addr
 = (
SRC
), \

395 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

396 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, 
addr
))

	)

397 
	#READ_WORD
(
SRC
, 
FAULT
) \

398 (
addr
 = (
SRC
), \

399 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

400 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, 
addr
))

	)

401 #ifde‡
HOST_HAS_QWORD


402 
	#READ_QWORD
(
SRC
, 
FAULT
) \

403 (
addr
 = (
SRC
), \

404 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

405 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, 
addr
))

	)

408 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

409 (
addr
 = (
DST
), \

410 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

411 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, (
SRC
)))

	)

412 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

413 (
addr
 = (
DST
), \

414 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

415 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
, (
SRC
)))

	)

416 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

417 (
addr
 = (
DST
), \

418 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

419 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
, (
SRC
)))

	)

420 #ifde‡
HOST_HAS_QWORD


421 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

422 (
addr
 = (
DST
), \

423 ((
ªfs
 & 
REFS_DATA
Ë? 
	`chìèh_ac˚ss
(
addr
) : ()0), \

424 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, 
addr
, (
SRC
)))

	)

428 
md_Áu…_ty≥


429 
	$chìèh_ac˚ss_‚
(
mem_t
 *
mem
,

430 
mem_cmd
 
cmd
,

431 
md_addr_t
 
addr
,

432 *
p
,

433 
nbyãs
)

435 i‡(
ªfs
 & 
REFS_DATA
)

436 
	`chìèh_ac˚ss
(
addr
);

437  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

438 
	}
}

441 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
chìèh_ac˚ss_‚
, 
mem
, INST, 
TRUE
)

	)

445 
	$sim_maö
()

447 
md_ö°_t
 
ö°
;

448 
md_addr_t
 
addr
;

449 
md_›code
 
›
;

450 
is_wrôe
;

451 
md_Áu…_ty≥
 
Áu…
;

453 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

456 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

459 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

460 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

461 
sim_num_ö¢
, &
ªgs
, 
mem
);

463 
TRUE
)

466 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

467 #ifde‡
TARGET_ALPHA


468 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

472 i‡(
ªfs
 & 
REFS_INST
)

473 
	`chìèh_ac˚ss
(
ªgs
.
ªgs_PC
);

474 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

477 
sim_num_ö¢
++;

480 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

483 
Áu…
 = 
md_Áu…_n⁄e
;

486 
	`MD_SET_OPCODE
(
›
, 
ö°
);

489 
›
)

491 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

492 
OP
: \

493 
	`SYMCAT
(
OP
,
_IMPL
); \

494 ;

	)

495 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

496 
OP
: \

497 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

498 
	#CONNECT
(
OP
)

	)

499 
	#DECLARE_FAULT
(
FAULT
) \

500 { 
Áu…
 = (
FAULT
); ; }

	)

501 
	~"machöe.def
"

503 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

506 i‡(
Áu…
 !
md_Áu…_n⁄e
)

507 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

509 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

511 
sim_num_ªfs
++;

512 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

513 
is_wrôe
 = 
TRUE
;

517 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

518 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

519 
addr
, 
sim_num_ö¢
, sim_num_insn))

520 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

523 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

524 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

527 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

530 
	}
}

	@sim-eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"eio.h
"

67 
	~"ønge.h
"

68 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
	gÁ°fwd_cou¡
;

93 
	gÁ°fwdög
 = 
FALSE
;

96 *
	gåa˚_‚ame
;

97 
FILE
 *
	gåa˚_fd
 = 
NULL
;

100 íum { 
	mno_chk±
, 
	m⁄e_shŸ_chk±
, 
	m≥riodic_chk±
 } 
	gchk±_köd
 = 
no_chk±
;

101 *
	gchk±_‚ame
;

102 
FILE
 *
	gchk±_fd
 = 
NULL
;

103 
ønge_ønge_t
 
	gchk±_ønge
;

106 
cou¡î_t
 
	g≥r_chk±_öãrvÆ
;

107 
cou¡î_t
 
	g√xt_chk±_cy˛e
;

108 
	gchk±_num
;

111 
	gchk±_√…
 = 0;

112 *
	gchk±_›ts
[2];

115 
	g≥r_chk±_√…
 = 0;

116 *
	g≥r_chk±_›ts
[2];

121 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

123 
	`›t_ªg_hódî
(
odb
,

136 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

137 &
max_ö°s
, 0,

138  
TRUE
, 
NULL
);

140 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅracing starts",

141 &
Á°fwd_cou¡
, 0,

142  
TRUE
, 
NULL
);

144 
	`›t_ªg_°rög
(
odb
, "-trace", "EIOÅrace file output fileÇame",

145 &
åa˚_‚ame
, 
NULL
,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög_li°
(
odb
, "-perdump",

151 
≥r_chk±_›ts
, 2, &
≥r_chk±_√…
,

152  
NULL
,

153  
FALSE
, 
NULL
, FALSE);

155 
	`›t_ªg_°rög_li°
(
odb
, "-dump",

157 
chk±_›ts
, 2, &
chk±_√…
, 
NULL
,

158  
FALSE
, 
NULL
, FALSE);

160 
	`›t_ªg_nŸe
(
odb
,

177 
	}
}

180 
	gfú°_timmî
 = 1;

182 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

184 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

185 
	`Áèl
("bad fa° f‹w¨d cou¡: %ld", 
Á°fwd_cou¡
);

186 if(
fú°_timmî
) {

187 
Á°fwd_cou¡
 *= 1000000;

188 
fú°_timmî
 = 0;

190 
	}
}

194 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

196 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

198 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

199 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

201 &
sim_num_ªfs
, 0, 
NULL
);

202 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

204 &
sim_ñ≠£d_time
, 0, 
NULL
);

205 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

207 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

208 
	`ld_ªg_°©s
(
sdb
);

209 
	`mem_ªg_°©s
(
mem
, 
sdb
);

210 
	}
}

214 
	$sim_öô
()

216 
sim_num_ªfs
 = 0;

219 
	`ªgs_öô
(&
ªgs
);

222 
mem
 = 
	`mem_¸óã
("mem");

223 
	`mem_öô
(
mem
);

224 
	}
}

228 
	$sim_lﬂd_¥og
(*
‚ame
,

229 
¨gc
, **
¨gv
,

230 **
ívp
)

233 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

235 i‡(
chk±_√…
 == 2)

237 *
îr°r
;

240 i‡(!
sim_eio_fd
)

241 
	`Áèl
("checkpoints can only be generated whileÑunningán EIOÅrace");

244 i‡(
≥r_chk±_√…
 != 0)

245 
	`Áèl
("can't do bothÑegularándÖeriodic checkpoints");

248 i‡(
åa˚_‚ame
 !
NULL
)

249 
	`Áèl
("checkpoints cannot be generated with generatingán EIOÅrace");

253 
îr°r
 = 
	`ønge_∑r£_ønge
(
chk±_›ts
[1], &
chk±_ønge
);

254 i‡(
îr°r
)

255 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

258 
chk±_‚ame
 = 
chk±_›ts
[0];

259 
chk±_fd
 = 
	`eio_¸óã
(
chk±_‚ame
);

262 
chk±_köd
 = 
⁄e_shŸ_chk±
;

265 i‡(
≥r_chk±_√…
 == 2)

267 
chk±_‚ame
 = 
≥r_chk±_›ts
[0];

268 i‡(
	`°rchr
(
chk±_‚ame
, '%'Ë=
NULL
)

269 
	`Áèl
("periodic checkpoint filename must beÖrintf-style format");

271 i‡(
	`ssˇnf
(
≥r_chk±_›ts
[1], "%Ld", &
≥r_chk±_öãrvÆ
) != 1)

272 
	`Áèl
("can'tÖarseÖeriodic checkpoint interval '%s'",

273 
≥r_chk±_›ts
[1]);

276 
chk±_köd
 = 
≥riodic_chk±
;

277 
chk±_num
 = 1;

278 
√xt_chk±_cy˛e
 = 
≥r_chk±_öãrvÆ
;

281 i‡(
åa˚_‚ame
 !
NULL
)

283 
	`Ârötf
(
°dîr
, "sim:ÅracingÉxecutionÅo EIO file `%s'...\n",

284 
åa˚_‚ame
);

287 
åa˚_fd
 = 
	`eio_¸óã
(
åa˚_‚ame
);

291 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

292 
	}
}

297 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

300 
	}
}

304 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

307 
	}
}

311 
	$sim_unöô
()

313 i‡(
åa˚_fd
 !
NULL
)

314 
	`eio_˛o£
(
åa˚_fd
);

315 
	}
}

327 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

330 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

333 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

334 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

336 #i‡
deföed
(
TARGET_PISA
)

339 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

340 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

341 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

342 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

343 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

344 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

347 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

348 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

349 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

350 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

351 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

352 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

354 #ñi‡
deföed
(
TARGET_ALPHA
)

357 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

358 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

359 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

360 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

363 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

364 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

365 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

366 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

369 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

373 
	#READ_BYTE
(
SRC
, 
FAULT
) \

374 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

	)

375 
	#READ_HALF
(
SRC
, 
FAULT
) \

376 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

	)

377 
	#READ_WORD
(
SRC
, 
FAULT
) \

378 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

	)

379 #ifde‡
HOST_HAS_QWORD


380 
	#READ_QWORD
(
SRC
, 
FAULT
) \

381 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, 
addr
 = (
SRC
)))

	)

384 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

385 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

386 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

387 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

388 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

389 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

390 #ifde‡
HOST_HAS_QWORD


391 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

392 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

396 
	#SYSCALL
(
INST
) \

397 ((
åa˚_fd
 !
NULL
 && !
Á°fwdög
) \

398 ? 
	`eio_wrôe_åa˚
(
åa˚_fd
, 
sim_num_ö¢
, \

399 &
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
) \

400 : 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

404 
	$sim_maö
()

406 
md_ö°_t
 
ö°
;

407 
md_addr_t
 
addr
;

408 
md_›code
 
›
;

409 
boﬁ_t
 
is_wrôe
;

410 
md_Áu…_ty≥
 
Áu…
;

413 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

416 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

417 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

418 
sim_num_ö¢
, &
ªgs
, 
mem
);

422 i‡(
Á°fwd_cou¡
 > 0)

424 
icou¡
;

426 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %Œd in°†**\n", 
Á°fwd_cou¡
);

428 
Á°fwdög
 = 
TRUE
;

429 
icou¡
=0; (icou¡ < 
Á°fwd_cou¡
Ë&& !
¥ogøm_com∂ëe
; icount++)

432 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

433 #ifde‡
TARGET_ALPHA


434 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

438 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

441 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

444 
Áu…
 = 
md_Áu…_n⁄e
;

447 
	`MD_SET_OPCODE
(
›
, 
ö°
);

450 
›
)

452 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

453 
OP
: \

454 
	`SYMCAT
(
OP
,
_IMPL
); \

455 ;

	)

456 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

457 
OP
: \

458 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

459 
	#CONNECT
(
OP
)

	)

460 #unde‡
DECLARE_FAULT


461 
	#DECLARE_FAULT
(
FAULT
) \

462 { 
Áu…
 = (
FAULT
); ; }

	)

463 
	~"machöe.def
"

465 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

468 i‡(
Áu…
 !
md_Áu…_n⁄e
)

469 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

472 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

474 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

475 
is_wrôe
 = 
TRUE
;

479 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

480 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

481 
addr
, 
sim_num_ö¢
, sim_num_insn))

482 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

485 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

486 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

489 
Á°fwdög
 = 
FALSE
;

491 i‡(
åa˚_fd
 !
NULL
)

493 
	`Ârötf
(
°dîr
, "sim: writing EIO file initial checkpoint...\n");

494 i‡(
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
åa˚_fd
) != -1)

495 
	`∑nic
("checkpoint code is broken");

498 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

501 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

503 !
¥ogøm_com∂ëe
)

506 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

507 #ifde‡
TARGET_ALPHA


508 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

512 i‡(
chk±_köd
 =
⁄e_shŸ_chk±


513 && !
	`ønge_cmp_ønge1
(&
chk±_ønge
, 
ªgs
.
ªgs_NPC
,

514 
sim_num_ö¢
, sim_num_insn))

516 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

517 
chk±_‚ame
, 
sim_num_ö¢
);

520 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

523 
	`eio_˛o£
(
chk±_fd
);

526 
	`l⁄gjmp
(
sim_exô_buf
, 0+1);

528 i‡(
chk±_köd
 =
≥riodic_chk±


529 && 
sim_num_ö¢
 =
√xt_chk±_cy˛e
)

531 
this_chk±_‚ame
[256];

534 
	`•rötf
(
this_chk±_‚ame
, 
chk±_‚ame
, 
chk±_num
);

535 
chk±_fd
 = 
	`eio_¸óã
(
this_chk±_‚ame
);

537 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

538 
this_chk±_‚ame
, 
sim_num_ö¢
);

541 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

544 
	`eio_˛o£
(
chk±_fd
);

546 
chk±_num
++;

547 
√xt_chk±_cy˛e
 +
≥r_chk±_öãrvÆ
;

551 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

554 
sim_num_ö¢
++;

557 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

560 
Áu…
 = 
md_Áu…_n⁄e
;

563 
	`MD_SET_OPCODE
(
›
, 
ö°
);

566 
›
)

568 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

569 
OP
: \

570 
	`SYMCAT
(
OP
,
_IMPL
); \

571 ;

	)

572 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

573 
OP
: \

574 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

575 
	#CONNECT
(
OP
)

	)

576 
	#DECLARE_FAULT
(
FAULT
) \

577 { 
Áu…
 = (
FAULT
); ; }

	)

578 
	~"machöe.def
"

580 
	`∑nic
("bogus opcode");

583 i‡(
Áu…
 !
md_Áu…_n⁄e
)

584 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

586 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

588 
sim_num_ªfs
++;

589 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

590 
is_wrôe
 = 
TRUE
;

594 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

595 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

596 
addr
, 
sim_num_ö¢
, sim_num_insn))

597 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

600 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

601 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

604 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts) {

605 
¥ogøm_com∂ëe
 = 1;

609 
	}
}

	@sim-fast.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

70 #unde‡
NO_INSN_COUNT


72 #ifde‡
__GNUC__


79 
	~"ho°.h
"

80 
	~"misc.h
"

81 
	~"machöe.h
"

82 
	~"ªgs.h
"

83 
	~"mem‹y.h
"

84 
	~"lﬂdî.h
"

85 
	~"sysˇŒ.h
"

86 
	~"dlôe.h
"

87 
	~"sim.h
"

90 
ªgs_t
 
	gªgs
;

93 
mem_t
 *
	gmem
 = 
NULL
;

95 #ifde‡
TARGET_ALPHA


97 
mem_t
 *
	gdec
 = 
NULL
;

102 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

104 
	`›t_ªg_hódî
(
odb
,

113 
	}
}

117 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

119 i‡(
dlôe_a˘ive
)

120 
	`Áèl
("sim-fast doesÇot support DLite debugging");

121 
	}
}

125 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

127 #i‚de‡
NO_INSN_COUNT


128 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

130 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

132 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

134 &
sim_ñ≠£d_time
, 0, 
NULL
);

135 #i‚de‡
NO_INSN_COUNT


136 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

138 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

140 
	`ld_ªg_°©s
(
sdb
);

141 
	`mem_ªg_°©s
(
mem
, 
sdb
);

142 #ifde‡
TARGET_ALPHA


143 
	`mem_ªg_°©s
(
dec
, 
sdb
);

145 
	}
}

149 
	$sim_öô
()

152 
	`ªgs_öô
(&
ªgs
);

155 
mem
 = 
	`mem_¸óã
("mem");

156 
	`mem_öô
(
mem
);

157 
	}
}

161 
	$sim_lﬂd_¥og
(*
‚ame
,

162 
¨gc
, **
¨gv
,

163 **
ívp
)

166 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

168 #ifde‡
TARGET_ALPHA


171 
i
, 
num_ö¢
 = (
ld_ãxt_size
 + 3) / 2;

173 
	`Ârötf
(
°dîr
, "**Öª-decodög %u in°s...", 
num_ö¢
);

176 
dec
 = 
	`mem_¸óã
("dec");

178 
i
=0; i < 
num_ö¢
; i++)

180 
md_›code
 
›
;

181 
md_ö°_t
 
ö°
;

182 
md_addr_t
 
PC
;

185 
PC
 = 
ld_ãxt_ba£
 + 
i
 * (
md_ö°_t
);

188 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
PC
);

191 
	`MD_SET_OPCODE
(
›
, 
ö°
);

194 
	`MEM_WRITE_WORD
(
dec
, 
PC
 << 1, (
w‹d_t
)
›
);

195 
	`MEM_WRITE_WORD
(
dec
, (
PC
 << 1)+(
w‹d_t
), 
ö°
);

197 
	`Ârötf
(
°dîr
, "done\n");

200 
	}
}

204 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

207 
	}
}

211 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

214 
	}
}

218 
	$sim_unöô
()

221 
	}
}

228 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

231 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

234 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

235 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

237 #i‡
deföed
(
TARGET_PISA
)

240 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

241 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

242 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

243 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

244 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

245 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

248 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

249 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

250 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

251 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

252 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

253 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

255 #ñi‡
deföed
(
TARGET_ALPHA
)

258 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

259 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

260 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

261 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

264 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

265 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

266 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

267 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

270 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

274 
	#READ_BYTE
(
SRC
, 
FAULT
) \

275 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, (
SRC
)))

	)

276 
	#READ_HALF
(
SRC
, 
FAULT
) \

277 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, (
SRC
)))

	)

278 
	#READ_WORD
(
SRC
, 
FAULT
) \

279 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, (
SRC
)))

	)

280 #ifde‡
HOST_HAS_QWORD


281 
	#READ_QWORD
(
SRC
, 
FAULT
) \

282 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, (
SRC
)))

	)

285 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

286 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, (
DST
), (
SRC
)))

	)

287 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

288 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, (
DST
), (
SRC
)))

	)

289 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

290 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, (
DST
), (
SRC
)))

	)

291 #ifde‡
HOST_HAS_QWORD


292 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

293 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, (
DST
), (
SRC
)))

	)

297 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

299 #i‚de‡
NO_INSN_COUNT


300 
	#INC_INSN_CTR
(Ë
sim_num_ö¢
++

	)

302 
	#INC_INSN_CTR
(Ë

	)

305 #ifde‡
TARGET_ALPHA


306 
	#ZERO_FP_REG
(Ë
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0

	)

308 
	#ZERO_FP_REG
(Ë

	)

313 
	$sim_maö
()

317 #ifde‡
USE_JUMP_TABLE


327 *
›_jump
[ ] = {

328 &&
›code_NA
,

329 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

330 &&
›code_
##
OP
,

	)

331 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

332 &&
›code_
##
OP
,

	)

333 
	#CONNECT
(
OP
)

	)

334 
	~"machöe.def
"

339 
md_ö°_t
 
ö°
;

342 
md_›code
 
›
;

344 
	`Ârötf
(
°dîr
, "sim: ** starting *fast* functional simulation **\n");

347 i‡(
sim_sw≠_byãs
 || 
sim_sw≠_w‹ds
)

348 
	`Áèl
("sim: *fast* functional simulation cannot swap bytes or words");

350 #ifde‡
USE_JUMP_TABLE


352 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
;

355 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
);

358 
	`MD_SET_OPCODE
(
›
, 
ö°
);

359 *
›_jump
[
›
];

361 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

362 
›code_
##
OP
: \

364 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; \

365 
	`ZERO_FP_REG
(); \

368 
	`INC_INSN_CTR
(); \

371 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
; \

374 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
); \

377 
	`SYMCAT
(
OP
,
_IMPL
); \

380 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
); \

383 
	`MD_SET_OPCODE
(
›
, 
ö°
); \

384 *
›_jump
[
›
];

	)

386 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

387 
›code_
##
OP
: \

388 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

389 
	#CONNECT
(
OP
)

	)

390 
	#DECLARE_FAULT
(
FAULT
) \

391 { ; }

	)

392 
	~"machöe.def
"

394 
›code_NA
:

395 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

398 
	`∑nic
("exited sim-fast mainÜoop");

403 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

405 !
¥ogøm_com∂ëe
)

408 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

409 #ifde‡
TARGET_ALPHA


410 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

414 #i‚de‡
NO_INSN_COUNT


415 
sim_num_ö¢
++;

421 
›
 = (
md_›code
)
	`__UNCHK_MEM_READ
(
dec
, 
ªgs
.
ªgs_PC
 << 1, 
w‹d_t
);

422 
ö°
 =

423 
	`__UNCHK_MEM_READ
(
dec
, (
ªgs
.
ªgs_PC
 << 1)+(
w‹d_t
), 
md_ö°_t
);

426 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

429 
	`MD_SET_OPCODE
(
›
, 
ö°
);

447 
›
)

449 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

450 
OP
: \

451 
	`SYMCAT
(
OP
,
_IMPL
); \

452 ;

	)

453 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

454 
OP
: \

455 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

456 
	#CONNECT
(
OP
)

	)

457 
	#DECLARE_FAULT
(
FAULT
) \

458 { ; }

	)

459 
	~"machöe.def
"

461 
	`¥ötf
("\n%d\n", 
›
);

462 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

466 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

467 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

471 
	}
}

	@sim-outorder.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

56 
	~<sig«l.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"b¥ed.h
"

67 
	~"ªsour˚.h
"

68 
	~"bôm≠.h
"

69 
	~"›ti⁄s.h
"

70 
	~"evÆ.h
"

71 
	~"°©s.h
"

72 
	~"±ø˚.h
"

73 
	~"dlôe.h
"

74 
	~"sim.h
"

84 
ªgs_t
 
	gªgs
;

87 
mem_t
 *
	gmem
 = 
NULL
;

95 
	gmax_ö°s
;

98 
	gÁ°fwd_cou¡
;

101 
	g±ø˚_√…
 = 0;

102 *
	g±ø˚_›ts
[2];

105 
	gruu_ifq_size
;

108 
	gruu_bønch_≥«…y
;

111 
	g„tch_•ìd
;

114 
	gmf_com∑t
;

117 *
	g¥ed_ty≥
;

120 
	gbimod_√…
 = 1;

121 
	gbimod_c⁄fig
[1] =

125 
	gtwﬁev_√…
 = 4;

126 
	gtwﬁev_c⁄fig
[4] =

127 { 1, 1024, 8, 
FALSE
};

130 
	gcomb_√…
 = 1;

131 
	gcomb_c⁄fig
[1] =

135 
	gøs_size
 = 8;

138 
	gbtb_√…
 = 2;

139 
	gbtb_c⁄fig
[2] =

143 
	gruu_decode_width
;

146 
	gruu_issue_width
;

149 
	gruu_ö‹dî_issue
;

152 
	gruu_ö˛ude_•ec
 = 
TRUE
;

155 
	gruu_commô_width
;

158 
	gRUU_size
 = 8;

161 
	gLSQ_size
 = 4;

164 
	g≥r„˘_dißmbig
 = 
FALSE
;

167 *
	gˇche_dl1_›t
;

170 
	gˇche_dl1_œt
;

173 *
	gˇche_dl2_›t
;

176 
	gˇche_dl2_œt
;

179 *
	gˇche_û1_›t
;

182 
	gˇche_û1_œt
;

185 *
	gˇche_û2_›t
;

188 
	gˇche_û2_œt
;

191 
	gÊush_⁄_sysˇŒs
;

194 
	gcom¥ess_iˇche_addrs
;

197 
	gmem_√…
 = 2;

198 
	gmem_œt
[2] =

202 
	gmem_bus_width
;

205 *
	gôlb_›t
;

208 *
	gdéb_›t
;

211 
	géb_miss_œt
;

214 
	gªs_ülu
;

217 
	gªs_imu…
;

220 
	gªs_memp‹t
;

223 
	gªs_ÂÆu
;

226 
	gªs_Âmu…
;

229 
	#MAX_PCSTAT_VARS
 8

	)

230 
	gpc°©_√…
 = 0;

231 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

234 #ifde‡
TARGET_PISA


235 
	#IACOMPRESS
(
A
) \

236 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

237 
	#ISCOMPRESS
(
SZ
) \

238 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

240 
	#IACOMPRESS
(
A
Ë(A)

	)

241 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

245 
	gbugcom∑t_mode
;

252 
	#FU_IALU_INDEX
 0

	)

253 
	#FU_IMULT_INDEX
 1

	)

254 
	#FU_MEMPORT_INDEX
 2

	)

255 
	#FU_FPALU_INDEX
 3

	)

256 
	#FU_FPMULT_INDEX
 4

	)

259 
ªs_desc
 
	gfu_c⁄fig
[] = {

265 { 
I¡ALU
, 1, 1 }

273 { 
I¡MULT
, 7, 1 },

274 { 
I¡DIV
, 12, 9 }

282 { 
RdP‹t
, 1, 1 },

283 { 
WrP‹t
, 1, 1 }

291 { 
FlﬂtADD
, 4, 1 },

292 { 
FlﬂtCMP
, 4, 1 },

293 { 
FlﬂtCVT
, 3, 1 }

301 { 
FlﬂtMULT
, 4, 1 },

302 { 
FlﬂtDIV
, 12, 9 },

303 { 
FlﬂtSQRT
, 18, 15 }

313 
cou¡î_t
 
	gsim_¶ù
 = 0;

316 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

319 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

322 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

325 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

328 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

331 
cou¡î_t
 
	gsim_num_bønches
 = 0;

334 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

337 
tick_t
 
	gsim_cy˛e
 = 0;

340 
cou¡î_t
 
	gIFQ_cou¡
;

341 
cou¡î_t
 
	gIFQ_fcou¡
;

342 
cou¡î_t
 
	gRUU_cou¡
;

343 
cou¡î_t
 
	gRUU_fcou¡
;

344 
cou¡î_t
 
	gLSQ_cou¡
;

345 
cou¡î_t
 
	gLSQ_fcou¡
;

348 
cou¡î_t
 
	gmis„tch_cou¡
 = 0;

349 
cou¡î_t
 
	gmis„tch_⁄ly_cou¡
 = 0;

350 
cou¡î_t
 
	gªcovîy_cou¡
 = 0;

353 
cou¡î_t
 
	gsim_övÆid_addrs
;

360 
	gö°_£q
 = 0;

363 
	g±ø˚_£q
 = 0;

369 
	g•ec_mode
 = 
FALSE
;

372 
	gruu_„tch_issue_dñay
 = 0;

375 
	g¥ed_≥r„˘
 = 
FALSE
;

378 *
	gb¥ed_•ec_›t
;

379 íum { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

382 
ˇche_t
 *
	gˇche_û1
;

385 
ˇche_t
 *
	gˇche_û2
;

388 
ˇche_t
 *
	gˇche_dl1
;

391 
ˇche_t
 *
	gˇche_dl2
;

394 
ˇche_t
 *
	gôlb
;

397 
ˇche_t
 *
	gdéb
;

400 
b¥ed_t
 *
	g¥ed
;

403 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

406 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

407 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

408 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

411 
	#STATVAL
(
STAT
) \

412 ((
STAT
)->
sc
 =
sc_öt
 \

413 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

414 : ((
STAT
)->
sc
 =
sc_uöt
 \

415 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

416 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

417 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

418 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

423 
	$mem_ac˚ss_œãncy
(
blk_sz
)

425 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

427 
	`as£π
(
chunks
 > 0);

429  ( 
mem_œt
[0] +

430 –
mem_œt
[1] * (
chunks
 - 1)));

431 
	}
}

440 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

441 
md_addr_t
 
baddr
,

442 
bsize
,

443 
ˇche_blk_t
 *
blk
,

444 
tick_t
 
now
)

446 
œt
;

448 i‡(
ˇche_dl2
)

451 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

452  
now
, 
NULL
, NULL);

453 i‡(
cmd
 =
Ród
)

454  
œt
;

464 i‡(
cmd
 =
Ród
)

465  
	`mem_ac˚ss_œãncy
(
bsize
);

472 
	}
}

476 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

477 
md_addr_t
 
baddr
,

478 
bsize
,

479 
ˇche_blk_t
 *
blk
,

480 
tick_t
 
now
)

483 i‡(
cmd
 =
Ród
)

484  
	`mem_ac˚ss_œãncy
(
bsize
);

490 
	}
}

494 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

495 
md_addr_t
 
baddr
,

496 
bsize
,

497 
ˇche_blk_t
 *
blk
,

498 
tick_t
 
now
)

500 
œt
;

502 i‡(
ˇche_û2
)

505 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

506  
now
, 
NULL
, NULL);

507 i‡(
cmd
 =
Ród
)

508  
œt
;

510 
	`∑nic
("writesÅo instruction memoryÇot supported");

515 i‡(
cmd
 =
Ród
)

516  
	`mem_ac˚ss_œãncy
(
bsize
);

518 
	`∑nic
("writesÅo instruction memoryÇot supported");

520 
	}
}

524 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

525 
md_addr_t
 
baddr
,

526 
bsize
,

527 
ˇche_blk_t
 *
blk
,

528 
tick_t
 
now
)

531 i‡(
cmd
 =
Ród
)

532  
	`mem_ac˚ss_œãncy
(
bsize
);

534 
	`∑nic
("writesÅo instruction memoryÇot supported");

535 
	}
}

544 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

545 
md_addr_t
 
baddr
,

546 
bsize
,

547 
ˇche_blk_t
 *
blk
,

548 
tick_t
 
now
)

550 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

553 
	`as£π
(
phy_∑ge_±r
);

556 *
phy_∑ge_±r
 = 0;

559  
éb_miss_œt
;

560 
	}
}

564 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

565 
md_addr_t
 
baddr
,

566 
bsize
,

567 
ˇche_blk_t
 *
blk
,

568 
tick_t
 
now
)

570 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

573 
	`as£π
(
phy_∑ge_±r
);

576 *
phy_∑ge_±r
 = 0;

579  
éb_miss_œt
;

580 
	}
}

585 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

587 
	`›t_ªg_hódî
(
odb
,

596 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

597 &
max_ö°s
, 0,

598  
TRUE
, 
NULL
);

602 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅiming starts",

603 &
Á°fwd_cou¡
, 0,

604  
TRUE
, 
NULL
);

605 
	`›t_ªg_°rög_li°
(
odb
, "-ptrace",

607 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

608  
FALSE
, 
NULL
, FALSE);

610 
	`›t_ªg_nŸe
(
odb
,

632 
	`›t_ªg_öt
(
odb
, "-fetch:ifqsize", "instruction fetch queue size (in insts)",

633 &
ruu_ifq_size
, 4,

634  
TRUE
, 
NULL
);

636 
	`›t_ªg_öt
(
odb
, "-fetch:mplat", "extra branch mis-predictionÜatency",

637 &
ruu_bønch_≥«…y
, 3,

638  
TRUE
, 
NULL
);

640 
	`›t_ªg_öt
(
odb
, "-fetch:speed",

642 &
„tch_•ìd
, 1,

643  
TRUE
, 
NULL
);

645 
	`›t_ªg_Êag
(
odb
, "-fetch:mf_compat", "optimistic misfetchÑecovery",

646 &
mf_com∑t
, 
FALSE
,

647  
TRUE
, 
NULL
);

651 
	`›t_ªg_nŸe
(
odb
,

667 
	`›t_ªg_°rög
(
odb
, "-bpred",

669 &
¥ed_ty≥
, "bimod",

670  
TRUE
, 
NULL
);

672 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

674 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

675  
bimod_c⁄fig
,

676  
TRUE
, 
NULL
, 
FALSE
);

678 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

681 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

682  
twﬁev_c⁄fig
,

683  
TRUE
, 
NULL
, 
FALSE
);

685 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

687 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

688  
comb_c⁄fig
,

689  
TRUE
, 
NULL
, 
FALSE
);

691 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

693 &
øs_size
,Ñas_size,

694  
TRUE
, 
NULL
);

696 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

698 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

699  
btb_c⁄fig
,

700  
TRUE
, 
NULL
, 
FALSE
);

702 
	`›t_ªg_°rög
(
odb
, "-bpred:spec_update",

704 &
b¥ed_•ec_›t
, 
NULL
,

705  
TRUE
, 
NULL
);

709 
	`›t_ªg_öt
(
odb
, "-decode:width",

711 &
ruu_decode_width
, 4,

712  
TRUE
, 
NULL
);

716 
	`›t_ªg_öt
(
odb
, "-issue:width",

718 &
ruu_issue_width
, 4,

719  
TRUE
, 
NULL
);

721 
	`›t_ªg_Êag
(
odb
, "-issue:inorder", "runÖipeline with in-order issue",

722 &
ruu_ö‹dî_issue
, 
FALSE
,

723  
TRUE
, 
NULL
);

725 
	`›t_ªg_Êag
(
odb
, "-issue:wrongpath",

727 &
ruu_ö˛ude_•ec
, 
TRUE
,

728  
TRUE
, 
NULL
);

732 
	`›t_ªg_öt
(
odb
, "-commit:width",

734 &
ruu_commô_width
, 4,

735  
TRUE
, 
NULL
);

739 
	`›t_ªg_öt
(
odb
, "-ruu:size",

741 &
RUU_size
, 16,

742  
TRUE
, 
NULL
);

746 
	`›t_ªg_öt
(
odb
, "-lsq:size",

748 &
LSQ_size
, 8,

749  
TRUE
, 
NULL
);

751 
	`›t_ªg_Êag
(
odb
, "-lsq:perfect",

753 &
≥r„˘_dißmbig
, 
FALSE
, 
TRUE
, 
NULL
);

757 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

759 &
ˇche_dl1_›t
, "dl1:128:32:4:l",

760  
TRUE
, 
NULL
);

762 
	`›t_ªg_nŸe
(
odb
,

777 
	`›t_ªg_öt
(
odb
, "-cache:dl1lat",

779 &
ˇche_dl1_œt
, 1,

780  
TRUE
, 
NULL
);

782 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

784 &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

785  
TRUE
, 
NULL
);

787 
	`›t_ªg_öt
(
odb
, "-cache:dl2lat",

789 &
ˇche_dl2_œt
, 6,

790  
TRUE
, 
NULL
);

792 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

794 &
ˇche_û1_›t
, "il1:512:32:1:l",

795  
TRUE
, 
NULL
);

797 
	`›t_ªg_nŸe
(
odb
,

811 
	`›t_ªg_öt
(
odb
, "-cache:il1lat",

813 &
ˇche_û1_œt
, 1,

814  
TRUE
, 
NULL
);

816 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

818 &
ˇche_û2_›t
, "dl2",

819  
TRUE
, 
NULL
);

821 
	`›t_ªg_öt
(
odb
, "-cache:il2lat",

823 &
ˇche_û2_œt
, 6,

824  
TRUE
, 
NULL
);

826 
	`›t_ªg_Êag
(
odb
, "-cache:flush", "flush caches on system calls",

827 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

829 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

831 &
com¥ess_iˇche_addrs
, 
FALSE
,

832  
TRUE
, 
NULL
);

835 
	`›t_ªg_öt_li°
(
odb
, "-mem:lat",

837 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

838  
TRUE
, 
NULL
, 
FALSE
);

840 
	`›t_ªg_öt
(
odb
, "-mem:width", "memoryáccess bus width (in bytes)",

841 &
mem_bus_width
, 8,

842  
TRUE
, 
NULL
);

846 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

848 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

850 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

852 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

854 
	`›t_ªg_öt
(
odb
, "-tlb:lat",

856 &
éb_miss_œt
, 30,

857  
TRUE
, 
NULL
);

861 
	`›t_ªg_öt
(
odb
, "-res:ialu",

863 &
ªs_ülu
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

864  
TRUE
, 
NULL
);

866 
	`›t_ªg_öt
(
odb
, "-res:imult",

868 &
ªs_imu…
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

869  
TRUE
, 
NULL
);

871 
	`›t_ªg_öt
(
odb
, "-res:memport",

873 &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

874  
TRUE
, 
NULL
);

876 
	`›t_ªg_öt
(
odb
, "-res:fpalu",

878 &
ªs_ÂÆu
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

879  
TRUE
, 
NULL
);

881 
	`›t_ªg_öt
(
odb
, "-res:fpmult",

883 &
ªs_Âmu…
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

884  
TRUE
, 
NULL
);

886 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

888 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

889  
FALSE
, 
NULL
, 
TRUE
);

891 
	`›t_ªg_Êag
(
odb
, "-bugcompat",

893 &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

894 
	}
}

898 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

899 
¨gc
, **
¨gv
)

901 
«me
[128], 
c
;

902 
n£ts
, 
bsize
, 
assoc
;

904 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

905 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

907 i‡(
ruu_ifq_size
 < 1 || (ruu_ifq_size & (ruu_ifq_size - 1)) != 0)

908 
	`Áèl
("inst fetch queue size must beÖositive > 0ándáÖower ofÅwo");

910 i‡(
„tch_•ìd
 < 1)

911 
	`Áèl
("front-end speed must beÖositiveándÇon-zero");

913 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "perfect"))

916 
¥ed
 = 
NULL
;

917 
¥ed_≥r„˘
 = 
TRUE
;

919 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

922 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

924 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

927 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

929 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

932 i‡(
bimod_√…
 != 1)

933 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

934 i‡(
btb_√…
 != 2)

935 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

938 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

939  
bimod_c⁄fig
[0],

945  
btb_c⁄fig
[0],

946  
btb_c⁄fig
[1],

947  
øs_size
);

949 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

952 i‡(
twﬁev_√…
 != 4)

953 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

954 i‡(
btb_√…
 != 2)

955 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

957 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

959  
twﬁev_c⁄fig
[0],

960  
twﬁev_c⁄fig
[1],

962  
twﬁev_c⁄fig
[2],

963  
twﬁev_c⁄fig
[3],

964  
btb_c⁄fig
[0],

965  
btb_c⁄fig
[1],

966  
øs_size
);

968 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

971 i‡(
twﬁev_√…
 != 4)

972 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

973 i‡(
bimod_√…
 != 1)

974 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

975 i‡(
comb_√…
 != 1)

976 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

977 i‡(
btb_√…
 != 2)

978 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

980 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

981  
bimod_c⁄fig
[0],

982  
twﬁev_c⁄fig
[0],

983  
twﬁev_c⁄fig
[1],

984  
comb_c⁄fig
[0],

985  
twﬁev_c⁄fig
[2],

986  
twﬁev_c⁄fig
[3],

987  
btb_c⁄fig
[0],

988  
btb_c⁄fig
[1],

989  
øs_size
);

992 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

994 i‡(!
b¥ed_•ec_›t
)

995 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

996 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "ID"))

997 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

998 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "WB"))

999 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

1001 
	`Áèl
("bad speculative update stage specifier, use {ID|WB}");

1003 i‡(
ruu_decode_width
 < 1 || (ruu_decode_width & (ruu_decode_width-1)) != 0)

1004 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

1006 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width-1)) != 0)

1007 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

1009 i‡(
ruu_commô_width
 < 1)

1010 
	`Áèl
("commit width must beÖositiveÇon-zero");

1012 i‡(
RUU_size
 < 2 || (RUU_size & (RUU_size-1)) != 0)

1013 
	`Áèl
("RUU size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

1015 i‡(
LSQ_size
 < 2 || (LSQ_size & (LSQ_size-1)) != 0)

1016 
	`Áèl
("LSQ size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

1019 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

1021 
ˇche_dl1
 = 
NULL
;

1024 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

1025 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

1026 
ˇche_dl2
 = 
NULL
;

1030 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

1031 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1032 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1033 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1034  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1035 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
);

1038 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

1039 
ˇche_dl2
 = 
NULL
;

1042 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

1043 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1044 
	`Áèl
("badÜ2 D-cacheÖarms: "

1046 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1047  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1048 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
);

1053 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

1055 
ˇche_û1
 = 
NULL
;

1058 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1059 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1060 
ˇche_û2
 = 
NULL
;

1062 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

1064 i‡(!
ˇche_dl1
)

1065 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

1066 
ˇche_û1
 = 
ˇche_dl1
;

1069 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1070 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1071 
ˇche_û2
 = 
NULL
;

1073 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

1075 i‡(!
ˇche_dl2
)

1076 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

1077 
ˇche_û1
 = 
ˇche_dl2
;

1080 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1081 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1082 
ˇche_û2
 = 
NULL
;

1086 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

1087 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1088 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1089 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1090  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1091 
û1_ac˚ss_‚
, 
ˇche_û1_œt
);

1094 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

1095 
ˇche_û2
 = 
NULL
;

1096 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

1098 i‡(!
ˇche_dl2
)

1099 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

1100 
ˇche_û2
 = 
ˇche_dl2
;

1104 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

1105 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1106 
	`Áèl
("badÜ2 I-cacheÖarms: "

1108 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1109  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1110 
û2_ac˚ss_‚
, 
ˇche_û2_œt
);

1115 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

1116 
ôlb
 = 
NULL
;

1119 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

1120 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1121 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1122 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1123  (
md_addr_t
), 
assoc
,

1124 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

1129 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

1130 
déb
 = 
NULL
;

1133 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

1134 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1135 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1136 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1137  (
md_addr_t
), 
assoc
,

1138 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

1142 i‡(
ˇche_dl1_œt
 < 1)

1143 
	`Áèl
("l1 data cacheÜatency must be greaterÅhan zero");

1145 i‡(
ˇche_dl2_œt
 < 1)

1146 
	`Áèl
("l2 data cacheÜatency must be greaterÅhan zero");

1148 i‡(
ˇche_û1_œt
 < 1)

1149 
	`Áèl
("l1 instruction cacheÜatency must be greaterÅhan zero");

1151 i‡(
ˇche_û2_œt
 < 1)

1152 
	`Áèl
("l2 instruction cacheÜatency must be greaterÅhan zero");

1154 i‡(
mem_√…
 != 2)

1155 
	`Áèl
("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

1157 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

1158 
	`Áèl
("all memoryáccessÜatencies must be greaterÅhan zero");

1160 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width-1)) != 0)

1161 
	`Áèl
("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

1163 i‡(
éb_miss_œt
 < 1)

1164 
	`Áèl
("TLB missÜatency must be greaterÅhan zero");

1166 i‡(
ªs_ülu
 < 1)

1167 
	`Áèl
("number of integer ALU's must be greaterÅhan zero");

1168 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

1169 
	`Áèl
("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

1170 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

1172 i‡(
ªs_imu…
 < 1)

1173 
	`Áèl
("number of integer multiplier/dividers must be greaterÅhan zero");

1174 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

1175 
	`Áèl
("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

1176 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

1178 i‡(
ªs_memp‹t
 < 1)

1179 
	`Áèl
("number of memory systemÖorts must be greaterÅhan zero");

1180 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

1181 
	`Áèl
("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

1182 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

1184 i‡(
ªs_ÂÆu
 < 1)

1185 
	`Áèl
("number of floatingÖoint ALU's must be greaterÅhan zero");

1186 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

1187 
	`Áèl
("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

1188 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

1190 i‡(
ªs_Âmu…
 < 1)

1191 
	`Áèl
("number of floatingÖoint multiplier/dividers must be > zero");

1192 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

1193 
	`Áèl
("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

1194 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

1195 
	}
}

1199 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

1202 
	}
}

1206 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

1208 
i
;

1209 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

1211 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

1212 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

1214 &
sim_num_ªfs
, 0, 
NULL
);

1215 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_loads",

1217 &
sim_num_lﬂds
, 0, 
NULL
);

1218 
	`°©_ªg_f‹muœ
(
sdb
, "sim_num_stores",

1220 "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

1221 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

1223 &
sim_num_bønches
, 0, 
NULL
);

1224 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

1226 &
sim_ñ≠£d_time
, 0, 
NULL
);

1227 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

1229 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

1231 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_insn",

1233 &
sim_tŸÆ_ö¢
, 0, 
NULL
);

1234 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_refs",

1236 &
sim_tŸÆ_ªfs
, 0, 
NULL
);

1237 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_loads",

1239 &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

1240 
	`°©_ªg_f‹muœ
(
sdb
, "sim_total_stores",

1242 "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

1243 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_branches",

1245 &
sim_tŸÆ_bønches
, 0, 
NULL
);

1248 
	`°©_ªg_cou¡î
(
sdb
, "sim_cycle",

1250 &
sim_cy˛e
, 0, 
NULL
);

1251 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPC",

1253 "sim_num_ö¢ / sim_cy˛e", 
NULL
);

1254 
	`°©_ªg_f‹muœ
(
sdb
, "sim_CPI",

1256 "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

1257 
	`°©_ªg_f‹muœ
(
sdb
, "sim_exec_BW",

1259 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1260 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

1262 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

1265 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_count", "cumulative IFQ occupancy",

1266 &
IFQ_cou¡
, 0, 
NULL
);

1267 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_fcount", "cumulative IFQ full count",

1268 &
IFQ_fcou¡
, 0, 
NULL
);

1269 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_occupancy", "avg IFQ occupancy (insn's)",

1270 "IFQ_cou¡ / sim_cy˛e", 
NULL
);

1271 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_rate", "avg IFQ dispatchÑate (insn/cycle)",

1272 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1273 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_latency", "avg IFQ occupantÜatency (cycle's)",

1274 "ifq_occu∑ncy / ifq_øã", 
NULL
);

1275 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_full", "fraction ofÅime (cycle's) IFQ was full",

1276 "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

1278 
	`°©_ªg_cou¡î
(
sdb
, "RUU_count", "cumulative RUU occupancy",

1279 &
RUU_cou¡
, 0, 
NULL
);

1280 
	`°©_ªg_cou¡î
(
sdb
, "RUU_fcount", "cumulative RUU full count",

1281 &
RUU_fcou¡
, 0, 
NULL
);

1282 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_occupancy", "avg RUU occupancy (insn's)",

1283 "RUU_cou¡ / sim_cy˛e", 
NULL
);

1284 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_rate", "avg RUU dispatchÑate (insn/cycle)",

1285 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1286 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_latency", "avg RUU occupantÜatency (cycle's)",

1287 "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

1288 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_full", "fraction ofÅime (cycle's) RUU was full",

1289 "RUU_fcou¡ / sim_cy˛e", 
NULL
);

1291 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_count", "cumulative LSQ occupancy",

1292 &
LSQ_cou¡
, 0, 
NULL
);

1293 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_fcount", "cumulative LSQ full count",

1294 &
LSQ_fcou¡
, 0, 
NULL
);

1295 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_occupancy", "avg LSQ occupancy (insn's)",

1296 "LSQ_cou¡ / sim_cy˛e", 
NULL
);

1297 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_rate", "avg LSQ dispatchÑate (insn/cycle)",

1298 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1299 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_latency", "avg LSQ occupantÜatency (cycle's)",

1300 "lsq_occu∑ncy /Üsq_øã", 
NULL
);

1301 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_full", "fraction ofÅime (cycle's) LSQ was full",

1302 "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

1304 
	`°©_ªg_cou¡î
(
sdb
, "sim_slip",

1306 &
sim_¶ù
, 0, 
NULL
);

1308 
	`°©_ªg_f‹muœ
(
sdb
, "avg_sim_slip",

1310 "sim_¶ù / sim_num_ö¢", 
NULL
);

1313 
	`°©_ªg_cou¡î
(
sdb
, "misfetch_count", "misfetch count",

1314 &
mis„tch_cou¡
, 0, 
NULL
);

1315 
	`°©_ªg_cou¡î
(
sdb
, "misfetch_only_count", "misfetch only count",

1316 &
mis„tch_⁄ly_cou¡
, 0, 
NULL
);

1317 
	`°©_ªg_cou¡î
(
sdb
, "recovery_count", "recovery count",

1318 &
ªcovîy_cou¡
, 0, 
NULL
);

1319 i‡(
¥ed
)

1320 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

1323 i‡(
ˇche_û1


1324 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

1325 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

1326 i‡(
ˇche_û2


1327 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

1328 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

1329 i‡(
ˇche_dl1
)

1330 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

1331 i‡(
ˇche_dl2
)

1332 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

1333 i‡(
ôlb
)

1334 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

1335 i‡(
déb
)

1336 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

1339 
	`°©_ªg_cou¡î
(
sdb
, "sim_invalid_addrs",

1341 &
sim_övÆid_addrs
, 0, 
NULL
);

1343 
i
=0; i<
pc°©_√…
; i++)

1345 
buf
[512], 
buf1
[512];

1346 
°©_°©_t
 *
°©
;

1351 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

1352 i‡(!
°©
)

1353 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

1356 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

1357 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

1358 
°©
->
«me
);

1361 
pc°©_°©s
[
i
] = 
°©
;

1362 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

1365 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

1366 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

1367 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

1369  (
PF_COUNT
|
PF_PDF
),

1371  
NULL
);

1373 
	`ld_ªg_°©s
(
sdb
);

1374 
	`mem_ªg_°©s
(
mem
, 
sdb
);

1375 
	}
}

1378 
ruu_öô
();

1379 
lsq_öô
();

1380 
r¶ök_öô
(
∆öks
);

1381 
evítq_öô
();

1382 
ªadyq_öô
();

1383 
cv_öô
();

1384 
åa˚r_öô
();

1385 
„tch_öô
();

1389 
	$sim_öô
()

1391 
sim_num_ªfs
 = 0;

1394 
	`ªgs_öô
(&
ªgs
);

1397 
mem
 = 
	`mem_¸óã
("mem");

1398 
	`mem_öô
(
mem
);

1399 
	}
}

1403 
simoo_ªg_obj
(
ªgs_t
 *
ªgs
,

1404 
is_wrôe
,

1405 
md_ªg_ty≥
 
π
,

1406 
ªg
,

1407 
evÆ_vÆue_t
 *
vÆ
);

1411 
simoo_mem_obj
(
mem_t
 *
mem
,

1412 
is_wrôe
,

1413 
md_addr_t
 
addr
,

1414 *
p
,

1415 
nbyãs
);

1419 
simoo_m°©e_obj
(
FILE
 *
°ªam
,

1420 *
cmd
,

1421 
ªgs_t
 *
ªgs
,

1422 
mem_t
 *
mem
);

1425 
	#MAX_RS_LINKS
 4096

	)

1429 
	$sim_lﬂd_¥og
(*
‚ame
,

1430 
¨gc
, **
¨gv
,

1431 **
ívp
)

1434 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

1437 i‡(
±ø˚_√…
 == 2)

1440 
	`±ø˚_›í
–
±ø˚_›ts
[0],Ötrace_opts[1]);

1442 i‡(
±ø˚_√…
 == 0)

1447 
	`Áèl
("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

1450 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
(fu_config));

1451 
	`r¶ök_öô
(
MAX_RS_LINKS
);

1452 
	`åa˚r_öô
();

1453 
	`„tch_öô
();

1454 
	`cv_öô
();

1455 
	`evítq_öô
();

1456 
	`ªadyq_öô
();

1457 
	`ruu_öô
();

1458 
	`lsq_öô
();

1461 
	`dlôe_öô
(
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

1462 
	}
}

1466 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

1469 
	}
}

1473 
	$sim_unöô
()

1475 i‡(
±ø˚_√…
 > 0)

1476 
	`±ø˚_˛o£
();

1477 
	}
}

1485 
	tINST_TAG_TYPE
;

1490 
	tINST_SEQ_TYPE
;

1494 
	#MAX_IDEPS
 3

	)

1497 
	#MAX_ODEPS
 2

	)

1512 
	sRUU_°©i⁄
 {

1514 
md_ö°_t
 
	mIR
;

1515 
md_›code
 
	m›
;

1516 
md_addr_t
 
	mPC
, 
	m√xt_PC
, 
	m¥ed_PC
;

1517 
	mö_LSQ
;

1518 
	mó_comp
;

1519 
	mªcovî_ö°
;

1520 
	m°ack_ªcovî_idx
;

1521 
b¥ed_upd©e_t
 
	mdú_upd©e
;

1522 
	m•ec_mode
;

1523 
md_addr_t
 
	maddr
;

1524 
INST_TAG_TYPE
 
	mèg
;

1526 
INST_SEQ_TYPE
 
	m£q
;

1528 
	m±ø˚_£q
;

1529 
	m¶ù
;

1531 
	mqueued
;

1532 
	missued
;

1533 
	mcom∂ëed
;

1537 
	m⁄ames
[
MAX_ODEPS
];

1538 
RS_lök
 *
	modï_li°
[
MAX_ODEPS
];

1546 
	midï_ªady
[
MAX_IDEPS
];

1550 
	#OPERANDS_READY
(
RS
) \

1551 ((
RS
)->
idï_ªady
[0] && (RS)->idï_ªady[1] && (RS)->idï_ªady[2])

	)

1555 
RUU_°©i⁄
 *
	gRUU
;

1556 
	gRUU_hód
, 
	gRUU_èû
;

1557 
	gRUU_num
;

1561 
	$ruu_öô
()

1563 
RUU
 = 
	`ˇŒoc
(
RUU_size
, (
RUU_°©i⁄
));

1564 i‡(!
RUU
)

1565 
	`Áèl
("out of virtual memory");

1567 
RUU_num
 = 0;

1568 
RUU_hód
 = 
RUU_èû
 = 0;

1569 
RUU_cou¡
 = 0;

1570 
RUU_fcou¡
 = 0;

1571 
	}
}

1575 
	$ruu_dum≥¡
(
RUU_°©i⁄
 *
rs
,

1576 
ödex
,

1577 
FILE
 *
°ªam
,

1578 
hódî
)

1580 i‡(!
°ªam
)

1581 
°ªam
 = 
°dîr
;

1583 i‡(
hódî
)

1584 
	`Ârötf
(
°ªam
, "idx: %2d: opcode: %s, inst: `",

1585 
ödex
, 
	`MD_OP_NAME
(
rs
->
›
));

1587 
	`Ârötf
(
°ªam
, " opcode: %s, inst: `",

1588 
	`MD_OP_NAME
(
rs
->
›
));

1589 
	`md_¥öt_ö¢
(
rs
->
IR
,Ñs->
PC
, 
°ªam
);

1590 
	`Ârötf
(
°ªam
, "'\n");

1591 
	`myÂrötf
(
°ªam
, " PC: 0x%08p, NPC: 0x%08p (pred_PC: 0x%08p)\n",

1592 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

1593 
	`Ârötf
(
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecover_inst: %s\n",

1594 
rs
->
ö_LSQ
 ? "t" : "f",

1595 
rs
->
ó_comp
 ? "t" : "f",

1596 
rs
->
ªcovî_ö°
 ? "t" : "f");

1597 
	`myÂrötf
(
°ªam
, " spec_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n",

1598 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

1599 
	`Ârötf
(
°ªam
, " seq: 0x%08x,Ötrace_seq: 0x%08x\n",

1600 
rs
->
£q
,Ñs->
±ø˚_£q
);

1601 
	`Ârötf
(
°ªam
, " queued: %s, issued: %s, completed: %s\n",

1602 
rs
->
queued
 ? "t" : "f",

1603 
rs
->
issued
 ? "t" : "f",

1604 
rs
->
com∂ëed
 ? "t" : "f");

1605 
	`Ârötf
(
°ªam
, " operandsÑeady: %s\n",

1606 
	`OPERANDS_READY
(
rs
) ? "t" : "f");

1607 
	}
}

1611 
	$ruu_dump
(
FILE
 *
°ªam
)

1613 
num
, 
hód
;

1614 
RUU_°©i⁄
 *
rs
;

1616 i‡(!
°ªam
)

1617 
°ªam
 = 
°dîr
;

1619 
	`Ârötf
(
°ªam
, "** RUU state **\n");

1620 
	`Ârötf
(
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
RUU_hód
, 
RUU_èû
);

1621 
	`Ârötf
(
°ªam
, "RUU_num: %d\n", 
RUU_num
);

1623 
num
 = 
RUU_num
;

1624 
hód
 = 
RUU_hód
;

1625 
num
)

1627 
rs
 = &
RUU
[
hód
];

1628 
	`ruu_dum≥¡
(
rs
,Ñ†- 
RUU
, 
°ªam
, 
TRUE
);

1629 
hód
 = (hód + 1Ë% 
RUU_size
;

1630 
num
--;

1632 
	}
}

1662 
RUU_°©i⁄
 *
	gLSQ
;

1663 
	gLSQ_hód
, 
	gLSQ_èû
;

1664 
	gLSQ_num
;

1671 
	#STORE_OP_INDEX
 0

	)

1672 
	#STORE_ADDR_INDEX
 1

	)

1674 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

1675 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

1679 
	$lsq_öô
()

1681 
LSQ
 = 
	`ˇŒoc
(
LSQ_size
, (
RUU_°©i⁄
));

1682 i‡(!
LSQ
)

1683 
	`Áèl
("out of virtual memory");

1685 
LSQ_num
 = 0;

1686 
LSQ_hód
 = 
LSQ_èû
 = 0;

1687 
LSQ_cou¡
 = 0;

1688 
LSQ_fcou¡
 = 0;

1689 
	}
}

1693 
	$lsq_dump
(
FILE
 *
°ªam
)

1695 
num
, 
hód
;

1696 
RUU_°©i⁄
 *
rs
;

1698 i‡(!
°ªam
)

1699 
°ªam
 = 
°dîr
;

1701 
	`Ârötf
(
°ªam
, "** LSQ state **\n");

1702 
	`Ârötf
(
°ªam
, "LSQ_hód: %d, LSQ_èû: %d\n", 
LSQ_hód
, 
LSQ_èû
);

1703 
	`Ârötf
(
°ªam
, "LSQ_num: %d\n", 
LSQ_num
);

1705 
num
 = 
LSQ_num
;

1706 
hód
 = 
LSQ_hód
;

1707 
num
)

1709 
rs
 = &
LSQ
[
hód
];

1710 
	`ruu_dum≥¡
(
rs
,Ñ†- 
LSQ
, 
°ªam
, 
TRUE
);

1711 
hód
 = (hód + 1Ë% 
LSQ_size
;

1712 
num
--;

1714 
	}
}

1729 
	sRS_lök
 {

1730 
RS_lök
 *
	m√xt
;

1731 
RUU_°©i⁄
 *
	mrs
;

1732 
INST_TAG_TYPE
 
	mèg
;

1734 
tick_t
 
	mwhí
;

1735 
INST_SEQ_TYPE
 
	m£q
;

1736 
	m›num
;

1737 } 
	mx
;

1741 
RS_lök
 *
	gr¶ök_‰ì_li°
;

1744 
	#RSLINK_NULL_DATA
 { 
NULL
, NULL, 0 }

	)

1745 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

1748 
	#RSLINK_INIT
(
RSL
, 
RS
) \

1749 ((
RSL
).
√xt
 = 
NULL
, (RSL).
rs
 = (
RS
), (RSL).
èg
 = (RS)->èg)

	)

1752 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

1755 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

1758 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

1761 
	#RSLINK_NEW
(
DST
, 
RS
) \

1762 { 
RS_lök
 *
n_lök
; \

1763 i‡(!
r¶ök_‰ì_li°
) \

1764 
	`∑nic
("out ofÑsÜinks"); \

1765 
n_lök
 = 
r¶ök_‰ì_li°
; \

1766 
r¶ök_‰ì_li°
 =Ñ¶ök_‰ì_li°->
√xt
; \

1767 
n_lök
->
√xt
 = 
NULL
; \

1768 
n_lök
->
rs
 = (
RS
);Ç_lök->
èg
 =Ç_link->rs->tag; \

1769 (
DST
Ë
n_lök
; \

1770 }

	)

1773 
	#RSLINK_FREE
(
LINK
) \

1774 { 
RS_lök
 *
f_lök
 = (
LINK
); \

1775 
f_lök
->
rs
 = 
NULL
; f_lök->
èg
 = 0; \

1776 
f_lök
->
√xt
 = 
r¶ök_‰ì_li°
; \

1777 
r¶ök_‰ì_li°
 = 
f_lök
; \

1778 }

	)

1782 
	#RSLINK_FREE_LIST
(
LINK
) \

1783 { 
RS_lök
 *
Ê_lök
, *
Ê_lök_√xt
; \

1784 
Ê_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

1786 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

1787 
	`RSLINK_FREE
(
Ê_lök
); \

1789 }

	)

1793 
	$r¶ök_öô
(
∆öks
)

1795 
i
;

1796 
RS_lök
 *
lök
;

1798 
r¶ök_‰ì_li°
 = 
NULL
;

1799 
i
=0; i<
∆öks
; i++)

1801 
lök
 = 
	`ˇŒoc
(1, (
RS_lök
));

1802 i‡(!
lök
)

1803 
	`Áèl
("out of virtual memory");

1804 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

1805 
r¶ök_‰ì_li°
 = 
lök
;

1807 
	}
}

1814 
	$ruu_ªÀa£_fu
()

1816 
i
;

1819 
i
=0; i<
fu_poﬁ
->
num_ªsour˚s
; i++)

1822 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

1823 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

1825 
	}
}

1837 
RS_lök
 *
	gevít_queue
;

1841 
	$evítq_öô
()

1843 
evít_queue
 = 
NULL
;

1844 
	}
}

1848 
	$evítq_dump
(
FILE
 *
°ªam
)

1850 
RS_lök
 *
ev
;

1852 i‡(!
°ªam
)

1853 
°ªam
 = 
°dîr
;

1855 
	`Ârötf
(
°ªam
, "**Évent queue state **\n");

1857 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

1860 i‡(
	`RSLINK_VALID
(
ev
))

1862 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1864 
	`Ârötf
(
°ªam
, "idx: %2d: @ %.0f\n",

1865 ()(
rs
 - (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)), ()
ev
->
x
.
whí
);

1866 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1867 
°ªam
, 
FALSE
);

1870 
	}
}

1876 
	$evítq_queue_evít
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
)

1878 
RS_lök
 *
¥ev
, *
ev
, *
√w_ev
;

1880 i‡(
rs
->
com∂ëed
)

1881 
	`∑nic
("event completed");

1883 i‡(
whí
 <
sim_cy˛e
)

1884 
	`∑nic
("event occurred inÅheÖast");

1887 
	`RSLINK_NEW
(
√w_ev
, 
rs
);

1888 
√w_ev
->
x
.
whí
 = when;

1891 
¥ev
=
NULL
, 
ev
=
evít_queue
;

1892 
ev
 &&Év->
x
.
whí
 < when;

1893 
¥ev
=
ev
,ÉvÛv->
√xt
);

1895 i‡(
¥ev
)

1898 
√w_ev
->
√xt
 = 
¥ev
->next;

1899 
¥ev
->
√xt
 = 
√w_ev
;

1904 
√w_ev
->
√xt
 = 
evít_queue
;

1905 
evít_queue
 = 
√w_ev
;

1907 
	}
}

1911 
RUU_°©i⁄
 *

1912 
	$evítq_√xt_evít
()

1914 
RS_lök
 *
ev
;

1916 i‡(
evít_queue
 &&Évít_queue->
x
.
whí
 <
sim_cy˛e
)

1919 
ev
 = 
evít_queue
;

1920 
evít_queue
 =Évít_queue->
√xt
;

1923 i‡(
	`RSLINK_VALID
(
ev
))

1925 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1928 
	`RSLINK_FREE
(
ev
);

1931  
rs
;

1936 
	`RSLINK_FREE
(
ev
);

1939  
	`evítq_√xt_evít
();

1945  
NULL
;

1947 
	}
}

1963 
RS_lök
 *
	gªady_queue
;

1967 
	$ªadyq_öô
()

1969 
ªady_queue
 = 
NULL
;

1970 
	}
}

1974 
	$ªadyq_dump
(
FILE
 *
°ªam
)

1976 
RS_lök
 *
lök
;

1978 i‡(!
°ªam
)

1979 
°ªam
 = 
°dîr
;

1981 
	`Ârötf
(
°ªam
, "**Ñeady queue state **\n");

1983 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

1986 i‡(
	`RSLINK_VALID
(
lök
))

1988 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
lök
);

1990 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1991 
°ªam
, 
TRUE
);

1994 
	}
}

2009 
	$ªadyq_íqueue
(
RUU_°©i⁄
 *
rs
)

2011 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

2014 i‡(
rs
->
queued
)

2015 
	`∑nic
("node isálready queued");

2016 
rs
->
queued
 = 
TRUE
;

2019 
	`RSLINK_NEW
(
√w_node
, 
rs
);

2020 
√w_node
->
x
.
£q
 = 
rs
->seq;

2023 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
‘s->
›
Ë& (
F_LONGLAT
|
F_CTRL
))

2026 
¥ev
 = 
NULL
;

2027 
node
 = 
ªady_queue
;

2032 
¥ev
=
NULL
, 
node
=
ªady_queue
;

2033 
node
 &&Çode->
x
.
£q
 < 
rs
->seq;

2034 
¥ev
=
node
,ÇodeÚode->
√xt
);

2037 i‡(
¥ev
)

2040 
√w_node
->
√xt
 = 
¥ev
->next;

2041 
¥ev
->
√xt
 = 
√w_node
;

2046 
√w_node
->
√xt
 = 
ªady_queue
;

2047 
ªady_queue
 = 
√w_node
;

2049 
	}
}

2059 
	sCV_lök
 {

2060 
RUU_°©i⁄
 *
	mrs
;

2061 
	modï_num
;

2065 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

2068 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

2071 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

2076 
BITMAP_TYPE
(
MD_TOTAL_REGS
, 
u£_•ec_cv
);

2077 
CV_lök
 
	g¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2078 
CV_lök
 
	g•ec_¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2082 
tick_t
 
	g¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2083 
tick_t
 
	g•ec_¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2086 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2087 ? 
•ec_¸óã_ve˘‹
[
N
] \

2088 : 
¸óã_ve˘‹
[
N
])

	)

2091 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2092 ? 
•ec_¸óã_ve˘‹_π
[
N
] \

2093 : 
¸óã_ve˘‹_π
[
N
])

	)

2096 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
•ec_mode
 \

2097 ? (
	`BITMAP_SET
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

2098 
•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

2099 : (
¸óã_ve˘‹
[
N
] = (
L
)))

	)

2103 
	$cv_öô
()

2105 
i
;

2109 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2111 
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2112 
¸óã_ve˘‹_π
[
i
] = 0;

2113 
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2114 
•ec_¸óã_ve˘‹_π
[
i
] = 0;

2118 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2119 
	}
}

2123 
	$cv_dump
(
FILE
 *
°ªam
)

2125 
i
;

2126 
CV_lök
 
ít
;

2128 i‡(!
°ªam
)

2129 
°ªam
 = 
°dîr
;

2131 
	`Ârötf
(
°ªam
, "** create vector state **\n");

2133 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2135 
ít
 = 
	`CREATE_VECTOR
(
i
);

2136 i‡(!
ít
.
rs
)

2137 
	`Ârötf
(
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

2139 
	`Ârötf
(
°ªam
, "[cv%02d]: from %s, idx: %d\n",

2140 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),

2141 ()(
ít
.
rs
 - (ít.rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)));

2143 
	}
}

2154 
	$ruu_commô
()

2156 
i
, 
œt
, 
evíts
, 
commôãd
 = 0;

2157 
cou¡î_t
 
sim_ªt_ö¢
 = 0;

2160 
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

2162 
RUU_°©i⁄
 *
rs
 = &(
RUU
[
RUU_hód
]);

2164 i‡(!
rs
->
com∂ëed
)

2171 
evíts
 = 0;

2174 i‡(
RUU
[
RUU_hód
].
ó_comp
)

2177 i‡(
LSQ_num
 <0 || !
LSQ
[
LSQ_hód
].
ö_LSQ
)

2178 
	`∑nic
("RUU out of sync with LSQ");

2181 i‡(!
LSQ
[
LSQ_hód
].
com∂ëed
)

2187 i‡((
	`MD_OP_FLAGS
(
LSQ
[
LSQ_hód
].
›
Ë& (
F_MEM
|
F_STORE
))

2188 =(
F_MEM
|
F_STORE
))

2190 
ªs_ãm∂©e
 *
fu
;

2195 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
LSQ
[
LSQ_hód
].
›
));

2196 i‡(
fu
)

2199 i‡(
fu
->
ma°î
->
busy
)

2200 
	`∑nic
("functional unitálready in use");

2203 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2206 i‡(
ˇche_dl1
)

2209 
œt
 =

2210 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
LSQ
[
LSQ_hód
].
addr
&~3),

2211 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2212 i‡(
œt
 > 
ˇche_dl1_œt
)

2213 
evíts
 |
PEV_CACHEMISS
;

2217 i‡(
déb
)

2220 
œt
 =

2221 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
LSQ
[
LSQ_hód
].
addr
 & ~3),

2222 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2223 i‡(
œt
 > 1)

2224 
evíts
 |
PEV_TLBMISS
;

2235 
LSQ
[
LSQ_hód
].
èg
++;

2236 
sim_¶ù
 +(
sim_cy˛e
 - 
LSQ
[
LSQ_hód
].
¶ù
);

2239 
	`±ø˚_√w°age
(
LSQ
[
LSQ_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2240 
	`±ø˚_ídö°
(
LSQ
[
LSQ_hód
].
±ø˚_£q
);

2243 
LSQ_hód
 = (LSQ_hód + 1Ë% 
LSQ_size
;

2244 
LSQ_num
--;

2247 i‡(
¥ed


2248 && 
b¥ed_•ec_upd©e
 =
•ec_CT


2249 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2251 
	`b¥ed_upd©e
(
¥ed
,

2252  
rs
->
PC
,

2253  
rs
->
√xt_PC
,

2254  
rs
->
√xt_PC
 !‘s->
PC
 +

2255 (
md_ö°_t
)),

2256  
rs
->
¥ed_PC
 !‘s->
PC
 +

2257 (
md_ö°_t
)),

2258  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2259  
rs
->
›
,

2260  &
rs
->
dú_upd©e
);

2264 
RUU
[
RUU_hód
].
èg
++;

2265 
sim_¶ù
 +(
sim_cy˛e
 - 
RUU
[
RUU_hód
].
¶ù
);

2267 i‡(
vîbo£
)

2269 
sim_ªt_ö¢
++;

2270 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_ªt_ö¢
, 
RUU
[
RUU_hód
].
PC
);

2271 
	`md_¥öt_ö¢
(
RUU
[
RUU_hód
].
IR
, RUU[RUU_hód].
PC
, 
°dîr
);

2272 i‡(
	`MD_OP_FLAGS
(
RUU
[
RUU_hód
].
›
Ë& 
F_MEM
)

2273 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
RUU
[
RUU_hód
].
addr
);

2274 
	`Ârötf
(
°dîr
, "\n");

2279 
	`±ø˚_√w°age
(
RUU
[
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2280 
	`±ø˚_ídö°
(
RUU
[
RUU_hód
].
±ø˚_£q
);

2283 
RUU_hód
 = (RUU_hód + 1Ë% 
RUU_size
;

2284 
RUU_num
--;

2287 
commôãd
++;

2289 
i
=0; i<
MAX_ODEPS
; i++)

2291 i‡(
rs
->
odï_li°
[
i
])

2292 
	`∑nic
 ("retired instruction has odeps\n");

2295 
	}
}

2305 
	$ruu_ªcovî
(
bønch_ödex
)

2307 
i
, 
RUU_ödex
 = 
RUU_èû
, 
LSQ_ödex
 = 
LSQ_èû
;

2308 
RUU_¥ev_èû
 = 
RUU_èû
, 
LSQ_¥ev_èû
 = 
LSQ_èû
;

2315 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2316 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2319 
RUU_ödex
 !
bønch_ödex
)

2322 i‡(!
RUU_num
)

2323 
	`∑nic
("empty RUU");

2326 i‡(
RUU_ödex
 =
RUU_hód
)

2327 
	`∑nic
("RUU headándÅail broken");

2330 i‡(
RUU
[
RUU_ödex
].
ó_comp
)

2333 i‡(!
LSQ_num
)

2334 
	`∑nic
("RUUánd LSQ out of sync");

2337 
i
=0; i<
MAX_ODEPS
; i++)

2339 
	`RSLINK_FREE_LIST
(
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

2341 
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

2345 
LSQ
[
LSQ_ödex
].
èg
++;

2348 
	`±ø˚_ídö°
(
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

2351 
LSQ_¥ev_èû
 = 
LSQ_ödex
;

2352 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2353 
LSQ_num
--;

2357 
i
=0; i<
MAX_ODEPS
; i++)

2359 
	`RSLINK_FREE_LIST
(
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

2361 
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

2365 
RUU
[
RUU_ödex
].
èg
++;

2368 
	`±ø˚_ídö°
(
RUU
[
RUU_ödex
].
±ø˚_£q
);

2371 
RUU_¥ev_èû
 = 
RUU_ödex
;

2372 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2373 
RUU_num
--;

2377 
RUU_èû
 = 
RUU_¥ev_èû
;

2378 
LSQ_èû
 = 
LSQ_¥ev_èû
;

2383 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2386 
	}
}

2394 
åa˚r_ªcovî
();

2402 
	$ruu_wrôeback
()

2404 
i
;

2405 
RUU_°©i⁄
 *
rs
;

2408 (
rs
 = 
	`evítq_√xt_evít
()))

2411 i‡(!
	`OPERANDS_READY
(
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

2412 
	`∑nic
("inst completedánd !ready, !issued, or completed");

2415 
rs
->
com∂ëed
 = 
TRUE
;

2418 i‡(
rs
->
ªcovî_ö°
)

2420 i‡(
rs
->
ö_LSQ
)

2421 
	`∑nic
("mis-predictedÜoad or store?!?!?");

2424 
	`ruu_ªcovî
(
rs
 - 
RUU
);

2425 
	`åa˚r_ªcovî
();

2426 
	`b¥ed_ªcovî
(
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
);

2427 
ªcovîy_cou¡
++;

2430 
ruu_„tch_issue_dñay
 +
ruu_bønch_≥«…y
;

2436 i‡(
¥ed


2437 && 
b¥ed_•ec_upd©e
 =
•ec_WB


2438 && !
rs
->
ö_LSQ


2439 && !
rs
->
•ec_mode


2440 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2442 
	`b¥ed_upd©e
(
¥ed
,

2443  
rs
->
PC
,

2444  
rs
->
√xt_PC
,

2445  
rs
->
√xt_PC
 !‘s->
PC
 +

2446 (
md_ö°_t
)),

2447  
rs
->
¥ed_PC
 !‘s->
PC
 +

2448 (
md_ö°_t
)),

2449  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2450  
rs
->
›
,

2451  &
rs
->
dú_upd©e
);

2455 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,

2456 
rs
->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

2461 
i
=0; i<
MAX_ODEPS
; i++)

2463 i‡(
rs
->
⁄ames
[
i
] !
NA
)

2465 
CV_lök
 
lök
;

2466 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

2468 i‡(
rs
->
•ec_mode
)

2472 
lök
 = 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2473 i‡–
lök
.
rs


2474 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2478 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2479 
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2488 
lök
 = 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2489 i‡–
lök
.
rs


2490 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2494 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2495 
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2501 
ﬁök
=
rs
->
odï_li°
[
i
]; olök; olök=
ﬁök_√xt
)

2503 i‡(
	`RSLINK_VALID
(
ﬁök
))

2505 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

2506 
	`∑nic
("output dependenceálready satisfied");

2509 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

2512 i‡(
	`OPERANDS_READY
(
ﬁök
->
rs
))

2517 i‡(!
ﬁök
->
rs
->
ö_LSQ


2518 || ((
	`MD_OP_FLAGS
(
ﬁök
->
rs
->
›
)&(
F_MEM
|
F_STORE
))

2519 =(
F_MEM
|
F_STORE
)))

2520 
	`ªadyq_íqueue
(
ﬁök
->
rs
);

2526 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

2529 
	`RSLINK_FREE
(
ﬁök
);

2532 
rs
->
odï_li°
[
i
] = 
NULL
;

2540 
	}
}

2551 
	#MAX_STD_UNKNOWNS
 64

	)

2553 
	$lsq_ª‰esh
()

2555 
i
, 
j
, 
ödex
, 
n_°d_unknowns
;

2556 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

2561 
i
=0, 
ödex
=
LSQ_hód
, 
n_°d_unknowns
=0;

2562 
i
 < 
LSQ_num
;

2563 
i
++, 
ödex
=(ödex + 1Ë% 
LSQ_size
)

2568 (
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

2570 i‡(!
	`STORE_ADDR_READY
(&
LSQ
[
ödex
]Ë&& !
≥r„˘_dißmbig
)

2576 i‡(!
	`OPERANDS_READY
(&
LSQ
[
ödex
]) ||

2577 (!
	`STORE_ADDR_READY
(&
LSQ
[
ödex
]Ë&& 
≥r„˘_dißmbig
))

2584 i‡(
n_°d_unknowns
 =
MAX_STD_UNKNOWNS
)

2585 
	`Áèl
("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

2586 
°d_unknowns
[
n_°d_unknowns
++] = 
LSQ
[
ödex
].
addr
;

2591 
j
=0; j<
n_°d_unknowns
; j++)

2593 i‡(
°d_unknowns
[
j
] = 
LSQ
[
ödex
].
addr
)

2594 
°d_unknowns
[
j
] = 0;

2600 ((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))

2601 && !
LSQ
[
ödex
].
queued


2602 && !
LSQ
[
ödex
].
issued


2603 && !
LSQ
[
ödex
].
com∂ëed


2604 && 
	`OPERANDS_READY
(&
LSQ
[
ödex
]))

2608 
j
=0; j<
n_°d_unknowns
; j++)

2611 i‡(
°d_unknowns
[
j
] =
LSQ
[
ödex
].
addr
)

2614 i‡(
j
 =
n_°d_unknowns
)

2617 
	`ªadyq_íqueue
(&
LSQ
[
ödex
]);

2621 
	}
}

2636 
	$ruu_issue
()

2638 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

2639 
RS_lök
 *
node
, *
√xt_node
;

2640 
ªs_ãm∂©e
 *
fu
;

2649 
node
 = 
ªady_queue
;

2650 
ªady_queue
 = 
NULL
;

2655 
n_issued
=0;

2656 
node
 && 
n_issued
 < 
ruu_issue_width
;

2657 
node
 = 
√xt_node
)

2659 
√xt_node
 = 
node
->
√xt
;

2662 i‡(
	`RSLINK_VALID
(
node
))

2664 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2667 i‡(!
	`OPERANDS_READY
(
rs
Ë|| !rs->
queued


2668 || 
rs
->
issued
 ||Ñs->
com∂ëed
)

2669 
	`∑nic
("issued inst !ready, issued, or completed");

2672 
rs
->
queued
 = 
FALSE
;

2674 i‡(
rs
->
ö_LSQ


2675 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE)))

2681 
rs
->
issued
 = 
TRUE
;

2682 
rs
->
com∂ëed
 = 
TRUE
;

2683 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

2684 
	`∑nic
("store createsÑesult");

2686 i‡(
rs
->
ªcovî_ö°
)

2687 
	`∑nic
("mis-predicted store");

2690 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

2693 
n_issued
++;

2698 i‡(
	`MD_OP_FUCLASS
(
rs
->
›
Ë!
NA
)

2700 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
rs
->
›
));

2701 i‡(
fu
)

2704 
rs
->
issued
 = 
TRUE
;

2706 i‡(
fu
->
ma°î
->
busy
)

2707 
	`∑nic
("functional unitálready in use");

2710 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2713 i‡(
rs
->
ö_LSQ


2714 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_LOAD
))

2715 =(
F_MEM
|
F_LOAD
)))

2717 
evíts
 = 0;

2722 
lﬂd_œt
 = 0;

2723 
i
 = (
rs
 - 
LSQ
);

2724 i‡(
i
 !
LSQ_hód
)

2729 
i
 = (ò+ (
LSQ_size
-1)) % LSQ_size;

2732 i‡((
	`MD_OP_FLAGS
(
LSQ
[
i
].
›
Ë& 
F_STORE
)

2733 && (
LSQ
[
i
].
addr
 =
rs
->addr))

2736 
lﬂd_œt
 = 1;

2741 i‡(
i
 =
LSQ_hód
)

2747 i‡(!
lﬂd_œt
)

2749 
vÆid_addr
 = 
	`MD_VALID_ADDR
(
rs
->
addr
);

2751 i‡(!
•ec_mode
 && !
vÆid_addr
)

2752 
sim_övÆid_addrs
++;

2755 i‡(
ˇche_dl1
 && 
vÆid_addr
)

2758 
lﬂd_œt
 =

2759 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
,

2760 (
rs
->
addr
 & ~3), 
NULL
, 4,

2761 
sim_cy˛e
, 
NULL
, NULL);

2762 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

2763 
evíts
 |
PEV_CACHEMISS
;

2768 
lﬂd_œt
 = 
fu
->
›œt
;

2773 i‡(
déb
 && 
	`MD_VALID_ADDR
(
rs
->
addr
))

2777 
éb_œt
 =

2778 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
rs
->
addr
 & ~3),

2779 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2780 i‡(
éb_œt
 > 1)

2781 
evíts
 |
PEV_TLBMISS
;

2784 
lﬂd_œt
 = 
	`MAX
(
éb_œt
,Üoad_lat);

2788 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

2791 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2792 ((
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0)

2793 | 
evíts
));

2798 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

2801 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2802 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2806 
n_issued
++;

2813 
	`ªadyq_íqueue
(
rs
);

2820 
rs
->
issued
 = 
TRUE
;

2823 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 1);

2826 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2827 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2830 
n_issued
++;

2841 
	`RSLINK_FREE
(
node
);

2846 ; 
node
;Çodê
√xt_node
)

2848 
√xt_node
 = 
node
->
√xt
;

2851 i‡(
	`RSLINK_VALID
(
node
))

2853 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2856 
rs
->
queued
 = 
FALSE
;

2860 
	`ªadyq_íqueue
(
rs
);

2868 
	`RSLINK_FREE
(
node
);

2870 
	}
}

2879 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

2880 
BITMAP_TYPE
(
MD_NUM_IREGS
, 
u£_•ec_R
);

2881 
md_g¥_t
 
	g•ec_ªgs_R
;

2884 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

2885 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_F
);

2886 
md_Âr_t
 
	g•ec_ªgs_F
;

2889 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

2890 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_C
);

2891 
md_˘æ_t
 
	g•ec_ªgs_C
;

2895 
	$r•ec_dump
(
FILE
 *
°ªam
)

2897 
i
;

2899 i‡(!
°ªam
)

2900 
°ªam
 = 
°dîr
;

2902 
	`Ârötf
(
°ªam
, "** speculativeÑegister contents **\n");

2904 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

2907 
i
=0; i < 
MD_NUM_IREGS
; i++)

2909 i‡(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

2911 
	`md_¥öt_úeg
(
•ec_ªgs_R
, 
i
, 
°ªam
);

2912 
	`Ârötf
(
°ªam
, "\n");

2917 
i
=0; i < 
MD_NUM_FREGS
; i++)

2919 i‡(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

2921 
	`md_¥öt_Âªg
(
•ec_ªgs_F
, 
i
, 
°ªam
);

2922 
	`Ârötf
(
°ªam
, "\n");

2927 
i
=0; i < 
MD_NUM_CREGS
; i++)

2929 i‡(
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

2931 
	`md_¥öt_¸eg
(
•ec_ªgs_C
, 
i
, 
°ªam
);

2932 
	`Ârötf
(
°ªam
, "\n");

2935 
	}
}

2939 
	#STORE_HASH_SIZE
 32

	)

2944 
	s•ec_mem_ít
 {

2945 
•ec_mem_ít
 *
	m√xt
;

2946 
md_addr_t
 
	maddr
;

2947 
	md©a
[2];

2951 
•ec_mem_ít
 *
	g°‹e_hèbÀ
[
STORE_HASH_SIZE
];

2954 
•ec_mem_ít
 *
	gbuckë_‰ì_li°
 = 
NULL
;

2958 
md_addr_t
 
	g¥ed_PC
;

2959 
md_addr_t
 
	gªcovî_PC
;

2962 
md_addr_t
 
	g„tch_ªgs_PC
;

2963 
md_addr_t
 
	g„tch_¥ed_PC
;

2966 
	s„tch_ªc
 {

2967 
md_ö°_t
 
	mIR
;

2968 
md_addr_t
 
	mªgs_PC
, 
	m¥ed_PC
;

2969 
b¥ed_upd©e_t
 
	mdú_upd©e
;

2970 
	m°ack_ªcovî_idx
;

2971 
	m±ø˚_£q
;

2973 
„tch_ªc
 *
	g„tch_d©a
;

2974 
	g„tch_num
;

2975 
	g„tch_èû
, 
	g„tch_hód
;

2982 
	$åa˚r_ªcovî
()

2984 
i
;

2985 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

2988 i‡(!
•ec_mode
)

2989 
	`∑nic
("cannotÑecover unless in speculative mode");

2992 
•ec_mode
 = 
FALSE
;

2995 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

2996 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

2997 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

3001 
i
=0; i<
STORE_HASH_SIZE
; i++)

3004 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡=
ít_√xt
)

3006 
ít_√xt
 = 
ít
->
√xt
;

3007 
ít
->
√xt
 = 
buckë_‰ì_li°
;

3008 
buckë_‰ì_li°
 = 
ít
;

3010 
°‹e_hèbÀ
[
i
] = 
NULL
;

3014 i‡(
±ø˚_a˘ive
)

3016 
„tch_num
 != 0)

3019 
	`±ø˚_ídö°
(
„tch_d©a
[
„tch_hód
].
±ø˚_£q
);

3022 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

3023 
„tch_num
--;

3028 
„tch_num
 = 0;

3029 
„tch_èû
 = 
„tch_hód
 = 0;

3030 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªcovî_PC
;

3031 
	}
}

3035 
	$åa˚r_öô
()

3037 
i
;

3040 
•ec_mode
 = 
FALSE
;

3043 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

3044 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

3045 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

3048 
i
=0; i<
STORE_HASH_SIZE
; i++)

3049 
°‹e_hèbÀ
[
i
] = 
NULL
;

3050 
	}
}

3054 
	#HASH_ADDR
(
ADDR
) \

3055 ((((
ADDR
Ë>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

3066 
md_Áu…_ty≥


3067 
	$•ec_mem_ac˚ss
(
mem_t
 *
mem
,

3068 
mem_cmd
 
cmd
,

3069 
md_addr_t
 
addr
,

3070 *
p
,

3071 
nbyãs
)

3073 
i
, 
ödex
;

3074 
•ec_mem_ít
 *
ít
, *
¥ev
;

3080 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

3083 
i
=0; i < 
nbyãs
; i++)

3084 ((*)
p
)[
i
] = 0;

3086  
md_Áu…_n⁄e
;

3090 i‡(!((
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

3091 && 
cmd
 =
Ród
)

3092 || 
	`MD_VALID_ADDR
(
addr
)))

3095 
i
=0; i < 
nbyãs
; i++)

3096 ((*)
p
)[
i
] = 0;

3098  
md_Áu…_n⁄e
;

3102 
ödex
 = 
	`HASH_ADDR
(
addr
);

3103 
¥ev
=
NULL
,
ít
=
°‹e_hèbÀ
[
ödex
];É¡;ÖªvÛ¡,ítÛ¡->
√xt
)

3105 i‡(
ít
->
addr
 ==áddr)

3108 i‡(
¥ev
 !
NULL
)

3111 
¥ev
->
√xt
 = 
ít
->next;

3112 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3113 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3120 i‡(!
ít
 && 
cmd
 =
Wrôe
)

3123 i‡(!
buckë_‰ì_li°
)

3126 
buckë_‰ì_li°
 = 
	`ˇŒoc
(1, (
•ec_mem_ít
));

3127 i‡(!
buckë_‰ì_li°
)

3128 
	`Áèl
("out of virtual memory");

3130 
ít
 = 
buckë_‰ì_li°
;

3131 
buckë_‰ì_li°
 = buckë_‰ì_li°->
√xt
;

3133 i‡(!
bugcom∑t_mode
)

3136 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3137 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3138 
ít
->
addr
 =áddr;

3139 
ít
->
d©a
[0] = 0;Ént->data[1] = 0;

3144 
nbyãs
)

3147 i‡(
cmd
 =
Ród
)

3149 i‡(
ít
)

3152 *((
byã_t
 *)
p
Ë*((byã_à*)(&
ít
->
d©a
[0]));

3158 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

3164 *((
byã_t
 *)(&
ít
->
d©a
[0])Ë*((byã_à*)
p
);

3168 i‡(
cmd
 =
Ród
)

3170 i‡(
ít
)

3173 *((
hÆf_t
 *)
p
Ë*((hÆf_à*)(&
ít
->
d©a
[0]));

3179 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

3185 *((
hÆf_t
 *)&
ít
->
d©a
[0]Ë*((hÆf_à*)
p
);

3189 i‡(
cmd
 =
Ród
)

3191 i‡(
ít
)

3194 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3200 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3206 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3210 i‡(
cmd
 =
Ród
)

3212 i‡(
ít
)

3215 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3216 *(((
w‹d_t
 *)
p
)+1Ë*((w‹d_à*)&
ít
->
d©a
[1]);

3222 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3223 *(((
w‹d_t
 *)
p
)+1) =

3224 
	`MEM_READ_WORD
(
mem
, 
addr
 + (
w‹d_t
));

3230 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3231 *((
w‹d_t
 *)&
ít
->
d©a
[1]Ë*(((w‹d_à*)
p
)+1);

3235 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

3238  
md_Áu…_n⁄e
;

3239 
	}
}

3243 
	$m•ec_dump
(
FILE
 *
°ªam
)

3245 
i
;

3246 
•ec_mem_ít
 *
ít
;

3248 i‡(!
°ªam
)

3249 
°ªam
 = 
°dîr
;

3251 
	`Ârötf
(
°ªam
, "** speculative memory contents **\n");

3253 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

3255 
i
=0; i<
STORE_HASH_SIZE
; i++)

3258 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡Û¡->
√xt
)

3260 
	`myÂrötf
(
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n",

3261 
ít
->
addr
, ()(*((*Î¡->
d©a
)),

3262 *((*)&
ít
->
d©a
[0]),

3263 *(((*)&
ít
->
d©a
[0]) + 1));

3266 
	}
}

3270 
	$simoo_mem_obj
(
mem_t
 *
mem
,

3271 
is_wrôe
,

3272 
md_addr_t
 
addr
,

3273 *
p
,

3274 
nbyãs
)

3276 
mem_cmd
 
cmd
;

3278 i‡(!
is_wrôe
)

3279 
cmd
 = 
Ród
;

3281 
cmd
 = 
Wrôe
;

3283 i‡(
•ec_mode
)

3284 
	`•ec_mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3286 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3289  
NULL
;

3290 
	}
}

3299 
INLINE
 

3300 
	$ruu_lök_idï
(
RUU_°©i⁄
 *
rs
,

3301 
idï_num
,

3302 
idï_«me
)

3304 
CV_lök
 
hód
;

3305 
RS_lök
 *
lök
;

3308 i‡(
idï_«me
 =
NA
)

3311 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3316 
hód
 = 
	`CREATE_VECTOR
(
idï_«me
);

3319 i‡(!
hód
.
rs
)

3323 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3330 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

3333 
	`RSLINK_NEW
(
lök
, 
rs
);Üök->
x
.
›num
 = 
idï_num
;

3334 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

3335 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

3336 
	}
}

3339 
INLINE
 

3340 
	$ruu_ö°Æl_odï
(
RUU_°©i⁄
 *
rs
,

3341 
odï_num
,

3342 
odï_«me
)

3344 
CV_lök
 
cv
;

3347 i‡(
odï_«me
 =
NA
)

3350 
rs
->
⁄ames
[
odï_num
] = 
NA
;

3356 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

3359 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

3362 
	`CVLINK_INIT
(
cv
, 
rs
, 
odï_num
);

3363 
	`SET_CREATE_VECTOR
(
odï_«me
, 
cv
);

3364 
	}
}

3371 
	#DNA
 (0)

	)

3373 #i‡
deföed
(
TARGET_PISA
)

3376 
	#DGPR
(
N
Ë(N)

	)

3377 
	#DGPR_D
(
N
Ë((NË&~1)

	)

3380 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

3381 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

3382 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

3385 
	#DHI
 (0+32+32)

	)

3386 
	#DLO
 (1+32+32)

	)

3387 
	#DFCC
 (2+32+32)

	)

3388 
	#DTMP
 (3+32+32)

	)

3390 #ñi‡
deföed
(
TARGET_ALPHA
)

3393 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

3396 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

3399 
	#DFPCR
 (0+32+32)

	)

3400 
	#DUNIQ
 (1+32+32)

	)

3401 
	#DTMP
 (2+32+32)

	)

3404 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3413 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

3416 #unde‡
SET_TPC


3417 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

3420 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

3421 
	#SET_CPC
(
EXPR
Ë(
ªgs
.
ªgs_PC
 = (EXPR))

	)

3426 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N))\

3427 ? 
•ec_ªgs_R
[
N
] \

3428 : 
ªgs
.
ªgs_R
[
N
])

	)

3429 
	#SET_GPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3430 ? ((
•ec_ªgs_R
[
N
] = (
EXPR
)), \

3431 
	`BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)),\

3432 
•ec_ªgs_R
[
N
]) \

3433 : (
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

	)

3435 #i‡
deföed
(
TARGET_PISA
)

3440 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3441 ? 
•ec_ªgs_F
.
l
[(
N
)] \

3442 : 
ªgs
.
ªgs_F
.
l
[(
N
)])

	)

3443 
	#SET_FPR_L
(
N
,
EXPR
Ë(
•ec_mode
 \

3444 ? ((
•ec_ªgs_F
.
l
[(
N
)] = (
EXPR
)), \

3445 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3446 
•ec_ªgs_F
.
l
[(
N
)]) \

3447 : (
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

	)

3448 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3449 ? 
•ec_ªgs_F
.
f
[(
N
)] \

3450 : 
ªgs
.
ªgs_F
.
f
[(
N
)])

	)

3451 
	#SET_FPR_F
(
N
,
EXPR
Ë(
•ec_mode
 \

3452 ? ((
•ec_ªgs_F
.
f
[(
N
)] = (
EXPR
)), \

3453 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3454 
•ec_ªgs_F
.
f
[(
N
)]) \

3455 : (
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

	)

3456 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3457 ? 
•ec_ªgs_F
.
d
[(
N
) >> 1] \

3458 : 
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1])

	)

3459 
	#SET_FPR_D
(
N
,
EXPR
Ë(
•ec_mode
 \

3460 ? ((
•ec_ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)), \

3461 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3462 
•ec_ªgs_F
.
d
[(
N
) >> 1]) \

3463 : (
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

	)

3468 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3469 ? 
•ec_ªgs_C
.
hi
 \

3470 : 
ªgs
.
ªgs_C
.
hi
)

	)

3471 
	#SET_HI
(
EXPR
Ë(
•ec_mode
 \

3472 ? ((
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

3473 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

3474 
•ec_ªgs_C
.
hi
) \

3475 : (
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

	)

3476 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3477 ? 
•ec_ªgs_C
.
lo
 \

3478 : 
ªgs
.
ªgs_C
.
lo
)

	)

3479 
	#SET_LO
(
EXPR
Ë(
•ec_mode
 \

3480 ? ((
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

3481 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

3482 
•ec_ªgs_C
.
lo
) \

3483 : (
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

	)

3484 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3485 ? 
•ec_ªgs_C
.
fcc
 \

3486 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3487 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3488 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3489 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2),\

3490 
•ec_ªgs_C
.
fcc
) \

3491 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3493 #ñi‡
deföed
(
TARGET_ALPHA
)

3498 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3499 ? 
•ec_ªgs_F
.
q
[(
N
)] \

3500 : 
ªgs
.
ªgs_F
.
q
[(
N
)])

	)

3501 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
•ec_mode
 \

3502 ? ((
•ec_ªgs_F
.
q
[(
N
)] = (
EXPR
)), \

3503 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3504 
•ec_ªgs_F
.
q
[(
N
)]) \

3505 : (
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

	)

3506 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3507 ? 
•ec_ªgs_F
.
d
[(
N
)] \

3508 : 
ªgs
.
ªgs_F
.
d
[(
N
)])

	)

3509 
	#SET_FPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3510 ? ((
•ec_ªgs_F
.
d
[(
N
)] = (
EXPR
)), \

3511 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3512 
•ec_ªgs_F
.
d
[(
N
)]) \

3513 : (
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

	)

3518 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3519 ? 
•ec_ªgs_C
.
Â¸
 \

3520 : 
ªgs
.
ªgs_C
.
Â¸
)

	)

3521 
	#SET_FPCR
(
EXPR
Ë(
•ec_mode
 \

3522 ? ((
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

3523 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0),\

3524 
•ec_ªgs_C
.
Â¸
) \

3525 : (
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

	)

3526 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3527 ? 
•ec_ªgs_C
.
uniq
 \

3528 : 
ªgs
.
ªgs_C
.
uniq
)

	)

3529 
	#SET_UNIQ
(
EXPR
Ë(
•ec_mode
 \

3530 ? ((
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

3531 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3532 
•ec_ªgs_C
.
uniq
) \

3533 : (
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

	)

3534 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3535 ? 
•ec_ªgs_C
.
fcc
 \

3536 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3537 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3538 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3539 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3540 
•ec_ªgs_C
.
fcc
) \

3541 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3544 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3550 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
) \

3551 (
addr
 = (
SRC
), \

3552 (
•ec_mode
 \

3553 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

3554 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))), \

3555 
SRC_V
)

	)

3557 
	#READ_BYTE
(
SRC
, 
FAULT
) \

3558 
	`__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

	)

3559 
	#READ_HALF
(
SRC
, 
FAULT
) \

3560 
	`MD_SWAPH
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

	)

3561 
	#READ_WORD
(
SRC
, 
FAULT
) \

3562 
	`MD_SWAPW
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

	)

3563 #ifde‡
HOST_HAS_QWORD


3564 
	#READ_QWORD
(
SRC
, 
FAULT
) \

3565 
	`MD_SWAPQ
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

	)

3569 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
) \

3570 (
DST_V
 = (
SRC
), 
addr
 = (
DST
), \

3571 (
•ec_mode
 \

3572 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

3573 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))))

	)

3575 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

3576 
	`__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

	)

3577 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

3578 
	`__WRITE_SPECMEM
(
	`MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

	)

3579 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

3580 
	`__WRITE_SPECMEM
(
	`MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

	)

3581 #ifde‡
HOST_HAS_QWORD


3582 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

3583 
	`__WRITE_SPECMEM
(
	`MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

	)

3587 
	#SYSCALL
(
INST
) \

3589 (
•ec_mode
 ? 
	`∑nic
("speculative syscall") : () 0), \

3590 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

3594 
	$simoo_ªg_obj
(
ªgs_t
 *
xªgs
,

3595 
is_wrôe
,

3596 
md_ªg_ty≥
 
π
,

3597 
ªg
,

3598 
evÆ_vÆue_t
 *
vÆ
)

3600 
π
)

3602 
π_g¥
:

3603 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

3606 i‡(!
is_wrôe
)

3608 
vÆ
->
ty≥
 = 
ë_uöt
;

3609 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
(
ªg
);

3612 
	`SET_GPR
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3615 
π_Õr
:

3616 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

3620 
	`ab‹t
();

3622 i‡(!
is_wrôe
)

3624 
vÆ
->
ty≥
 = 
ë_uöt
;

3625 
vÆ
->
vÆue
.
as_uöt
 = 
	`FPR_L
(
ªg
);

3628 
	`SET_FPR_L
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3632 
π_Âr
:

3634 
	`ab‹t
();

3636 i‡(!
is_wrôe
)

3637 
vÆ
->
vÆue
.
as_Êﬂt
 = 
	`FPR_F
(
ªg
);

3639 
	`SET_FPR_F
(
ªg
, 
vÆ
->
vÆue
.
as_Êﬂt
);

3643 
π_d¥
:

3645 
	`ab‹t
();

3648 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_REGS
/2)

3651 i‡(
©
 =
©_ªad
)

3652 
vÆ
->
as_doubÀ
 = 
	`FPR_D
(
ªg
 * 2);

3654 
	`SET_FPR_D
(
ªg
 * 2, 
vÆ
->
as_doubÀ
);

3660 
	`ab‹t
();

3661 
π_hi
:

3662 i‡(
©
 =
©_ªad
)

3663 
vÆ
->
as_w‹d
 = 
HI
;

3665 
	`SET_HI
(
vÆ
->
as_w‹d
);

3667 
π_lo
:

3668 i‡(
©
 =
©_ªad
)

3669 
vÆ
->
as_w‹d
 = 
LO
;

3671 
	`SET_LO
(
vÆ
->
as_w‹d
);

3673 
π_FCC
:

3674 i‡(
©
 =
©_ªad
)

3675 
vÆ
->
as_c⁄dôi⁄
 = 
FCC
;

3677 
	`SET_FCC
(
vÆ
->
as_c⁄dôi⁄
);

3681 
π_PC
:

3682 i‡(!
is_wrôe
)

3684 
vÆ
->
ty≥
 = 
ë_addr
;

3685 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_PC
;

3688 
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

3691 
π_NPC
:

3692 i‡(!
is_wrôe
)

3694 
vÆ
->
ty≥
 = 
ë_addr
;

3695 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_NPC
;

3698 
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

3702 
	`∑nic
("bogusÑegister bank");

3706  
NULL
;

3707 
	}
}

3711 
RS_lök
 
	gœ°_›
 = 
RSLINK_NULL_DATA
;

3717 
	$ruu_di•©ch
()

3719 
i
;

3720 
n_di•©ched
;

3721 
md_ö°_t
 
ö°
;

3722 
md_›code
 
›
;

3723 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

3724 
md_addr_t
 
èrgë_PC
;

3725 
md_addr_t
 
addr
;

3726 
RUU_°©i⁄
 *
rs
;

3727 
RUU_°©i⁄
 *
lsq
;

3728 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

3729 
°ack_ªcovî_idx
;

3730 
p£q
;

3731 
is_wrôe
;

3732 
made_check
;

3733 
br_èkí
, 
br_¥ed_èkí
;

3734 
„tch_ªdúe˘ed
 = 
FALSE
;

3735 
byã_t
 
ãmp_byã
 = 0;

3736 
hÆf_t
 
ãmp_hÆf
 = 0;

3737 
w‹d_t
 
ãmp_w‹d
 = 0;

3738 #ifde‡
HOST_HAS_QWORD


3739 
qw‹d_t
 
ãmp_qw‹d
 = 0;

3741 
md_Áu…_ty≥
 
Áu…
;

3743 
made_check
 = 
FALSE
;

3744 
n_di•©ched
 = 0;

3746 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

3748 && 
RUU_num
 < 
RUU_size
 && 
LSQ_num
 < 
LSQ_size


3750 && 
„tch_num
 != 0

3752 && (
ruu_ö˛ude_•ec
 || !
•ec_mode
))

3755 i‡(
ruu_ö‹dî_issue


3756 && (
œ°_›
.
rs
 && 
	`RSLINK_VALID
(&last_op)

3757 && !
	`OPERANDS_READY
(
œ°_›
.
rs
)))

3764 
ö°
 = 
„tch_d©a
[
„tch_hód
].
IR
;

3765 
ªgs
.
ªgs_PC
 = 
„tch_d©a
[
„tch_hód
].regs_PC;

3766 
¥ed_PC
 = 
„tch_d©a
[
„tch_hód
].pred_PC;

3767 
dú_upd©e_±r
 = &(
„tch_d©a
[
„tch_hód
].
dú_upd©e
);

3768 
°ack_ªcovî_idx
 = 
„tch_d©a
[
„tch_hód
].stack_recover_idx;

3769 
p£q
 = 
„tch_d©a
[
„tch_hód
].
±ø˚_£q
;

3772 
	`MD_SET_OPCODE
(
›
, 
ö°
);

3775 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

3778 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_TRAP
)

3780 i‡(
RUU_num
 != 0)

3785 i‡(
•ec_mode
)

3786 
	`∑nic
("drainedánd speculative");

3790 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; 
•ec_ªgs_R
[MD_REG_ZERO] = 0;

3791 #ifde‡
TARGET_ALPHA


3792 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0; 
•ec_ªgs_F
.d[MD_REG_ZERO] = 0.0;

3795 i‡(!
•ec_mode
)

3798 
sim_num_ö¢
++;

3802 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

3805 
Áu…
 = 
md_Áu…_n⁄e
;

3808 
›
)

3810 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

3811 
OP
: \

3813 
out1
 = 
O1
; 
out2
 = 
O2
; \

3814 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

3816 
	`SYMCAT
(
OP
,
_IMPL
); \

3817 ;

	)

3818 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

3819 
OP
: \

3821 
›
 = 
MD_NOP_OP
; \

3823 
out1
 = 
NA
; 
out2
 = NA; \

3824 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

3826 ;

	)

3827 
	#CONNECT
(
OP
Ë

	)

3833 
	#DECLARE_FAULT
(
FAULT
) \

3835 i‡(!
•ec_mode
) \

3836 
Áu…
 = (
FAULT
); \

3839 }

	)

3840 
	~"machöe.def
"

3843 
›
 = 
MD_NOP_OP
;

3845 
out1
 = 
NA
; 
out2
 = NA;

3846 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA;

3852 i‡(!
•ec_mode
 && 
vîbo£
)

3854 
	`myÂrötf
(
°dîr
, "++ %10n [xor: 0x%08x] {%d} @ 0x%08p: ",

3855 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),

3856 
ö°_£q
+1, 
ªgs
.
ªgs_PC
);

3857 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

3858 
	`Ârötf
(
°dîr
, "\n");

3862 i‡(
Áu…
 !
md_Áu…_n⁄e
)

3863 
	`Áèl
("non-speculative fault (%d) detected @ 0x%08p",

3864 
Áu…
, 
ªgs
.
ªgs_PC
);

3867 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3869 
sim_tŸÆ_ªfs
++;

3870 i‡(!
•ec_mode
)

3871 
sim_num_ªfs
++;

3873 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

3874 
is_wrôe
 = 
TRUE
;

3877 
sim_tŸÆ_lﬂds
++;

3878 i‡(!
•ec_mode
)

3879 
sim_num_lﬂds
++;

3883 
br_èkí
 = (
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 + (
md_ö°_t
)));

3884 
br_¥ed_èkí
 = (
¥ed_PC
 !(
ªgs
.
ªgs_PC
 + (
md_ö°_t
)));

3887 i‡(
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && 
¥ed_≥r„˘
)

3889 
¥ed_PC
 = 
ªgs
.
ªgs_NPC
;

3890 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_NPC
;

3891 
„tch_hód
 = (
ruu_ifq_size
-1);

3892 
„tch_num
 = 1;

3893 
„tch_èû
 = 0;

3894 
„tch_ªdúe˘ed
 = 
TRUE
;

3899 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_DIRJMP
)) == (F_CTRL|F_DIRJMP)

3900 && 
èrgë_PC
 !
¥ed_PC
 && 
br_¥ed_èkí
)

3902 
mis„tch_cou¡
++;

3903 
ªcovîy_cou¡
++;

3905 
„tch_hód
 = (
ruu_ifq_size
-1);

3906 
„tch_num
 = 1;

3907 
„tch_èû
 = 0;

3908 
ruu_„tch_issue_dñay
 +
ruu_bønch_≥«…y
;

3910 i‡(
mf_com∑t
) {

3911 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_NPC
;

3912 
„tch_ªdúe˘ed
 = 
TRUE
;

3913 
mis„tch_⁄ly_cou¡
++;

3916 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
èrgë_PC
;

3917 i‡(
br_èkí
) {

3918 
„tch_ªdúe˘ed
 = 
TRUE
;

3919 
mis„tch_⁄ly_cou¡
++;

3925 i‡(
›
 !
MD_NOP_OP
)

3943 
rs
 = &
RUU
[
RUU_èû
];

3944 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

3945 
rs
->
IR
 = 
ö°
;

3946 
rs
->
›
 = op;

3947 
rs
->
PC
 = 
ªgs
.
ªgs_PC
;

3948 
rs
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Ñs->
¥ed_PC
 =Öred_PC;

3949 
rs
->
ö_LSQ
 = 
FALSE
;

3950 
rs
->
ó_comp
 = 
FALSE
;

3951 
rs
->
ªcovî_ö°
 = 
FALSE
;

3952 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

3953 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

3954 
rs
->
•ec_mode
 = spec_mode;

3955 
rs
->
addr
 = 0;

3957 
rs
->
£q
 = ++
ö°_£q
;

3958 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

3959 
rs
->
±ø˚_£q
 = 
p£q
;

3962 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3965 
rs
->
›
 = 
MD_AGEN_OP
;

3966 
rs
->
ó_comp
 = 
TRUE
;

3969 
lsq
 = &
LSQ
[
LSQ_èû
];

3970 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

3971 
lsq
->
IR
 = 
ö°
;

3972 
lsq
->
›
 = op;

3973 
lsq
->
PC
 = 
ªgs
.
ªgs_PC
;

3974 
lsq
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Üsq->
¥ed_PC
 =Öred_PC;

3975 
lsq
->
ö_LSQ
 = 
TRUE
;

3976 
lsq
->
ó_comp
 = 
FALSE
;

3977 
lsq
->
ªcovî_ö°
 = 
FALSE
;

3978 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

3979 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

3980 
lsq
->
°ack_ªcovî_idx
 = 0;

3981 
lsq
->
•ec_mode
 = spec_mode;

3982 
lsq
->
addr
 =áddr;

3984 
lsq
->
£q
 = ++
ö°_£q
;

3985 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

3986 
lsq
->
±ø˚_£q
 = 
p£q
 + 1;

3989 
	`±ø˚_√wu›
(
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

3990 
	`±ø˚_√w°age
(
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

3993 
	`ruu_lök_idï
(
rs
, 0, 
NA
);

3994 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

3995 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

3998 
	`ruu_ö°Æl_odï
(
rs
, 0, 
DTMP
);

3999 
	`ruu_ö°Æl_odï
(
rs
, 1, 
NA
);

4002 
	`ruu_lök_idï
(
lsq
,

4003  
STORE_OP_INDEX
 ,

4004 
ö1
);

4005 
	`ruu_lök_idï
(
lsq
,

4006  
STORE_ADDR_INDEX
 ,

4007 
DTMP
);

4008 
	`ruu_lök_idï
(
lsq
, 2, 
NA
);

4011 
	`ruu_ö°Æl_odï
(
lsq
, 0, 
out1
);

4012 
	`ruu_ö°Æl_odï
(
lsq
, 1, 
out2
);

4015 
n_di•©ched
++;

4016 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

4017 
RUU_num
++;

4018 
LSQ_èû
 = (LSQ_èû + 1Ë% 
LSQ_size
;

4019 
LSQ_num
++;

4021 i‡(
	`OPERANDS_READY
(
rs
))

4024 
	`ªadyq_íqueue
(
rs
);

4027 
	`RSLINK_INIT
(
œ°_›
, 
lsq
);

4030 i‡(((
	`MD_OP_FLAGS
(
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

4031 && 
	`OPERANDS_READY
(
lsq
))

4035 
	`ªadyq_íqueue
(
lsq
);

4041 
	`ruu_lök_idï
(
rs
, 0, 
ö1
);

4042 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

4043 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

4046 
	`ruu_ö°Æl_odï
(
rs
, 0, 
out1
);

4047 
	`ruu_ö°Æl_odï
(
rs
, 1, 
out2
);

4050 
n_di•©ched
++;

4051 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

4052 
RUU_num
++;

4055 i‡(
	`OPERANDS_READY
(
rs
))

4058 
	`ªadyq_íqueue
(
rs
);

4060 
œ°_›
 = 
RSLINK_NULL
;

4065 
	`RSLINK_INIT
(
œ°_›
, 
rs
);

4072 
rs
 = 
NULL
;

4076 
sim_tŸÆ_ö¢
++;

4077 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4078 
sim_tŸÆ_bønches
++;

4080 i‡(!
•ec_mode
)

4084 
sim_num_ö¢
++;

4089 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4091 
sim_num_bønches
++;

4092 i‡(
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

4094 
	`b¥ed_upd©e
(
¥ed
,

4095  
ªgs
.
ªgs_PC
,

4096  
ªgs
.
ªgs_NPC
,

4097  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

4098 (
md_ö°_t
)),

4099  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

4100 (
md_ö°_t
)),

4101  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

4102  
›
,

4103  &
rs
->
dú_upd©e
);

4108 i‡(
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && !
„tch_ªdúe˘ed
)

4111 
•ec_mode
 = 
TRUE
;

4112 
rs
->
ªcovî_ö°
 = 
TRUE
;

4113 
ªcovî_PC
 = 
ªgs
.
ªgs_NPC
;

4118 
	`±ø˚_√w°age
(
p£q
, 
PST_DISPATCH
,

4119 (
¥ed_PC
 !
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

4120 i‡(
›
 =
MD_NOP_OP
)

4123 
	`±ø˚_ídö°
(
p£q
);

4127 
i
=0; i<
pc°©_√…
; i++)

4129 
cou¡î_t
 
√wvÆ
;

4130 
dñè
;

4133 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

4134 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

4135 i‡(
dñè
 != 0)

4137 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

4138 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

4143 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

4144 
„tch_num
--;

4147 
made_check
 = 
TRUE
;

4148 i‡(
	`dlôe_check_bªak
(
¥ed_PC
,

4149 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4150 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4151 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 
¥ed_PC
, 
sim_cy˛e
, &ªgs, 
mem
);

4155 i‡(!
made_check
)

4157 i‡(
	`dlôe_check_bªak
( 0,

4158 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4159 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4160 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &ªgs, 
mem
);

4162 
	}
}

4171 
	$„tch_öô
()

4174 
„tch_d©a
 =

4175 (
„tch_ªc
 *)
	`ˇŒoc
(
ruu_ifq_size
, (fetch_rec));

4176 i‡(!
„tch_d©a
)

4177 
	`Áèl
("out of virtual memory");

4179 
„tch_num
 = 0;

4180 
„tch_èû
 = 
„tch_hód
 = 0;

4181 
IFQ_cou¡
 = 0;

4182 
IFQ_fcou¡
 = 0;

4183 
	}
}

4187 
	$„tch_dump
(
FILE
 *
°ªam
)

4189 
num
, 
hód
;

4191 i‡(!
°ªam
)

4192 
°ªam
 = 
°dîr
;

4194 
	`Ârötf
(
°ªam
, "** fetch stage state **\n");

4196 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

4197 
	`myÂrötf
(
°ªam
, "pred_PC: 0x%08p,Ñecover_PC: 0x%08p\n",

4198 
¥ed_PC
, 
ªcovî_PC
);

4199 
	`myÂrötf
(
°ªam
, "fetch_regs_PC: 0x%08p, fetch_pred_PC: 0x%08p\n",

4200 
„tch_ªgs_PC
, 
„tch_¥ed_PC
);

4201 
	`Ârötf
(
°ªam
, "\n");

4203 
	`Ârötf
(
°ªam
, "** fetch queue contents **\n");

4204 
	`Ârötf
(
°ªam
, "„tch_num: %d\n", 
„tch_num
);

4205 
	`Ârötf
(
°ªam
, "fetch_head: %d, fetch_tail: %d\n",

4206 
„tch_hód
, 
„tch_èû
);

4208 
num
 = 
„tch_num
;

4209 
hód
 = 
„tch_hód
;

4210 
num
)

4212 
	`Ârötf
(
°ªam
, "idx: %2d: in°: `", 
hód
);

4213 
	`md_¥öt_ö¢
(
„tch_d©a
[
hód
].
IR
, fëch_d©a[hód].
ªgs_PC
, 
°ªam
);

4214 
	`Ârötf
(
°ªam
, "'\n");

4215 
	`myÂrötf
(
°ªam
, "Ñegs_PC: 0x%08p,Öred_PC: 0x%08p\n",

4216 
„tch_d©a
[
hód
].
ªgs_PC
, fëch_d©a[hód].
¥ed_PC
);

4217 
hód
 = (hód + 1Ë& (
ruu_ifq_size
 - 1);

4218 
num
--;

4220 
	}
}

4222 
	gœ°_ö°_mis£d
 = 
FALSE
;

4223 
	gœ°_ö°_tmis£d
 = 
FALSE
;

4228 
	$ruu_„tch
()

4230 
i
, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

4231 
md_ö°_t
 
ö°
;

4232 
°ack_ªcovî_idx
;

4233 
bønch_˙t
;

4234 
md_›code
 
›
;

4236 
i
=0, 
bønch_˙t
=0;

4238 
i
 < (
ruu_decode_width
 * 
„tch_•ìd
)

4240 && 
„tch_num
 < 
ruu_ifq_size


4242 && !
d⁄e
;

4243 
i
++)

4246 
„tch_ªgs_PC
 = 
„tch_¥ed_PC
;

4249 i‡(1 || 
ld_ãxt_ba£
 <
„tch_ªgs_PC


4250 && 
„tch_ªgs_PC
 < (
ld_ãxt_ba£
+
ld_ãxt_size
)

4251 && !(
„tch_ªgs_PC
 & ((
md_ö°_t
)-1)))

4254 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
„tch_ªgs_PC
);

4257 
œt
 = 
ˇche_û1_œt
;

4258 i‡(
ˇche_û1
)

4261 
œt
 =

4262 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4263 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4264 
NULL
, NULL);

4265 i‡(
œt
 > 
ˇche_û1_œt
)

4266 
œ°_ö°_mis£d
 = 
TRUE
;

4269 i‡(
ôlb
)

4273 
éb_œt
 =

4274 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4275 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4276 
NULL
, NULL);

4277 i‡(
éb_œt
 > 1)

4278 
œ°_ö°_tmis£d
 = 
TRUE
;

4281 
œt
 = 
	`MAX
(
éb_œt
,Üat);

4285 i‡(
œt
 !
ˇche_û1_œt
)

4288 
ruu_„tch_issue_dñay
 +
œt
 - 1;

4296 
ö°
 = 
MD_NOP_INST
;

4302 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4305 i‡(
¥ed
)

4310 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4311 
„tch_¥ed_PC
 =

4312 
	`b¥ed_lookup
(
¥ed
,

4313  
„tch_ªgs_PC
,

4315  
›
,

4316  
	`MD_IS_CALL
(
›
),

4317  
	`MD_IS_RETURN
(
›
),

4318  &(
„tch_d©a
[
„tch_èû
].
dú_upd©e
),

4319  &
°ack_ªcovî_idx
);

4321 
„tch_¥ed_PC
 = 0;

4324 i‡(!
„tch_¥ed_PC
)

4327 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4332 
bønch_˙t
++;

4333 i‡(
bønch_˙t
 >
„tch_•ìd
)

4334 
d⁄e
 = 
TRUE
;

4341 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4345 
„tch_d©a
[
„tch_èû
].
IR
 = 
ö°
;

4346 
„tch_d©a
[
„tch_èû
].
ªgs_PC
 = 
„tch_ªgs_PC
;

4347 
„tch_d©a
[
„tch_èû
].
¥ed_PC
 = 
„tch_¥ed_PC
;

4348 
„tch_d©a
[
„tch_èû
].
°ack_ªcovî_idx
 = stack_recover_idx;

4349 
„tch_d©a
[
„tch_èû
].
±ø˚_£q
 =Ötrace_seq++;

4352 
	`±ø˚_√wö°
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4353 
ö°
, 
„tch_d©a
[
„tch_èû
].
ªgs_PC
,

4355 
	`±ø˚_√w°age
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4356 
PST_IFETCH
,

4357 ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0)

4358 | (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

4359 
œ°_ö°_mis£d
 = 
FALSE
;

4360 
œ°_ö°_tmis£d
 = 
FALSE
;

4363 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
Ë
±ø˚_£q
++;

4366 
„tch_èû
 = („tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

4367 
„tch_num
++;

4369 
	}
}

4373 
	$simoo_m°©e_obj
(
FILE
 *
°ªam
,

4374 *
cmd
,

4375 
ªgs_t
 *
ªgs
,

4376 
mem_t
 *
mem
)

4378 i‡(!
cmd
 || !
	`°rcmp
(cmd, "help"))

4379 
	`Ârötf
(
°ªam
,

4395 i‡(!
	`°rcmp
(
cmd
, "stats"))

4398 
	`sim_¥öt_°©s
(
°ªam
);

4400 i‡(!
	`°rcmp
(
cmd
, "res"))

4403 
	`ªs_dump
(
fu_poﬁ
, 
°ªam
);

4405 i‡(!
	`°rcmp
(
cmd
, "ruu"))

4408 
	`ruu_dump
(
°ªam
);

4410 i‡(!
	`°rcmp
(
cmd
, "lsq"))

4413 
	`lsq_dump
(
°ªam
);

4415 i‡(!
	`°rcmp
(
cmd
, "eventq"))

4418 
	`evítq_dump
(
°ªam
);

4420 i‡(!
	`°rcmp
(
cmd
, "readyq"))

4423 
	`ªadyq_dump
(
°ªam
);

4425 i‡(!
	`°rcmp
(
cmd
, "cv"))

4428 
	`cv_dump
(
°ªam
);

4430 i‡(!
	`°rcmp
(
cmd
, "rspec"))

4433 
	`r•ec_dump
(
°ªam
);

4435 i‡(!
	`°rcmp
(
cmd
, "mspec"))

4438 
	`m•ec_dump
(
°ªam
);

4440 i‡(!
	`°rcmp
(
cmd
, "fetch"))

4443 
	`„tch_dump
(
°ªam
);

4449  
NULL
;

4450 
	}
}

4455 
	$sim_maö
()

4459 
	`sig«l
(
SIGFPE
, 
SIG_IGN
);

4462 
ªgs
.
ªgs_PC
 = 
ld_¥og_íåy
;

4463 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

4466 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

4467 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.ªgs_PC + (
md_ö°_t
),

4468 
sim_cy˛e
, &
ªgs
, 
mem
);

4472 i‡(
Á°fwd_cou¡
 > 0)

4474 
icou¡
;

4475 
md_ö°_t
 
ö°
;

4476 
md_›code
 
›
;

4477 
md_addr_t
 
èrgë_PC
;

4478 
md_addr_t
 
addr
;

4479 
is_wrôe
;

4480 
byã_t
 
ãmp_byã
 = 0;

4481 
hÆf_t
 
ãmp_hÆf
 = 0;

4482 
w‹d_t
 
ãmp_w‹d
 = 0;

4483 #ifde‡
HOST_HAS_QWORD


4484 
qw‹d_t
 
ãmp_qw‹d
 = 0;

4486 
md_Áu…_ty≥
 
Áu…
;

4488 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

4490 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

4493 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

4494 #ifde‡
TARGET_ALPHA


4495 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

4499 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

4502 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

4505 
Áu…
 = 
md_Áu…_n⁄e
;

4508 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4511 
	`Ârötf
(
°dîr
, "ö°: %d\n", 
›
);

4512 
›
)

4514 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

4515 
OP
: \

4516 
	`SYMCAT
(
OP
,
_IMPL
); \

4517 ;

	)

4518 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

4519 
OP
: \

4520 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

4521 
	#CONNECT
(
OP
)

	)

4522 #unde‡
DECLARE_FAULT


4523 
	#DECLARE_FAULT
(
FAULT
) \

4524 { 
Áu…
 = (
FAULT
); ; }

	)

4525 
	~"machöe.def
"

4527 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

4530 i‡(
Áu…
 !
md_Áu…_n⁄e
)

4531 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

4534 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

4536 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

4537 
is_wrôe
 = 
TRUE
;

4541 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

4542 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4543 
addr
, 
sim_num_ö¢
, sim_num_insn))

4544 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

4547 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

4548 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

4552 
	`Ârötf
(
°dîr
, "sim: ** startingÖerformance simulation **\n");

4555 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_PC
 - (
md_ö°_t
);

4556 
„tch_¥ed_PC
 = 
ªgs
.
ªgs_PC
;

4557 
ªgs
.
ªgs_PC
 =Ñegs.ªgs_PC - (
md_ö°_t
);

4564 i‡(
RUU_num
 < 
LSQ_num
)

4565 
	`∑nic
("RUU_num < LSQ_num");

4566 i‡(((
RUU_hód
 + 
RUU_num
Ë% 
RUU_size
Ë!
RUU_èû
)

4567 
	`∑nic
("RUU_head/RUU_tail wedged");

4568 i‡(((
LSQ_hód
 + 
LSQ_num
Ë% 
LSQ_size
Ë!
LSQ_èû
)

4569 
	`∑nic
("LSQ_head/LSQ_tail wedged");

4572 
	`±ø˚_check_a˘ive
(
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

4575 
	`±ø˚_√wcy˛e
(
sim_cy˛e
);

4578 
	`ruu_commô
();

4581 
	`ruu_ªÀa£_fu
();

4587 
	`ruu_wrôeback
();

4589 i‡(!
bugcom∑t_mode
)

4593 
	`lsq_ª‰esh
();

4597 
	`ruu_issue
();

4602 
	`ruu_di•©ch
();

4604 i‡(
bugcom∑t_mode
)

4608 
	`lsq_ª‰esh
();

4612 
	`ruu_issue
();

4616 i‡(!
ruu_„tch_issue_dñay
)

4617 
	`ruu_„tch
();

4619 
ruu_„tch_issue_dñay
--;

4622 
IFQ_cou¡
 +
„tch_num
;

4623 
IFQ_fcou¡
 +((
„tch_num
 =
ruu_ifq_size
) ? 1 : 0);

4624 
RUU_cou¡
 +
RUU_num
;

4625 
RUU_fcou¡
 +((
RUU_num
 =
RUU_size
) ? 1 : 0);

4626 
LSQ_cou¡
 +
LSQ_num
;

4627 
LSQ_fcou¡
 +((
LSQ_num
 =
LSQ_size
) ? 1 : 0);

4630 
sim_cy˛e
++;

4633 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

4635 i‡(
¥ogøm_com∂ëe
) ;

4637 
	}
}

	@sim-profile.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"symbﬁ.h
"

65 
	~"›ti⁄s.h
"

66 
	~"°©s.h
"

67 
	~"sim.h
"

75 
ªgs_t
 
	gªgs
;

78 
mem_t
 *
	gmem
 = 
NULL
;

81 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

84 
	gmax_ö°s
;

87 
	g¥of_Æl
 ;

88 
	g¥of_ic
 ;

89 
	g¥of_ö°
 ;

90 
	g¥of_bc
 ;

91 
	g¥of_am
 ;

92 
	g¥of_£g
 ;

93 
	g¥of_tsyms
 ;

94 
	g¥of_dsyms
 ;

95 
	glﬂd_loˇls
 ;

96 
	g¥of_èddr
 ;

99 
	#MAX_PCSTAT_VARS
 8

	)

100 
	gpc°©_√…
 = 0;

101 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

105 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

107 
	`›t_ªg_hódî
(
odb
,

114 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

115 &
max_ö°s
, 0,

116  
TRUE
, 
NULL
);

118 
	`›t_ªg_Êag
(
odb
, "-all", "enableállÖrofile options",

119 &
¥of_Æl
, 
FALSE
, 
TRUE
, 
NULL
);

121 
	`›t_ªg_Êag
(
odb
, "-iclass", "enable instruction classÖrofiling",

122 &
¥of_ic
, 
FALSE
, 
TRUE
, 
NULL
);

124 
	`›t_ªg_Êag
(
odb
, "-iprof", "enable instructionÖrofiling",

125 &
¥of_ö°
, 
FALSE
, 
TRUE
, 
NULL
);

127 
	`›t_ªg_Êag
(
odb
, "-brprof", "enable branch instructionÖrofiling",

128 &
¥of_bc
, 
FALSE
, 
TRUE
, 
NULL
);

130 
	`›t_ªg_Êag
(
odb
, "-amprof", "enableáddress modeÖrofiling",

131 &
¥of_am
, 
FALSE
, 
TRUE
, 
NULL
);

133 
	`›t_ªg_Êag
(
odb
, "-segprof", "enableÜoad/storeáddress segmentÖrofiling",

134 &
¥of_£g
, 
FALSE
, 
TRUE
, 
NULL
);

136 
	`›t_ªg_Êag
(
odb
, "-tsymprof", "enableÅext symbolÖrofiling",

137 &
¥of_tsyms
, 
FALSE
, 
TRUE
, 
NULL
);

139 
	`›t_ªg_Êag
(
odb
, "-taddrprof", "enableÅextáddressÖrofiling",

140 &
¥of_èddr
, 
FALSE
, 
TRUE
, 
NULL
);

142 
	`›t_ªg_Êag
(
odb
, "-dsymprof", "enable data symbolÖrofiling",

143 &
¥of_dsyms
, 
FALSE
, 
TRUE
, 
NULL
);

145 
	`›t_ªg_Êag
(
odb
, "-internal",

147 &
lﬂd_loˇls
, 
FALSE
, 
TRUE
, 
NULL
);

149 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

151 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

152  
FALSE
, 
NULL
, 
TRUE
);

153 
	}
}

157 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

159 i‡(
¥of_Æl
)

162 
¥of_ic
 = 
TRUE
;

163 
¥of_ö°
 = 
TRUE
;

164 
¥of_bc
 = 
TRUE
;

165 
¥of_am
 = 
TRUE
;

166 
¥of_£g
 = 
TRUE
;

167 
¥of_tsyms
 = 
TRUE
;

168 
¥of_dsyms
 = 
TRUE
;

169 
¥of_èddr
 = 
TRUE
;

171 
	}
}

174 
	eö°_˛ass_t
 {

175 
	mic_lﬂd
,

176 
	mic_°‹e
,

177 
	mic_unc⁄d
,

178 
	mic_c⁄d
,

179 
	mic_icomp
,

180 
	mic_fcomp
,

181 
	mic_å≠
,

182 
	mic_NUM


186 *
	gö°_˛ass_°r
[
ic_NUM
] = {

197 
°©_°©_t
 *
	gic_¥of
 = 
NULL
;

200 *
	gö°_°r
[
OP_MAX
];

203 
°©_°©_t
 *
	gö°_¥of
 = 
NULL
;

206 
	ebønch_˛ass_t
 {

207 
	mbc_unc⁄d_dú
,

208 
	mbc_c⁄d_dú
,

209 
	mbc_ˇŒ_dú
,

210 
	mbc_unc⁄d_ödú
,

211 
	mbc_c⁄d_ödú
,

212 
	mbc_ˇŒ_ödú
,

213 
	mbc_NUM


217 *
	gbønch_˛ass_°r
[
bc_NUM
] = {

227 
°©_°©_t
 *
	gbc_¥of
 = 
NULL
;

230 
°©_°©_t
 *
	gam_¥of
 = 
NULL
;

233 
	eaddr_£g_t
 {

234 
	m£g_d©a
,

235 
	m£g_hóp
,

236 
	m£g_°ack
,

237 
	m£g_ãxt
,

238 
	m£g_NUM


242 *
	gaddr_£g_°r
[
£g_NUM
] = {

250 
°©_°©_t
 *
	g£g_¥of
 = 
NULL
;

253 
addr_£g_t


254 
	$böd_to_£g
(
md_addr_t
 
addr
)

256 i‡(
ld_d©a_ba£
 <
addr
 &&ádd∏< (ld_d©a_ba£ + 
ld_d©a_size
))

257  
£g_d©a
;

258 i‡((
ld_d©a_ba£
 + 
ld_d©a_size
Ë<
addr
 &&ádd∏< 
ld_brk_poöt
)

259  
£g_hóp
;

261 i‡((
ld_°ack_ba£
 - (16*1024*1024)Ë<
addr
 &&áddr <Üd_stack_base)

262  
£g_°ack
;

263 i‡(
ld_ãxt_ba£
 <
addr
 &&ádd∏< (ld_ãxt_ba£ + 
ld_ãxt_size
))

264  
£g_ãxt
;

266 
	`∑nic
("cannot bindáddressÅo segment");

267 
	}
}

270 
°©_°©_t
 *
	gtsym_¥of
 = 
NULL
;

271 **
	gtsym_«mes
 = 
NULL
;

274 
°©_°©_t
 *
	gdsym_¥of
 = 
NULL
;

275 **
	gdsym_«mes
 = 
NULL
;

278 
°©_°©_t
 *
	gèddr_¥of
 = 
NULL
;

281 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

282 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

283 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

286 
	#STATVAL
(
STAT
) \

287 ((
STAT
)->
sc
 =
sc_öt
 \

288 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

289 : ((
STAT
)->
sc
 =
sc_uöt
 \

290 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

291 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

292 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

293 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

297 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

299 
i
;

301 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

303 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

304 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

306 &
sim_num_ªfs
, 0, 
NULL
);

307 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

309 &
sim_ñ≠£d_time
, 0, 
NULL
);

310 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

312 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

314 i‡(
¥of_ic
)

317 
ic_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_class_prof",

320  
ic_NUM
,

322  (
PF_COUNT
|
PF_PDF
),

323  
NULL
,

324  
ö°_˛ass_°r
,

325  
NULL
);

328 i‡(
¥of_ö°
)

330 
i
;

331 
buf
[512];

334 
i
=0; i < 
OP_MAX
-1; i++)

336 
	`•rötf
(
buf
, "%-8†%-6s", 
md_›2«me
[
i
+1], 
md_›2f‹m©
[i+1]);

337 
ö°_°r
[
i
] = 
	`my°rdup
(
buf
);

341 
ö°_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_prof",

344  
OP_MAX
-1,

346  (
PF_COUNT
|
PF_PDF
),

347  
NULL
,

348  
ö°_°r
,

349  
NULL
);

352 i‡(
¥of_bc
)

355 
bc_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_branch_prof",

358  
bc_NUM
,

360  (
PF_COUNT
|
PF_PDF
),

361  
NULL
,

362  
bønch_˛ass_°r
,

363  
NULL
);

366 i‡(
¥of_am
)

369 
am_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_mode_prof",

372  
md_amode_NUM
,

374  (
PF_COUNT
|
PF_PDF
),

375  
NULL
,

376  
md_amode_°r
,

377  
NULL
);

380 i‡(
¥of_£g
)

383 
£g_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_seg_prof",

386  
£g_NUM
,

388  (
PF_COUNT
|
PF_PDF
),

389  
NULL
,

390  
addr_£g_°r
,

391  
NULL
);

394 i‡(
¥of_tsyms
 && 
sym_¡extsyms
 != 0)

396 
i
;

399 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

402 
tsym_«mes
 = (**)
	`ˇŒoc
(
sym_¡extsyms
, (*));

404 
i
=0; i < 
sym_¡extsyms
; i++)

405 
tsym_«mes
[
i
] = 
sym_ãxtsyms
[i]->
«me
;

408 
tsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_text_sym_prof",

411  
sym_¡extsyms
,

413  (
PF_COUNT
|
PF_PDF
),

414  
NULL
,

415  
tsym_«mes
,

416  
NULL
);

419 i‡(
¥of_dsyms
 && 
sym_nd©asyms
 != 0)

421 
i
;

424 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

427 
dsym_«mes
 = (**)
	`ˇŒoc
(
sym_nd©asyms
, (*));

429 
i
=0; i < 
sym_nd©asyms
; i++)

430 
dsym_«mes
[
i
] = 
sym_d©asyms
[i]->
«me
;

433 
dsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_data_sym_prof",

436  
sym_nd©asyms
,

438  (
PF_COUNT
|
PF_PDF
),

439  
NULL
,

440  
dsym_«mes
,

441  
NULL
);

444 i‡(
¥of_èddr
)

450 
èddr_¥of
 = 
	`°©_ªg_sdi°
(
sdb
, "sim_text_addr_prof",

453  (
PF_COUNT
|
PF_PDF
),

455  
NULL
);

458 
i
=0; i<
pc°©_√…
; i++)

460 
buf
[512], 
buf1
[512];

461 
°©_°©_t
 *
°©
;

466 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

467 i‡(!
°©
)

468 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

471 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

472 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

473 
°©
->
«me
);

476 
pc°©_°©s
[
i
] = 
°©
;

477 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

480 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

481 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

482 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

484  (
PF_COUNT
|
PF_PDF
),

486  
NULL
);

488 
	`ld_ªg_°©s
(
sdb
);

489 
	`mem_ªg_°©s
(
mem
, 
sdb
);

490 
	}
}

494 
	$sim_öô
()

496 
sim_num_ªfs
 = 0;

499 
	`ªgs_öô
(&
ªgs
);

502 
mem
 = 
	`mem_¸óã
("mem");

503 
	`mem_öô
(
mem
);

504 
	}
}

508 
	$¥ofûe_m°©e_obj
(
FILE
 *
°ªam
,

509 *
cmd
,

510 
ªgs_t
 *
ªgs
,

511 
mem_t
 *
mem
)

514 
	`sim_¥öt_°©s
(
°ªam
);

517  
NULL
;

518 
	}
}

522 
	$sim_lﬂd_¥og
(*
‚ame
,

523 
¨gc
, **
¨gv
,

524 **
ívp
)

527 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

530 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
¥ofûe_m°©e_obj
);

531 
	}
}

536 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

539 
	}
}

543 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

545 
	}
}

549 
	$sim_unöô
()

552 
	}
}

564 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

567 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

570 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

571 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

573 #i‡
deföed
(
TARGET_PISA
)

576 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

577 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

578 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

579 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

580 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

581 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

584 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

585 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

586 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

587 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

588 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

589 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

591 #ñi‡
deföed
(
TARGET_ALPHA
)

594 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

595 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

596 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

597 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

600 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

601 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

602 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

603 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

606 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

610 
	#READ_BYTE
(
SRC
, 
FAULT
) \

611 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

	)

612 
	#READ_HALF
(
SRC
, 
FAULT
) \

613 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

	)

614 
	#READ_WORD
(
SRC
, 
FAULT
) \

615 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

	)

616 #ifde‡
HOST_HAS_QWORD


617 
	#READ_QWORD
(
SRC
, 
FAULT
) \

618 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, 
addr
 = (
SRC
)))

	)

621 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

622 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

623 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

624 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

625 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

626 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

627 #ifde‡
HOST_HAS_QWORD


628 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

629 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

633 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

637 
	gfsm
 = 0;

641 
	$sim_maö
()

643 
i
;

644 
md_ö°_t
 
ö°
;

645 
md_addr_t
 
addr
;

646 
is_wrôe
;

647 
md_›code
 
›
;

648 
Êags
;

649 
md_Áu…_ty≥
 
Áu…
;

651 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

654 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

657 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

658 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

659 
sim_num_ö¢
, &
ªgs
, 
mem
);

661 
TRUE
)

664 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

665 #ifde‡
TARGET_ALPHA


666 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

670 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

672 i‡(
vîbo£
)

674 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_num_ö¢
, 
ªgs
.
ªgs_PC
);

675 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

676 
	`Ârötf
(
°dîr
, "\n");

681 
sim_num_ö¢
++;

684 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

687 
Áu…
 = 
md_Áu…_n⁄e
;

690 
	`MD_SET_OPCODE
(
›
, 
ö°
);

693 
›
)

695 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

696 
OP
: \

697 
	`SYMCAT
(
OP
,
_IMPL
); \

698 ;

	)

699 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

700 
OP
: \

701 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

702 
	#CONNECT
(
OP
)

	)

703 
	#DECLARE_FAULT
(
FAULT
) \

704 { 
Áu…
 = (
FAULT
); ; }

	)

705 
	~"machöe.def
"

707 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

710 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

712 
sim_num_ªfs
++;

713 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

714 
is_wrôe
 = 
TRUE
;

720 
Êags
 = 
	`MD_OP_FLAGS
(
›
);

722 i‡(
¥of_ic
)

724 
ö°_˛ass_t
 
ic
;

727 i‡(
Êags
 & 
F_LOAD
)

728 
ic
 = 
ic_lﬂd
;

729 i‡(
Êags
 & 
F_STORE
)

730 
ic
 = 
ic_°‹e
;

731 i‡(
Êags
 & 
F_UNCOND
)

732 
ic
 = 
ic_unc⁄d
;

733 i‡(
Êags
 & 
F_COND
)

734 
ic
 = 
ic_c⁄d
;

735 i‡(
Êags
 & 
F_ICOMP
)

736 
ic
 = 
ic_icomp
;

737 i‡(
Êags
 & 
F_FCOMP
)

738 
ic
 = 
ic_fcomp
;

739 i‡(
Êags
 & 
F_TRAP
)

740 
ic
 = 
ic_å≠
;

742 
	`∑nic
("instruction hasÇo class");

745 
	`°©_add_ßm∂e
(
ic_¥of
, ()
ic
);

748 i‡(
¥of_ö°
)

751 
	`°©_add_ßm∂e
(
ö°_¥of
, ()
›
 - 1);

754 i‡(
¥of_bc
)

756 
bønch_˛ass_t
 
bc
;

759 i‡(
Êags
 & 
F_CTRL
)

761 i‡((
Êags
 & (
F_CALL
|
F_DIRJMP
)) == (F_CALL|F_DIRJMP))

762 
bc
 = 
bc_ˇŒ_dú
;

763 i‡((
Êags
 & (
F_CALL
|
F_INDIRJMP
)) == (F_CALL|F_INDIRJMP))

764 
bc
 = 
bc_ˇŒ_ödú
;

765 i‡((
Êags
 & (
F_UNCOND
|
F_DIRJMP
)) == (F_UNCOND|F_DIRJMP))

766 
bc
 = 
bc_unc⁄d_dú
;

767 i‡((
Êags
 & (
F_UNCOND
|
F_INDIRJMP
))== (F_UNCOND|F_INDIRJMP))

768 
bc
 = 
bc_unc⁄d_ödú
;

769 i‡((
Êags
 & (
F_COND
|
F_DIRJMP
)) == (F_COND|F_DIRJMP))

770 
bc
 = 
bc_c⁄d_dú
;

771 i‡((
Êags
 & (
F_COND
|
F_INDIRJMP
)) == (F_COND|F_INDIRJMP))

772 
bc
 = 
bc_c⁄d_ödú
;

774 
	`∑nic
("branch hasÇo class");

777 
	`°©_add_ßm∂e
(
bc_¥of
, ()
bc
);

781 i‡(
¥of_am
)

783 
md_amode_ty≥
 
am
;

786 
	`MD_AMODE_PREPROBE
(
›
, 
fsm
);

789 i‡(
Êags
 & 
F_MEM
)

792 
	`MD_AMODE_PROBE
(
am
, 
›
, 
fsm
);

795 
	`°©_add_ßm∂e
(
am_¥of
, ()
am
);

798 
	`MD_AMODE_POSTPROBE
(
fsm
);

802 i‡(
¥of_£g
)

804 i‡(
Êags
 & 
F_MEM
)

807 
	`°©_add_ßm∂e
(
£g_¥of
, ()
	`böd_to_£g
(
addr
));

811 i‡(
¥of_tsyms
)

813 
tödex
;

816 
	`sym_böd_addr
(
ªgs
.
ªgs_PC
, &
tödex
, 
FALSE
, 
sdb_ãxt
);

818 i‡(
tödex
 >= 0)

820 i‡(
tödex
 > 
sym_¡extsyms
)

821 
	`∑nic
("bogusÅext symbol index");

823 
	`°©_add_ßm∂e
(
tsym_¥of
, 
tödex
);

828 i‡(
¥of_dsyms
)

830 
dödex
;

832 i‡(
Êags
 & 
F_MEM
)

835 
	`sym_böd_addr
(
addr
, &
dödex
, 
FALSE
, 
sdb_d©a
);

837 i‡(
dödex
 >= 0)

839 i‡(
dödex
 > 
sym_nd©asyms
)

840 
	`∑nic
("bogus data symbol index");

842 
	`°©_add_ßm∂e
(
dsym_¥of
, 
dödex
);

848 i‡(
¥of_èddr
)

851 
	`°©_add_ßm∂e
(
èddr_¥of
, 
ªgs
.
ªgs_PC
);

855 
i
=0; i<
pc°©_√…
; i++)

857 
cou¡î_t
 
√wvÆ
;

858 
dñè
;

861 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

862 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

863 i‡(
dñè
 != 0)

865 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

866 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

872 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

873 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

874 
addr
, 
sim_num_ö¢
, sim_num_insn))

875 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

878 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

879 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

882 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

885 
	}
}

	@sim-safe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"sim.h
"

76 
ªgs_t
 
	gªgs
;

79 
mem_t
 *
	gmem
 = 
NULL
;

82 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

85 
	gmax_ö°s
;

89 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

91 
	`›t_ªg_hódî
(
odb
,

100 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

101 &
max_ö°s
, 0,

102  
TRUE
, 
NULL
);

104 
	}
}

108 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

111 
	}
}

115 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

117 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

119 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

120 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

122 &
sim_num_ªfs
, 0, 
NULL
);

123 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

125 &
sim_ñ≠£d_time
, 0, 
NULL
);

126 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

128 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

129 
	`ld_ªg_°©s
(
sdb
);

130 
	`mem_ªg_°©s
(
mem
, 
sdb
);

131 
	}
}

135 
	$sim_öô
()

137 
sim_num_ªfs
 = 0;

140 
	`ªgs_öô
(&
ªgs
);

143 
mem
 = 
	`mem_¸óã
("mem");

144 
	`mem_öô
(
mem
);

145 
	}
}

149 
	$sim_lﬂd_¥og
(*
‚ame
,

150 
¨gc
, **
¨gv
,

151 **
ívp
)

154 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

157 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

158 
	}
}

162 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

165 
	}
}

169 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

172 
	}
}

176 
	$sim_unöô
()

179 
	}
}

191 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

194 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

197 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

198 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

200 #i‡
deföed
(
TARGET_PISA
)

203 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

204 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

205 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

206 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

207 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

208 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

211 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

212 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

213 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

214 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

215 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

216 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

218 #ñi‡
deföed
(
TARGET_ALPHA
)

221 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

222 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

223 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(N)])

	)

224 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(N)] = (EXPR))

	)

227 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

228 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

229 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

230 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

233 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

237 
	#READ_BYTE
(
SRC
, 
FAULT
) \

238 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

	)

239 
	#READ_HALF
(
SRC
, 
FAULT
) \

240 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

	)

241 
	#READ_WORD
(
SRC
, 
FAULT
) \

242 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

	)

243 #ifde‡
HOST_HAS_QWORD


244 
	#READ_QWORD
(
SRC
, 
FAULT
) \

245 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, 
addr
 = (
SRC
)))

	)

248 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

249 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

250 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

251 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

252 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

253 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

254 #ifde‡
HOST_HAS_QWORD


255 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

256 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

	)

260 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

264 
	$sim_maö
()

266 
md_ö°_t
 
ö°
;

267 
md_addr_t
 
addr
;

268 
md_›code
 
›
;

269 
is_wrôe
;

270 
md_Áu…_ty≥
 
Áu…
;

272 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

275 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

278 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

279 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),

280 
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, &ªgs, 
mem
);

282 !
¥ogøm_com∂ëe
)

285 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

286 #ifde‡
TARGET_ALPHA


287 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

291 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

294 
sim_num_ö¢
++;

297 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

300 
Áu…
 = 
md_Áu…_n⁄e
;

303 
	`MD_SET_OPCODE
(
›
, 
ö°
);

307 
›
)

309 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

310 
OP
: \

311 
	`SYMCAT
(
OP
,
_IMPL
); \

312 ;

	)

313 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

314 
OP
: \

315 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

316 
	#CONNECT
(
OP
)

	)

317 
	#DECLARE_FAULT
(
FAULT
) \

318 { 
Áu…
 = (
FAULT
); ; }

	)

319 
	~"machöe.def
"

321 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

324 i‡(
Áu…
 !
md_Áu…_n⁄e
)

325 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

327 i‡(
vîbo£
 && 
sim_num_ö¢
 >
åiggî_ö°
)

329 
	`myÂrötf
(
°dîr
, "COMMIT: %10n [xor: 0x%08x] @ 0x%08p: ",

330 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),Ñegs.
ªgs_PC
);

331 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

332 
	`Ârötf
(
°dîr
, "\n");

333 i‡(
vîbo£_ªgs
)

335 
	`md_¥öt_úegs
(
ªgs
.
ªgs_R
, 
°dîr
);

336 
	`md_¥öt_Âªgs
(
ªgs
.
ªgs_F
, 
°dîr
);

337 
	`md_¥öt_¸egs
(
ªgs
.
ªgs_C
, 
°dîr
);

338 
	`Ârötf
(
°dîr
, "\n");

343 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

345 
sim_num_ªfs
++;

346 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

347 
is_wrôe
 = 
TRUE
;

351 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

352 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

353 
addr
, 
sim_num_ö¢
, sim_num_insn))

354 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

357 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

358 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

361 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

364 
	}
}

	@sim.h

52 #i‚de‡
SIM_H


53 
	#SIM_H


	)

55 
	~<°dio.h
>

56 
	~<£tjmp.h
>

57 
	~<time.h
>

59 
	~"›ti⁄s.h
"

60 
	~"°©s.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

65 
sim_dump_°©s
;

68 
sim_exô_now
;

71 
jmp_buf
 
sim_exô_buf
;

74 
sim_sw≠_byãs
;

75 
sim_sw≠_w‹ds
;

78 
cou¡î_t
 
sim_num_ö¢
;

81 
time_t
 
sim_°¨t_time
;

82 
time_t
 
sim_íd_time
;

83 
sim_ñ≠£d_time
;

86 
›t_odb_t
 *
sim_odb
;

89 
°©_sdb_t
 *
sim_sdb
;

92 *
sim_eio_‚ame
;

93 *
sim_chk±_‚ame
;

94 
FILE
 *
sim_eio_fd
;

97 
FILE
 *
sim_¥ogfd
;

105 
sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

110 
sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
);

113 
sim_ªg_°©s
(
°©_sdb_t
 *
sdb
);

116 
sim_öô
();

119 
sim_lﬂd_¥og
(*
‚ame
, 
¨gc
, **
¨gv
, **
ívp
);

124 
sim_aux_c⁄fig
(
FILE
 *
°ªam
);

127 
sim_maö
();

132 
sim_aux_°©s
(
FILE
 *
°ªam
);

135 
sim_unöô
();

139 
sim_¥öt_°©s
(
FILE
 *
fd
);

	@stats.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<limôs.h
>

55 
	~<m©h.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"evÆ.h
"

61 
	~"°©s.h
"

64 
evÆ_vÆue_t


65 
	$°©_evÆ_idít
(
evÆ_°©e_t
 *
es
)

67 
°©_sdb_t
 *
sdb
 = 
es
->
u£r_±r
;

68 
°©_°©_t
 *
°©
;

69 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

70 
evÆ_vÆue_t
 
vÆ
;

73 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

75 i‡(!
	`°rcmp
(
°©
->
«me
, 
es
->
tok_buf
))

81 i‡(!
°©
)

84 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

85  
îr_vÆue
;

90 
°©
->
sc
)

92 
sc_öt
:

93 
vÆ
.
ty≥
 = 
ë_öt
;

94 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

96 
sc_uöt
:

97 
vÆ
.
ty≥
 = 
ë_uöt
;

98 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

100 #ifde‡
HOST_HAS_QWORD


101 
sc_qw‹d
:

103 
vÆ
.
ty≥
 = 
ë_doubÀ
;

104 #ifde‡
_MSC_VER


105 
vÆ
.
vÆue
.
as_doubÀ
 = ()(
sqw‹d_t
)*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

107 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

110 
sc_sqw‹d
:

112 
vÆ
.
ty≥
 = 
ë_doubÀ
;

113 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
;

116 
sc_Êﬂt
:

117 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

118 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

120 
sc_doubÀ
:

121 
vÆ
.
ty≥
 = 
ë_doubÀ
;

122 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

124 
sc_di°
:

125 
sc_sdi°
:

126 
	`Áèl
("stat distributionsÇotállowed in formulaÉxpressions");

128 
sc_f‹muœ
:

131 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

132 *
ídp
;

134 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

135 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

138 
vÆ
 = 
îr_vÆue
;

141 
	`evÆ_dñëe
(
es
);

145 
	`∑nic
("bogus stat class");

148  
vÆ
;

149 
	}
}

152 
°©_sdb_t
 *

153 
	$°©_√w
()

155 
°©_sdb_t
 *
sdb
;

157 
sdb
 = (
°©_sdb_t
 *)
	`ˇŒoc
(1, (stat_sdb_t));

158 i‡(!
sdb
)

159 
	`Áèl
("out of virtual memory");

161 
sdb
->
°©s
 = 
NULL
;

162 
sdb
->
evÆu©‹
 = 
	`evÆ_√w
(
°©_evÆ_idít
, sdb);

164  
sdb
;

165 
	}
}

169 
	$°©_dñëe
(
°©_sdb_t
 *
sdb
)

171 
i
;

172 
°©_°©_t
 *
°©
, *
°©_√xt
;

173 
buckë_t
 *
buckë
, *
buckë_√xt
;

176 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà
°©_√xt
)

178 
°©_√xt
 = 
°©
->
√xt
;

179 
°©
->
√xt
 = 
NULL
;

182 
°©
->
sc
)

184 
sc_öt
:

185 
sc_uöt
:

186 #ifde‡
HOST_HAS_QWORD


187 
sc_qw‹d
:

188 
sc_sqw‹d
:

190 
sc_Êﬂt
:

191 
sc_doubÀ
:

192 
sc_f‹muœ
:

195 
sc_di°
:

197 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_di°
.
¨r
);

198 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 = 
NULL
;

200 
sc_sdi°
:

202 
i
=0; i<
HTAB_SZ
; i++)

204 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

205 
buckë
 !
NULL
;

206 
buckë
 = 
buckë_√xt
)

208 
buckë_√xt
 = 
buckë
->
√xt
;

209 
buckë
->
√xt
 = 
NULL
;

210 
	`‰ì
(
buckë
);

212 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
] = 
NULL
;

215 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
);

216 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = 
NULL
;

219 
	`∑nic
("bogus stat class");

222 
	`‰ì
(
°©
);

224 
sdb
->
°©s
 = 
NULL
;

225 
	`evÆ_dñëe
(
sdb
->
evÆu©‹
);

226 
sdb
->
evÆu©‹
 = 
NULL
;

227 
	`‰ì
(
sdb
);

228 
	}
}

232 
	$add_°©
(
°©_sdb_t
 *
sdb
,

233 
°©_°©_t
 *
°©
)

235 
°©_°©_t
 *
ñt
, *
¥ev
;

238 
¥ev
=
NULL
, 
ñt
=
sdb
->
°©s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

242 i‡(
¥ev
 !
NULL
)

243 
¥ev
->
√xt
 = 
°©
;

245 
sdb
->
°©s
 = 
°©
;

246 
°©
->
√xt
 = 
NULL
;

247 
	}
}

250 
°©_°©_t
 *

251 
	$°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

252 *
«me
,

253 *
desc
,

254 *
v¨
,

255 
öô_vÆ
,

256 *
f‹m©
)

258 
°©_°©_t
 *
°©
;

260 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

261 i‡(!
°©
)

262 
	`Áèl
("out of virtual memory");

264 
°©
->
«me
 = 
	`my°rdup
(name);

265 
°©
->
desc
 = 
	`my°rdup
(desc);

266 
°©
->
f‹m©
 = format ? format : "%12d";

267 
°©
->
sc
 = 
sc_öt
;

268 
°©
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

269 
°©
->
v¨ü¡
.
f‹_öt
.
öô_vÆ
 = init_val;

272 
	`add_°©
(
sdb
, 
°©
);

275 *
v¨
 = 
öô_vÆ
;

277  
°©
;

278 
	}
}

281 
°©_°©_t
 *

282 
	$°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 *
v¨
,

286 
öô_vÆ
,

287 *
f‹m©
)

289 
°©_°©_t
 *
°©
;

291 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

292 i‡(!
°©
)

293 
	`Áèl
("out of virtual memory");

295 
°©
->
«me
 = 
	`my°rdup
(name);

296 
°©
->
desc
 = 
	`my°rdup
(desc);

297 
°©
->
f‹m©
 = format ? format : "%12u";

298 
°©
->
sc
 = 
sc_uöt
;

299 
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

300 
°©
->
v¨ü¡
.
f‹_uöt
.
öô_vÆ
 = init_val;

303 
	`add_°©
(
sdb
, 
°©
);

306 *
v¨
 = 
öô_vÆ
;

308  
°©
;

309 
	}
}

311 #ifde‡
HOST_HAS_QWORD


313 
°©_°©_t
 *

314 
	$°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

315 *
«me
,

316 *
desc
,

317 
qw‹d_t
 *
v¨
,

318 
qw‹d_t
 
öô_vÆ
,

319 *
f‹m©
)

321 
°©_°©_t
 *
°©
;

323 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

324 i‡(!
°©
)

325 
	`Áèl
("out of virtual memory");

327 
°©
->
«me
 = 
	`my°rdup
(name);

328 
°©
->
desc
 = 
	`my°rdup
(desc);

329 
°©
->
f‹m©
 = format ? format : "%12lu";

330 
°©
->
sc
 = 
sc_qw‹d
;

331 
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
 = var;

332 
°©
->
v¨ü¡
.
f‹_qw‹d
.
öô_vÆ
 = init_val;

335 
	`add_°©
(
sdb
, 
°©
);

338 *
v¨
 = 
öô_vÆ
;

340  
°©
;

341 
	}
}

344 
°©_°©_t
 *

345 
	$°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

346 *
«me
,

347 *
desc
,

348 
sqw‹d_t
 *
v¨
,

349 
sqw‹d_t
 
öô_vÆ
,

350 *
f‹m©
)

352 
°©_°©_t
 *
°©
;

354 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

355 i‡(!
°©
)

356 
	`Áèl
("out of virtual memory");

358 
°©
->
«me
 = 
	`my°rdup
(name);

359 
°©
->
desc
 = 
	`my°rdup
(desc);

360 
°©
->
f‹m©
 = format ? format : "%12ld";

361 
°©
->
sc
 = 
sc_sqw‹d
;

362 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
 = var;

363 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
öô_vÆ
 = init_val;

366 
	`add_°©
(
sdb
, 
°©
);

369 *
v¨
 = 
öô_vÆ
;

371  
°©
;

372 
	}
}

376 
°©_°©_t
 *

377 
	$°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

378 *
«me
,

379 *
desc
,

380 *
v¨
,

381 
öô_vÆ
,

382 *
f‹m©
)

384 
°©_°©_t
 *
°©
;

386 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

387 i‡(!
°©
)

388 
	`Áèl
("out of virtual memory");

390 
°©
->
«me
 = 
	`my°rdup
(name);

391 
°©
->
desc
 = 
	`my°rdup
(desc);

392 
°©
->
f‹m©
 = format ? format : "%12.4f";

393 
°©
->
sc
 = 
sc_Êﬂt
;

394 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

395 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
öô_vÆ
 = init_val;

398 
	`add_°©
(
sdb
, 
°©
);

401 *
v¨
 = 
öô_vÆ
;

403  
°©
;

404 
	}
}

407 
°©_°©_t
 *

408 
	$°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

409 *
«me
,

410 *
desc
,

411 *
v¨
,

412 
öô_vÆ
,

413 *
f‹m©
)

415 
°©_°©_t
 *
°©
;

417 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

418 i‡(!
°©
)

419 
	`Áèl
("out of virtual memory");

421 
°©
->
«me
 = 
	`my°rdup
(name);

422 
°©
->
desc
 = 
	`my°rdup
(desc);

423 
°©
->
f‹m©
 = format ? format : "%12.4f";

424 
°©
->
sc
 = 
sc_doubÀ
;

425 
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

426 
°©
->
v¨ü¡
.
f‹_doubÀ
.
öô_vÆ
 = init_val;

429 
	`add_°©
(
sdb
, 
°©
);

432 *
v¨
 = 
öô_vÆ
;

434  
°©
;

435 
	}
}

443 
°©_°©_t
 *

444 
	$°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

445 *
«me
,

446 *
desc
,

447 
öô_vÆ
,

448 
¨r_sz
,

449 
buckë_sz
,

450 
pf
,

451 *
f‹m©
,

452 **
im≠
,

453 
¥öt_‚_t
 
¥öt_‚
)

455 
i
;

456 
°©_°©_t
 *
°©
;

457 *
¨r
;

459 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

460 i‡(!
°©
)

461 
	`Áèl
("out of virtual memory");

463 
°©
->
«me
 = 
	`my°rdup
(name);

464 
°©
->
desc
 = 
	`my°rdup
(desc);

465 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

466 
°©
->
sc
 = 
sc_di°
;

467 
°©
->
v¨ü¡
.
f‹_di°
.
öô_vÆ
 = init_val;

468 
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
 =árr_sz;

469 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
 = bucket_sz;

470 
°©
->
v¨ü¡
.
f‹_di°
.
pf
 =Öf;

471 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
 = imap;

472 
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
 =Örint_fn;

473 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 = 0;

475 
¨r
 = (*)
	`ˇŒoc
(
¨r_sz
, ());

476 i‡(!
¨r
)

477 
	`Áèl
("out of virtual memory");

478 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 =árr;

481 
	`add_°©
(
sdb
, 
°©
);

484 
i
=0; i < 
¨r_sz
; i++)

485 
¨r
[
i
] = 
öô_vÆ
;

487  
°©
;

488 
	}
}

497 
°©_°©_t
 *

498 
	$°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

499 *
«me
,

500 *
desc
,

501 
öô_vÆ
,

502 
pf
,

503 *
f‹m©
,

504 
¥öt_‚_t
 
¥öt_‚
)

506 
°©_°©_t
 *
°©
;

507 
buckë_t
 **
ßº
;

509 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

510 i‡(!
°©
)

511 
	`Áèl
("out of virtual memory");

513 
°©
->
«me
 = 
	`my°rdup
(name);

514 
°©
->
desc
 = 
	`my°rdup
(desc);

515 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

516 
°©
->
sc
 = 
sc_sdi°
;

517 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
 = init_val;

518 
°©
->
v¨ü¡
.
f‹_sdi°
.
pf
 =Öf;

519 
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
 =Örint_fn;

522 
ßº
 = (
buckë_t
 **)
	`ˇŒoc
(
HTAB_SZ
, (bucket_t *));

523 i‡(!
ßº
)

524 
	`Áèl
("out of virtual memory");

525 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = sarr;

528 
	`add_°©
(
sdb
, 
°©
);

530  
°©
;

531 
	}
}

535 
	$°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

536 
md_addr_t
 
ödex
,

537 
nßm∂es
)

539 
°©
->
sc
)

541 
sc_di°
:

543 
i
;

546 
i
 = 
ödex
 / 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
;

549 i‡(
i
 >
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
)

550 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 +
nßm∂es
;

552 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] +
nßm∂es
;

555 
sc_sdi°
:

557 
buckë_t
 *
buckë
;

558 
hash
 = 
	`HTAB_HASH
(
ödex
);

560 i‡(
hash
 < 0 || hash >
HTAB_SZ
)

561 
	`∑nic
("hashÅable index overflow");

564 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

565 
buckë
 !
NULL
;

566 
buckë
 = buckë->
√xt
)

568 i‡(
buckë
->
ödex
 == index)

571 i‡(!
buckë
)

574 
buckë
 = (
buckë_t
 *)
	`ˇŒoc
(1, (bucket_t));

575 i‡(!
buckë
)

576 
	`Áèl
("out of virtual memory");

577 
buckë
->
√xt
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

578 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
] = 
buckë
;

579 
buckë
->
ödex
 = index;

580 
buckë
->
cou¡
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
;

582 
buckë
->
cou¡
 +
nßm∂es
;

586 
	`∑nic
("stat variable isÇotánárray distribution");

588 
	}
}

592 
	$°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

593 
md_addr_t
 
ödex
)

595 
	`°©_add_ßm∂es
(
°©
, 
ödex
, 1);

596 
	}
}

605 
°©_°©_t
 *

606 
	$°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

607 *
«me
,

608 *
desc
,

609 *
f‹muœ
,

610 *
f‹m©
)

612 
°©_°©_t
 *
°©
;

614 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

615 i‡(!
°©
)

616 
	`Áèl
("out of virtual memory");

618 
°©
->
«me
 = 
	`my°rdup
(name);

619 
°©
->
desc
 = 
	`my°rdup
(desc);

620 
°©
->
f‹m©
 = format ? format : "%12.4f";

621 
°©
->
sc
 = 
sc_f‹muœ
;

622 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
 = 
	`my°rdup
(formula);

625 
	`add_°©
(
sdb
, 
°©
);

627  
°©
;

628 
	}
}

633 
	$com∑ª_‚
(*
p1
, *
p2
)

635 
buckë_t
 **
pb1
 = 
p1
, **
pb2
 = 
p2
;

638 i‡((*
pb1
)->
ödex
 < (*
pb2
)->index)

640 i‡((*
pb1
)->
ödex
 > (*
pb2
)->index)

644 
	}
}

648 
	$¥öt_di°
(
°©_°©_t
 *
°©
,

649 
FILE
 *
fd
)

651 
i
, 
bcou¡
, 
imax
, 
imö
;

652 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

653 
pf
 = 
°©
->
v¨ü¡
.
f‹_di°
.pf;

656 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

657 
imax
 = 0; 
imö
 = 
UINT_MAX
;

658 
i
=0; i<
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
; i++)

660 
bcou¡
++;

661 
btŸÆ
 +
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

663 
bsqsum
 +(()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] *

664 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

665 
bavg
 = 
btŸÆ
 / 
	`MAX
(()
bcou¡
, 1.0);

666 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

667 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

671 
	`Ârötf
(
fd
, "\n");

672 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

673 
	`Ârötf
(
fd
, "%s.array_size = %u\n",

674 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
¨r_sz
);

675 
	`Ârötf
(
fd
, "%s.bucket_size = %u\n",

676 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

678 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

679 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

680 i‡(
bcou¡
 > 0)

682 
	`Ârötf
(
fd
, "%s.imö = %u\n", 
°©
->
«me
, 0U);

683 
	`Ârötf
(
fd
, "%s.imax = %u\n", 
°©
->
«me
, 
bcou¡
);

687 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

688 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

690 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
	`MAX
(
bcou¡
, 1.0));

691 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

692 
	`Ârötf
(
fd
, "%s.overflows = %u\n",

693 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
ovîÊows
);

695 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

696 
	`Ârötf
(
fd
, "# %14s ", "index");

697 i‡(
pf
 & 
PF_COUNT
)

698 
	`Ârötf
(
fd
, "%10s ", "count");

699 i‡(
pf
 & 
PF_PDF
)

700 
	`Ârötf
(
fd
, "%6s ", "pdf");

701 i‡(
pf
 & 
PF_CDF
)

702 
	`Ârötf
(
fd
, "%6s ", "cdf");

703 
	`Ârötf
(
fd
, "\n");

705 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

707 i‡(
bcou¡
 > 0)

710 
bsum
 = 0.0;

711 
i
=0; i<
bcou¡
; i++)

713 
bsum
 +()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

714 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
)

716 
°©
->
v¨ü¡
.
f‹_di°
.
	`¥öt_‚
(stat,

717 
i
,

718 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

719 
bsum
,

720 
btŸÆ
);

724 i‡(
°©
->
f‹m©
 =
NULL
)

726 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

727 
	`Ârötf
(
fd
, "%-16†", 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
]);

729 
	`Ârötf
(
fd
, "%16u ",

730 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

731 i‡(
pf
 & 
PF_COUNT
)

732 
	`Ârötf
(
fd
, "%10u ", 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

733 i‡(
pf
 & 
PF_PDF
)

734 
	`Ârötf
(
fd
, "%6.2f ",

735 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

736 
	`MAX
(
btŸÆ
, 1.0) * 100.0);

737 i‡(
pf
 & 
PF_CDF
)

738 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

742 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

744 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

745 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

746 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
],

747 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

748 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

749 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

750 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

752 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

753 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
,

754 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

755 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

756 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

757 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

760 
	`Áèl
("distribution formatÇot yet implemented");

762 
	`Ârötf
(
fd
, "\n");

767 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

768 
	}
}

772 
	$¥öt_sdi°
(
°©_°©_t
 *
°©
,

773 
FILE
 *
fd
)

775 
i
, 
bcou¡
;

776 
md_addr_t
 
imax
, 
imö
;

777 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

778 
buckë_t
 *
buckë
;

779 
pf
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.pf;

782 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

783 
imax
 = 0; 
imö
 = 
UINT_MAX
;

784 
i
=0; i<
HTAB_SZ
; i++)

786 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

787 
buckë
 !
NULL
;

788 
buckë
 = buckë->
√xt
)

790 
bcou¡
++;

791 
btŸÆ
 +
buckë
->
cou¡
;

793 
bsqsum
 +(()
buckë
->
cou¡
 * ()bucket->count);

794 
bavg
 = 
btŸÆ
 / ()
bcou¡
;

795 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

796 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

797 i‡(
buckë
->
ödex
 < 
imö
)

798 
imö
 = 
buckë
->
ödex
;

799 i‡(
buckë
->
ödex
 > 
imax
)

800 
imax
 = 
buckë
->
ödex
;

805 
	`Ârötf
(
fd
, "\n");

806 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

807 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

808 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

809 i‡(
bcou¡
 > 0)

811 
	`myÂrötf
(
fd
, "%s.imö = 0x%p\n", 
°©
->
«me
, 
imö
);

812 
	`myÂrötf
(
fd
, "%s.imax = 0x%p\n", 
°©
->
«me
, 
imax
);

816 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

817 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

819 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
bcou¡
);

820 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

821 
	`Ârötf
(
fd
, "%s.ovîÊow†0\n", 
°©
->
«me
);

823 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

824 
	`Ârötf
(
fd
, "# %14s ", "index");

825 i‡(
pf
 & 
PF_COUNT
)

826 
	`Ârötf
(
fd
, "%10s ", "count");

827 i‡(
pf
 & 
PF_PDF
)

828 
	`Ârötf
(
fd
, "%6s ", "pdf");

829 i‡(
pf
 & 
PF_CDF
)

830 
	`Ârötf
(
fd
, "%6s ", "cdf");

831 
	`Ârötf
(
fd
, "\n");

833 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

835 i‡(
bcou¡
 > 0)

837 
bödex
;

838 
buckë_t
 **
b¨r
;

841 
b¨r
 = (
buckë_t
 **)
	`ˇŒoc
(
bcou¡
, (bucket_t *));

842 i‡(!
b¨r
)

843 
	`Áèl
("out of virtual memory");

844 
bödex
=0,
i
=0; i<
HTAB_SZ
; i++)

846 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

847 
buckë
 !
NULL
;

848 
buckë
 = buckë->
√xt
)

850 
b¨r
[
bödex
++] = 
buckë
;

855 
	`qs‹t
(
b¨r
, 
bcou¡
, (
buckë_t
 *), (*)
com∑ª_‚
);

858 
bsum
 = 0.0;

859 
i
=0; i<
bcou¡
; i++)

861 
bsum
 +()
b¨r
[
i
]->
cou¡
;

862 i‡(
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
)

864 
°©
->
v¨ü¡
.
f‹_sdi°
.
	`¥öt_‚
(stat,

865 
b¨r
[
i
]->
ödex
,

866 
b¨r
[
i
]->
cou¡
,

867 
bsum
,

868 
btŸÆ
);

872 i‡(
°©
->
f‹m©
 =
NULL
)

874 
	`myÂrötf
(
fd
, "0x%∞", 
b¨r
[
i
]->
ödex
);

875 i‡(
pf
 & 
PF_COUNT
)

876 
	`Ârötf
(
fd
, "%10u ", 
b¨r
[
i
]->
cou¡
);

877 i‡(
pf
 & 
PF_PDF
)

878 
	`Ârötf
(
fd
, "%6.2f ",

879 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

880 i‡(
pf
 & 
PF_CDF
)

881 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

885 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

887 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

888 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

889 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0,

890 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

892 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
))

894 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

895 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

896 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0);

898 i‡(
pf
 =
PF_COUNT
)

900 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

901 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
);

904 
	`Áèl
("distribution formatÇot yet implemented");

906 
	`Ârötf
(
fd
, "\n");

911 
	`‰ì
(
b¨r
);

914 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

915 
	}
}

919 
	$°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

920 
°©_°©_t
 *
°©
,

921 
FILE
 *
fd
)

923 
evÆ_vÆue_t
 
vÆ
;

925 
°©
->
sc
)

927 
sc_öt
:

928 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

929 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_öt
.
v¨
);

930 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

932 
sc_uöt
:

933 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

934 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_uöt
.
v¨
);

935 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

937 #ifde‡
HOST_HAS_QWORD


938 
sc_qw‹d
:

940 
buf
[128];

942 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

943 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_qw‹d
.
v¨
);

944 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

947 
sc_sqw‹d
:

949 
buf
[128];

951 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

952 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_sqw‹d
.
v¨
);

953 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

957 
sc_Êﬂt
:

958 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

959 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, ()*°©->
v¨ü¡
.
f‹_Êﬂt
.
v¨
);

960 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

962 
sc_doubÀ
:

963 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

964 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_doubÀ
.
v¨
);

965 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

967 
sc_di°
:

968 
	`¥öt_di°
(
°©
, 
fd
);

970 
sc_sdi°
:

971 
	`¥öt_sdi°
(
°©
, 
fd
);

973 
sc_f‹muœ
:

976 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

977 *
ídp
;

979 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

980 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

981 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

982 
	`Ârötf
(
fd
, "<îr‹: %s>", 
evÆ_îr_°r
[
evÆ_îr‹
]);

984 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, 
	`evÆ_as_doubÀ
(
vÆ
));

985 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

988 
	`evÆ_dñëe
(
es
);

992 
	`∑nic
("bogus stat class");

994 
	`Ârötf
(
fd
, "\n");

995 
	}
}

999 
	$°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

1000 
FILE
 *
fd
)

1002 
°©_°©_t
 *
°©
;

1004 i‡(!
sdb
)

1010 
°©
=
sdb
->
°©s
; sèà!
NULL
; sèt=°©->
√xt
)

1011 
	`°©_¥öt_°©
(
sdb
, 
°©
, 
fd
);

1012 
	}
}

1015 
°©_°©_t
 *

1016 
	$°©_föd_°©
(
°©_sdb_t
 *
sdb
,

1017 *
°©_«me
)

1019 
°©_°©_t
 *
°©
;

1021 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

1023 i‡(!
	`°rcmp
(
°©
->
«me
, 
°©_«me
))

1026  
°©
;

1027 
	}
}

	@stats.h

52 #i‚de‡
STAT_H


53 
	#STAT_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"machöe.h
"

59 
	~"evÆ.h
"

73 
	e°©_˛ass_t
 {

74 
	msc_öt
 = 0,

75 
	msc_uöt
,

76 #ifde‡
HOST_HAS_QWORD


77 
	msc_qw‹d
,

78 
	msc_sqw‹d
,

80 
	msc_Êﬂt
,

81 
	msc_doubÀ
,

82 
	msc_di°
,

83 
	msc_sdi°
,

84 
	msc_f‹muœ
,

85 
	msc_NUM


89 
	#HTAB_SZ
 1024

	)

90 
	#HTAB_HASH
(
I
Ë((((IË>> 8Ë^ (I)Ë& (
HTAB_SZ
 - 1))

	)

93 
	sbuckë_t
 {

94 
buckë_t
 *
	m√xt
;

95 
md_addr_t
 
	mödex
;

96 
	mcou¡
;

100 
	g°©_°©_t
;

103 
	#PF_COUNT
 0x0001

	)

104 
	#PF_PDF
 0x0002

	)

105 
	#PF_CDF
 0x0004

	)

106 
	#PF_ALL
 (
PF_COUNT
|
PF_PDF
|
PF_CDF
)

	)

112 (*
	t¥öt_‚_t
)(
	t°©_°©_t
 *
	t°©
,

113 
	tmd_addr_t
 
	tödex
,

114 
	tcou¡
,

115 
	tsum
,

116 
	ttŸÆ
);

119 
	s°©_°©_t
 {

120 
°©_°©_t
 *
	m√xt
;

121 *
	m«me
;

122 *
	mdesc
;

123 *
	mf‹m©
;

124 
°©_˛ass_t
 
	msc
;

125 
	u°©_v¨ü¡_t
 {

127 
	s°©_f‹_öt_t
 {

128 *
	mv¨
;

129 
	möô_vÆ
;

130 } 
	mf‹_öt
;

132 
	s°©_f‹_uöt_t
 {

133 *
	mv¨
;

134 
	möô_vÆ
;

135 } 
	mf‹_uöt
;

136 #ifde‡
HOST_HAS_QWORD


138 
	s°©_f‹_qw‹d_t
 {

139 
qw‹d_t
 *
	mv¨
;

140 
qw‹d_t
 
	möô_vÆ
;

141 } 
	mf‹_qw‹d
;

143 
	s°©_f‹_sqw‹d_t
 {

144 
sqw‹d_t
 *
	mv¨
;

145 
sqw‹d_t
 
	möô_vÆ
;

146 } 
	mf‹_sqw‹d
;

149 
	s°©_f‹_Êﬂt_t
 {

150 *
	mv¨
;

151 
	möô_vÆ
;

152 } 
	mf‹_Êﬂt
;

154 
	s°©_f‹_doubÀ_t
 {

155 *
	mv¨
;

156 
	möô_vÆ
;

157 } 
	mf‹_doubÀ
;

159 
	s°©_f‹_di°_t
 {

160 
	möô_vÆ
;

161 *
	m¨r
;

162 
	m¨r_sz
;

163 
	mbuckë_sz
;

164 
	mpf
;

165 **
	mim≠
;

166 
¥öt_‚_t
 
	m¥öt_‚
;

167 
	movîÊows
;

168 } 
	mf‹_di°
;

170 
	s°©_f‹_sdi°_t
 {

171 
	möô_vÆ
;

172 
buckë_t
 **
	mßº
;

173 
	mpf
;

174 
¥öt_‚_t
 
	m¥öt_‚
;

175 } 
	mf‹_sdi°
;

177 
	s°©_f‹_f‹muœ_t
 {

178 *
	mf‹muœ
;

179 } 
	mf‹_f‹muœ
;

180 } 
	mv¨ü¡
;

184 
	s°©_sdb_t
 {

185 
°©_°©_t
 *
	m°©s
;

186 
evÆ_°©e_t
 *
	mevÆu©‹
;

190 
evÆ_vÆue_t


191 
°©_evÆ_idít
(
evÆ_°©e_t
 *
es
);

194 
°©_sdb_t
 *
°©_√w
();

198 
°©_dñëe
(
°©_sdb_t
 *
sdb
);

201 
°©_°©_t
 *

202 
°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

203 *
«me
,

204 *
desc
,

205 *
v¨
,

206 
öô_vÆ
,

207 *
f‹m©
);

210 
°©_°©_t
 *

211 
°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

212 *
«me
,

213 *
desc
,

214 *
v¨
,

215 
öô_vÆ
,

216 *
f‹m©
);

218 #ifde‡
HOST_HAS_QWORD


220 
°©_°©_t
 *

221 
°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

222 *
«me
,

223 *
desc
,

224 
qw‹d_t
 *
v¨
,

225 
qw‹d_t
 
öô_vÆ
,

226 *
f‹m©
);

229 
°©_°©_t
 *

230 
°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

231 *
«me
,

232 *
desc
,

233 
sqw‹d_t
 *
v¨
,

234 
sqw‹d_t
 
öô_vÆ
,

235 *
f‹m©
);

239 
°©_°©_t
 *

240 
°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

241 *
«me
,

242 *
desc
,

243 *
v¨
,

244 
öô_vÆ
,

245 *
f‹m©
);

248 
°©_°©_t
 *

249 
°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

250 *
«me
,

251 *
desc
,

252 *
v¨
,

253 
öô_vÆ
,

254 *
f‹m©
);

262 
°©_°©_t
 *

263 
°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

264 *
«me
,

265 *
desc
,

266 
öô_vÆ
,

267 
¨r_sz
,

268 
buckë_sz
,

269 
pf
,

270 *
f‹m©
,

271 **
im≠
,

272 
¥öt_‚_t
 
¥öt_‚
);

281 
°©_°©_t
 *

282 
°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 
öô_vÆ
,

286 
pf
,

287 *
f‹m©
,

288 
¥öt_‚_t
 
¥öt_‚
);

292 
°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

293 
md_addr_t
 
ödex
,

294 
nßm∂es
);

298 
°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

299 
md_addr_t
 
ödex
);

308 
°©_°©_t
 *

309 
°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

310 *
«me
,

311 *
desc
,

312 *
f‹muœ
,

313 *
f‹m©
);

317 
°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

318 
°©_°©_t
 *
°©
,

319 
FILE
 *
fd
);

323 
°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

324 
FILE
 *
fd
);

328 
°©_°©_t
 *

329 
°©_föd_°©
(
°©_sdb_t
 *
sdb
,

330 *
°©_«me
);

	@symbol.h

52 #i‚de‡
SYMBOL_H


53 
	#SYMBOL_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	esym_£g_t
 {

62 
	mss_d©a
,

63 
	mss_ãxt
,

64 
	mss_NUM


68 
	ssym_sym_t
 {

69 *
	m«me
;

70 
sym_£g_t
 
	m£g
;

71 
	möôülized
;

72 
	mpub
;

73 
	mloˇl
;

74 
md_addr_t
 
	maddr
;

75 
	msize
;

79 
sym_sym_t
 *
sym_db
;

82 
sym_nsyms
;

83 
sym_sym_t
 **
sym_syms
;

86 
sym_sym_t
 **
sym_syms_by_«me
;

89 
sym_¡extsyms
;

90 
sym_sym_t
 **
sym_ãxtsyms
;

93 
sym_sym_t
 **
sym_ãxtsyms_by_«me
;

96 
sym_nd©asyms
;

97 
sym_sym_t
 **
sym_d©asyms
;

100 
sym_sym_t
 **
sym_d©asyms_by_«me
;

104 
sym_lﬂdsyms
(*
‚ame
,

105 
lﬂd_loˇls
);

109 
sym_dumpsym
(
sym_sym_t
 *
sym
,

110 
FILE
 *
fd
);

114 
sym_dumpsyms
(
FILE
 *
fd
);

118 
sym_dump°©e
(
FILE
 *
fd
);

121 
	esym_db_t
 {

122 
	msdb_™y
,

123 
	msdb_ãxt
,

124 
	msdb_d©a
,

125 
	msdb_NUM


132 
sym_sym_t
 *

133 
sym_böd_addr
(
md_addr_t
 
addr
,

134 *
pödex
,

135 
exa˘
,

136 
sym_db_t
 
db
);

141 
sym_sym_t
 *

142 
sym_böd_«me
(*
«me
,

143 *
pödex
,

144 
sym_db_t
 
db
);

	@syscall.h

52 #i‚de‡
SYSCALL_H


53 
	#SYSCALL_H


	)

55 
	~<sys/ty≥s.h
>

56 #ifde‡
_MSC_VER


57 
	~<time.h
>

59 
	~<sys/time.h
>

62 
	~"ho°.h
"

63 
	~"misc.h
"

64 
	~"machöe.h
"

98 
sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

99 
mem_ac˚ss_‚
 
mem_‚
,

100 
mem_t
 *
mem
,

101 
md_ö°_t
 
ö°
,

102 
åa˚abÀ
);

	@sysprobe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#ac˚ss
 
_ac˚ss


	)

58 
	#X_OK
 4

	)

61 
	~"ho°.h
"

62 
	~"misc.h
"

64 *
	ggzù_∑ths
[] =

72 
NULL


75 
	#HOST_ONLY


	)

76 
	~"ídün.c
"

78 
	#CAT
(
a
,
b
Ë®
	)
b

80 
	#MSB
 0x80000000

	)

82 
	$Á°_SRL
()

84 
w‹d_t
 
ui
;

86 i‡((
ui
) != 4)

89  
FALSE
;

92 
ui
 = (
w‹d_t
)
MSB
;

93 i‡(((
ui
 >> 1Ë& 
MSB
) != 0)

96  
FALSE
;

101  
TRUE
;

103 
	}
}

106 
	$Á°_SRA
()

108 
sw‹d_t
 
si
;

110 i‡((
si
) != 4)

113  
FALSE
;

116 
si
 = (
sw‹d_t
)
MSB
;

117 i‡((
si
 >> 1Ë& 
MSB
)

120  
TRUE
;

125  
FALSE
;

127 
	}
}

130 
	$maö
(
¨gc
, **
¨gv
)

132 
lôée_byãs
 = 0, 
lôée_w‹ds
 = 0;

134 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-s"))

136 
	`ídün_ho°_byã_‹dî
())

138 
ídün_big
:

139 
	`Ârötf
(
°dout
, "big\n");

141 
ídün_lôée
:

142 
	`Ârötf
(
°dout
, "little\n");

144 
ídün_unknown
:

145 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

146 
	`exô
(1);

148 
	`ab‹t
();

151 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-libs"))

153 #ifde‡
BFD_LOADER


154 
	`Ârötf
(
°dout
, "-lbfd -liberty ");

157 #ifde‡
löux


159 #ñi‡
	`deföed
(
__USLC__
Ë|| (deföed(
__svr4__
Ë&& deföed(
__i386__
Ë&& deföed(
__unix__
))

160 
	`Ârötf
(
°dout
, "-L/usr/ucblib -lucb ");

164 
	`Ârötf
(
°dout
, " \n");

166 i‡(
¨gc
 =1 || (¨g¯=2 && !
	`°rcmp
(
¨gv
[1], "-flags")))

168 
	`ídün_ho°_byã_‹dî
())

170 
ídün_big
:

171 
	`Ârötf
(
°dout
, "-DBYTES_BIG_ENDIAN ");

173 
ídün_lôée
:

174 
	`Ârötf
(
°dout
, "-DBYTES_LITTLE_ENDIAN ");

175 
lôée_byãs
 = 1;

177 
ídün_unknown
:

178 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

179 
	`exô
(1);

181 
	`ab‹t
();

184 
	`ídün_ho°_w‹d_‹dî
())

186 
ídün_big
:

187 
	`Ârötf
(
°dout
, "-DWORDS_BIG_ENDIAN ");

189 
ídün_lôée
:

190 
	`Ârötf
(
°dout
, "-DWORDS_LITTLE_ENDIAN ");

191 
lôée_w‹ds
 = 1;

193 
ídün_unknown
:

194 
	`Ârötf
(
°dîr
, "\nerror: cannot determine word order!\n");

195 
	`exô
(1);

197 
	`ab‹t
();

200 #ifde‡
_AIX


201 
	`Ârötf
(
°dout
, "-D_ALL_SOURCE ");

204 #i‡(
	`deföed
(
hpux
Ë|| deföed(
__hpux
)Ë&& !deföed(
__GNUC__
)

205 
	`Ârötf
(
°dout
, "-D_INCLUDE_HPUX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE ");

208 #i‚de‡
__GNUC__


212 
i
 = 5, 
j
;

214 
j
 = 
	`CAT
(-,-
i
);

216 i‡(
j
 == 4)

219 
	`Ârötf
(
°dout
, "-DOLD_SYMCAT ");

221 i‡(
j
 == 5)

230 
	`Ârötf
(
°dîr
, "\nerror: cannot grok symbol concat method!\n");

231 
	`exô
(1);

236 #i‚de‡
SLOW_SHIFTS


238 i‡(
	`Á°_SRL
())

239 
	`Ârötf
(
°dout
, "-DFAST_SRL ");

240 i‡(
	`Á°_SRA
())

241 
	`Ârötf
(
°dout
, "-DFAST_SRA ");

245 #i‚de‡
GZIP_PATH


247 
i
;

249 
i
=0; 
gzù_∑ths
[i] !
NULL
; i++)

251 i‡(
	`ac˚ss
(
gzù_∑ths
[
i
], 
X_OK
) == 0)

253 
	`Ârötf
(
°dout
, "-DGZIP_PATH=\"%s\" ", 
gzù_∑ths
[
i
]);

261 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-t"))

263 
	`Ârötf
(
°dout
, "sizeof(int) = %d\n", ());

264 
	`Ârötf
(
°dout
, "sizeof(long) = %d\n", ());

269 i‡(
lôée_byãs
 !
lôée_w‹ds
)

271 
	`Ârötf
(
°dîr
,

273 
	`exô
(1);

275 
	`exô
(0);

277 
	}
}

	@target-alpha-linux/alpha.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

63 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

64 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

69 #i‡!
deföed
(
HOST_HAS_QWORD
)

70 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

71 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

75 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

78 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

79 
	gmd_›off£t
[
OP_MAX
];

82 
	gmd_›mask
[
OP_MAX
] = {

84 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

85 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

86 
	#CONNECT
(
OP
)

	)

87 
	~"machöe.def
"

91 
	gmd_›shi·
[
OP_MAX
] = {

93 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

94 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

95 
	#CONNECT
(
OP
)

	)

96 
	~"machöe.def
"

100 *
	gmd_›2«me
[
OP_MAX
] = {

101 
NULL
,

102 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

103 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

104 
	#CONNECT
(
OP
)

	)

105 
	~"machöe.def
"

109 *
	gmd_›2f‹m©
[
OP_MAX
] = {

110 
NULL
,

111 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

112 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

113 
	#CONNECT
(
OP
)

	)

114 
	~"machöe.def
"

118 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

119 
FUCœss_NA
,

120 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

121 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

122 
	#CONNECT
(
OP
)

	)

123 
	~"machöe.def
"

127 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

128 
NULL
,

142 *
	gmd_amode_°r
[
md_amode_NUM
] =

153 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

158 { "$r0", 
π_g¥
, 0 },

159 { "$v0", 
π_g¥
, 0 },

160 { "$r1", 
π_g¥
, 1 },

161 { "$r2", 
π_g¥
, 2 },

162 { "$r3", 
π_g¥
, 3 },

163 { "$r4", 
π_g¥
, 4 },

164 { "$r5", 
π_g¥
, 5 },

165 { "$r6", 
π_g¥
, 6 },

166 { "$r7", 
π_g¥
, 7 },

167 { "$îr", 
π_g¥
, 7 },

168 { "$r8", 
π_g¥
, 8 },

169 { "$r9", 
π_g¥
, 9 },

170 { "$r10", 
π_g¥
, 10 },

171 { "$r11", 
π_g¥
, 11 },

172 { "$r12", 
π_g¥
, 12 },

173 { "$r13", 
π_g¥
, 13 },

174 { "$r14", 
π_g¥
, 14 },

175 { "$r15", 
π_g¥
, 15 },

176 { "$Â", 
π_g¥
, 15 },

177 { "$r16", 
π_g¥
, 16 },

178 { "$a0", 
π_g¥
, 16 },

179 { "$r17", 
π_g¥
, 17 },

180 { "$a1", 
π_g¥
, 17 },

181 { "$r18", 
π_g¥
, 18 },

182 { "$a2", 
π_g¥
, 18 },

183 { "$r19", 
π_g¥
, 19 },

184 { "$a3", 
π_g¥
, 19 },

185 { "$r20", 
π_g¥
, 20 },

186 { "$a4", 
π_g¥
, 20 },

187 { "$r21", 
π_g¥
, 21 },

188 { "$a5", 
π_g¥
, 21 },

189 { "$r22", 
π_g¥
, 22 },

190 { "$r23", 
π_g¥
, 23 },

191 { "$r24", 
π_g¥
, 24 },

192 { "$r25", 
π_g¥
, 25 },

193 { "$r26", 
π_g¥
, 26 },

194 { "$ø", 
π_g¥
, 26 },

195 { "$r27", 
π_g¥
, 27 },

196 { "$r28", 
π_g¥
, 28 },

197 { "$r29", 
π_g¥
, 29 },

198 { "$gp", 
π_g¥
, 29 },

199 { "$r30", 
π_g¥
, 30 },

200 { "$•", 
π_g¥
, 30 },

201 { "$r31", 
π_g¥
, 31 },

202 { "$zîo", 
π_g¥
, 31 },

205 { "$f0", 
π_Âr
, 0 },

206 { "$f1", 
π_Âr
, 1 },

207 { "$f2", 
π_Âr
, 2 },

208 { "$f3", 
π_Âr
, 3 },

209 { "$f4", 
π_Âr
, 4 },

210 { "$f5", 
π_Âr
, 5 },

211 { "$f6", 
π_Âr
, 6 },

212 { "$f7", 
π_Âr
, 7 },

213 { "$f8", 
π_Âr
, 8 },

214 { "$f9", 
π_Âr
, 9 },

215 { "$f10", 
π_Âr
, 10 },

216 { "$f11", 
π_Âr
, 11 },

217 { "$f12", 
π_Âr
, 12 },

218 { "$f13", 
π_Âr
, 13 },

219 { "$f14", 
π_Âr
, 14 },

220 { "$f15", 
π_Âr
, 15 },

221 { "$f16", 
π_Âr
, 16 },

222 { "$f17", 
π_Âr
, 17 },

223 { "$f18", 
π_Âr
, 18 },

224 { "$f19", 
π_Âr
, 19 },

225 { "$f20", 
π_Âr
, 20 },

226 { "$f21", 
π_Âr
, 21 },

227 { "$f22", 
π_Âr
, 22 },

228 { "$f23", 
π_Âr
, 23 },

229 { "$f24", 
π_Âr
, 24 },

230 { "$f25", 
π_Âr
, 25 },

231 { "$f26", 
π_Âr
, 26 },

232 { "$f27", 
π_Âr
, 27 },

233 { "$f28", 
π_Âr
, 28 },

234 { "$f29", 
π_Âr
, 29 },

235 { "$f30", 
π_Âr
, 30 },

236 { "$f31", 
π_Âr
, 31 },

239 { "$l0", 
π_Õr
, 0 },

240 { "$l1", 
π_Õr
, 1 },

241 { "$l2", 
π_Õr
, 2 },

242 { "$l3", 
π_Õr
, 3 },

243 { "$l4", 
π_Õr
, 4 },

244 { "$l5", 
π_Õr
, 5 },

245 { "$l6", 
π_Õr
, 6 },

246 { "$l7", 
π_Õr
, 7 },

247 { "$l8", 
π_Õr
, 8 },

248 { "$l9", 
π_Õr
, 9 },

249 { "$l10", 
π_Õr
, 10 },

250 { "$l11", 
π_Õr
, 11 },

251 { "$l12", 
π_Õr
, 12 },

252 { "$l13", 
π_Õr
, 13 },

253 { "$l14", 
π_Õr
, 14 },

254 { "$l15", 
π_Õr
, 15 },

255 { "$l16", 
π_Õr
, 16 },

256 { "$l17", 
π_Õr
, 17 },

257 { "$l18", 
π_Õr
, 18 },

258 { "$l19", 
π_Õr
, 19 },

259 { "$l20", 
π_Õr
, 20 },

260 { "$l21", 
π_Õr
, 21 },

261 { "$l22", 
π_Õr
, 22 },

262 { "$l23", 
π_Õr
, 23 },

263 { "$l24", 
π_Õr
, 24 },

264 { "$l25", 
π_Õr
, 25 },

265 { "$l26", 
π_Õr
, 26 },

266 { "$l27", 
π_Õr
, 27 },

267 { "$l28", 
π_Õr
, 28 },

268 { "$l29", 
π_Õr
, 29 },

269 { "$l30", 
π_Õr
, 30 },

270 { "$l31", 
π_Õr
, 31 },

273 { "$Â¸", 
π_˘æ
, 0 },

274 { "$uniq", 
π_˘æ
, 1 },

277 { "$pc", 
π_PC
, 0 },

278 { "$≈c", 
π_NPC
, 0 },

281 { 
NULL
, 
π_g¥
, 0 }

286 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

288 
i
;

290 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

292 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

293  
md_ªg_«mes
[
i
].
°r
;

297  
NULL
;

298 
	}
}

301 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

302 
is_wrôe
,

303 
md_ªg_ty≥
 
π
,

304 
ªg
,

305 
evÆ_vÆue_t
 *
vÆ
)

307 
π
)

309 
π_g¥
:

310 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

313 i‡(!
is_wrôe
)

315 
vÆ
->
ty≥
 = 
ë_qw‹d
;

316 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

319 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

322 
π_Õr
:

323 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

326 i‡(!
is_wrôe
)

328 
vÆ
->
ty≥
 = 
ë_qw‹d
;

329 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

332 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

335 
π_Âr
:

336 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

339 i‡(!
is_wrôe
)

341 
vÆ
->
ty≥
 = 
ë_doubÀ
;

342 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

345 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

348 
π_˘æ
:

349 
ªg
)

352 i‡(!
is_wrôe
)

354 
vÆ
->
ty≥
 = 
ë_qw‹d
;

355 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

358 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

362 i‡(!
is_wrôe
)

364 
vÆ
->
ty≥
 = 
ë_qw‹d
;

365 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

368 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

376 
π_PC
:

377 i‡(!
is_wrôe
)

379 
vÆ
->
ty≥
 = 
ë_addr
;

380 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

383 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

386 
π_NPC
:

387 i‡(!
is_wrôe
)

389 
vÆ
->
ty≥
 = 
ë_addr
;

390 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

393 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

397 
	`∑nic
("bogusÑegister bank");

401  
NULL
;

402 
	}
}

406 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

408 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

409 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

410 
	}
}

413 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

415 
i
;

417 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

419 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

420 
	`Ârötf
(
°ªam
, " ");

421 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

422 
	`Ârötf
(
°ªam
, "\n");

424 
	}
}

428 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

430 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

431 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

432 
	}
}

435 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

437 
i
;

440 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

442 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

443 
	`Ârötf
(
°ªam
, "\n");

445 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

446 
	`Ârötf
(
°ªam
, "\n");

448 
	}
}

451 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

454 
ªg
)

457 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

461 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

465 
	`∑nic
("bogus controlÑegister index");

467 
	}
}

470 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

472 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

473 
	`Ârötf
(
°ªam
, " ");

474 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

476 
	}
}

479 
w‹d_t


480 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

482 
i
;

483 
qw‹d_t
 
checksum
 = 0;

485 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

486 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

488 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

489 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

491 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

492 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

493 
checksum
 ^
ªgs
->
ªgs_PC
;

494 
checksum
 ^
ªgs
->
ªgs_NPC
;

496  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

497 
	}
}

501 
	gmd_›2Êags
[
OP_MAX
] = {

502 
NA
,

503 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

504 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

505 
	#CONNECT
(
OP
)

	)

506 
	~"machöe.def
"

512 
	$md_öô_decodî
()

514 
max_off£t
 = 0;

515 
off£t
 = 0;

517 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

518 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

519 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

520 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

521 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

522 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

524 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

525 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

526 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

527 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

528 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

529 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

531 
	#CONNECT
(
OP
) \

532 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = off£t;

	)

534 
	~"machöe.def
"

536 i‡(
max_off£t
 >
MD_MAX_MASK
)

537 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

538 
	}
}

542 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

543 
md_addr_t
 
pc
,

544 
FILE
 *
°ªam
)

546 
md_›code
 
›
;

549 i‡(!
°ªam
)

550 
°ªam
 = 
°dîr
;

553 
	`MD_SET_OPCODE
(
›
, 
ö°
);

556 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

559 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

563 *
s
;

566 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

568 
s
 = 
	`MD_OP_FORMAT
(
›
);

569 *
s
) {

570 *
s
) {

572 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

575 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

578 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

581 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

584 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

587 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

590 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

593 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

596 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

599 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

603 
	`Âutc
(*
s
, 
°ªam
);

605 
s
++;

608 
	}
}

	@target-alpha-linux/alpha.h

52 #i‚de‡
ALPHA_H


53 
	#ALPHA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

69 
	#TARGET_ALPHA


	)

72 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

73 
	#MD_CROSS_ENDIAN


	)

77 
	#NA
 0

	)

84 
	#MD_QWORD_ADDRS


	)

87 
qw‹d_t
 
	tmd_addr_t
;

95 
	#MD_PAGE_SIZE
 8192

	)

96 
	#MD_LOG_PAGE_SIZE
 13

	)

103 
	emd_Áu…_ty≥
 {

104 
	mmd_Áu…_n⁄e
 = 0,

105 
	mmd_Áu…_ac˚ss
,

106 
	mmd_Áu…_Æignmít
,

107 
	mmd_Áu…_ovîÊow
,

108 
	mmd_Áu…_div0
,

109 
	mmd_Áu…_övÆid
,

111 
	mmd_Áu…_bªak
,

112 
	mmd_Áu…_unim∂
,

113 
	mmd_Áu…_öã∫Æ


122 
	#MD_NUM_IREGS
 32

	)

125 
	#MD_NUM_FREGS
 32

	)

128 
	#MD_NUM_CREGS
 2

	)

131 
	#MD_TOTAL_REGS
 \

132 –32 + 32 + 2 + 1 + 1 + 1)

	)

135 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

139 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

140 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

141 } 
	tmd_Âr_t
;

145 
qw‹d_t
 
	mÂ¸
;

146 
qw‹d_t
 
	muniq
;

147 } 
	tmd_˘æ_t
;

150 
	emd_ªg_«mes
 {

151 
	mMD_REG_V0
 = 0,

152 
	mMD_REG_ERR
 = 7,

153 
	mMD_REG_FP
 = 15,

154 
	mMD_REG_A0
 = 16,

155 
	mMD_REG_A1
 = 17,

156 
	mMD_REG_A2
 = 18,

157 
	mMD_REG_A3
 = 19,

158 
	mMD_REG_A4
 = 20,

159 
	mMD_REG_A5
 = 21,

160 
	mMD_REG_RA
 = 26,

161 
	mMD_REG_GP
 = 29,

162 
	mMD_REG_SP
 = 30,

163 
	mMD_REG_ZERO
 = 31

172 
w‹d_t
 
	tmd_ö°_t
;

175 
md_ö°_t
 
MD_NOP_INST
;

178 #ifde‡
MD_CROSS_ENDIAN


180 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

181 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

182 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

183 
	#MD_SWAPI
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPH
(
X
Ë(X)

	)

188 
	#MD_SWAPW
(
X
Ë(X)

	)

189 
	#MD_SWAPQ
(
X
Ë(X)

	)

190 
	#MD_SWAPD
(
X
Ë(X)

	)

191 
	#MD_SWAPI
(
X
Ë(X)

	)

196 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

197 { (
INST
Ë
	`MEM_READ_WORD
((
MEM
), (
PC
)); }

	)

204 
	#MD_MAX_ENVIRON
 16384

	)

212 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

213 
	#MD_SET_OPCODE
(
OP
, 
INST
) \

214 { 
OP
 = 
md_mask2›
[
	`MD_TOP_OP
(
INST
)]; \

215 
md_›mask
[
OP
]) \

216 
OP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[OP]Ë& 
md_›mask
[OP]) \

217 + 
md_›off£t
[
OP
]]; }

	)

221 
	#MD_MAX_MASK
 2048

	)

224 
	emd_›code
 {

225 
	mOP_NA
 = 0,

226 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

227 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

228 
	#CONNECT
(
OP
)

	)

229 
	~"machöe.def
"

230 
	mOP_MAX


234 
md_›code
 
md_mask2›
[];

235 
md_›off£t
[];

236 
md_›mask
[];

237 
md_›shi·
[];

240 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

241 *
md_›2«me
[];

244 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

245 *
md_›2f‹m©
[];

248 
	emd_fu_˛ass
 {

249 
	mFUCœss_NA
 = 0,

250 
	mI¡ALU
,

251 
	mI¡MULT
,

252 
	mI¡DIV
,

253 
	mFlﬂtADD
,

254 
	mFlﬂtCMP
,

255 
	mFlﬂtCVT
,

256 
	mFlﬂtMULT
,

257 
	mFlﬂtDIV
,

258 
	mFlﬂtSQRT
,

259 
	mRdP‹t
,

260 
	mWrP‹t
,

261 
	mNUM_FU_CLASSES


265 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

266 
md_fu_˛ass
 
md_›2fu
[];

269 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

270 *
md_fu2«me
[];

273 
	#F_ICOMP
 0x00000001

	)

274 
	#F_FCOMP
 0x00000002

	)

275 
	#F_CTRL
 0x00000004

	)

276 
	#F_UNCOND
 0x00000008

	)

277 
	#F_COND
 0x00000010

	)

278 
	#F_MEM
 0x00000020

	)

279 
	#F_LOAD
 0x00000040

	)

280 
	#F_STORE
 0x00000080

	)

281 
	#F_DISP
 0x00000100

	)

282 
	#F_RR
 0x00000200

	)

283 
	#F_DIRECT
 0x00000400

	)

284 
	#F_TRAP
 0x00000800

	)

285 
	#F_LONGLAT
 0x00001000

	)

286 
	#F_DIRJMP
 0x00002000

	)

287 
	#F_INDIRJMP
 0x00004000

	)

288 
	#F_CALL
 0x00008000

	)

289 
	#F_FPCOND
 0x00010000

	)

290 
	#F_IMM
 0x00020000

	)

293 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

294 
md_›2Êags
[];

298 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

299 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

300 
	#RC
 (
ö°
 & 0x1fË

	)

303 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

306 
	#TARG
 (
ö°
 & 0x1fffff)

	)

309 
	#OFS
 (
ö°
 & 0xffff)

	)

312 
	#SEXT
(
X
) \

313 (((
X
Ë& 0x8000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xffffffffffff0000)Ë: (sqw‹d_t)(X))

	)

315 
	#SEXT21
(
X
) \

316 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xfffffffff„00000)Ë: (sqw‹d_t)(X))

	)

318 
	#SEXT32
(
X
) \

319 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	`LL
(0xffffffff00000000)Ë: (sqw‹d_t)(X))

	)

322 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

325 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

326 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

327 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

328 
	#IS_IEEEFP_DBL_NAN
(
Q
) \

329 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	`IEEEFP_DBL_FRACTION
(Q)))

	)

332 #i‚de‡
SET_TPC


333 
	#SET_TPC
(
PC
Ë()0

	)

342 
	#OSF_SYS_exô
 1

	)

343 
	#MD_EXIT_SYSCALL
(
REGS
) \

344 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

	)

347 
	#OSF_SYS_wrôe
 4

	)

348 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

349 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

350 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

351 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] = 2))

	)

354 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

357 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

360 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

363 
	#MD_IS_INDIR
(
OP
) \

364 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

	)

367 
	emd_amode_ty≥
 {

368 
	mmd_amode_imm
,

369 
	mmd_amode_gp
,

370 
	mmd_amode_•
,

371 
	mmd_amode_Â
,

372 
	mmd_amode_di•
,

373 
	mmd_amode_º
,

374 
	mmd_amode_NUM


376 *
md_amode_°r
[
md_amode_NUM
];

379 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; }

	)

382 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

384 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

386 i‡((
RB
Ë=
MD_REG_GP
) \

387 (
AM
Ë
md_amode_gp
; \

388 i‡((
RB
Ë=
MD_REG_SP
) \

389 (
AM
Ë
md_amode_•
; \

390 i‡((
RB
Ë=
MD_REG_FP
) \

391 (
AM
Ë
md_amode_Â
; \

393 (
AM
Ë
md_amode_di•
; \

395 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

396 (
AM
Ë
md_amode_º
; \

398 
	`∑nic
("cannot decodeáddressing mode"); \

399 }

	)

402 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

410 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

412 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

413 
	`exo_√w
(
ec_li°
, \

414  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

415  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

416  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

417  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

418  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

419 
NULL
)

	)

421 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

422 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

424 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

425 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

	)

427 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

429 i‡(!
exo
 \

430 || 
exo
->
ec
 !
ec_li°
 \

431 || !
exo
->
as_li°
.
hód
 \

432 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

433 || !
exo
->
as_li°
.
hód
->
√xt
 \

434 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

435 || !
exo
->
as_li°
.
hód
->
√xt
->next \

436 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

437 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

438 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

439 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

440 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

441 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

442 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

443 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

444 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

445 (
REGS
)->
ªgs_NPC
 = \

446 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

447 (
REGS
)->
ªgs_C
.
Â¸
 = \

448 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

449 (
REGS
)->
ªgs_C
.
uniq
 = \

450 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

452 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

453 ((
REGS
)->
ªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

455 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

456 ((
REGS
)->
ªgs_F
.
q
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

458 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

459 ((
REGS
)->
ªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

461 
	#MD_FIRST_IN_REG
 0

	)

462 
	#MD_LAST_IN_REG
 21

	)

464 
	#MD_FIRST_OUT_REG
 0

	)

465 
	#MD_LAST_OUT_REG
 21

	)

473 
qw‹d_t
 
	texo_addªss_t
;

476 
qw‹d_t
 
	texo_öãgî_t
;

479 
	texo_Êﬂt_t
;

487 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

488 
	#sc_cou¡î
 
sc_sqw‹d


	)

489 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

492 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

500 
	emd_ªg_ty≥
 {

501 
	mπ_g¥
,

502 
	mπ_Õr
,

503 
	mπ_Âr
,

504 
	mπ_d¥
,

505 
	mπ_˘æ
,

506 
	mπ_PC
,

507 
	mπ_NPC
,

508 
	mπ_NUM


512 
	smd_ªg_«mes_t
 {

513 *
	m°r
;

514 
md_ªg_ty≥
 
	mfûe
;

515 
	mªg
;

519 
md_ªg_«mes_t
 
md_ªg_«mes
[];

522 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

525 
	gevÆ_vÆue_t
;

526 
	gªgs_t
;

528 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

529 
is_wrôe
,

530 
md_ªg_ty≥
 
π
,

531 
ªg
,

532 
evÆ_vÆue_t
 *
vÆ
);

535 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

536 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

539 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

540 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

543 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

544 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

547 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

555 
	#MD_AGEN_OP
 
ADDQ


	)

558 
	#MD_NOP_OP
 
OP_NA


	)

562 
	#MD_VALID_ADDR
(
ADDR
) \

563 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

564 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

565 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024Ë&& (ADDRË<Üd_°ack_ba£))

	)

573 
	#MD_BR_SHIFT
 2

	)

581 
md_öô_decodî
();

585 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

586 
md_addr_t
 
pc
,

587 
FILE
 *
°ªam
);

	@target-alpha-linux/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-alpha-linux/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	~"Æpha.h
"

59 
	#ECOFF_EB_MAGIC
 0x0160

	)

60 
	#ECOFF_EB_OTHER
 0x6001

	)

61 
	#ECOFF_EL_MAGIC
 0x0162

	)

62 
	#ECOFF_EL_OTHER
 0x6201

	)

63 
	#ECOFF_ALPHAMAGIC
 0603

	)

64 
	#ELPH_ALPHAMAGIC
 17791

	)

66 
	secoff_fûehdr
 {

67 
hÆf_t
 
	mf_magic
;

68 
hÆf_t
 
	mf_ns˙s
;

69 
sw‹d_t
 
	mf_timd©
;

70 
qw‹d_t
 
	mf_sym±r
;

71 
sw‹d_t
 
	mf_nsyms
;

72 
hÆf_t
 
	mf_›thdr
;

73 
hÆf_t
 
	mf_Êags
;

76 
	secoff_aouthdr
 {

77 
hÆf_t
 
	mmagic
;

78 
hÆf_t
 
	mv°amp
;

79 
hÆf_t
 
	mbldªv
;

80 
hÆf_t
 
	m∑d˚Œ
;

81 
qw‹d_t
 
	mtsize
;

82 
qw‹d_t
 
	mdsize
;

83 
qw‹d_t
 
	mbsize
;

84 
qw‹d_t
 
	míåy
;

85 
qw‹d_t
 
	mãxt_°¨t
;

86 
qw‹d_t
 
	md©a_°¨t
;

87 
qw‹d_t
 
	mbss_°¨t
;

88 
sw‹d_t
 
	mg¥mask
;

89 
sw‹d_t
 
	mÂrmask
;

90 
qw‹d_t
 
	mgp_vÆue
;

93 
	secoff_s˙hdr
 {

94 
	ms_«me
[8];

95 
qw‹d_t
 
	ms_∑ddr
;

96 
qw‹d_t
 
	ms_vaddr
;

97 
qw‹d_t
 
	ms_size
;

98 
qw‹d_t
 
	ms_s˙±r
;

99 
qw‹d_t
 
	ms_ªÕå
;

100 
qw‹d_t
 
	ms_ n›å
;

101 
hÆf_t
 
	ms_ƒñoc
;

102 
hÆf_t
 
	ms_∆¬o
;

103 
sw‹d_t
 
	ms_Êags
;

106 
	secoff_symhdr_t
 {

107 
hÆf_t
 
	mmagic
;

108 
hÆf_t
 
	mv°amp
;

110 
sw‹d_t
 
	mûöeMax
;

111 
sw‹d_t
 
	midnMax
;

112 
sw‹d_t
 
	mùdMax
;

113 
sw‹d_t
 
	misymMax
;

114 
sw‹d_t
 
	mi›tMax
;

115 
sw‹d_t
 
	müuxMax
;

116 
sw‹d_t
 
	missMax
;

117 
sw‹d_t
 
	missExtMax
;

118 
sw‹d_t
 
	mifdMax
;

119 
sw‹d_t
 
	m¸fd
;

120 
sw‹d_t
 
	mõxtMax
;

121 
qw‹d_t
 
	mcbLöe
;

122 
qw‹d_t
 
	mcbLöeOff£t
;

123 
qw‹d_t
 
	mcbDnOff£t
;

124 
qw‹d_t
 
	mcbPdOff£t
;

125 
qw‹d_t
 
	mcbSymOff£t
;

126 
qw‹d_t
 
	mcbO±Off£t
;

127 
qw‹d_t
 
	mcbAuxOff£t
;

128 
qw‹d_t
 
	mcbSsOff£t
;

129 
qw‹d_t
 
	mcbSsExtOff£t
;

130 
qw‹d_t
 
	mcbFdOff£t
;

131 
qw‹d_t
 
	mcbRfdOff£t
;

132 
qw‹d_t
 
	mcbExtOff£t
;

133 } 
	tecoff_HDRR
;

135 
	#ECOFF_magicSym
 0x1992

	)

137 
	secoff_fdr
 {

138 
w‹d_t
 
	madr
;

139 
sw‹d_t
 
	mrss
;

140 
sw‹d_t
 
	missBa£
;

141 
sw‹d_t
 
	mcbSs
;

142 
sw‹d_t
 
	misymBa£
;

143 
sw‹d_t
 
	mcsym
;

144 
sw‹d_t
 
	mûöeBa£
;

145 
sw‹d_t
 
	m˛öe
;

146 
sw‹d_t
 
	mi›tBa£
;

147 
sw‹d_t
 
	mc›t
;

148 
hÆf_t
 
	mùdFú°
;

149 
hÆf_t
 
	m˝d
;

150 
sw‹d_t
 
	müuxBa£
;

151 
sw‹d_t
 
	mˇux
;

152 
sw‹d_t
 
	mrfdBa£
;

153 
sw‹d_t
 
	m¸fd
;

154 
	mœng
 :5;

155 
	mfMîge
 :1;

156 
	mfRódö
 :1;

157 
	mfBigídün
 :1;

158 
	mª£rved
 :24;

159 
sw‹d_t
 
	mcbLöeOff£t
;

160 
sw‹d_t
 
	mcbLöe
;

161 } 
	tecoff_FDR
;

163 
	secoff_pdr
 {

164 
w‹d_t
 
	madr
;

165 
sw‹d_t
 
	misym
;

166 
sw‹d_t
 
	mûöe
;

167 
sw‹d_t
 
	mªgmask
;

168 
sw‹d_t
 
	mªgoff£t
;

169 
sw‹d_t
 
	mi›t
;

170 
sw‹d_t
 
	m‰egmask
;

171 
sw‹d_t
 
	m‰egoff£t
;

172 
sw‹d_t
 
	m‰ameoff£t
;

173 
hÆf_t
 
	m‰amîeg
;

174 
hÆf_t
 
	mp¸eg
;

175 
sw‹d_t
 
	m Low
;

176 
sw‹d_t
 
	m High
;

177 
sw‹d_t
 
	mcbLöeOff£t
;

178 } 
	tecoff_PDR
;

180 
	secoff_SYMR
 {

181 
qw‹d_t
 
	mvÆue
;

182 
sw‹d_t
 
	miss
;

183 
	m°
 :6;

184 
	msc
 :5;

185 
	mª£rved
 :1;

186 
	mödex
 :20;

187 } 
	tecoff_SYMR
;

189 
	secoff_EXTR
 {

190 
ecoff_SYMR
 
	masym
;

191 
sw‹d_t
 
	mifd
;

192 
sw‹d_t
 
	mª£rved
;

193 } 
	tecoff_EXTR
;

195 
	#ECOFF_R_SN_TEXT
 1

	)

196 
	#ECOFF_R_SN_RDATA
 2

	)

197 
	#ECOFF_R_SN_DATA
 3

	)

198 
	#ECOFF_R_SN_SDATA
 4

	)

199 
	#ECOFF_R_SN_SBSS
 5

	)

200 
	#ECOFF_R_SN_BSS
 6

	)

202 
	#ECOFF_STYP_TEXT
 0x0020

	)

203 
	#ECOFF_STYP_RTEXT
 0x20000020

	)

204 
	#ECOFF_STYP_RDATA
 0x0100

	)

205 
	#ECOFF_STYP_DATA
 0x0040

	)

206 
	#ECOFF_STYP_SDATA
 0x0200

	)

207 
	#ECOFF_STYP_SBSS
 0x0400

	)

208 
	#ECOFF_STYP_BSS
 0x0080

	)

209 
	#ECOFF_STYP_INIT
 0x80000000

	)

211 
	#ECOFF_STYP_FINI
 0x01000000

	)

212 
	#ECOFF_STYP_RCONST
 0x02200000

	)

213 
	#ECOFF_STYP_LITA
 0x04000000

	)

214 
	#ECOFF_STYP_LIT8
 0x08000000

	)

215 
	#ECOFF_STYP_LIT4
 0x10000000

	)

216 
	#ECOFF_STYP_XDATA
 0x02400000

	)

217 
	#ECOFF_STYP_PDATA
 0x02800000

	)

219 
	#ECOFF_°Nû
 0

	)

220 
	#ECOFF_°GlobÆ
 1

	)

221 
	#ECOFF_°Sètic
 2

	)

222 
	#ECOFF_°P¨am
 3

	)

223 
	#ECOFF_°Loˇl
 4

	)

224 
	#ECOFF_°Labñ
 5

	)

225 
	#ECOFF_°Proc
 6

	)

226 
	#ECOFF_°Block
 7

	)

227 
	#ECOFF_°End
 8

	)

228 
	#ECOFF_°Membî
 9

	)

229 
	#ECOFF_°Ty≥def
 10

	)

230 
	#ECOFF_°Fûe
 11

	)

231 
	#ECOFF_°RegRñoc
 12

	)

232 
	#ECOFF_°F‹w¨d
 13

	)

233 
	#ECOFF_°SèticProc
 14

	)

234 
	#ECOFF_°C⁄°™t
 15

	)

	@target-alpha-linux/elf64.h

1 
	~"°döt.h
"

3 
	#Elf64_Addr
 
uöt64_t


	)

4 
	#Elf64_Off
 
uöt64_t


	)

5 
	#Elf64_HÆf
 
uöt16_t


	)

6 
	#Elf64_W‹d
 
uöt32_t


	)

7 
	#Elf64_Sw‹d
 
uöt32_t


	)

8 
	#Elf64_Xw‹d
 
uöt64_t


	)

9 
	#Elf64_Sxw‹d
 
uöt64_t


	)

12 
	#ELFCLASS32
 1

13 
	#ELFCLASS64
 2

14 

	)

16 
	#ELFDATA2LSB
 1

17 
	#ELFDATA2MSB
 2

18 

	)

20 
	#ET_NONE
 0

21 
	#ET_REL
 1

22 
	#ET_EXEC
 2

23 
	#ET_DYN
 3

24 
	#ET_CORE
 4

25 
	#ET_LOOS
 0xFE00

26 
	#ET_HIOS
 0xFEFF

27 
	#ET_LOPROC
 0xFF00

28 
	#ET_HIPROC
 0xFFFF

29 

	)

31 
	#PT_NULL
 0

32 
	#PT_LOAD
 1

33 
	#PT_DYNAMIC
 2

34 
	#PT_INTERP
 3

35 
	#PT_NOTE
 4

36 
	#PT_SHLIB
 5

37 
	#PT_PHDR
 6

38 
	#PT_LOOS
 0x60000000

39 
	#PT_HIOS
 0x6FFFFFFF

40 
	#PT_LOPROC
 0x70000000

41 
	#PT_HIPROC
 0x7FFFFFFF

42 

	)

44 
	#F_X
 0x1

45 
	#PF_W
 0x2

46 
	#PF_R
 0x4

47 
	#PF_MASKOS
 0x00FF0000

48 
	#PF_MASKPROC
 0xFF000000

49 

	)

51 
	#SHT_NULL
 0

52 
	#SHT_PROGBITS
 1

53 
	#SHT_SYMTAB
 2

54 
	#SHT_STRTAB
 3

55 
	#SHT_RELA
 4

56 
	#SHT_HASH
 5

57 
	#SHT_DYNAMIC
 6

58 
	#SHT_NOTE
 7

59 
	#SHT_NOBITS
 8

60 
	#SHT_REL
 9

61 
	#SHT_SHLIB
 10

62 
	#SHT_DYNSYM
 11

63 
	#SHT_LOOS
 0x60000000

64 
	#SHT_HIOS
 0x6FFFFFFF

65 
	#SHT_LOPROC
 0x70000000

66 
	#SHT_HIPROC
 0x7FFFFFFF

67 

	)

70 
	me_idít
[16];

71 
Elf64_HÆf
 
	me_ty≥
;

72 
Elf64_HÆf
 
	me_machöe
;

73 
Elf64_W‹d
 
	me_vîsi⁄
;

74 
Elf64_Addr
 
	me_íåy
;

75 
Elf64_Off
 
	me_phoff
;

76 
Elf64_Off
 
	me_shoff
;

77 
Elf64_W‹d
 
	me_Êags
;

78 
Elf64_HÆf
 
	me_ehsize
;

79 
Elf64_HÆf
 
	me_phítsize
;

80 
Elf64_HÆf
 
	me_phnum
;

81 
Elf64_HÆf
 
	me_shítsize
;

82 
Elf64_HÆf
 
	me_shnum
;

83 
Elf64_HÆf
 
	me_sh°∫dx
;

84 } 
	tElf64_Ehdr
;

88 
Elf64_W‹d
 
	msh_«me
;

89 
Elf64_W‹d
 
	msh_ty≥
;

90 
Elf64_Xw‹d
 
	msh_Êags
;

91 
Elf64_Addr
 
	msh_addr
;

92 
Elf64_Off
 
	msh_off£t
;

93 
Elf64_Xw‹d
 
	msh_size
;

94 
Elf64_W‹d
 
	msh_lök
;

95 
Elf64_W‹d
 
	msh_öfo
;

96 
Elf64_Xw‹d
 
	msh_addølign
;

97 
Elf64_Xw‹d
 
	msh_ítsize
;

98 } 
	tElf64_Shdr
;

102 
Elf64_W‹d
 
	m°_«me
;

103 
	m°_öfo
;

104 
	m°_Ÿhî
;

105 
Elf64_HÆf
 
	m°_shndx
;

106 
Elf64_Addr
 
	m°_vÆue
;

107 
Elf64_Xw‹d
 
	m°_size
;

108 } 
	tElf64_Sym
;

112 
Elf64_Addr
 
	mr_off£t
;

113 
Elf64_Xw‹d
 
	mr_öfo
;

114 } 
	tElf64_Rñ
;

118 
Elf64_Addr
 
	mr_off£t
;

119 
Elf64_Xw‹d
 
	mr_öfo
;

120 
Elf64_Sxw‹d
 
	mr_addíd
;

121 } 
	tElf64_Rña
;

125 
Elf64_W‹d
 
	mp_ty≥
;

126 
Elf64_W‹d
 
	mp_Êags
;

127 
Elf64_Off
 
	mp_off£t
;

128 
Elf64_Addr
 
	mp_vaddr
;

129 
Elf64_Addr
 
	mp_∑ddr
;

130 
Elf64_Xw‹d
 
	mp_fûesz
;

131 
Elf64_Xw‹d
 
	mp_memsz
;

132 
Elf64_Xw‹d
 
	mp_Æign
;

133 } 
	tElf64_Phdr
;

	@target-alpha-linux/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-Æpha-löux/ecoff.h
"

69 
	~"èrgë-Æpha-löux/ñf64.h
"

73 
	#TEXT_TAIL_PADDING
 0

	)

75 
AÕhaSy°emSèã
 
	g_sy°em
;

78 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

81 
	gld_ãxt_size
 = 0;

84 
md_addr_t
 
	gld_bss_ba£
 = 0;

87 
	gld_bss_size
 = 0;

91 
md_addr_t
 
	gld_d©a_ba£
 = 0;

94 
md_addr_t
 
	gld_brk_poöt
 = 0;

96 
uöt64_t
 
	gaddr
, 
	gzîo
=0;

99 
	gld_d©a_size
 = 0;

102 
md_addr_t
 
	gld_°ack_ba£
 = 0;

105 
	gld_°ack_size
 = 0;

108 
md_addr_t
 
	gld_°ack_mö
 = -1;

111 *
	gld_¥og_‚ame
 = 
NULL
;

114 
md_addr_t
 
	gld_¥og_íåy
 = 0;

117 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

120 
	gld_èrgë_big_ídün
;

123 
	$öôülize_sy°em_°©e
()

127 
_sy°em
.
brk_poöt
 = (
ld_bss_ba£
 + 
ld_bss_size
 + 0xffffLL) & 0xffffffffffff0000LL;

129 
_sy°em
.
mm≠_íd
 = 0x10000;

130 
	}
}

135 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

137 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

139 &
ld_ãxt_ba£
,Üd_text_base, "0x%010p");

140 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

142 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

143 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

145 &
ld_d©a_ba£
,Üd_data_base, "0x%010p");

146 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

148 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

149 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

151 &
ld_°ack_ba£
,Üd_stack_base, "0x%010p");

153 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

155 &
ld_°ack_mö
,Üd_stack_min, "0x%010p");

157 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

159 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

160 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

162 &
ld_¥og_íåy
,Üd_prog_entry, "0x%010p");

163 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

165 &
ld_ívú⁄_ba£
,Üd_environ_base, "0x%010p");

166 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

168 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

169 
	}
}

175 
	$ld_lﬂd_¥og
(*
‚ame
,

176 
¨gc
, **
¨gv
,

177 **
ívp
,

178 
ªgs_t
 *
ªgs
,

179 
mem_t
 *
mem
,

180 
zîo_bss_£gs
)

182 
i
;

183 
qw‹d_t
 
ãmp
;

184 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

186 i‡(
	`eio_vÆid
(
‚ame
))

188 i‡(
¨gc
 != 1)

190 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

191 
	`exô
(1);

194 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

196 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

199 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

202 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

203 
	`Áèl
("bad initial checkpoint in EIO file");

206 i‡(
sim_chk±_‚ame
 !
NULL
)

208 
cou¡î_t
 
ª°‹e_i˙t
;

210 
FILE
 *
chk±_fd
;

212 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

213 
sim_chk±_‚ame
);

215 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

216 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

217 
sim_chk±_‚ame
);

220 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

223 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

226 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

227 
ª°‹e_i˙t
);

228 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

232 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

233 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

238 #ifde‡
MD_CROSS_ENDIAN


241 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

242 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

243 
	`w¨n
("****************************************");

244 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

245 
	`w¨n
("****************************************");

247 
	`Áèl
("SimpleScalar/Alpha only supports binaryÉxecution on\n"

253 i‡(
sim_chk±_‚ame
 !
NULL
)

254 
	`Áèl
("checkpoints only supported while EIOÅracing");

256 #ifde‡
BFD_LOADER


259 
bfd
 *
abfd
;

260 
a£˘i⁄
 *
£˘
;

264 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

265 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

266 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

269 
ld_ívú⁄_ba£
 = 
•
;

272 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

273 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

274 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

279 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

281 
	`bfd_˛o£
(
abfd
);

282 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

286 
ld_¥og_‚ame
 = 
¨gv
[0];

289 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

291 
	`debug
("processing %d sections in `%s'...",

292 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

295 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

297 *
p
;

299 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

300 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

301 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

304 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

305 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

306 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

307 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

310 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

311 i‡(!
p
)

312 
	`Áèl
("cannotállocate %d bytes for section `%s'",

313 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

314 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

316 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

317 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

318 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

319 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

322 
	`mem_bc›y
(
mem_‚
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

323 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

326 
	`‰ì
(
p
);

329 i‡(
zîo_bss_£gs


330 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

331 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

332 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

335 
	`mem_bzîo
(
mem_‚
,

336 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

337 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

342 
	`debug
("ignoring section `%s' duringÜoad...",

343 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

347 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

350 
ld_ãxt_size
 =

351 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

352 - 
MD_TEXT_BASE
)

353 + 
TEXT_TAIL_PADDING
;

357 
	`mem_bzîo
(
mem_‚
,

358 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

359 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

360 
TEXT_TAIL_PADDING
);

364 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

365 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

366 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

367 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

368 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

371 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

372 
d©a_bªak
)

373 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

374 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

379 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

380 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

381 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

386 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

387 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

388 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

389 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

392 i‡(!
	`bfd_˛o£
(
abfd
))

393 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

399 
FILE
 *
fobj
;

400 
Êoc
;

401 
Elf64_Ehdr
 
fhdr
;

402 
Elf64_Phdr
 
phdr
;

403 
Elf64_Shdr
 
shdr
;

404 *
shdr_°rs
;

405 
ecoff_aouthdr
 
ahdr
;

408 *
p
;

411 
ld_¥og_‚ame
 = 
¨gv
[0];

414 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

415 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

417 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

419 i‡(!
fobj
)

420 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

423 i‡(
	`‰ód
(&
fhdr
, (
Elf64_Ehdr
), 1, 
fobj
) < 1)

424 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

427 i‡((
fhdr
.
e_idít
[0] != '\x7f') ||

428 (
fhdr
.
e_idít
[1] != 'E') ||

429 (
fhdr
.
e_idít
[2] != 'L') ||

430 (
fhdr
.
e_idít
[3] != 'F'))

431 
	`Áèl
("ArchLib: %†didÇŸ c⁄èöá vÆid magi¯numbî", 
¨gv
[0]);

432 i‡(
fhdr
.
e_idít
[4] !
ELFCLASS64
)

433 
	`Áèl
("ArchLib: %†wa†nŸá 64-bô ELF bö¨y", 
¨gv
[0]);

434 i‡(
fhdr
.
e_idít
[5] !
ELFDATA2LSB
)

435 
	`Áèl
("ArchLib: %s didÇot containÜittle-endian object file strutcs",

436 
¨gv
[0]);

437 i‡(
fhdr
.
e_ty≥
 !
ET_EXEC
)

438 
	`Áèl
("ArchLib: %†i†nŸá¿execuèbÀ fûe", 
¨gv
[0]);

453 
i
 = 0; i < 
fhdr
.
e_phnum
; i++)

455 i‡(
	`f£ek
(
fobj
, 
fhdr
.
e_phoff
 + (
i
*fhdr.
e_phítsize
), 
SEEK_SET
) == -1)

456 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

457 
size_t
 
Àn
 = 
	`‰ód
(&
phdr
, 1, ’hdr), 
fobj
);

458 i‡(
Àn
 !(
phdr
))

459 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

461 
phdr
.
p_ty≥
)

463 
PT_NULL
:

466 
PT_NOTE
:

469 
PT_SHLIB
:

472 
PT_LOOS
:

475 
PT_HIOS
:

478 
PT_LOPROC
:

481 
PT_HIPROC
:

485 
PT_LOAD
:

486 
PT_DYNAMIC
:

487 
PT_INTERP
:

488 
PT_PHDR
:

490 i‡(
	`f£ek
(
fobj
, 
phdr
.
p_off£t
, 
SEEK_SET
) == -1)

491 
	`Áèl
("ArchLib:Érror seekingÅoÖrogram seg %i from %s",

492 
i
, 
¨gv
[0]);

494 
p
 = (*)
	`ˇŒoc
(
phdr
.
p_fûesz
, ());

495 i‡(!
p
)

496 
	`Áèl
("ArchLib: out of virtual memory");

497 i‡(
	`‰ód
(
p
, 
phdr
.
p_fûesz
, 1, 
fobj
) < 1)

498 
	`Áèl
("ArchLib:ÉrrorÑeadingÖrogram segment %i from %s",

499 
i
, 
¨gv
[0]);

501 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
phdr
.
p_vaddr
), 
p
, MD_SWAPQ’hdr.
p_fûesz
));

502 
	`‰ì
(
p
);

512 i‡(
	`f£ek
(
fobj
,

513 
fhdr
.
e_shoff
 + (fhdr.
e_sh°∫dx
*fhdr.
e_shítsize
),

514 
SEEK_SET
) == -1)

515 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

516 
size_t
 
Àn
 = 
	`‰ód
(&
shdr
, 1, (shdr), 
fobj
);

517 i‡(
Àn
 !(
shdr
))

518 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

519 i‡(
shdr
.
sh_ty≥
 !
SHT_STRTAB
)

520 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

521 i‡(
	`f£ek
(
fobj
, 
shdr
.
sh_off£t
, 
SEEK_SET
) == -1)

522 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

523 
shdr_°rs
 = (*)
	`ˇŒoc
(
shdr
.
sh_size
, ());

524 
Àn
 = 
	`‰ód
(
shdr_°rs
, 1, 
shdr
.
sh_size
, 
fobj
);

525 i‡(
Àn
 !
shdr
.
sh_size
)

526 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

529 
ld_¥og_íåy
 = 
fhdr
.
e_íåy
;

530 
ld_ãxt_size
 = 
ld_ãxt_ba£
 = 0;

531 
ld_d©a_size
 = 
ld_d©a_ba£
 = 0;

534 
i
 = 0; i < 
fhdr
.
e_shnum
; i++)

536 i‡(
	`f£ek
(
fobj
, 
fhdr
.
e_shoff
 + (
i
*fhdr.
e_shítsize
), 
SEEK_SET
) == -1)

537 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

538 
size_t
 
Àn
 = 
	`‰ód
(&
shdr
, 1, (shdr), 
fobj
);

539 i‡(
Àn
 !(
shdr
))

540 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

543 i‡(!
	`°rcmp
(".ãxt", 
shdr_°rs
 + 
shdr
.
sh_«me
))

545 
ld_ãxt_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

546 
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

550 i‡(!
	`°rcmp
(".d©a", 
shdr_°rs
 + 
shdr
.
sh_«me
))

552 
ld_d©a_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

553 
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

556 i‡(!
	`°rcmp
(".bss", 
shdr_°rs
 + 
shdr
.
sh_«me
))

559 
ld_bss_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

560 
ld_bss_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

564 
	`‰ì
(
shdr_°rs
);

578 
d©a_bªak
 = 
ld_d©a_ba£
 + 
ld_d©a_size
;

585 
	`debug
("processing %d sections in `%s'...",

586 
	`MD_SWAPH
(
fhdr
.
e_phnum
), 
¨gv
[0]);

590 
Êoc
 = 
	`·ñl
(
fobj
);

591 
i
 = 0; i < 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
); i++)

593 *
p
;

595 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

596 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

597 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

598 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

599 
Êoc
 = 
	`·ñl
(
fobj
);

601 
	`¥ötf
 ("shdr.s_Êags: %x\n", 
	`MD_SWAPW
(
shdr
.
s_Êags
));

603 
	`MD_SWAPW
(
shdr
.
s_Êags
))

605 
ECOFF_STYP_TEXT
:

606 
ECOFF_STYP_RTEXT
:

607 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

608 i‡(!
p
)

609 
	`Áèl
("out of virtual memory");

611 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

612 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

613 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

614 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

617 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

618 
	`MD_SWAPQ
(
shdr
.
s_vaddr
), 
p
, MD_SWAPQ(shdr.
s_size
));

622 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

623 
	`MD_SWAPQ
(
shdr
.
s_vaddr
Ë+ MD_SWAPQ(shdr.
s_size
),

624 
TEXT_TAIL_PADDING
);

628 
	`‰ì
(
p
);

631 
Text_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

632 
Text_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

633 
Text_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
) / 4;

635 
Text_size
 += 10;

636 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

641 
ECOFF_STYP_INIT
:

642 
ECOFF_STYP_FINI
:

643 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

645 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

646 i‡(!
p
)

647 
	`Áèl
("out of virtual memory");

649 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

650 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

651 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

652 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

655 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

656 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

657 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

660 
	`‰ì
(
p
);

663 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

666 
ECOFF_STYP_LITA
:

667 
ECOFF_STYP_LIT8
:

668 
ECOFF_STYP_LIT4
:

669 
ECOFF_STYP_XDATA
:

670 
ECOFF_STYP_PDATA
:

671 
ECOFF_STYP_RCONST
:

674 
ECOFF_STYP_RDATA
:

679 
Rd©a_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

680 
Rd©a_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
);

681 
Rd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

684 
ECOFF_STYP_DATA
:

686 
D©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

689 
ECOFF_STYP_SDATA
:

691 
Sd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

693 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

695 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

696 i‡(!
p
)

697 
	`Áèl
("out of virtual memory");

699 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

700 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

701 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

702 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

705 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

706 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

707 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

710 
	`‰ì
(
p
);

713 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

716 
ECOFF_STYP_BSS
:

717 
ECOFF_STYP_SBSS
:

722 
	`w¨n
("£˘i⁄ `%s' ign‹ed...", 
shdr
.
s_«me
);

728 i‡(
	`f˛o£
(
fobj
))

729 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

735 
uöt64_t
 
°ack_ba£
 = (
ld_ãxt_ba£
 - 1024*1024*8) & 0xFFFFFFFFFFFF0000LL;

736 
uöt64_t
 
°ack_mö
 = 
ld_°ack_ba£
;

739 
uöt64_t
 
¨gv_d©a_size
 = 0;

740 
uöt64_t
 
ívp_d©a_size
 = 0;

741 
uöt64_t
 
¨gv_¨øy_size
;

742 
uöt64_t
 
ívp_¨øy_size
;

744 
¨gv_¨øy_size
 = 0; 
¨gv
[argv_array_size];árgv_array_size++)

745 
¨gv_d©a_size
 +
	`°æí
(
¨gv
[
¨gv_¨øy_size
]) + 1;

746 
ívp_¨øy_size
 = 0; 
ívp
[envp_array_size];Énvp_array_size++)

747 
ívp_d©a_size
 +
	`°æí
(
ívp
[
ívp_¨øy_size
]) + 1;

749 
uöt64_t
 
¨gc_vÆue
 = 
¨gv_¨øy_size
;

750 
¨gv_¨øy_size
 = (argv_array_size + 1) * 8;

751 
ívp_¨øy_size
 = (envp_array_size + 1) * 8;

754 
°ack_mö
 -= (8 +

755 
¨gv_¨øy_size
 +

756 
ívp_¨øy_size
 +

757 
¨gv_d©a_size
 +

758 
ívp_d©a_size
);

760 
°ack_mö
 &= 0xFFFFFFFFFFFFE000LL;

763 
uöt64_t
 
¨gv_¨øy_ba£
 = 
°ack_mö
 + 8;

764 
uöt64_t
 
ívp_¨øy_ba£
 = 
¨gv_¨øy_ba£
 + 
¨gv_¨øy_size
;

765 
uöt64_t
 
¨gv_d©a_ba£
 = 
ívp_¨øy_ba£
 + 
ívp_¨øy_size
;

766 
uöt64_t
 
ívp_d©a_ba£
 = 
¨gv_d©a_ba£
 + 
¨gv_d©a_size
;

769 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

770  
°ack_mö
, &
¨gc_vÆue
, 8);

774 
addr
 = 
¨gv_d©a_ba£
;

775 
i
 = 0; 
¨gv
[i]; i++)

778 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

779  
¨gv_¨øy_ba£
 + (
i
*8), &
addr
, 8);

782 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

783  
addr
, 
¨gv
[
i
], 
	`°æí
(argv[i])+1);

786 
addr
 +
	`°æí
(
¨gv
[
i
])+1;

789 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

790  
¨gv_¨øy_ba£
 + (
i
*8), &
zîo
, 8);

794 
addr
 = 
ívp_d©a_ba£
;

795 
i
 = 0; 
ívp
[i]; i++)

798 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

799  
ívp_¨øy_ba£
 + (
i
*8), &
addr
, 8);

802 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

803  
addr
, 
ívp
[
i
], 
	`°æí
(envp[i])+1);

806 
addr
 +
	`°æí
(
ívp
[
i
])+1;

809 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

810  
ívp_¨øy_ba£
 + (
i
*8), &
zîo
, 8);

814 
uöt64_t
 
pc
 = 0;

815 
i
 = 0; i < 66 ; i++Ë
ªgs
->
ªgs_R
[i] = 0;

818 
	`¥ötf
("PC: %ŒX\n", 
ld_¥og_íåy
);

820 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

822 
•
 = 
°ack_ba£
;

823 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

824 
ld_ívú⁄_ba£
 = 
•
;

827 
ªgs
->
ªgs_R
[30] = 
°ack_mö
;

828 
ªgs
->
ªgs_R
[16] = 
¨gc_vÆue
;

829 
ªgs
->
ªgs_R
[17] = 
¨gv_¨øy_ba£
;

830 
ªgs
->
ªgs_R
[18] = 
ívp_¨øy_ba£
;

833 
¥ogøm_com∂ëe
 = 0;

837 
	`öôülize_sy°em_°©e
();

845 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

846 
	`Áèl
("executable is missingá `.text' section");

847 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

848 
	`Áèl
("executable is missingá `.data' section");

849 i‡(!
ld_¥og_íåy
)

850 
	`Áèl
("programÉntryÖointÇot specified");

852 
	`¥ötf
("passed\n");

855 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

856 i‡(
sim_sw≠_byãs
)

861 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

862 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

864 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

867 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

868 i‡(
sim_sw≠_w‹ds
)

873 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

874 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

876 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

882 
ld_°ack_ba£
 = (
ld_ãxt_ba£
 - 1024*1024*8) & 0xFFFFFFFFFFFF0000LL;

885 
•
 = 
	`ROUND_DOWN
(
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

887 
•
 = 
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

888 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

891 
ld_ívú⁄_ba£
 = 
•
;

894 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

895 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
));

896 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

897 
•
 +(
qw‹d_t
);

900 
¨gv_addr
 = 
•
;

901 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

902 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

905 
ívp_addr
 = 
•
;

906 
i
=0; 
ívp
[i]; i++)

907 
•
 +(
md_addr_t
);

908 
•
 +(
md_addr_t
);

911 
i
=0; i<
¨gc
; i++)

914 
ãmp
 = 
	`MD_SWAPQ
(
•
);

915 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

916 &
ãmp
, (
md_addr_t
));

918 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

919 
•
 +
	`°æí
(
¨gv
[
i
])+1;

922 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

923 &
nuŒ_±r
, (
md_addr_t
));

926 
i
 = 0; 
ívp
[i]; i++)

929 
ãmp
 = 
	`MD_SWAPQ
(
•
);

930 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

931 &
ãmp
, (
md_addr_t
));

933 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

934 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

937 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

938 &
nuŒ_±r
, (
md_addr_t
));

941 i‡(
•
 > 
ld_°ack_ba£
)

946 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON inálpha.h");

950 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

953 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

955 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

956 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

958 
	`öôülize_sy°em_°©e
();

960 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

961 
ld_ãxt_ba£
, 
ld_ãxt_size
);

962 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

963 
ld_d©a_ba£
, 
ld_d©a_size
);

964 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

965 
ld_°ack_ba£
, 
ld_°ack_size
);

966 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

970 
	`¥ötf
("FINISHED LOADER\n");

971 
	}
}

	@target-alpha-linux/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"lﬂdî.h
"

58 
	~"symbﬁ.h
"

60 #ifde‡
BFD_LOADER


61 
	~<bfd.h
>

63 
	~"èrgë-Æpha/ecoff.h
"

69 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

72 
	gsym_nsyms
 = 0;

73 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

76 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

79 
	gsym_¡extsyms
 = 0;

80 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

83 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

86 
	gsym_nd©asyms
 = 0;

87 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

90 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

93 
	gsyms_lﬂded
 = 
FALSE
;

95 #ifde‡
PRINT_SYMS


98 
	$Êags2°r
(
Êags
)

100 
buf
[256];

101 *
p
;

103 i‡(!
Êags
)

106 
p
 = 
buf
;

107 *
p
 = '\0';

109 i‡(
Êags
 & 
BSF_LOCAL
)

111 *
p
++ = 'L';

112 *
p
++ = '|';

114 i‡(
Êags
 & 
BSF_GLOBAL
)

116 *
p
++ = 'G';

117 *
p
++ = '|';

119 i‡(
Êags
 & 
BSF_DEBUGGING
)

121 *
p
++ = 'D';

122 *
p
++ = '|';

124 i‡(
Êags
 & 
BSF_FUNCTION
)

126 *
p
++ = 'F';

127 *
p
++ = '|';

129 i‡(
Êags
 & 
BSF_KEEP
)

131 *
p
++ = 'K';

132 *
p
++ = '|';

134 i‡(
Êags
 & 
BSF_KEEP_G
)

136 *
p
++ = 'k'; *p++ = '|';

138 i‡(
Êags
 & 
BSF_WEAK
)

140 *
p
++ = 'W';

141 *
p
++ = '|';

143 i‡(
Êags
 & 
BSF_SECTION_SYM
)

145 *
p
++ = 'S'; *p++ = '|';

147 i‡(
Êags
 & 
BSF_OLD_COMMON
)

149 *
p
++ = 'O';

150 *
p
++ = '|';

152 i‡(
Êags
 & 
BSF_NOT_AT_END
)

154 *
p
++ = 'N';

155 *
p
++ = '|';

157 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

159 *
p
++ = 'C';

160 *
p
++ = '|';

162 i‡(
Êags
 & 
BSF_WARNING
)

164 *
p
++ = 'w';

165 *
p
++ = '|';

167 i‡(
Êags
 & 
BSF_INDIRECT
)

169 *
p
++ = 'I';

170 *
p
++ = '|';

172 i‡(
Êags
 & 
BSF_FILE
)

174 *
p
++ = 'f';

175 *
p
++ = '|';

178 i‡(
p
 =
buf
)

179 
	`∑nic
("no flags detected");

181 *--
p
 = '\0';

182  
buf
;

183 
	}
}

188 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

190  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

191 
	}
}

195 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

197  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

198 
	}
}

200 
	#RELEVANT_SCOPE
(
SYM
) \

202 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

204 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

205 && (
SYM
)->
«me
[0] != '$') \

207 
lﬂd_loˇls
 \

209 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

210 && (
SYM
)->
«me
[0] == '$') \

212 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

213 && (
SYM
)->
«me
[0] ='$'))))

	)

218 
	$sym_lﬂdsyms
(*
‚ame
,

219 
lﬂd_loˇls
)

221 
i
, 
debug_˙t
;

222 #ifde‡
BFD_LOADER


223 
bfd
 *
abfd
;

224 
asymbﬁ
 **
syms
;

225 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

227 
Àn
;

228 
FILE
 *
fobj
;

229 
ecoff_fûehdr
 
fhdr
;

230 
ecoff_aouthdr
 
ahdr
;

231 
ecoff_symhdr_t
 
symhdr
;

232 *
°πab
 = 
NULL
;

233 
ecoff_EXTR
 *
exå
;

236 i‡(
syms_lﬂded
)

243 #ifde‡
BFD_LOADER


246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

247 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

248 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

253 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

255 
	`bfd_˛o£
(
abfd
);

256 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

260 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

261 
	`∑nic
("binaryÉndian changed");

263 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

266 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

267 i‡(
°‹age
 <= 0)

268 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

270 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

271 i‡(!
syms
)

272 
	`Áèl
("out of virtual memory");

274 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

275 i‡(
nsyms
 <= 0)

276 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

283 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

284 
i
=0; i < 
nsyms
; i++)

286 
asymbﬁ
 *
sym
 = 
syms
[
i
];

290 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

294 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

296 && 
	`RELEVANT_SCOPE
(
sym
))

299 
sym_nd©asyms
++;

300 #ifde‡
PRINT_SYMS


301 
	`Ârötf
(
°dîr
,

303 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

304 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

308 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

310 && 
	`RELEVANT_SCOPE
(
sym
))

313 
sym_¡extsyms
++;

314 #ifde‡
PRINT_SYMS


315 
	`Ârötf
(
°dîr
,

317 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

318 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

324 #ifde‡
PRINT_SYMS


325 
	`Ârötf
(
°dîr
,

327 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

328 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

332 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

333 i‡(
sym_nsyms
 <= 0)

334 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

337 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

338 i‡(!
sym_db
)

339 
	`Áèl
("out of virtual memory");

342 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

344 
asymbﬁ
 *
sym
 = 
syms
[
i
];

348 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

352 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

354 && 
	`RELEVANT_SCOPE
(
sym
))

357 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

358 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

359 
sym_db
[
debug_˙t
].
öôülized
 =

360 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

362 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

363 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

364 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

365 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

367 
debug_˙t
++;

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

376 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

377 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

378 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

379 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

380 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

382 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_nsyms
)

391 
	`∑nic
("couldÇotÜocateáll counted symbols");

394 
	`‰ì
(
syms
);

398 i‡(!
	`bfd_˛o£
(
abfd
))

399 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

404 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

405 
fobj
 = 
	`f›í
(
‚ame
, "rb");

407 
fobj
 = 
	`f›í
(
‚ame
, "r");

409 i‡(!
fobj
)

410 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

412 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

413 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

416 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

417 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

419 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

420 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

423 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

425 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

426 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

428 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

429 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

432 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

433 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

434 i‡(!
°πab
)

435 
	`Áèl
("out of virtual memory");

438 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

439 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

440 
	`Áèl
("error whileÑeading symbolÅableÇames");

443 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

444 i‡(
Àn
 <= 0)

445 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

446 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

447 i‡(!
sym_db
)

448 
	`Áèl
("out of virtual memory");

451 
exå
 =

452 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

453 i‡(!
exå
)

454 
	`Áèl
("out of virtual memory");

456 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

457 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

458 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

460 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

463 
i
=0; i < 
symhdr
.
õxtMax
; i++)

465 
°r_off£t
;

467 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

469 
exå
[
i
].
asym
.
°
)

471 
ECOFF_°GlobÆ
:

472 
ECOFF_°Sètic
:

474 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

475 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

476 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

477 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

478 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

479 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

480 
sym_nsyms
++;

481 
sym_nd©asyms
++;

484 
ECOFF_°Proc
:

485 
ECOFF_°SèticProc
:

486 
ECOFF_°Labñ
:

488 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

489 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

490 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

492 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

493 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

494 
sym_nsyms
++;

495 
sym_¡extsyms
++;

502 
	`‰ì
(
exå
);

505 i‡(
	`f˛o£
(
fobj
))

506 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

515 
sym_syms
 =

516 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

517 i‡(!
sym_syms
)

518 
	`Áèl
("out of virtual memory");

520 
sym_syms_by_«me
 =

521 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

522 i‡(!
sym_syms_by_«me
)

523 
	`Áèl
("out of virtual memory");

525 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

527 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

528 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

529 
debug_˙t
++;

532 i‡(
debug_˙t
 !
sym_nsyms
)

533 
	`∑nic
("couldÇotÜocateáll symbols");

536 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

539 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

542 
sym_ãxtsyms
 =

543 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

544 i‡(!
sym_ãxtsyms
)

545 
	`Áèl
("out of virtual memory");

547 
sym_ãxtsyms_by_«me
 =

548 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

549 i‡(!
sym_ãxtsyms_by_«me
)

550 
	`Áèl
("out of virtual memory");

552 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

554 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

556 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

557 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

558 
debug_˙t
++;

562 i‡(
debug_˙t
 !
sym_¡extsyms
)

563 
	`∑nic
("couldÇotÜocateállÅext symbols");

566 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

569 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

570 (
sym_sym_t
 *), (*)
ncmp
);

573 
sym_d©asyms
 =

574 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

575 i‡(!
sym_d©asyms
)

576 
	`Áèl
("out of virtual memory");

578 
sym_d©asyms_by_«me
 =

579 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

580 i‡(!
sym_d©asyms_by_«me
)

581 
	`Áèl
("out of virtual memory");

583 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

585 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

587 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

588 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

589 
debug_˙t
++;

593 i‡(
debug_˙t
 !
sym_nd©asyms
)

594 
	`∑nic
("couldÇotÜocateáll data symbols");

597 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

600 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

601 (
sym_sym_t
 *), (*)
ncmp
);

604 
i
=0; i<
sym_¡extsyms
; i++)

606 
sym_ãxtsyms
[
i
]->
size
 =

607 (
i
 !(
sym_¡extsyms
 - 1)

608 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

609 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

611 
i
=0; i<
sym_nd©asyms
; i++)

613 
sym_d©asyms
[
i
]->
size
 =

614 (
i
 !(
sym_nd©asyms
 - 1)

615 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

616 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

620 
syms_lﬂded
 = 
TRUE
;

621 
	}
}

625 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

626 
FILE
 *
fd
)

628 
	`myÂrötf
(
fd
,

630 
sym
->
«me
,

631 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

632 
sym
->
öôülized
 ? "y" : "n",

633 
sym
->
pub
 ? "y" : "n",

634 
sym
->
loˇl
 ? "y" : "n",

635 
sym
->
addr
,

636 
sym
->
size
);

637 
	}
}

641 
	$sym_dumpsyms
(
FILE
 *
fd
)

643 
i
;

645 
i
=0; i < 
sym_nsyms
; i++)

646 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

647 
	}
}

651 
	$sym_dump°©e
(
FILE
 *
fd
)

653 
i
;

655 i‡(
fd
 =
NULL
)

656 
fd
 = 
°dîr
;

658 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

659 
i
=0; i < 
sym_nsyms
; i++)

660 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

662 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

663 
i
=0; i < 
sym_nsyms
; i++)

664 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

666 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

667 
i
=0; i < 
sym_¡extsyms
; i++)

668 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

670 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

671 
i
=0; i < 
sym_¡extsyms
; i++)

672 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

674 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

675 
i
=0; i < 
sym_nd©asyms
; i++)

676 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

678 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

679 
i
=0; i < 
sym_nd©asyms
; i++)

680 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

681 
	}
}

687 
sym_sym_t
 *

688 
	$sym_böd_addr
(
md_addr_t
 
addr
,

689 *
pödex
,

690 
exa˘
,

691 
sym_db_t
 
db
)

693 
nsyms
, 
low
, 
high
, 
pos
;

694 
sym_sym_t
 **
syms
;

696 
db
)

698 
sdb_™y
:

699 
syms
 = 
sym_syms
;

700 
nsyms
 = 
sym_nsyms
;

702 
sdb_ãxt
:

703 
syms
 = 
sym_ãxtsyms
;

704 
nsyms
 = 
sym_¡extsyms
;

706 
sdb_d©a
:

707 
syms
 = 
sym_d©asyms
;

708 
nsyms
 = 
sym_nd©asyms
;

711 
	`∑nic
("bogus symbol database");

715 i‡(!
nsyms
)

717 i‡(
pödex
)

718 *
pödex
 = -1;

719  
NULL
;

723 
low
 = 0;

724 
high
 = 
nsyms
-1;

725 
pos
 = (
low
 + 
high
) >> 1;

727 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

729 || (!
exa˘


730 && 
syms
[
pos
]->
addr
 <=áddr

731 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

733 i‡(
addr
 < 
syms
[
pos
]->addr)

734 
high
 = 
pos
 - 1;

736 
low
 = 
pos
 + 1;

737 i‡(
high
 >
low
)

738 
pos
 = (
low
 + 
high
) >> 1;

741 i‡(
pödex
)

742 *
pödex
 = -1;

743  
NULL
;

748 i‡(
pödex
)

749 *
pödex
 = 
pos
;

750  
syms
[
pos
];

751 
	}
}

756 
sym_sym_t
 *

757 
	$sym_böd_«me
(*
«me
,

758 *
pödex
,

759 
sym_db_t
 
db
)

761 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

762 
sym_sym_t
 **
syms
;

764 
db
)

766 
sdb_™y
:

767 
syms
 = 
sym_syms_by_«me
;

768 
nsyms
 = 
sym_nsyms
;

770 
sdb_ãxt
:

771 
syms
 = 
sym_ãxtsyms_by_«me
;

772 
nsyms
 = 
sym_¡extsyms
;

774 
sdb_d©a
:

775 
syms
 = 
sym_d©asyms_by_«me
;

776 
nsyms
 = 
sym_nd©asyms
;

779 
	`∑nic
("bogus symbol database");

783 i‡(!
nsyms
)

785 i‡(
pödex
)

786 *
pödex
 = -1;

787  
NULL
;

791 
low
 = 0;

792 
high
 = 
nsyms
-1;

793 
pos
 = (
low
 + 
high
) >> 1;

794 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

796 i‡(
cmp
 > 0)

797 
high
 = 
pos
 - 1;

799 
low
 = 
pos
 + 1;

800 i‡(
high
 >
low
)

801 
pos
 = (
low
 + 
high
) >> 1;

804 i‡(
pödex
)

805 *
pödex
 = -1;

806  
NULL
;

811 i‡(
pödex
)

812 *
pödex
 = 
pos
;

813  
syms
[
pos
];

814 
	}
}

	@target-alpha-linux/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~<sys/ty≥s.h
>

56 
	~<sys/°©.h
>

57 
	~<sys/ut¢ame.h
>

58 
	~<sys/sysöfo.h
>

59 
	~<sys/time.h
>

60 
	~<sys/uio.h
>

64 #i‚de‡
MIN_SYSCALL_MODE


65 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

66 
	#MIN_SYSCALL_MODE


	)

71 #ifde‡
_MSC_VER


72 
	~<io.h
>

74 
	~<uni°d.h
>

76 
	~<f˙é.h
>

77 
	~<sys/ty≥s.h
>

78 #i‚de‡
_MSC_VER


79 
	~<sys/∑øm.h
>

81 
	~<î∫o.h
>

82 
	~<time.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/time.h
>

86 #i‚de‡
_MSC_VER


87 
	~<sys/ªsour˚.h
>

89 
	~<sig«l.h
>

90 #i‚de‡
_MSC_VER


91 
	~<sys/fûe.h
>

93 
	~<sys/°©.h
>

94 #i‚de‡
_MSC_VER


95 
	~<sys/uio.h
>

97 
	~<£tjmp.h
>

98 #i‚de‡
_MSC_VER


99 
	~<sys/times.h
>

101 
	~<limôs.h
>

102 #i‚de‡
_MSC_VER


103 
	~<sys/io˘l.h
>

105 #i‡
deföed
(
löux
)

106 
	~<utime.h
>

107 
	~<dúít.h
>

108 
	~<sys/vfs.h
>

110 #i‡
deföed
(
_AIX
)

111 
	~<sys/°©fs.h
>

113 #i‚de‡
_MSC_VER


114 
	~<sys/mou¡.h
>

117 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

118 #i‚de‡
_MSC_VER


119 
	~<sys/£À˘.h
>

122 #ifde‡
löux


123 
	~<sgây.h
>

124 
	~<√töë/t˝.h
>

125 
	~<√töë/udp.h
>

126 
	~<√töë/ö.h
>

129 #i‡
deföed
(
__svr4__
)

130 
	~<sys/dúít.h
>

131 
	~<sys/fûio.h
>

132 #ñi‡
deföed
(
__osf__
)

133 
	~<dúít.h
>

138 
gëdúíåõs
(
fd
, *
buf
, 
nbyãs
, *
ba£p
);

141 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

142 
	~<sys/°©vfs.h
>

143 
	#°©fs
 
°©vfs


	)

144 
	~<sys/time.h
>

145 
	~<utime.h
>

146 
	~<sgây.h
>

147 
	~<√töë/ö.h
>

148 
	~<√töë/t˝.h
>

151 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

152 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

153 
	~<dúít.h
>

155 
	~<sys/dú.h
>

159 #unde‡
NL0


160 #unde‡
NL1


161 #unde‡
CR0


162 #unde‡
CR1


163 #unde‡
CR2


164 #unde‡
CR3


165 #unde‡
TAB0


166 #unde‡
TAB1


167 #unde‡
TAB2


168 #unde‡
XTABS


169 #unde‡
BS0


170 #unde‡
BS1


171 #unde‡
FF0


172 #unde‡
FF1


173 #unde‡
ECHO


174 #unde‡
NOFLSH


175 #unde‡
TOSTOP


176 #unde‡
FLUSHO


177 #unde‡
PENDIN


180 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

181 #unde‡
CR0


184 #ifde‡
__FªeBSD__


185 
	~<sys/io˘l_com∑t.h
>

187 #i‚de‡
_MSC_VER


188 
	~<ãrmio.h
>

192 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

194 #unde‡
HUPCL


195 #unde‡
ECHO


196 #unde‡
B50


197 #unde‡
B75


198 #unde‡
B110


199 #unde‡
B134


200 #unde‡
B150


201 #unde‡
B200


202 #unde‡
B300


203 #unde‡
B600


204 #unde‡
B1200


205 #unde‡
B1800


206 #unde‡
B2400


207 #unde‡
B4800


208 #unde‡
B9600


209 #unde‡
B19200


210 #unde‡
B38400


211 #unde‡
NL0


212 #unde‡
NL1


213 #unde‡
CR0


214 #unde‡
CR1


215 #unde‡
CR2


216 #unde‡
CR3


217 #unde‡
TAB0


218 #unde‡
TAB1


219 #unde‡
BS0


220 #unde‡
BS1


221 #unde‡
FF0


222 #unde‡
FF1


223 #unde‡
EXTA


224 #unde‡
EXTB


225 #unde‡
B900


226 #unde‡
B3600


227 #unde‡
B7200


228 #unde‡
XTABS


229 
	~<sgây.h
>

230 
	~<utime.h
>

233 #ifde‡
__CYGWIN32__


234 
	~<sys/uni°d.h
>

235 
	~<sys/vfs.h
>

238 
	~<sys/sockë.h
>

239 
	~<sys/pﬁl.h
>

241 #ifde‡
_MSC_VER


242 
	#ac˚ss
 
_ac˚ss


	)

243 
	#chmod
 
_chmod


	)

244 
	#chdú
 
_chdú


	)

245 
	#u∆ök
 
_u∆ök


	)

246 
	#›í
 
_›í


	)

247 
	#¸ót
 
_¸ót


	)

248 
	#pùe
 
_pùe


	)

249 
	#dup
 
_dup


	)

250 
	#dup2
 
_dup2


	)

251 
	#°©
 
_°©


	)

252 
	#f°©
 
_f°©


	)

253 
	#l£ek
 
_l£ek


	)

254 
	#ªad
 
_ªad


	)

255 
	#wrôe
 
_wrôe


	)

256 
	#˛o£
 
_˛o£


	)

257 
	#gëpid
 
_gëpid


	)

258 
	#utime
 
_utime


	)

259 
	~<sys/utime.h
>

262 
	~"ho°.h
"

263 
	~"misc.h
"

264 
	~"machöe.h
"

265 
	~"ªgs.h
"

266 
	~"mem‹y.h
"

267 
	~"lﬂdî.h
"

268 
	~"sim.h
"

269 
	~"ídün.h
"

270 
	~"eio.h
"

271 
	~"sysˇŒ.h
"

273 
	#OSF_SYS_sysˇŒ
 0

	)

275 
	#OSF_SYS_f‹k
 2

	)

276 
	#OSF_SYS_ªad
 3

	)

278 
	#OSF_SYS_ﬁd_›í
 5

	)

279 
	#OSF_SYS_˛o£
 6

	)

280 
	#OSF_SYS_waô4
 7

	)

281 
	#OSF_SYS_ﬁd_¸ót
 8

	)

282 
	#OSF_SYS_lök
 9

	)

283 
	#OSF_SYS_u∆ök
 10

	)

284 
	#OSF_SYS_execv
 11

	)

285 
	#OSF_SYS_chdú
 12

	)

286 
	#OSF_SYS_fchdú
 13

	)

287 
	#OSF_SYS_mknod
 14

	)

288 
	#OSF_SYS_chmod
 15

	)

289 
	#OSF_SYS_chown
 16

	)

290 
	#OSF_SYS_obªak
 17

	)

291 
	#OSF_SYS_gëfs°©
 18

	)

292 
	#OSF_SYS_l£ek
 19

	)

293 
	#OSF_SYS_gëpid
 20

	)

294 
	#OSF_SYS_mou¡
 21

	)

295 
	#OSF_SYS_unmou¡
 22

	)

296 
	#OSF_SYS_£tuid
 23

	)

297 
	#OSF_SYS_gëuid
 24

	)

298 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

299 
	#OSF_SYS_±ø˚
 26

	)

300 #ifde‡ 
COMPAT_43


301 
	#OSF_SYS_ƒecvmsg
 27

	)

302 
	#OSF_SYS_n£ndmsg
 28

	)

303 
	#OSF_SYS_ƒecv‰om
 29

	)

304 
	#OSF_SYS_«c˚±
 30

	)

305 
	#OSF_SYS_ngë≥î«me
 31

	)

306 
	#OSF_SYS_ngësock«me
 32

	)

308 
	#OSF_SYS_ªcvmsg
 27

	)

309 
	#OSF_SYS_£ndmsg
 28

	)

310 
	#OSF_SYS_ªcv‰om
 29

	)

311 
	#OSF_SYS_ac˚±
 30

	)

312 
	#OSF_SYS_gë≥î«me
 31

	)

313 
	#OSF_SYS_gësock«me
 32

	)

315 
	#OSF_SYS_ac˚ss
 33

	)

316 
	#OSF_SYS_chÊags
 34

	)

317 
	#OSF_SYS_fchÊags
 35

	)

318 
	#OSF_SYS_sync
 36

	)

319 
	#OSF_SYS_kûl
 37

	)

320 
	#OSF_SYS_ﬁd_°©
 38

	)

321 
	#OSF_SYS_£çgid
 39

	)

322 
	#OSF_SYS_ﬁd_l°©
 40

	)

323 
	#OSF_SYS_dup
 41

	)

324 
	#OSF_SYS_pùe
 42

	)

325 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

326 
	#OSF_SYS_¥ofû
 44

	)

327 
	#OSF_SYS_›í
 45

	)

329 
	#OSF_SYS_gëgid
 47

	)

330 
	#OSF_SYS_sig¥ocmask
 48

	)

331 
	#OSF_SYS_gëlogö
 49

	)

332 
	#OSF_SYS_£éogö
 50

	)

333 
	#OSF_SYS_ac˘
 51

	)

334 
	#OSF_SYS_sig≥ndög
 52

	)

335 
	#OSF_SYS_io˘l
 54

	)

336 
	#OSF_SYS_ªboŸ
 55

	)

337 
	#OSF_SYS_ªvoke
 56

	)

338 
	#OSF_SYS_symlök
 57

	)

339 
	#OSF_SYS_ªadlök
 58

	)

340 
	#OSF_SYS_execve
 59

	)

341 
	#OSF_SYS_umask
 60

	)

342 
	#OSF_SYS_chroŸ
 61

	)

343 
	#OSF_SYS_ﬁd_f°©
 62

	)

344 
	#OSF_SYS_gëpgΩ
 63

	)

345 
	#OSF_SYS_gë∑gesize
 64

	)

346 
	#OSF_SYS_mªm≠
 65

	)

347 
	#OSF_SYS_vf‹k
 66

	)

348 
	#OSF_SYS_°©
 67

	)

349 
	#OSF_SYS_l°©
 68

	)

350 
	#OSF_SYS_sbrk
 69

	)

351 
	#OSF_SYS_s°k
 70

	)

352 
	#OSF_SYS_mm≠
 71

	)

353 
	#OSF_SYS_ovadvi£
 72

	)

354 
	#OSF_SYS_munm≠
 73

	)

355 
	#OSF_SYS_m¥Ÿe˘
 74

	)

356 
	#OSF_SYS_madvi£
 75

	)

357 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

358 
	#OSF_SYS_kmodˇŒ
 77

	)

359 
	#OSF_SYS_möc‹e
 78

	)

360 
	#OSF_SYS_gëgroups
 79

	)

361 
	#OSF_SYS_£tgroups
 80

	)

362 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

363 
	#OSF_SYS_£çgΩ
 82

	)

364 
	#OSF_SYS_£tôimî
 83

	)

365 
	#OSF_SYS_ﬁd_waô
 84

	)

366 
	#OSF_SYS_èbÀ
 85

	)

367 
	#OSF_SYS_gëôimî
 86

	)

368 
	#OSF_SYS_gëho°«me
 87

	)

369 
	#OSF_SYS_£tho°«me
 88

	)

370 
	#OSF_SYS_gëdèbÀsize
 89

	)

371 
	#OSF_SYS_dup2
 90

	)

372 
	#OSF_SYS_f°©
 91

	)

373 
	#OSF_SYS_f˙é
 92

	)

374 
	#OSF_SYS_£À˘
 93

	)

375 
	#OSF_SYS_pﬁl
 94

	)

376 
	#OSF_SYS_fsync
 95

	)

377 
	#OSF_SYS_£çri‹ôy
 96

	)

378 
	#OSF_SYS_sockë
 97

	)

379 
	#OSF_SYS_c⁄√˘
 98

	)

380 #ifde‡ 
COMPAT_43


381 
	#OSF_SYS_ac˚±
 99

	)

383 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

385 
	#OSF_SYS_gë¥i‹ôy
 100

	)

386 #ifde‡ 
COMPAT_43


387 
	#OSF_SYS_£nd
 101

	)

388 
	#OSF_SYS_ªcv
 102

	)

390 
	#OSF_SYS_ﬁd_£nd
 101

	)

391 
	#OSF_SYS_ﬁd_ªcv
 102

	)

393 
	#OSF_SYS_sigªtu∫
 103

	)

394 
	#OSF_SYS_böd
 104

	)

395 
	#OSF_SYS_£tsock›t
 105

	)

396 
	#OSF_SYS_li°í
 106

	)

397 
	#OSF_SYS_∂ock
 107

	)

398 
	#OSF_SYS_ﬁd_sigvec
 108

	)

399 
	#OSF_SYS_ﬁd_sigblock
 109

	)

400 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

401 
	#OSF_SYS_sigsu•íd
 111

	)

402 
	#OSF_SYS_sig°ack
 112

	)

403 #ifde‡ 
COMPAT_43


404 
	#OSF_SYS_ªcvmsg
 113

	)

405 
	#OSF_SYS_£ndmsg
 114

	)

407 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

408 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

411 
	#OSF_SYS_gëtimeofday
 116

	)

412 
	#OSF_SYS_gërußge
 117

	)

413 
	#OSF_SYS_gësock›t
 118

	)

414 
	#OSF_SYS_ªadv
 120

	)

415 
	#OSF_SYS_wrôev
 121

	)

416 
	#OSF_SYS_£âimeofday
 122

	)

417 
	#OSF_SYS_fchown
 123

	)

418 
	#OSF_SYS_fchmod
 124

	)

419 #ifde‡ 
COMPAT_43


420 
	#OSF_SYS_ªcv‰om
 125

	)

422 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

424 
	#OSF_SYS_£åeuid
 126

	)

425 
	#OSF_SYS_£åegid
 127

	)

426 
	#OSF_SYS_ª«me
 128

	)

427 
	#OSF_SYS_åunˇã
 129

	)

428 
	#OSF_SYS_·runˇã
 130

	)

429 
	#OSF_SYS_Êock
 131

	)

430 
	#OSF_SYS_£tgid
 132

	)

431 
	#OSF_SYS_£ndto
 133

	)

432 
	#OSF_SYS_shutdown
 134

	)

433 
	#OSF_SYS_sockë∑ú
 135

	)

434 
	#OSF_SYS_mkdú
 136

	)

435 
	#OSF_SYS_rmdú
 137

	)

436 
	#OSF_SYS_utimes
 138

	)

438 
	#OSF_SYS_adjtime
 140

	)

439 #ifde‡ 
COMPAT_43


440 
	#OSF_SYS_gë≥î«me
 141

	)

442 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

444 
	#OSF_SYS_gëho°id
 142

	)

445 
	#OSF_SYS_£tho°id
 143

	)

446 
	#OSF_SYS_gëæimô
 144

	)

447 
	#OSF_SYS_£ålimô
 145

	)

448 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

449 
	#OSF_SYS_£tsid
 147

	)

450 
	#OSF_SYS_quŸa˘l
 148

	)

451 
	#OSF_SYS_ﬁdquŸa
 149

	)

452 #ifde‡ 
COMPAT_43


453 
	#OSF_SYS_gësock«me
 150

	)

455 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

457 
	#OSF_SYS_pid_block
 153

	)

458 
	#OSF_SYS_pid_unblock
 154

	)

459 
	#OSF_SYS_siga˘i⁄
 156

	)

460 
	#OSF_SYS_sigwaô¥im
 157

	)

461 
	#OSF_SYS_nfssvc
 158

	)

462 
	#OSF_SYS_gëdúíåõs
 159

	)

463 
	#OSF_SYS_°©fs
 160

	)

464 
	#OSF_SYS_f°©fs
 161

	)

465 
	#OSF_SYS_async_d´m⁄
 163

	)

466 
	#OSF_SYS_gëfh
 164

	)

467 
	#OSF_SYS_gëdomaö«me
 165

	)

468 
	#OSF_SYS_£tdomaö«me
 166

	)

469 
	#OSF_SYS_exp‹tfs
 169

	)

470 
	#OSF_SYS_Æt_∂ock
 181

	)

471 
	#OSF_SYS_gëm¡
 184

	)

472 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

473 
	#OSF_SYS_Æt_£tsid
 188

	)

474 
	#OSF_SYS_sw≠⁄
 199

	)

475 
	#OSF_SYS_msg˘l
 200

	)

476 
	#OSF_SYS_msggë
 201

	)

477 
	#OSF_SYS_msgrcv
 202

	)

478 
	#OSF_SYS_msg¢d
 203

	)

479 
	#OSF_SYS_£m˘l
 204

	)

480 
	#OSF_SYS_£mgë
 205

	)

481 
	#OSF_SYS_£m›
 206

	)

482 
	#OSF_SYS_u«me
 207

	)

483 
	#OSF_SYS_lchown
 208

	)

484 
	#OSF_SYS_shm©
 209

	)

485 
	#OSF_SYS_shm˘l
 210

	)

486 
	#OSF_SYS_shmdt
 211

	)

487 
	#OSF_SYS_shmgë
 212

	)

488 
	#OSF_SYS_mvÆid
 213

	)

489 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

490 
	#OSF_SYS_m¶ìp
 215

	)

491 
	#OSF_SYS_mwakeup
 216

	)

492 
	#OSF_SYS_msync
 217

	)

493 
	#OSF_SYS_sig«l
 218

	)

494 
	#OSF_SYS_utc_gëtime
 219

	)

495 
	#OSF_SYS_utc_adjtime
 220

	)

496 
	#OSF_SYS_£curôy
 222

	)

497 
	#OSF_SYS_klﬂdˇŒ
 223

	)

498 
	#OSF_SYS_gëpgid
 233

	)

499 
	#OSF_SYS_gësid
 234

	)

500 
	#OSF_SYS_sigÆt°ack
 235

	)

501 
	#OSF_SYS_waôid
 236

	)

502 
	#OSF_SYS_¥io˙é£t
 237

	)

503 
	#OSF_SYS_sig£nd£t
 238

	)

504 
	#OSF_SYS_£t_•ecuœtive
 239

	)

505 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

506 
	#OSF_SYS_sysöfo
 241

	)

507 
	#OSF_SYS_uadmö
 242

	)

508 
	#OSF_SYS_fu£r
 243

	)

509 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

510 
	#OSF_SYS_¡p_adjtime
 245

	)

511 
	#OSF_SYS_¡p_gëtime
 246

	)

512 
	#OSF_SYS_∑thc⁄f
 247

	)

513 
	#OSF_SYS_Â©hc⁄f
 248

	)

514 
	#OSF_SYS_uswôch
 250

	)

515 
	#OSF_SYS_u¶ìp_thªad
 251

	)

516 
	#OSF_SYS_aud˙é
 252

	)

517 
	#OSF_SYS_audgí
 253

	)

518 
	#OSF_SYS_sysfs
 254

	)

519 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

520 
	#OSF_SYS_gësysöfo
 256

	)

521 
	#OSF_SYS_£tsysöfo
 257

	)

522 
	#OSF_SYS_afs_sysˇŒ
 258

	)

523 
	#OSF_SYS_sw≠˘l
 259

	)

524 
	#OSF_SYS_mem˙é
 260

	)

525 
	#OSF_SYS_fd©async
 261

	)

532 
	#PAGE_SIZE
 8192

533 

	)

535 c⁄° 
	gALPHA_O_RDONLY
 = 00000000;

536 c⁄° 
	gALPHA_O_WRONLY
 = 00000001;

537 c⁄° 
	gALPHA_O_RDWR
 = 00000002;

538 c⁄° 
	gALPHA_O_NONBLOCK
 = 00000004;

539 c⁄° 
	gALPHA_O_APPEND
 = 00000010;

540 c⁄° 
	gALPHA_O_CREAT
 = 00001000;

541 c⁄° 
	gALPHA_O_TRUNC
 = 00002000;

542 c⁄° 
	gALPHA_O_EXCL
 = 00004000;

543 c⁄° 
	gALPHA_O_NOCTTY
 = 00010000;

544 c⁄° 
	gALPHA_O_SYNC
 = 00040000;

545 c⁄° 
	gALPHA_O_DRD
 = 00100000;

546 c⁄° 
	gALPHA_O_DIRECTIO
 = 00200000;

547 c⁄° 
	gALPHA_O_CACHE
 = 00400000;

548 c⁄° 
	gALPHA_O_DSYNC
 = 02000000;

549 c⁄° 
	gALPHA_O_RSYNC
 = 04000000;

552 c⁄° 
	gALPHA_IOCTL_TIOCGETP
 = 0x40067408;

553 c⁄° 
	gALPHA_IOCTL_TIOCSETP
 = 0x80067409;

554 c⁄° 
	gALPHA_IOCTL_TIOCSETN
 = 0x8006740a;

555 c⁄° 
	gALPHA_IOCTL_TIOCSETC
 = 0x80067411;

556 c⁄° 
	gALPHA_IOCTL_TIOCGETC
 = 0x40067412;

557 c⁄° 
	gALPHA_IOCTL_FIONREAD
 = 0x4004667f;

558 c⁄° 
	gALPHA_IOCTL_TIOCISATTY
 = 0x2000745e;

559 c⁄° 
	gALPHA_IOCTL_TIOCGETS
 = 0x402c7413;

560 c⁄° 
	gALPHA_IOCTL_TIOCGETA
 = 0x40127417;

563 c⁄° 
	gALPHA_RLIMIT_CPU
 = 0;

564 c⁄° 
	gALPHA_RLIMIT_FSIZE
 = 1;

565 c⁄° 
	gALPHA_RLIMIT_DATA
 = 2;

566 c⁄° 
	gALPHA_RLIMIT_STACK
 = 3;

567 c⁄° 
	gALPHA_RLIMIT_CORE
 = 4;

568 c⁄° 
	gALPHA_RLIMIT_RSS
 = 5;

569 c⁄° 
	gALPHA_RLIMIT_NOFILE
 = 6;

570 c⁄° 
	gALPHA_RLIMIT_AS
 = 7;

571 c⁄° 
	gALPHA_RLIMIT_VMEM
 = 7;

572 c⁄° 
	gALPHA_RLIMIT_NPROC
 = 8;

573 c⁄° 
	gALPHA_RLIMIT_MEMLOCK
 = 9;

574 c⁄° 
	gALPHA_RLIMIT_LOCKS
 = 10;

583 
	msy¢ame
[65];

584 
	mnodíame
[65];

585 
	mªÀa£
[65];

586 
	mvîsi⁄
[65];

587 
	mmachöe
[65];

588 
	mdomaö«me
[65];

589 } 
	tÆpha_ut¢ame
;

593 
uöt64_t
 
	mæim_cur
;

594 
uöt64_t
 
	mæim_max
;

595 } 
	tÆpha_æimô
;

599 
uöt32_t
 
	m°_dev
;

600 
uöt32_t
 
	m°_öo
;

601 
uöt32_t
 
	m°_mode
;

602 
uöt32_t
 
	m°_∆ök
;

603 
uöt32_t
 
	m°_uid
;

604 
uöt32_t
 
	m°_gid
;

605 
uöt32_t
 
	m°_rdev
;

606 
öt32_t
 
	m__∑d0
;

607 
öt64_t
 
	m°_size
;

608 
uöt64_t
 
	m°_©imeX
;

609 
uöt64_t
 
	m°_mtimeX
;

610 
uöt64_t
 
	m°_˘imeX
;

611 
uöt32_t
 
	m°_blksize
;

612 
öt32_t
 
	m°_blocks
;

613 
uöt32_t
 
	m°_Êags
;

614 
uöt32_t
 
	m°_gí
;

615 } 
	tÆpha_°©
;

619 
uöt64_t
 
	m°_dev
;

620 
uöt64_t
 
	m°_öo
;

621 
uöt64_t
 
	m°_rdev
;

622 
uöt64_t
 
	m°_size
;

623 
uöt64_t
 
	m°_blocks
;

625 
uöt32_t
 
	m°_mode
;

626 
uöt32_t
 
	m°_uid
;

627 
uöt32_t
 
	m°_gid
;

628 
uöt32_t
 
	m°_blksize
;

629 
uöt32_t
 
	m°_∆ök
;

630 
uöt32_t
 
	m__∑d0
;

632 
uöt64_t
 
	m°_©imeX
;

633 
uöt64_t
 
	m°_©ime_n£c
;

634 
uöt64_t
 
	m°_mtimeX
;

635 
uöt64_t
 
	m°_mtime_n£c
;

636 
uöt64_t
 
	m°_˘imeX
;

637 
uöt64_t
 
	m°_˘ime_n£c
;

638 
öt64_t
 
	m__unu£d
[3];

639 } 
	tÆpha_°©64
;

643 
öt64_t
 
	mtv_£c
;

644 
öt64_t
 
	mtv_u£c
;

645 } 
	tÆpha_timevÆ
;

649 
öt64_t
 
	mtz_möuãswe°
;

650 
öt64_t
 
	mtz_d°time
;

651 } 
	tÆpha_timez⁄e
;

655 
uöt64_t
 
	miov_ba£
;

656 
uöt64_t
 
	miov_Àn
;

657 } 
	tÆpha_iovec
;

663 
	sxœã_èbÀ_t


665 
	mèrgë_vÆ
;

666 
	mho°_vÆ
;

670 
	$xœã_¨g
(
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

672 
i
;

674 
i
=0; i < 
m≠_sz
; i++)

676 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

677  
m≠
[
i
].
ho°_vÆ
;

681 
	`w¨n
("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

682  
èrgë_vÆ
;

683 
	}
}

687 
	#MAXBUFSIZE
 1024

	)

693 
	#NUM_IOCTL_BYTES
 128

	)

694 
	#SYSCALL_BUFFER_SIZE
 1024

695 

	)

697 
	#OSF_TIOCGETP
 0x40067408

	)

698 
	#OSF_FIONREAD
 0x4004667f

	)

702 
	sosf_°©buf


704 
w‹d_t
 
	mosf_°_dev
;

705 
w‹d_t
 
	mosf_°_öo
;

706 
w‹d_t
 
	mosf_°_mode
;

707 
hÆf_t
 
	mosf_°_∆ök
;

708 
hÆf_t
 
	m∑d0
;

709 
w‹d_t
 
	mosf_°_uid
;

710 
w‹d_t
 
	mosf_°_gid
;

711 
w‹d_t
 
	mosf_°_rdev
;

712 
w‹d_t
 
	m∑d1
;

713 
qw‹d_t
 
	mosf_°_size
;

714 
w‹d_t
 
	mosf_°_©ime
;

715 
w‹d_t
 
	mosf_°_•¨e1
;

716 
w‹d_t
 
	mosf_°_mtime
;

717 
w‹d_t
 
	mosf_°_•¨e2
;

718 
w‹d_t
 
	mosf_°_˘ime
;

719 
w‹d_t
 
	mosf_°_•¨e3
;

720 
w‹d_t
 
	mosf_°_blksize
;

721 
w‹d_t
 
	mosf_°_blocks
;

722 
w‹d_t
 
	mosf_°_gínum
;

723 
w‹d_t
 
	mosf_°_•¨e4
;

726 
	sosf_sgâyb
 {

727 
byã_t
 
	msg_i•ìd
;

728 
byã_t
 
	msg_o•ìd
;

729 
byã_t
 
	msg_îa£
;

730 
byã_t
 
	msg_kûl
;

731 
shÆf_t
 
	msg_Êags
;

734 
	#OSF_NSIG
 32

	)

736 
	#OSF_SIG_BLOCK
 1

	)

737 
	#OSF_SIG_UNBLOCK
 2

	)

738 
	#OSF_SIG_SETMASK
 3

	)

740 
	sosf_sigc⁄ãxt
 {

741 
qw‹d_t
 
	msc_⁄°ack
;

742 
qw‹d_t
 
	msc_mask
;

743 
qw‹d_t
 
	msc_pc
;

744 
qw‹d_t
 
	msc_ps
;

745 
qw‹d_t
 
	msc_ªgs
[32];

746 
qw‹d_t
 
	msc_ow√dÂ
;

747 
qw‹d_t
 
	msc_Âªgs
[32];

748 
qw‹d_t
 
	msc_Â¸
;

749 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

752 
	sosf_°©fs
 {

753 
shÆf_t
 
	mf_ty≥
;

754 
shÆf_t
 
	mf_Êags
;

755 
w‹d_t
 
	mf_fsize
;

756 
w‹d_t
 
	mf_bsize
;

757 
w‹d_t
 
	mf_blocks
;

759 
w‹d_t
 
	mf_b‰ì
;

760 
w‹d_t
 
	mf_bavaû
;

761 
w‹d_t
 
	mf_fûes
;

762 
w‹d_t
 
	mf_f‰ì
;

763 
qw‹d_t
 
	mf_fsid
;

764 
w‹d_t
 
	mf_•¨e
[9];

767 
	sosf_timevÆ


769 
sw‹d_t
 
	mosf_tv_£c
;

770 
sw‹d_t
 
	mosf_tv_u£c
;

773 
	sosf_timez⁄e


775 
sw‹d_t
 
	mosf_tz_möuãswe°
;

776 
sw‹d_t
 
	mosf_tz_d°time
;

781 
	sosf_rußge


783 
osf_timevÆ
 
	mosf_ru_utime
;

784 
osf_timevÆ
 
	mosf_ru_°ime
;

785 
sw‹d_t
 
	mosf_ru_maxrss
;

786 
sw‹d_t
 
	mosf_ru_ixrss
;

787 
sw‹d_t
 
	mosf_ru_idrss
;

788 
sw‹d_t
 
	mosf_ru_i§ss
;

789 
sw‹d_t
 
	mosf_ru_möÊt
;

790 
sw‹d_t
 
	mosf_ru_majÊt
;

791 
sw‹d_t
 
	mosf_ru_nsw≠
;

792 
sw‹d_t
 
	mosf_ru_öblock
;

793 
sw‹d_t
 
	mosf_ru_oublock
;

794 
sw‹d_t
 
	mosf_ru_msg¢d
;

795 
sw‹d_t
 
	mosf_ru_msgrcv
;

796 
sw‹d_t
 
	mosf_ru_nsig«ls
;

797 
sw‹d_t
 
	mosf_ru_nvcsw
;

798 
sw‹d_t
 
	mosf_ru_nivcsw
;

801 
	sosf_æimô


803 
qw‹d_t
 
	mosf_æim_cur
;

804 
qw‹d_t
 
	mosf_æim_max
;

807 
	sosf_sockaddr


809 
hÆf_t
 
	mß_Ámûy
;

810 
byã_t
 
	mß_d©a
[24];

813 
	sosf_iovec


815 
md_addr_t
 
	miov_ba£
;

816 
w‹d_t
 
	miov_Àn
;

817 
w‹d_t
 
	m∑d
;

821 
	#OSF_DIRENT_SZ
(
STR
) \

822 ((
w‹d_t
Ë+ 2*(
hÆf_t
Ë+ (((
	`°æí
(
STR
Ë+ 1Ë+ 3)/4)*4)

	)

824 
	sosf_dúít


826 
w‹d_t
 
	md_öo
;

827 
hÆf_t
 
	md_ª˛í
;

828 
hÆf_t
 
	md_«mÀn
;

829 
	md_«me
[256];

839 
	#OSF_O_RDONLY
 0x0000

	)

840 
	#OSF_O_WRONLY
 0x0001

	)

841 
	#OSF_O_RDWR
 0x0002

	)

842 
	#OSF_O_NONBLOCK
 0x0004

	)

843 
	#OSF_O_APPEND
 0x0008

	)

844 
	#OSF_O_CREAT
 0x0200

	)

845 
	#OSF_O_TRUNC
 0x0400

	)

846 
	#OSF_O_EXCL
 0x0800

	)

847 
	#OSF_O_NOCTTY
 0x1000

	)

848 
	#OSF_O_SYNC
 0x4000

	)

852 
	mosf_Êag
;

853 
	mloˇl_Êag
;

854 } 
	gosf_Êag_èbÀ
[] = {

856 #ifde‡
_MSC_VER


857 { 
OSF_O_RDONLY
, 
_O_RDONLY
 },

858 { 
OSF_O_WRONLY
, 
_O_WRONLY
 },

859 { 
OSF_O_RDWR
, 
_O_RDWR
 },

860 { 
OSF_O_APPEND
, 
_O_APPEND
 },

861 { 
OSF_O_CREAT
, 
_O_CREAT
 },

862 { 
OSF_O_TRUNC
, 
_O_TRUNC
 },

863 { 
OSF_O_EXCL
, 
_O_EXCL
 },

864 #ifde‡
_O_NONBLOCK


865 { 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
 },

867 #ifde‡
_O_NOCTTY


868 { 
OSF_O_NOCTTY
, 
_O_NOCTTY
 },

870 #ifde‡
_O_SYNC


871 { 
OSF_O_SYNC
, 
_O_SYNC
 },

874 { 
OSF_O_RDONLY
, 
O_RDONLY
 },

875 { 
OSF_O_WRONLY
, 
O_WRONLY
 },

876 { 
OSF_O_RDWR
, 
O_RDWR
 },

877 { 
OSF_O_APPEND
, 
O_APPEND
 },

878 { 
OSF_O_CREAT
, 
O_CREAT
 },

879 { 
OSF_O_TRUNC
, 
O_TRUNC
 },

880 { 
OSF_O_EXCL
, 
O_EXCL
 },

881 { 
OSF_O_NONBLOCK
, 
O_NONBLOCK
 },

882 { 
OSF_O_NOCTTY
, 
O_NOCTTY
 },

883 #ifde‡
O_SYNC


884 { 
OSF_O_SYNC
, 
O_SYNC
 },

888 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

890 
qw‹d_t
 
	gsigmask
 = 0;

892 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] =

896 
	#OSF_SO_DEBUG
 0x0001

	)

897 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

898 
	#OSF_SO_REUSEADDR
 0x0004

	)

899 
	#OSF_SO_KEEPALIVE
 0x0008

	)

900 
	#OSF_SO_DONTROUTE
 0x0010

	)

901 
	#OSF_SO_BROADCAST
 0x0020

	)

902 
	#OSF_SO_USELOOPBACK
 0x0040

	)

903 
	#OSF_SO_LINGER
 0x0080

	)

904 
	#OSF_SO_OOBINLINE
 0x0100

	)

905 
	#OSF_SO_REUSEPORT
 0x0200

	)

907 
xœã_èbÀ_t
 
	gsock›t_m≠
[] =

909 { 
OSF_SO_DEBUG
, 
SO_DEBUG
 },

910 #ifde‡
SO_ACCEPTCONN


911 { 
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
 },

913 { 
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
 },

914 { 
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
 },

915 { 
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
 },

916 { 
OSF_SO_BROADCAST
, 
SO_BROADCAST
 },

917 #ifde‡
SO_USELOOPBACK


918 { 
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
 },

920 { 
OSF_SO_LINGER
, 
SO_LINGER
 },

921 { 
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
 },

922 #ifde‡
SO_REUSEPORT


923 { 
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
 }

928 
	#OSF_TCP_NODELAY
 0x01

	)

929 
	#OSF_TCP_MAXSEG
 0x02

	)

930 
	#OSF_TCP_RPTR2RXT
 0x03

	)

931 
	#OSF_TCP_KEEPIDLE
 0x04

	)

932 
	#OSF_TCP_KEEPINTVL
 0x05

	)

933 
	#OSF_TCP_KEEPCNT
 0x06

	)

934 
	#OSF_TCP_KEEPINIT
 0x07

	)

935 
	#OSF_TCP_PUSH
 0x08

	)

936 
	#OSF_TCP_NODELACK
 0x09

	)

938 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] =

940 { 
OSF_TCP_NODELAY
, 
TCP_NODELAY
 },

941 { 
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
 },

942 #ifde‡
TCP_RPTR2RXT


943 { 
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
 },

945 #ifde‡
TCP_KEEPIDLE


946 { 
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
 },

948 #ifde‡
TCP_KEEPINTVL


949 { 
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
 },

951 #ifde‡
TCP_KEEPCNT


952 { 
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
 },

954 #ifde‡
TCP_KEEPINIT


955 { 
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
 },

957 #ifde‡
TCP_PUSH


958 { 
OSF_TCP_PUSH
, 
TCP_PUSH
 },

960 #ifde‡
TCP_NODELACK


961 { 
OSF_TCP_NODELACK
, 
TCP_NODELACK
 }

966 
	#OSF_SOL_SOCKET
 0xfff‡

	)

967 
	#OSF_SOL_IP
 0

	)

968 
	#OSF_SOL_TCP
 6

	)

969 
	#OSF_SOL_UDP
 17

	)

971 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] =

973 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

974 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

975 { 
OSF_SOL_IP
, 
IPPROTO_IP
 },

976 { 
OSF_SOL_TCP
, 
IPPROTO_TCP
 },

977 { 
OSF_SOL_UDP
, 
IPPROTO_UDP
 }

979 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

980 { 
OSF_SOL_IP
, 
SOL_IP
 },

981 { 
OSF_SOL_TCP
, 
SOL_TCP
 },

982 { 
OSF_SOL_UDP
, 
SOL_UDP
 }

987 
	#OSF_AF_UNSPEC
 0

	)

988 
	#OSF_AF_UNIX
 1

	)

989 
	#OSF_AF_INET
 2

	)

990 
	#OSF_AF_IMPLINK
 3

	)

991 
	#OSF_AF_PUP
 4

	)

992 
	#OSF_AF_CHAOS
 5

	)

993 
	#OSF_AF_NS
 6

	)

994 
	#OSF_AF_ISO
 7

	)

996 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] =

998 { 
OSF_AF_UNSPEC
, 
AF_UNSPEC
 },

999 { 
OSF_AF_UNIX
, 
AF_UNIX
 },

1000 { 
OSF_AF_INET
, 
AF_INET
 },

1001 #ifde‡
AF_IMPLINK


1002 { 
OSF_AF_IMPLINK
, 
AF_IMPLINK
 },

1004 #ifde‡
AF_PUP


1005 { 
OSF_AF_PUP
, 
AF_PUP
 },

1007 #ifde‡
AF_CHAOS


1008 { 
OSF_AF_CHAOS
, 
AF_CHAOS
 },

1010 #ifde‡
AF_NS


1011 { 
OSF_AF_NS
, 
AF_NS
 },

1013 #ifde‡
AF_ISO


1014 { 
OSF_AF_ISO
, 
AF_ISO
 }

1019 
	#OSF_SOCK_STREAM
 1

	)

1020 
	#OSF_SOCK_DGRAM
 2

	)

1021 
	#OSF_SOCK_RAW
 3

	)

1022 
	#OSF_SOCK_RDM
 4

	)

1023 
	#OSF_SOCK_SEQPACKET
 5

	)

1025 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] =

1027 { 
OSF_SOCK_STREAM
, 
SOCK_STREAM
 },

1028 { 
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
 },

1029 { 
OSF_SOCK_RAW
, 
SOCK_RAW
 },

1030 { 
OSF_SOCK_RDM
, 
SOCK_RDM
 },

1031 { 
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
 }

1035 
	#OSF_TBL_SYSINFO
 12

	)

1036 
	sosf_tbl_sysöfo


1038 
	msi_u£r
;

1039 
	msi_ni˚
;

1040 
	msi_sys
;

1041 
	msi_idÀ
;

1042 
	msi_hz
;

1043 
	msi_phz
;

1044 
	msi_boŸtime
;

1045 
	mwaô
;

1061  
	mR_V0
,

1062  
	mR_T0
,

1063  
	mR_T1
,

1064  
	mR_T2
,

1065  
	mR_T3
,

1066  
	mR_T4
,

1067  
	mR_T5
,

1068  
	mR_T6
,

1069  
	mR_T7
,

1070  
	mR_S0
,

1071  
	mR_S1
,

1072  
	mR_S2
,

1073  
	mR_S3
,

1074  
	mR_S4
,

1075  
	mR_S5
,

1076  
	mR_FP
,

1077  
	mR_A0
,

1078  
	mR_A1
,

1079  
	mR_A2
,

1080  
	mR_A3
,

1081  
	mR_A4
,

1082  
	mR_A5
,

1083  
	mR_T8
,

1084  
	mR_T9
,

1085  
	mR_T10
,

1086  
	mR_T11
,

1087  
	mR_RA
,

1088  
	mR_PV
,

1089  
	mR_AT
,

1090  
	mR_GP
,

1091  
	mR_SP
,

1092  
	mR_IZERO
,

1093  
	mR_F0
,

1094  
	mR_F1
,

1095  
	mR_F2
,

1096  
	mR_F3
,

1097  
	mR_F4
,

1098  
	mR_F5
,

1099  
	mR_F6
,

1100  
	mR_F7
,

1101  
	mR_F8
,

1102  
	mR_F9
,

1103  
	mR_F10
,

1104  
	mR_F11
,

1105  
	mR_F12
,

1106  
	mR_F13
,

1107  
	mR_F14
,

1108  
	mR_F15
,

1109  
	mR_F16
,

1110  
	mR_F17
,

1111  
	mR_F18
,

1112  
	mR_F19
,

1113  
	mR_F20
,

1114  
	mR_F21
,

1115  
	mR_F22
,

1116  
	mR_F23
,

1117  
	mR_F24
,

1118  
	mR_F25
,

1119  
	mR_F26
,

1120  
	mR_F27
,

1121  
	mR_F28
,

1122  
	mR_F29
,

1123  
	mR_F30
,

1124  
	mR_FZERO
,

1125  
	mR_FPCR
,

1126  
	mR_UNIQ
,

1127  
	mNUM_REGS


1128 } 
	tRegNames
;

1131 
	mÁl£
,

1132 
	måue


1133 } 
	tboﬁ
;

1138  
	mSYSCALL_OSF_SYSCALL
,

1139  
	mSYSCALL_EXIT
,

1140  
	mSYSCALL_FORK
,

1141  
	mSYSCALL_READ
,

1142  
	mSYSCALL_WRITE
,

1143  
	mSYSCALL_OSF_OLD_OPEN
,

1144  
	mSYSCALL_CLOSE
,

1145  
	mSYSCALL_OSF_WAIT4
,

1146  
	mSYSCALL_OSF_OLD_CREAT
,

1147  
	mSYSCALL_LINK
,

1148  
	mSYSCALL_UNLINK
,

1149  
	mSYSCALL_OSF_EXECVE
,

1150  
	mSYSCALL_CHDIR
,

1151  
	mSYSCALL_FCHDIR
,

1152  
	mSYSCALL_MKNOD
,

1153  
	mSYSCALL_CHMOD
,

1154  
	mSYSCALL_CHOWN
,

1155  
	mSYSCALL_BRK
,

1156  
	mSYSCALL_OSF_GETFSSTAT
,

1157  
	mSYSCALL_LSEEK
,

1158  
	mSYSCALL_GETXPID
,

1159  
	mSYSCALL_OSF_MOUNT
,

1160  
	mSYSCALL_UMOUNT
,

1161  
	mSYSCALL_SETUID
,

1162  
	mSYSCALL_GETXUID
,

1163  
	mSYSCALL_EXEC_WITH_LOADER
,

1164  
	mSYSCALL_OSF_PTRACE
,

1165  
	mSYSCALL_OSF_NRECVMSG
,

1166  
	mSYSCALL_OSF_NSENDMSG
,

1167  
	mSYSCALL_OSF_NRECVFROM
,

1168  
	mSYSCALL_OSF_NACCEPT
,

1169  
	mSYSCALL_OSF_NGETPEERNAME
,

1170  
	mSYSCALL_OSF_NGETSOCKNAME
,

1171  
	mSYSCALL_ACCESS
,

1172  
	mSYSCALL_OSF_CHFLAGS
,

1173  
	mSYSCALL_OSF_FCHFLAGS
,

1174  
	mSYSCALL_SYNC
,

1175  
	mSYSCALL_KILL
,

1176  
	mSYSCALL_OSF_OLD_STAT
,

1177  
	mSYSCALL_SETPGID
,

1178  
	mSYSCALL_OSF_OLD_LSTAT
,

1179  
	mSYSCALL_DUP
,

1180  
	mSYSCALL_PIPE
,

1181  
	mSYSCALL_OSF_SET_PROGRAM_ATTRIBUTES
,

1182  
	mSYSCALL_OSF_PROFIL
,

1183  
	mSYSCALL_OPEN
,

1184  
	mSYSCALL_OSF_OLD_SIGACTION
,

1185  
	mSYSCALL_GETXGID
,

1186  
	mSYSCALL_OSF_SIGPROCMASK
,

1187  
	mSYSCALL_OSF_GETLOGIN
,

1188  
	mSYSCALL_OSF_SETLOGIN
,

1189  
	mSYSCALL_ACCT
,

1190  
	mSYSCALL_SIGPENDING
,

1191  
	mSYSCALL_OSF_CLASSCNTL
,

1192  
	mSYSCALL_IOCTL
,

1193  
	mSYSCALL_OSF_REBOOT
,

1194  
	mSYSCALL_OSF_REVOKE
,

1195  
	mSYSCALL_SYMLINK
,

1196  
	mSYSCALL_READLINK
,

1197  
	mSYSCALL_EXECVE
,

1198  
	mSYSCALL_UMASK
,

1199  
	mSYSCALL_CHROOT
,

1200  
	mSYSCALL_OSF_OLD_FSTAT
,

1201  
	mSYSCALL_GETPGRP
,

1202  
	mSYSCALL_GETPAGESIZE
,

1203  
	mSYSCALL_OSF_MREMAP
,

1204  
	mSYSCALL_VFORK
,

1205  
	mSYSCALL_STAT
,

1206  
	mSYSCALL_LSTAT
,

1207  
	mSYSCALL_OSF_SBRK
,

1208  
	mSYSCALL_OSF_SSTK
,

1209  
	mSYSCALL_MMAP
,

1210  
	mSYSCALL_OSF_OLD_VADVISE
,

1211  
	mSYSCALL_MUNMAP
,

1212  
	mSYSCALL_MPROTECT
,

1213  
	mSYSCALL_MADVISE
,

1214  
	mSYSCALL_VHANGUP
,

1215  
	mSYSCALL_OSF_KMODCALL
,

1216  
	mSYSCALL_OSF_MINCORE
,

1217  
	mSYSCALL_GETGROUPS
,

1218  
	mSYSCALL_SETGROUPS
,

1219  
	mSYSCALL_OSF_OLD_GETPGRP
,

1220  
	mSYSCALL_SETPGRP
,

1221  
	mSYSCALL_OSF_SETITIMER
,

1222  
	mSYSCALL_OSF_OLD_WAIT
,

1223  
	mSYSCALL_OSF_TABLE
,

1224  
	mSYSCALL_OSF_GETITIMER
,

1225  
	mSYSCALL_GETHOSTNAME
,

1226  
	mSYSCALL_SETHOSTNAME
,

1227  
	mSYSCALL_GETDTABLESIZE
,

1228  
	mSYSCALL_DUP2
,

1229  
	mSYSCALL_FSTAT
,

1230  
	mSYSCALL_FCNTL
,

1231  
	mSYSCALL_OSF_SELECT
,

1232  
	mSYSCALL_POLL
,

1233  
	mSYSCALL_FSYNC
,

1234  
	mSYSCALL_SETPRIORITY
,

1235  
	mSYSCALL_SOCKET
,

1236  
	mSYSCALL_CONNECT
,

1237  
	mSYSCALL_ACCEPT
,

1238  
	mSYSCALL_GETPRIORITY
,

1239  
	mSYSCALL_SEND
,

1240  
	mSYSCALL_RECV
,

1241  
	mSYSCALL_SIGRETURN
,

1242  
	mSYSCALL_BIND
,

1243  
	mSYSCALL_SETSOCKOPT
,

1244  
	mSYSCALL_LISTEN
,

1245  
	mSYSCALL_OSF_PLOCK
,

1246  
	mSYSCALL_OSF_OLD_SIGVEC
,

1247  
	mSYSCALL_OSF_OLD_SIGBLOCK
,

1248  
	mSYSCALL_OSF_OLD_SIGSETMASK
,

1249  
	mSYSCALL_SIGSUSPEND
,

1250  
	mSYSCALL_OSF_SIGSTACK
,

1251  
	mSYSCALL_RECVMSG
,

1252  
	mSYSCALL_SENDMSG
,

1253  
	mSYSCALL_OSF_OLD_VTRACE
,

1254  
	mSYSCALL_OSF_GETTIMEOFDAY
,

1255  
	mSYSCALL_OSF_GETRUSAGE
,

1256  
	mSYSCALL_GETSOCKOPT
,

1257  
	mSYSCALL_NUMA_SYSCALLS
,

1258  
	mSYSCALL_READV
,

1259  
	mSYSCALL_WRITEV
,

1260  
	mSYSCALL_OSF_SETTIMEOFDAY
,

1261  
	mSYSCALL_FCHOWN
,

1262  
	mSYSCALL_FCHMOD
,

1263  
	mSYSCALL_RECVFROM
,

1264  
	mSYSCALL_SETREUID
,

1265  
	mSYSCALL_SETREGID
,

1266  
	mSYSCALL_RENAME
,

1267  
	mSYSCALL_TRUNCATE
,

1268  
	mSYSCALL_FTRUNCATE
,

1269  
	mSYSCALL_FLOCK
,

1270  
	mSYSCALL_SETGID
,

1271  
	mSYSCALL_SENDTO
,

1272  
	mSYSCALL_SHUTDOWN
,

1273  
	mSYSCALL_SOCKETPAIR
,

1274  
	mSYSCALL_MKDIR
,

1275  
	mSYSCALL_RMDIR
,

1276  
	mSYSCALL_OSF_UTIMES
,

1277  
	mSYSCALL_OSF_OLD_SIGRETURN
,

1278  
	mSYSCALL_OSF_ADJTIME
,

1279  
	mSYSCALL_GETPEERNAME
,

1280  
	mSYSCALL_OSF_GETHOSTID
,

1281  
	mSYSCALL_OSF_SETHOSTID
,

1282  
	mSYSCALL_GETRLIMIT
,

1283  
	mSYSCALL_SETRLIMIT
,

1284  
	mSYSCALL_OSF_OLD_KILLPG
,

1285  
	mSYSCALL_SETSID
,

1286  
	mSYSCALL_QUOTACTL
,

1287  
	mSYSCALL_OSF_OLDQUOTA
,

1288  
	mSYSCALL_GETSOCKNAME
,

1289  
	mSYSCALL_OSF_PREAD
,

1290  
	mSYSCALL_OSF_PWRITE
,

1291  
	mSYSCALL_OSF_PID_BLOCK
,

1292  
	mSYSCALL_OSF_PID_UNBLOCK
,

1293  
	mSYSCALL_OSF_SIGNAL_URTI
,

1294  
	mSYSCALL_SIGACTION
,

1295  
	mSYSCALL_OSF_SIGWAITPRIM
,

1296  
	mSYSCALL_OSF_NFSSVC
,

1297  
	mSYSCALL_OSF_GETDIRENTRIES
,

1298  
	mSYSCALL_OSF_STATFS
,

1299  
	mSYSCALL_OSF_FSTATFS
,

1300  
	mSYSCALL_UNKNOWN_162
,

1301  
	mSYSCALL_OSF_ASYNC_DAEMON
,

1302  
	mSYSCALL_OSF_GETFH
,

1303  
	mSYSCALL_OSF_GETDOMAINNAME
,

1304  
	mSYSCALL_SETDOMAINNAME
,

1305  
	mSYSCALL_UNKNOWN_167
,

1306  
	mSYSCALL_UNKNOWN_168
,

1307  
	mSYSCALL_OSF_EXPORTFS
,

1308  
	mSYSCALL_UNKNOWN_170
,

1309  
	mSYSCALL_UNKNOWN_171
,

1310  
	mSYSCALL_UNKNOWN_172
,

1311  
	mSYSCALL_UNKNOWN_173
,

1312  
	mSYSCALL_UNKNOWN_174
,

1313  
	mSYSCALL_UNKNOWN_175
,

1314  
	mSYSCALL_UNKNOWN_176
,

1315  
	mSYSCALL_UNKNOWN_177
,

1316  
	mSYSCALL_UNKNOWN_178
,

1317  
	mSYSCALL_UNKNOWN_179
,

1318  
	mSYSCALL_UNKNOWN_180
,

1319  
	mSYSCALL_OSF_ALT_PLOCK
,

1320  
	mSYSCALL_UNKNOWN_182
,

1321  
	mSYSCALL_UNKNOWN_183
,

1322  
	mSYSCALL_OSF_GETMNT
,

1323  
	mSYSCALL_UNKNOWN_185
,

1324  
	mSYSCALL_UNKNOWN_186
,

1325  
	mSYSCALL_OSF_ALT_SIGPENDING
,

1326  
	mSYSCALL_OSF_ALT_SETSID
,

1327  
	mSYSCALL_UNKNOWN_189
,

1328  
	mSYSCALL_UNKNOWN_190
,

1329  
	mSYSCALL_UNKNOWN_191
,

1330  
	mSYSCALL_UNKNOWN_192
,

1331  
	mSYSCALL_UNKNOWN_193
,

1332  
	mSYSCALL_UNKNOWN_194
,

1333  
	mSYSCALL_UNKNOWN_195
,

1334  
	mSYSCALL_UNKNOWN_196
,

1335  
	mSYSCALL_UNKNOWN_197
,

1336  
	mSYSCALL_UNKNOWN_198
,

1337  
	mSYSCALL_OSF_SWAPON
,

1338  
	mSYSCALL_MSGCTL
,

1339  
	mSYSCALL_MSGGET
,

1340  
	mSYSCALL_MSGRCV
,

1341  
	mSYSCALL_MSGSND
,

1342  
	mSYSCALL_SEMCTL
,

1343  
	mSYSCALL_SEMGET
,

1344  
	mSYSCALL_SEMOP
,

1345  
	mSYSCALL_OSF_UTSNAME
,

1346  
	mSYSCALL_LCHOWN
,

1347  
	mSYSCALL_OSF_SHMAT
,

1348  
	mSYSCALL_SHMCTL
,

1349  
	mSYSCALL_SHMDT
,

1350  
	mSYSCALL_SHMGET
,

1351  
	mSYSCALL_OSF_MVALID
,

1352  
	mSYSCALL_OSF_GETADDRESSCONF
,

1353  
	mSYSCALL_OSF_MSLEEP
,

1354  
	mSYSCALL_OSF_MWAKEUP
,

1355  
	mSYSCALL_MSYNC
,

1356  
	mSYSCALL_OSF_SIGNAL
,

1357  
	mSYSCALL_OSF_UTC_GETTIME
,

1358  
	mSYSCALL_OSF_UTC_ADJTIME
,

1359  
	mSYSCALL_UNKNOWN_221
,

1360  
	mSYSCALL_OSF_SECURITY
,

1361  
	mSYSCALL_OSF_KLOADCALL
,

1362  
	mSYSCALL_UNKNOWN_224
,

1363  
	mSYSCALL_UNKNOWN_225
,

1364  
	mSYSCALL_UNKNOWN_226
,

1365  
	mSYSCALL_UNKNOWN_227
,

1366  
	mSYSCALL_UNKNOWN_228
,

1367  
	mSYSCALL_UNKNOWN_229
,

1368  
	mSYSCALL_UNKNOWN_230
,

1369  
	mSYSCALL_UNKNOWN_231
,

1370  
	mSYSCALL_UNKNOWN_232
,

1371  
	mSYSCALL_GETPGID
,

1372  
	mSYSCALL_GETSID
,

1373  
	mSYSCALL_SIGALTSTACK
,

1374  
	mSYSCALL_OSF_WAITID
,

1375  
	mSYSCALL_OSF_PRIOCNTLSET
,

1376  
	mSYSCALL_OSF_SIGSENDSET
,

1377  
	mSYSCALL_OSF_SET_SPECULATIVE
,

1378  
	mSYSCALL_OSF_MSFS_SYSCALL
,

1379  
	mSYSCALL_OSF_SYSINFO
,

1380  
	mSYSCALL_OSF_UADMIN
,

1381  
	mSYSCALL_OSF_FUSER
,

1382  
	mSYSCALL_OSF_PROPLIST_SYSCALL
,

1383  
	mSYSCALL_OSF_NTP_ADJTIME
,

1384  
	mSYSCALL_OSF_NTP_GETTIME
,

1385  
	mSYSCALL_OSF_PATHCONF
,

1386  
	mSYSCALL_OSF_FPATHCONF
,

1387  
	mSYSCALL_UNKNOWN_249
,

1388  
	mSYSCALL_OSF_USWITCH
,

1389  
	mSYSCALL_OSF_USLEEP_THREAD
,

1390  
	mSYSCALL_OSF_AUDCNTL
,

1391  
	mSYSCALL_OSF_AUDGEN
,

1392  
	mSYSCALL_SYSFS
,

1393  
	mSYSCALL_OSF_SUBSYS_INFO
,

1394  
	mSYSCALL_OSF_GETSYSINFO
,

1395  
	mSYSCALL_OSF_SETSYSINFO
,

1396  
	mSYSCALL_OSF_AFS_SYSCALL
,

1397  
	mSYSCALL_OSF_SWAPCTL
,

1398  
	mSYSCALL_OSF_MEMCNTL
,

1399  
	mSYSCALL_OSF_FDATASYNC
,

1400  
	mSYSCALL_UNKNOWN_262
,

1401  
	mSYSCALL_UNKNOWN_263
,

1402  
	mSYSCALL_UNKNOWN_264
,

1403  
	mSYSCALL_UNKNOWN_265
,

1404  
	mSYSCALL_UNKNOWN_266
,

1405  
	mSYSCALL_UNKNOWN_267
,

1406  
	mSYSCALL_UNKNOWN_268
,

1407  
	mSYSCALL_UNKNOWN_269
,

1408  
	mSYSCALL_UNKNOWN_270
,

1409  
	mSYSCALL_UNKNOWN_271
,

1410  
	mSYSCALL_UNKNOWN_272
,

1411  
	mSYSCALL_UNKNOWN_273
,

1412  
	mSYSCALL_UNKNOWN_274
,

1413  
	mSYSCALL_UNKNOWN_275
,

1414  
	mSYSCALL_UNKNOWN_276
,

1415  
	mSYSCALL_UNKNOWN_277
,

1416  
	mSYSCALL_UNKNOWN_278
,

1417  
	mSYSCALL_UNKNOWN_279
,

1418  
	mSYSCALL_UNKNOWN_280
,

1419  
	mSYSCALL_UNKNOWN_281
,

1420  
	mSYSCALL_UNKNOWN_282
,

1421  
	mSYSCALL_UNKNOWN_283
,

1422  
	mSYSCALL_UNKNOWN_284
,

1423  
	mSYSCALL_UNKNOWN_285
,

1424  
	mSYSCALL_UNKNOWN_286
,

1425  
	mSYSCALL_UNKNOWN_287
,

1426  
	mSYSCALL_UNKNOWN_288
,

1427  
	mSYSCALL_UNKNOWN_289
,

1428  
	mSYSCALL_UNKNOWN_290
,

1429  
	mSYSCALL_UNKNOWN_291
,

1430  
	mSYSCALL_UNKNOWN_292
,

1431  
	mSYSCALL_UNKNOWN_293
,

1432  
	mSYSCALL_UNKNOWN_294
,

1433  
	mSYSCALL_UNKNOWN_295
,

1434  
	mSYSCALL_UNKNOWN_296
,

1435  
	mSYSCALL_UNKNOWN_297
,

1436  
	mSYSCALL_UNKNOWN_298
,

1437  
	mSYSCALL_UNKNOWN_299
,

1440  
	mSYSCALL_BDFLUSH
,

1441  
	mSYSCALL_SETHAE
,

1442  
	mSYSCALL_MOUNT
,

1443  
	mSYSCALL_OLD_ADJTIMEX
,

1444  
	mSYSCALL_SWAPOFF
,

1445  
	mSYSCALL_GETDENTS
,

1446  
	mSYSCALL_CREATE_MODULE
,

1447  
	mSYSCALL_INIT_MODULE
,

1448  
	mSYSCALL_DELETE_MODULE
,

1449  
	mSYSCALL_GET_KERNEL_SYMS
,

1450  
	mSYSCALL_SYSLOG
,

1451  
	mSYSCALL_REBOOT
,

1452  
	mSYSCALL_CLONE
,

1453  
	mSYSCALL_USELIB
,

1454  
	mSYSCALL_MLOCK
,

1455  
	mSYSCALL_MUNLOCK
,

1456  
	mSYSCALL_MLOCKALL
,

1457  
	mSYSCALL_MUNLOCKALL
,

1458  
	mSYSCALL_SYSINFO
,

1459  
	mSYSCALL__SYSCTL
,

1460  
	mSYSCALL_WAS_SYS_IDLE
,

1461  
	mSYSCALL_OLDUMOUNT
,

1462  
	mSYSCALL_SWAPON
,

1463  
	mSYSCALL_TIMES
,

1464  
	mSYSCALL_PERSONALITY
,

1465  
	mSYSCALL_SETFSUID
,

1466  
	mSYSCALL_SETFSGID
,

1467  
	mSYSCALL_USTAT
,

1468  
	mSYSCALL_STATFS
,

1469  
	mSYSCALL_FSTATFS
,

1470  
	mSYSCALL_SCHED_SETPARAM
,

1471  
	mSYSCALL_SCHED_GETPARAM
,

1472  
	mSYSCALL_SCHED_SETSCHEDULER
,

1473  
	mSYSCALL_SCHED_GETSCHEDULER
,

1474  
	mSYSCALL_SCHED_YIELD
,

1475  
	mSYSCALL_SCHED_GET_PRIORITY_MAX
,

1476  
	mSYSCALL_SCHED_GET_PRIORITY_MIN
,

1477  
	mSYSCALL_SCHED_RR_GET_INTERVAL
,

1478  
	mSYSCALL_AFS_SYSCALL
,

1479  
	mSYSCALL_UNAME
,

1480  
	mSYSCALL_NANOSLEEP
,

1481  
	mSYSCALL_MREMAP
,

1482  
	mSYSCALL_NFSSERVCTL
,

1483  
	mSYSCALL_SETRESUID
,

1484  
	mSYSCALL_GETRESUID
,

1485  
	mSYSCALL_PCICONFIG_READ
,

1486  
	mSYSCALL_PCICONFIG_WRITE
,

1487  
	mSYSCALL_QUERY_MODULE
,

1488  
	mSYSCALL_PRCTL
,

1489  
	mSYSCALL_PREAD
,

1490  
	mSYSCALL_PWRITE
,

1491  
	mSYSCALL_RT_SIGRETURN
,

1492  
	mSYSCALL_RT_SIGACTION
,

1493  
	mSYSCALL_RT_SIGPROCMASK
,

1494  
	mSYSCALL_RT_SIGPENDING
,

1495  
	mSYSCALL_RT_SIGTIMEDWAIT
,

1496  
	mSYSCALL_RT_SIGQUEUEINFO
,

1497  
	mSYSCALL_RT_SIGSUSPEND
,

1498  
	mSYSCALL_SELECT
,

1499  
	mSYSCALL_GETTIMEOFDAY
,

1500  
	mSYSCALL_SETTIMEOFDAY
,

1501  
	mSYSCALL_GETITIMER
,

1502  
	mSYSCALL_SETITIMER
,

1503  
	mSYSCALL_UTIMES
,

1504  
	mSYSCALL_GETRUSAGE
,

1505  
	mSYSCALL_WAIT4
,

1506  
	mSYSCALL_ADJTIMEX
,

1507  
	mSYSCALL_GETCWD
,

1508  
	mSYSCALL_CAPGET
,

1509  
	mSYSCALL_CAPSET
,

1510  
	mSYSCALL_SENDFILE
,

1511  
	mSYSCALL_SETRESGID
,

1512  
	mSYSCALL_GETRESGID
,

1513  
	mSYSCALL_DIPC
,

1514  
	mSYSCALL_PIVOT_ROOT
,

1515  
	mSYSCALL_MINCORE
,

1516  
	mSYSCALL_PCICONFIG_IOBASE
,

1517  
	mSYSCALL_GETDENTS64
,

1518  
	mSYSCALL_GETTID
,

1519  
	mSYSCALL_READAHEAD
,

1520  
	mSYSCALL_SECURITY
,

1521  
	mSYSCALL_TKILL
,

1522  
	mSYSCALL_SETXATTR
,

1523  
	mSYSCALL_LSETXATTR
,

1524  
	mSYSCALL_FSETXATTR
,

1525  
	mSYSCALL_GETXATTR
,

1526  
	mSYSCALL_LGETXATTR
,

1527  
	mSYSCALL_FGETXATTR
,

1528  
	mSYSCALL_LISTXATTR
,

1529  
	mSYSCALL_LLISTXATTR
,

1530  
	mSYSCALL_FLISTXATTR
,

1531  
	mSYSCALL_REMOVEXATTR
,

1532  
	mSYSCALL_LREMOVEXATTR
,

1533  
	mSYSCALL_FREMOVEXATTR
,

1534  
	mSYSCALL_FUTEX
,

1535  
	mSYSCALL_SCHED_SETAFFINITY
,

1536  
	mSYSCALL_SCHED_GETAFFINITY
,

1537  
	mSYSCALL_TUXCALL
,

1538  
	mSYSCALL_IO_SETUP
,

1539  
	mSYSCALL_IO_DESTROY
,

1540  
	mSYSCALL_IO_GETEVENTS
,

1541  
	mSYSCALL_IO_SUBMIT
,

1542  
	mSYSCALL_IO_CANCEL
,

1543  
	mSYSCALL_UNKNOWN_403
,

1544  
	mSYSCALL_UNKNOWN_404
,

1545  
	mSYSCALL_EXIT_GROUP
,

1546  
	mSYSCALL_LOOKUP_DCOOKIE
,

1547  
	mSYSCALL_SYS_EPOLL_CREATE
,

1548  
	mSYSCALL_SYS_EPOLL_CTL
,

1549  
	mSYSCALL_SYS_EPOLL_WAIT
,

1550  
	mSYSCALL_REMAP_FILE_PAGES
,

1551  
	mSYSCALL_SET_TID_ADDRESS
,

1552  
	mSYSCALL_RESTART_SYSCALL
,

1553  
	mSYSCALL_FADVISE64
,

1554  
	mSYSCALL_TIMER_CREATE
,

1555  
	mSYSCALL_TIMER_SETTIME
,

1556  
	mSYSCALL_TIMER_GETTIME
,

1557  
	mSYSCALL_TIMER_GETOVERRUN
,

1558  
	mSYSCALL_TIMER_DELETE
,

1559  
	mSYSCALL_CLOCK_SETTIME
,

1560  
	mSYSCALL_CLOCK_GETTIME
,

1561  
	mSYSCALL_CLOCK_GETRES
,

1562  
	mSYSCALL_CLOCK_NANOSLEEP
,

1563  
	mSYSCALL_SEMTIMEDOP
,

1564  
	mSYSCALL_TGKILL
,

1565  
	mSYSCALL_STAT64
,

1566  
	mSYSCALL_LSTAT64
,

1567  
	mSYSCALL_FSTAT64
,

1568  
	mSYSCALL_VSERVER
,

1569  
	mSYSCALL_MBIND
,

1570  
	mSYSCALL_GET_MEMPOLICY
,

1571  
	mSYSCALL_SET_MEMPOLICY
,

1572  
	mSYSCALL_MQ_OPEN
,

1573  
	mSYSCALL_MQ_UNLINK
,

1574  
	mSYSCALL_MQ_TIMEDSEND
,

1575  
	mSYSCALL_MQ_TIMEDRECEIVE
,

1576  
	mSYSCALL_MQ_NOTIFY
,

1577  
	mSYSCALL_MQ_GETSETATTR
,

1578  
	mSYSCALL_WAITID
,

1579  
	mSYSCALL_ADD_KEY
,

1580  
	mSYSCALL_REQUEST_KEY
,

1581  
	mSYSCALL_KEYCTL


1582 } 
	tAÕhaLöuxSysˇŒs
;

1584 
	$å™¶©e_°©_buf
(
Æpha_°©
 *
t_buf
, 
°©
 *
h_buf
)

1587 
t_buf
->
°_dev
 = 
h_buf
->st_dev;

1588 
t_buf
->
°_öo
 = 
h_buf
->st_ino;

1589 
t_buf
->
°_mode
 = 
h_buf
->st_mode;

1590 
t_buf
->
°_∆ök
 = 
h_buf
->st_nlink;

1591 
t_buf
->
°_uid
 = 
h_buf
->st_uid;

1592 
t_buf
->
°_gid
 = 
h_buf
->st_gid;

1593 
t_buf
->
°_rdev
 = 
h_buf
->st_rdev;

1594 
t_buf
->
°_size
 = 
h_buf
->st_size;

1595 
t_buf
->
°_©imeX
 = 
h_buf
->
°_©ime
;

1596 
t_buf
->
°_mtimeX
 = 
h_buf
->
°_mtime
;

1597 
t_buf
->
°_˘imeX
 = 
h_buf
->
°_˘ime
;

1598 
t_buf
->
°_blksize
 = 
h_buf
->st_blksize;

1599 
t_buf
->
°_blocks
 = 
h_buf
->st_blocks;

1600 
t_buf
->
°_Êags
 = 0;

1601 
t_buf
->
°_gí
 = 0;

1602 
	}
}

1628 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

1629 
mem_ac˚ss_‚
 
mem_‚
,

1630 
mem_t
 *
mem
,

1631 
md_ö°_t
 
ö°
,

1632 
åa˚abÀ
)

1634 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

1637 i‡(
syscode
 =
SYSCALL_OSF_SYSCALL
)

1638 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1641 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

1643 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

1646 i‡(
syscode
 =
SYSCALL_SIGRETURN
)

1648 
i
;

1649 
osf_sigc⁄ãxt
 
sc
;

1650 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1652 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

1653 &
sc
, (
osf_sigc⁄ãxt
));

1654 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

1655 
i
=0; i < 32; ++i)

1656 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

1657 
i
=0; i < 32; ++i)

1658 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

1659 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

1660 
¥ogøm_com∂ëe
 = 1;

1672 
uöt64_t
 
sysˇŒ_code
 = 
ªgs
->
ªgs_R
[
R_V0
];

1674 
öt64_t
 
ªtu∫_vÆue
 = 0;

1676 
boﬁ
 
suc˚ss
 = 
Ál£
;

1678 
syscode
)

1681 
SYSCALL_READ
:

1683 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

1684 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

1685 
öt64_t
 
cou¡
 = 
ªgs
->
ªgs_R
[
R_A2
];

1686 
öt64_t
 
Àn
;

1687 *
buf
;

1690 
buf
 = (*)
	`ˇŒoc
(
cou¡
, ());

1691 i‡(!
buf
Ë
	`Áèl
("ArchLib: syscallÑeadÑan out of memory");

1694 
Àn
 = 
	`ªad
(
fd
, 
buf
, 
cou¡
);

1697 i‡(
Àn
 > 0)

1699 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1700  
vaddr
, 
buf
, 
Àn
);

1702 
ªtu∫_vÆue
 = 
Àn
;

1703 
suc˚ss
 = 
åue
;

1705 i‡(
Àn
 == 0)

1707 
ªtu∫_vÆue
 = 0;

1708 
suc˚ss
 = 
åue
;

1712 
ªtu∫_vÆue
 = 
î∫o
;

1713 
	`w¨n
("îr‹Ñódög %d", 
î∫o
);

1717 
	`‰ì
(
buf
);

1721 
SYSCALL_WRITE
:

1723 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

1724 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

1725 
öt64_t
 
cou¡
 = 
ªgs
->
ªgs_R
[
R_A2
];

1726 
öt64_t
 
Àn
;

1727 *
buf
;

1730 
buf
 = (*)
	`ˇŒoc
(
cou¡
, ());

1731 i‡(!
buf
Ë
	`Áèl
("ArchLib: syscallÑeadÑan out of memory");

1734 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

1735  
vaddr
, 
buf
, 
cou¡
);

1739 
Àn
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
);

1740 
	`fsync
(
fd
);

1743 i‡(
Àn
 >= 0)

1745 
ªtu∫_vÆue
 = 
Àn
;

1746 
suc˚ss
 = 
åue
;

1749 
ªtu∫_vÆue
 = 
î∫o
;

1752 
	`‰ì
(
buf
);

1756 
SYSCALL_CLOSE
:

1758 
ªs
;

1761 i‡(
ªgs
->
ªgs_R
[
R_A0
] > 2)

1763 
ªs
 = 
	`˛o£
(
ªgs
->
ªgs_R
[
R_A0
]);

1764 i‡(
ªs
 !(
öt64_t
)-1)

1766 
ªtu∫_vÆue
 = 0;

1767 
suc˚ss
 = 
åue
;

1770 
ªtu∫_vÆue
 = 
î∫o
;

1774 
ªtu∫_vÆue
 = 0;

1775 
suc˚ss
 = 
åue
;

1780 
SYSCALL_UNLINK
:

1782 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

1783 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

1784 
öt64_t
 
ªsu…
;

1787 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
);

1790 
ªsu…
 = 
	`u∆ök
(
∑th«me
);

1791 i‡(
ªsu…
 == -1)

1792 
ªtu∫_vÆue
 = 
î∫o
;

1795 
ªtu∫_vÆue
 = 0;

1796 
suc˚ss
 = 
åue
;

1801 
SYSCALL_BRK
:

1804 
sqw‹d_t
 
dñè
;

1805 
md_addr_t
 
addr
;

1807 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1809 i‡(!
dñè
)

1810 
addr
 = 
_sy°em
.
brk_poöt
;

1812 
addr
 = 
dñè
;

1814 i‡(
vîbo£
)

1815 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

1817 
ld_brk_poöt
 = 
addr
;

1818 
_sy°em
.
brk_poöt
 = 
addr
;

1819 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1820 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1822 i‡(
vîbo£
)

1823 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1825 
ªtu∫_vÆue
 = 
addr
;

1826 
suc˚ss
 = 
åue
;

1830 
md_addr_t
 
addr
;

1834 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

1836 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1838 i‡(
vîbo£
)

1839 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

1841 
ld_brk_poöt
 = 
addr
;

1842 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1843 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1845 i‡(
vîbo£
)

1846 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1868 
SYSCALL_LSEEK
:

1870 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

1871 
uöt64_t
 
off£t
 = 
ªgs
->
ªgs_R
[
R_A1
];

1872 
öt64_t
 
whí˚
 = 
ªgs
->
ªgs_R
[
R_A2
];

1873 
off_t
 
ªsu…
;

1875 
ªsu…
 = 
	`l£ek
(
fd
, 
off£t
, 
whí˚
);

1877 i‡(
ªsu…
 =(
off_t
)-1)

1878 
ªtu∫_vÆue
 = 
î∫o
;

1881 
ªtu∫_vÆue
 = 
ªsu…
;

1882 
suc˚ss
 = 
åue
;

1887 
SYSCALL_GETXPID
:

1891 
ªtu∫_vÆue
 = 
	`gëpid
();

1892 
suc˚ss
 = 
åue
;

1896 
SYSCALL_GETXUID
:

1899 
ªgs
->
ªgs_R
[
R_A4
] = (
uöt64_t
)
	`gëeuid
();

1900 
ªtu∫_vÆue
 = (
uöt64_t
)
	`gëuid
();

1901 
suc˚ss
 = 
åue
;

1905 
SYSCALL_KILL
:

1908 
	`w¨n
("sysˇŒ_kû»pid %i\n", 
ªgs
[
R_A0
]);

1912 
SYSCALL_OPEN
:

1914 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

1915 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

1916 
uöt64_t
 
sim_Êags
 = 
ªgs
->
ªgs_R
[
R_A1
];

1917 
uöt64_t
 
mode
 = 
ªgs
->
ªgs_R
[
R_A2
];

1918 
loˇl_Êags
;

1919 
fd
;

1922 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
);

1926 
loˇl_Êags
 = 0;

1927 i‡(
sim_Êags
 & 
ALPHA_O_RDONLY
Ë
loˇl_Êags
 |
O_RDONLY
;

1928 i‡(
sim_Êags
 & 
ALPHA_O_WRONLY
Ë
loˇl_Êags
 |
O_WRONLY
;

1929 i‡(
sim_Êags
 & 
ALPHA_O_RDWR
Ë
loˇl_Êags
 |
O_RDWR
;

1930 i‡(
sim_Êags
 & 
ALPHA_O_NONBLOCK
Ë
loˇl_Êags
 |
O_NONBLOCK
;

1931 i‡(
sim_Êags
 & 
ALPHA_O_APPEND
Ë
loˇl_Êags
 |
O_APPEND
;

1932 i‡(
sim_Êags
 & 
ALPHA_O_CREAT
Ë
loˇl_Êags
 |
O_CREAT
;

1933 i‡(
sim_Êags
 & 
ALPHA_O_TRUNC
Ë
loˇl_Êags
 |
O_TRUNC
;

1934 i‡(
sim_Êags
 & 
ALPHA_O_EXCL
Ë
loˇl_Êags
 |
O_EXCL
;

1935 i‡(
sim_Êags
 & 
ALPHA_O_NOCTTY
Ë
loˇl_Êags
 |
O_NOCTTY
;

1936 i‡(
sim_Êags
 & 
ALPHA_O_SYNC
Ë
loˇl_Êags
 |
O_SYNC
;

1937 i‡(
sim_Êags
 & 
ALPHA_O_DSYNC
Ë
loˇl_Êags
 |
O_DSYNC
;

1938 i‡(
sim_Êags
 & 
ALPHA_O_RSYNC
Ë
loˇl_Êags
 |
O_RSYNC
;

1941 
fd
 = 
	`›í
(
∑th«me
, 
loˇl_Êags
, 
mode
);

1943 i‡(
fd
 == -1)

1944 
ªtu∫_vÆue
 = 
î∫o
;

1947 
ªtu∫_vÆue
 = 
fd
;

1948 
suc˚ss
 = 
åue
;

1953 
SYSCALL_GETXGID
:

1956 
ªgs
->
ªgs_R
[
R_A4
] = (
uöt64_t
)
	`gëegid
();

1957 
ªtu∫_vÆue
 = (
uöt64_t
)
	`gëgid
();

1958 
suc˚ss
 = 
åue
;

1962 
SYSCALL_OSF_SIGPROCMASK
:

1965 
ªtu∫_vÆue
 = 0;

1966 
suc˚ss
 = 
åue
;

1970 
SYSCALL_IOCTL
:

1975 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

1976 
öt64_t
 
ªque°
 = 
ªgs
->
ªgs_R
[
R_A1
];

1978 i‡(
fd
 < 0)

1979 
ªtu∫_vÆue
 = 
EBADF
;

1982 
ªque°
)

1992 
ªtu∫_vÆue
 = 
ENOTTY
;

1996 
	`Áèl
("unsupported ioctl call: %x on fd: %dÖc: 0x%llx",

1997 
ªque°
, 
fd
, 0);

2003 
SYSCALL_MMAP
:

2005 
uöt64_t
 
addr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2006 
uöt64_t
 
Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

2007 
öt64_t
 
Êags
 = 
ªgs
->
ªgs_R
[
R_A3
];

2008 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A4
];

2011 i‡(((
addr
 % 
PAGE_SIZE
) != 0) ||

2012 ((
Àngth
 % 
PAGE_SIZE
) != 0))

2013 
ªtu∫_vÆue
 = 
EINVAL
;

2017 i‡(
addr
 != 0)

2018 
	`w¨n
("mmap ignorning suggested mapáddress");

2020 
addr
 = 
_sy°em
.
mm≠_íd
;

2021 
_sy°em
.
mm≠_íd
 +
Àngth
;

2023 i‡(!(
Êags
 & 0x10))

2024 
	`w¨n
("mm≠pög fd %d.Åhi†i†bad i‡nŸ /dev/zîo", 
fd
);

2025 
ªtu∫_vÆue
 = 
addr
;

2026 
suc˚ss
 = 
åue
;

2031 
SYSCALL_MUNMAP
:

2035 
ªtu∫_vÆue
 = 0;

2036 
suc˚ss
 = 
åue
;

2040 
SYSCALL_MPROTECT
:

2043 
ªtu∫_vÆue
 = 0;

2044 
suc˚ss
 = 
åue
;

2048 
SYSCALL_FCNTL
:

2050 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2051 
öt64_t
 
cmd
 = 
ªgs
->
ªgs_R
[
R_A1
];

2053 i‡(
fd
 < 0)

2054 
ªtu∫_vÆue
 = 
EBADF
;

2057 
cmd
)

2060 
ªtu∫_vÆue
 = 
EMFILE
;

2063 
ªtu∫_vÆue
 = 0;

2064 
suc˚ss
 = 
åue
;

2069 
ªtu∫_vÆue
 = 
	`f˙é
(
fd
, 
cmd
);

2070 i‡(
ªtu∫_vÆue
 != -1)

2071 
suc˚ss
 = 
åue
;

2073 
ªtu∫_vÆue
 = 
î∫o
;

2081 
	`w¨n
("ign‹ed f˙é comm™d %d o¿fd %d", 
cmd
, 
fd
);

2082 
ªtu∫_vÆue
 = 0;

2083 
suc˚ss
 = 
åue
;

2122 
SYSCALL_WRITEV
:

2124 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2125 
uöt64_t
 
iov±r
 = 
ªgs
->
ªgs_R
[
R_A1
];

2126 
öt64_t
 
iov˙t
 = 
ªgs
->
ªgs_R
[
R_A2
];

2127 
iovec
 *
iov
;

2128 
Æpha_iovec
 
a_iov
;

2129 
i
, 
ªs
;

2131 i‡(
fd
 < 0)

2132 
ªtu∫_vÆue
 = 
EBADF
;

2135 
iov
 = 
	`mÆloc
–(
iovec
)*
iov˙t
);

2138 
i
 = 0; i < 
iov˙t
; i++)

2141 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2142  
iov±r
 + 
i
*(
a_iov
), &a_iov, (a_iov));

2149 
iov
[
i
].
iov_Àn
 = 
a_iov
.iov_len;

2151 
iov
[
i
].
iov_ba£
 = 
	`mÆloc
–()*(iov[i].
iov_Àn
));

2154 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2155  
a_iov
.
iov_ba£
, 
iov
[
i
].iov_ba£,á_iov.
iov_Àn
);

2163 
ªs
 = 
	`wrôev
(
fd
, 
iov
, 
iov˙t
);

2165 i‡(
ªs
 < 0)

2166 
ªtu∫_vÆue
 = 
î∫o
;

2169 
ªtu∫_vÆue
 = 0;

2170 
suc˚ss
 = 
åue
;

2174 
i
 = 0; i < 
iov˙t
; i++)

2175 
	`‰ì
(
iov
[
i
].
iov_ba£
);

2178 
	`‰ì
(
iov
);

2183 
SYSCALL_FTRUNCATE
:

2185 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2186 
off_t
 
Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

2188 i‡(
fd
 < 0)

2189 
ªtu∫_vÆue
 = 
EBADF
;

2192 
ªtu∫_vÆue
 = 
	`·runˇã
(
fd
, 
Àngth
);

2193 i‡(
ªtu∫_vÆue
 == -1)

2194 
ªtu∫_vÆue
 = 
î∫o
;

2196 
suc˚ss
 = 
åue
;

2201 
SYSCALL_GETRLIMIT
:

2203 
uöt64_t
 
ªsour˚
 = 
ªgs
->
ªgs_R
[
R_A0
];

2204 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2205 
Æpha_æimô
 
¨lm
;

2207 
ªsour˚
)

2210 
¨lm
.
æim_cur
 = 16 * 1024 * 1024;

2211 
¨lm
.
æim_max
 =áæm.
æim_cur
;

2212 
ªtu∫_vÆue
 = 0;

2213 
suc˚ss
 = 
åue
;

2217 
¨lm
.
æim_cur
 = 1024 * 1024 * 1024;

2218 
¨lm
.
æim_max
 =áæm.
æim_cur
;

2219 
ªtu∫_vÆue
 = 0;

2220 
suc˚ss
 = 
åue
;

2224 
	`w¨n
("unim∂emíãdÑlimôÑesour˚ %u ... faûög ...", 
ªsour˚
);

2230 
SYSCALL_SETRLIMIT
:

2233 
ªtu∫_vÆue
 = 0;

2234 
suc˚ss
 = 
åue
;

2238 
SYSCALL_OSF_GETSYSINFO
:

2240 
uöt64_t
 
›
 = 
ªgs
->
ªgs_R
[
R_A0
];

2241 
uöt64_t
 
vaddr
;

2243 
›
)

2248 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2250 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2251  
vaddr
, &
ªgs
->
ªgs_R
[
R_FPCR
], (
uöt64_t
));

2253 
ªtu∫_vÆue
 = 0;

2254 
suc˚ss
 = 
åue
;

2258 
	`Áèl
("unsupported operation %u on system call OSF_GETSYSINFO",

2259 
›
);

2265 
SYSCALL_OSF_SETSYSINFO
:

2267 
uöt64_t
 
›
 = 
ªgs
->
ªgs_R
[
R_A0
];

2268 
uöt64_t
 
vaddr
;

2270 
›
)

2274 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2276 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2277  
vaddr
, &(
ªgs
->
ªgs_R
[
R_FPCR
]), (
uöt64_t
));

2279 
ªtu∫_vÆue
 = 0;

2280 
suc˚ss
 = 
åue
;

2284 
	`Áèl
("unsupported operation %u on system call OSF_GETSYSINFO",

2285 
›
);

2291 
SYSCALL_TIMES
:

2294 
ªtu∫_vÆue
 = 0;

2295 
suc˚ss
 = 
åue
;

2299 
SYSCALL_UNAME
:

2301 
Æpha_ut¢ame
 
buf
;

2302 
uöt64_t
 
vaddr
;

2304 
	`°r˝y
(
buf
.
sy¢ame
, "Linux");

2305 
	`°r˝y
(
buf
.
nodíame
, "mjdechen");

2306 
	`°r˝y
(
buf
.
ªÀa£
, "2.6.27.5-117.fc10");

2307 
	`°r˝y
(
buf
.
vîsi⁄
, "Mon Dec 8 21:18:29 PST 2008");

2308 
	`°r˝y
(
buf
.
machöe
, "alpha");

2309 
	`°r˝y
(
buf
.
domaö«me
, "");

2312 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2315 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2316  
vaddr
, &
buf
, (buf));

2318 
ªtu∫_vÆue
 = 0;

2319 
suc˚ss
 = 
åue
;

2323 
SYSCALL_MREMAP
:

2325 
addr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2326 
uöt64_t
 
ﬁd_Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

2327 
uöt64_t
 
√w_Àngth
 = 
ªgs
->
ªgs_R
[
R_A2
];

2328 
uöt64_t
 
Êags
 = 
ªgs
->
ªgs_R
[
R_A3
];

2330 i‡(
√w_Àngth
 > 
ﬁd_Àngth
) {

2331 i‡((
addr
 + 
ﬁd_Àngth
Ë=
_sy°em
.
mm≠_íd
) {

2332 
diff
 = 
√w_Àngth
 - 
ﬁd_Àngth
;

2333 
_sy°em
.
mm≠_íd
 +
diff
;

2334 
ªtu∫_vÆue
 = 
addr
;

2335 
suc˚ss
 = 
åue
;

2339 *
buf
;

2340 
buf
 = (*)
	`ˇŒoc
(
ﬁd_Àngth
, ());

2341 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2342  
addr
, 
buf
, 
ﬁd_Àngth
);

2343 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2344  
_sy°em
.
mm≠_íd
, 
buf
, 
ﬁd_Àngth
);

2345 
ªtu∫_vÆue
 = 
_sy°em
.
mm≠_íd
;

2346 
_sy°em
.
mm≠_íd
 +
√w_Àngth
;

2348 
suc˚ss
 = 
åue
;

2349 
	`‰ì
(
buf
);

2355 
ªtu∫_vÆue
 = 
addr
;

2356 
suc˚ss
 = 
åue
;

2363 
ªtu∫_vÆue
 = 0;

2364 
suc˚ss
 = 
Ál£
;

2368 
SYSCALL_RT_SIGACTION
:

2371 
ªtu∫_vÆue
 = 0;

2372 
suc˚ss
 = 
åue
;

2376 
SYSCALL_GETTIMEOFDAY
:

2386 
timevÆ
 
tv
;

2387 
timez⁄e
 
tz
;

2388 
uöt64_t
 
tvaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2389 
uöt64_t
 
tzaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2390 
Æpha_timevÆ
 
©v
;

2391 
Æpha_timez⁄e
 
©z
;

2392 
öt64_t
 
ªsu…
;

2394 i‡(
tzaddr
)

2395 
ªsu…
 = 
	`gëtimeofday
(&
tv
, &
tz
);

2397 
ªsu…
 = 
	`gëtimeofday
(&
tv
, 0);

2399 i‡(
ªsu…
 == 0)

2401 
©v
.
tv_£c
 = 
tv
.tv_sec;

2402 
©v
.
tv_u£c
 = 
tv
.tv_usec;

2403 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2404  
tvaddr
, &
©v
, (atv));

2407 i‡(
tzaddr
)

2409 
©z
.
tz_möuãswe°
 = 
tz
.tz_minuteswest;

2410 
©z
.
tz_d°time
 = 
tz
.tz_dsttime;

2411 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2412  
tzaddr
, &
©z
, (atz));

2416 
ªtu∫_vÆue
 = 0;

2417 
suc˚ss
 = 
åue
;

2420 
ªtu∫_vÆue
 = 
î∫o
;

2424 
SYSCALL_GETCWD
:

2426 *
buf
;

2427 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2428 
uöt64_t
 
size
 = 
ªgs
->
ªgs_R
[
R_A1
];

2429 *
ªs
;

2432 
buf
 = (*)
	`ˇŒoc
(
size
, ());

2434 
ªs
 = 
	`gëcwd
(
buf
, 
size
);

2436 i‡(
ªs
 < 0)

2437 
ªtu∫_vÆue
 = 
î∫o
;

2440 
ªtu∫_vÆue
 = 
	`°æí
(
ªs
);

2441 
suc˚ss
 = 
åue
;

2442 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Wrôe
, 
vaddr
, 
buf
);

2447 
	`‰ì
(
buf
);

2451 
SYSCALL_EXIT_GROUP
:

2454 
¥ogøm_com∂ëe
 = 
åue
;

2455 
ªtu∫_vÆue
 = 0;

2456 
suc˚ss
 = 
åue
;

2460 
SYSCALL_STAT64
:

2464 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

2465 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

2466 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2469 
Æpha_°©64
 
Æpha_buf
;

2470 
ªsu…
;

2473 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
);

2477 
ªsu…
 = 
	`°©64
(
∑th«me
, &
Æpha_buf
);

2480 i‡(
ªsu…
 < 0)

2481 
ªtu∫_vÆue
 = 
î∫o
;

2485 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2486  
vaddr
, &
Æpha_buf
, (alpha_buf));

2488 
ªtu∫_vÆue
 = 0;

2489 
suc˚ss
 = 
åue
;

2490 
	`¥ötf
("\nNO ERROR\n");

2496 
SYSCALL_LSTAT64
:

2500 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

2501 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

2502 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2505 
Æpha_°©64
 
Æpha_buf
;

2506 
ªsu…
;

2509 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
);

2513 
ªsu…
 = 
	`l°©64
(
∑th«me
, &
Æpha_buf
);

2516 i‡(
ªsu…
 < 0)

2517 
ªtu∫_vÆue
 = 
î∫o
;

2521 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2522  
vaddr
, &
Æpha_buf
, (alpha_buf));

2524 
ªtu∫_vÆue
 = 0;

2525 
suc˚ss
 = 
åue
;

2531 
SYSCALL_FSTAT64
:

2536 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2537 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2540 
Æpha_°©64
 
Æpha_buf
;

2541 
ªsu…
;

2543 i‡(
fd
 < 0)

2544 
ªgs
->
ªgs_R
[
R_V0
] = 
EBADF
;

2547 
ªsu…
 = 
	`f°©64
(
fd
, &
Æpha_buf
);

2549 i‡(
ªsu…
 < 0)

2550 
ªtu∫_vÆue
 = 
î∫o
;

2554 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2555  
vaddr
, &
Æpha_buf
, (alpha_buf));

2557 
ªtu∫_vÆue
 = 0;

2558 
suc˚ss
 = 
åue
;

2579 i‡(
suc˚ss
)

2580 
ªgs
->
ªgs_R
[
R_A3
] = 0;

2582 
ªgs
->
ªgs_R
[
R_A3
] = -1;

2583 
ªgs
->
ªgs_R
[
R_V0
] = 
ªtu∫_vÆue
;

2590 
syscode
)

2592 
OSF_SYS_exô
:

2594 
	`l⁄gjmp
(
sim_exô_buf
,

2595  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

2598 
OSF_SYS_ªad
:

2600 *
buf
;

2603 i‡(!(
buf
 =

2604 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

2605 
	`Áèl
("out of memory in SYS_read");

2609  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2610 
	`ªad
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

2611  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2612 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2613 && 
î∫o
 =
EAGAIN
);

2616 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2617 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2620 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2621 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2625 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2626  
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
]);

2629 
	`‰ì
(
buf
);

2633 
OSF_SYS_wrôe
:

2635 *
buf
;

2638 i‡(!(
buf
 =

2639 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

2640 
	`Áèl
("out of memory in SYS_write");

2643 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,

2644  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2647 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

2651  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2652 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

2659  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2660 
	`wrôe
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

2661 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2662 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2663 && 
î∫o
 =
EAGAIN
);

2667 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

2668 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2671 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2672 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2676 
	`‰ì
(
buf
);

2680 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2682 
OSF_SYS_gëdomaö«me
:

2685 *
buf
;

2687 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2688 i‡(!
buf
)

2689 
	`Áèl
("out of virtual memory in gethostname()");

2691  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2692 
	`gëdomaö«me
–
buf
,

2693  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2696 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2697 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2700 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2701 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2705 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2706  
ªgs
->
ªgs_R
[
MD_REG_A0
],

2707 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2712 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2714 
OSF_SYS_Êock
:

2717 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2718 
	`Êock
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2719  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2722 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2723 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2726 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2727 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2733 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2735 
OSF_SYS_böd
:

2737 c⁄° 
sockaddr
 
a_sock
;

2739 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2740 &
a_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2742 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2743 
	`böd
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2744 &
a_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2747 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2748 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2751 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2752 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2758 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2760 
OSF_SYS_£ndto
:

2762 *
buf
 = 
NULL
;

2763 
sockaddr
 
d_sock
;

2764 
buf_Àn
 = 0;

2766 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2768 i‡(
buf_Àn
 > 0)

2769 
buf
 = (*Ë
	`mÆloc
(
buf_Àn
*());

2771 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2772 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2774 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

2775 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

2776 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

2778 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2779 
	`£ndto
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2780 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

2781 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
],

2782 &
d_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A5
]);

2784 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2785 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2788 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

2789 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

2790 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

2793 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2794 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2797 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2798 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2801 i‡(
buf
 !
NULL
)

2802 
	`‰ì
(
buf
);

2807 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2809 
OSF_SYS_ﬁd_ªcv‰om
:

2810 
OSF_SYS_ªcv‰om
:

2812 
addr_Àn
;

2813 *
buf
;

2814 
sockaddr
 *
a_sock
;

2816 
buf
 = (*Ë
	`mÆloc
(()*
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2818 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2819 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2821 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

2822 &
addr_Àn
, ());

2824 
a_sock
 = (
sockaddr
 *)
	`mÆloc
(
addr_Àn
);

2826 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

2827 
a_sock
, 
addr_Àn
);

2829 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2830 
	`ªcv‰om
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2831 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

2832 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
], 
a_sock
,&
addr_Àn
);

2834 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2835 
buf
, (Ë
ªgs
->
ªgs_R
[
MD_REG_V0
]);

2837 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

2838 &
addr_Àn
, ());

2840 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

2841 
a_sock
, 
addr_Àn
);

2844 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2845 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2848 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2849 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2851 i‡(
buf
 !
NULL
)

2852 
	`‰ì
(
buf
);

2857 
OSF_SYS_›í
:

2859 
buf
[
MAXBUFSIZE
];

2860 
i
;

2861 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

2864 
i
=0; i < 
OSF_NFLAGS
; i++)

2866 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

2868 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

2869 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

2873 i‡(
osf_Êags
 != 0)

2874 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

2877 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2880 #ifde‡
__CYGWIN32__


2881  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2882 
	`›í
(
buf
, 
loˇl_Êags
|
O_BINARY
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2884  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2885 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2889 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2890 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2893 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2894 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2899 
OSF_SYS_˛o£
:

2901 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

2902 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

2903 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

2905 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2910 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
–ªgs->ªgs_R[
MD_REG_A0
]);

2913 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2914 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2917 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2918 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2923 
OSF_SYS_¸ót
:

2925 
buf
[
MAXBUFSIZE
];

2928 
	`mem_°r˝y
(
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2931  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2932 
	`¸ót
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2935 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2936 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2939 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2940 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2946 
OSF_SYS_u∆ök
:

2948 
buf
[
MAXBUFSIZE
];

2951 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2954  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
(
buf
);

2957 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2958 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2961 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2962 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2967 
OSF_SYS_chdú
:

2969 
buf
[
MAXBUFSIZE
];

2972 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2975  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
(
buf
);

2978 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2979 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2982 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2983 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2988 
OSF_SYS_chmod
:

2990 
buf
[
MAXBUFSIZE
];

2993 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2996  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2997 
	`chmod
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3000 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3001 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3004 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3005 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3010 
OSF_SYS_chown
:

3011 #ifde‡
_MSC_VER


3012 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

3013 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3016 
buf
[
MAXBUFSIZE
];

3019 
	`mem_°r˝y
(
mem_‚
, 
mem
,
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

3022  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3023 
	`chown
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3024  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3027 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3028 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3031 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3032 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3038 
OSF_SYS_sbrk
:

3040 
sqw‹d_t
 
dñè
;

3041 
md_addr_t
 
addr
;

3043 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3044 
addr
 = 
ld_brk_poöt
 + 
dñè
;

3046 i‡(
vîbo£
)

3047 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

3049 
ld_brk_poöt
 = 
addr
;

3050 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

3051 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3053 i‡(
vîbo£
)

3054 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

3058 i‡–
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

3060 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3061 
ld_brk_poöt
 = 
addr
;

3066 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3072 
OSF_SYS_obªak
:

3074 
md_addr_t
 
addr
;

3078 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

3080 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3082 i‡(
vîbo£
)

3083 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

3085 
ld_brk_poöt
 = 
addr
;

3086 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

3087 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3089 i‡(
vîbo£
)

3090 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

3093 
OSF_SYS_l£ek
:

3095 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3096 
	`l£ek
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3097  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

3100 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3101 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3104 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3105 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3109 
OSF_SYS_gëpid
:

3111  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
();

3114 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3115 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3118 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3119 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3123 
OSF_SYS_gëuid
:

3124 #ifde‡
_MSC_VER


3125 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

3126 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3129  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
();

3130  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
();

3133 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3134 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3137 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3138 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3143 
OSF_SYS_ac˚ss
:

3145 
buf
[
MAXBUFSIZE
];

3148 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

3151  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3152 
	`ac˚ss
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3155 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3156 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3159 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3160 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3165 
OSF_SYS_°©
:

3166 
OSF_SYS_l°©
:

3168 
buf
[
MAXBUFSIZE
];

3169 
osf_°©buf
 
osf_sbuf
;

3170 #ifde‡
_MSC_VER


3171 
_°©
 
sbuf
;

3173 
°©
 
sbuf
;

3177 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

3180 i‡(
syscode
 =
OSF_SYS_°©
)

3181  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
(
buf
, &
sbuf
);

3184 #ifde‡
_MSC_VER


3185 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

3186 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3189  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
(
buf
, &
sbuf
);

3194 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3195 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3198 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3199 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3203 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

3204 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

3205 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

3206 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

3207 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

3208 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

3209 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

3210 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

3211 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

3212 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

3213 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

3214 #i‚de‡
_MSC_VER


3215 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

3216 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

3220 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3221 &
osf_sbuf
, (
osf_°©buf
));

3225 
OSF_SYS_dup
:

3227  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
–ªgs->ªgs_R[
MD_REG_A0
]);

3230 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3231 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3234 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3235 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3240 
OSF_SYS_pùe
:

3242 
fd
[2];

3245 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

3246 
fd
, (fd));

3249  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

3252  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

3253  
ªgs
->
ªgs_R
[3] = 
fd
[1];

3256 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
)-1)

3258 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3259 
ªgs
->
ªgs_R
[7] = 1;

3265 
OSF_SYS_gëgid
:

3266 #ifde‡
_MSC_VER


3267 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

3268 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3271  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
();

3272  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
();

3275 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3276 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3279 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3280 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3285 
OSF_SYS_io˘l
:

3286  
ªgs
->
ªgs_R
[
MD_REG_A1
])

3288 #i‡!
	`deföed
(
TIOCGETP
Ë&& deföed(
löux
)

3289 
OSF_TIOCGETP
:

3291 
ãrmios
 
lbuf
;

3292 
osf_sgâyb
 
buf
;

3294  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3295 
	`tcgë©å
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3296 &
lbuf
);

3299 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

3300 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

3301 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

3302 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

3303 
buf
.
sg_Êags
 = 0;

3305 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3306  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

3307 (
osf_sgâyb
));

3309 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3310 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3313 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3314 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3319 #ifde‡
TIOCGETP


3320 
OSF_TIOCGETP
:

3322 
sgâyb
 
lbuf
;

3323 
osf_sgâyb
 
buf
;

3325  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3326 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3327  
TIOCGETP
,

3328 &
lbuf
);

3331 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

3332 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

3333 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

3334 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

3335 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

3336 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3337  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

3338 (
osf_sgâyb
));

3340 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3341 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3344 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3345 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3350 #ifde‡
FIONREAD


3351 
OSF_FIONREAD
:

3353 
ƒód
;

3355  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3356 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3357  
FIONREAD
,

3358  &
ƒód
);

3360 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3361  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3362 &
ƒód
, (nread));

3364 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3365 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3368 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3369 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3374 #ifde‡
FIONBIO


3375 
FIONBIO
:

3377 
¨g
 = 0;

3379 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

3380 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3381  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3382 &
¨g
, (arg));

3384 #ifde‡
NOTNOW


3385 
	`Ârötf
(
°dîr
, "FIONBIO: %d, %d\n",

3386 ()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3387 
¨g
);

3389  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3390 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3391  
FIONBIO
,

3392  &
¨g
);

3394 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

3395 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3396  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3397 &
¨g
, (arg));

3399 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3400 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3403 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3404 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3410 
	`w¨n
("unsupported ioctl call: ioctl(%ld, ...)",

3411 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3412 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3419 
buf
[
NUM_IOCTL_BYTES
];

3420 
loˇl_ªq
 = 0;

3423  
ªgs
->
ªgs_R
[
MD_REG_A1
]) {

3425 
SS_IOCTL_TIOCGETP
:

3426 
loˇl_ªq
 = 
TIOCGETP
;

3428 
SS_IOCTL_TIOCSETP
:

3429 
loˇl_ªq
 = 
TIOCSETP
;

3431 
SS_IOCTL_TCGETP
:

3432 
loˇl_ªq
 = 
TIOCGETP
;

3435 #ifde‡
TCGETA


3436 
SS_IOCTL_TCGETA
:

3437 
loˇl_ªq
 = 
TCGETA
;

3440 #ifde‡
TIOCGLTC


3441 
SS_IOCTL_TIOCGLTC
:

3442 
loˇl_ªq
 = 
TIOCGLTC
;

3445 #ifde‡
TIOCSLTC


3446 
SS_IOCTL_TIOCSLTC
:

3447 
loˇl_ªq
 = 
TIOCSLTC
;

3450 
SS_IOCTL_TIOCGWINSZ
:

3451 
loˇl_ªq
 = 
TIOCGWINSZ
;

3453 #ifde‡
TCSETAW


3454 
SS_IOCTL_TCSETAW
:

3455 
loˇl_ªq
 = 
TCSETAW
;

3458 #ifde‡
TIOCGETC


3459 
SS_IOCTL_TIOCGETC
:

3460 
loˇl_ªq
 = 
TIOCGETC
;

3463 #ifde‡
TIOCSETC


3464 
SS_IOCTL_TIOCSETC
:

3465 
loˇl_ªq
 = 
TIOCSETC
;

3468 #ifde‡
TIOCLBIC


3469 
SS_IOCTL_TIOCLBIC
:

3470 
loˇl_ªq
 = 
TIOCLBIC
;

3473 #ifde‡
TIOCLBIS


3474 
SS_IOCTL_TIOCLBIS
:

3475 
loˇl_ªq
 = 
TIOCLBIS
;

3478 #ifde‡
TIOCLGET


3479 
SS_IOCTL_TIOCLGET
:

3480 
loˇl_ªq
 = 
TIOCLGET
;

3483 #ifde‡
TIOCLSET


3484 
SS_IOCTL_TIOCLSET
:

3485 
loˇl_ªq
 = 
TIOCLSET
;

3490 i‡(!
loˇl_ªq
)

3494 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

3495 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

3496 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3497 
ªgs
->
ªgs_R
[7] = 0;

3504 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3505 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

3506 
buf
, 
NUM_IOCTL_BYTES
);

3509  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3510 
	`io˘l
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

3513 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3514 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

3515 
buf
, 
NUM_IOCTL_BYTES
);

3518 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3519 
ªgs
->
ªgs_R
[7] = 0;

3523 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3524 
ªgs
->
ªgs_R
[7] = 1;

3531 
OSF_SYS_f°©
:

3533 
osf_°©buf
 
osf_sbuf
;

3534 #ifde‡
_MSC_VER


3535 
_°©
 
sbuf
;

3537 
°©
 
sbuf
;

3541  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3542 
	`f°©
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

3545 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3546 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3549 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3550 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3554 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

3555 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

3556 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

3557 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

3558 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

3559 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

3560 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

3561 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

3562 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

3563 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

3564 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

3565 #i‚de‡
_MSC_VER


3566 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

3567 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

3571 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3572 &
osf_sbuf
, (
osf_°©buf
));

3576 
OSF_SYS_gë∑gesize
:

3578 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

3581 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3582 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3585 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3586 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3590 
OSF_SYS_£tôimî
:

3592 
	`w¨n
("syscall: setitimer ignored");

3593 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3596 
OSF_SYS_èbÀ
:

3598 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

3599 
osf_tbl_sysöfo
 
sysöfo
;

3601 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

3602 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

3603 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

3604 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

3605 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

3607 
èbÀ_id
)

3609 
OSF_TBL_SYSINFO
:

3610 i‡(
èbÀ_ödex
 != 0)

3612 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 0 index, got %08d",

3613 
èbÀ_ödex
 );

3615 i‡(
num_ñem
 != 1)

3617 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 1Élts, got %08d",

3618 
num_ñem
 );

3622 
rußge
 
rußge_öfo
;

3625 i‡(
	`gërußge
(
RUSAGE_SELF
, &
rußge_öfo
) < 0)

3628 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3631 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3636 
sysöfo
.
si_hz
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

3639 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 +

3640 (
rußge_öfo
.
ru_utime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

3641 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 +

3642 (
rußge_öfo
.
ru_°ime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

3646 
sysöfo
.
si_ni˚
 = 0;

3647 
sysöfo
.
si_idÀ
 = 0;

3648 
sysöfo
.
si_phz
 = 0;

3649 
sysöfo
.
si_boŸtime
 = 0;

3650 
sysöfo
.
waô
 = 0;

3653 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
,

3654 &
sysöfo
, (
osf_tbl_sysöfo
));

3657 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3662 
	`w¨n
("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

3663 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3668 
OSF_SYS_gëdèbÀsize
:

3669 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

3671 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
();

3674 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3675 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3678 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3679 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3681 #ñi‡
	`deföed
(
u…rix
)

3684 
	`w¨n
("syscall: called getdtablesize\n");

3685 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

3686 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3688 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

3691 
	`w¨n
("syscall: called getdtablesize\n");

3692 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

3693 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3697 
æimô
 
æ
;

3700 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
)-1)

3702 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

3703 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3707 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3708 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3714 
OSF_SYS_dup2
:

3716 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3717 
	`dup2
–
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

3720 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3721 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3724 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3725 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3729 
OSF_SYS_f˙é
:

3730 #ifde‡
_MSC_VER


3731 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

3732 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3735 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3736 
	`f˙é
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3737  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

3740 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3741 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3744 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3745 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3751 
OSF_SYS_sigvec
:

3753 
	`w¨n
("syscall: sigvec ignored");

3754 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3759 
OSF_SYS_sigblock
:

3761 
	`w¨n
("syscall: sigblock ignored");

3762 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3767 
OSF_SYS_sig£tmask
:

3769 
	`w¨n
("syscall: sigsetmask ignored");

3770 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3774 
OSF_SYS_gëtimeofday
:

3775 #ifde‡
_MSC_VER


3776 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

3777 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3780 
osf_timevÆ
 
osf_tv
;

3781 
timevÆ
 
tv
, *
tvp
;

3782 
osf_timez⁄e
 
osf_tz
;

3783 
timez⁄e
 
tz
, *
tzp
;

3785 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

3788 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

3789 &
osf_tv
, (
osf_timevÆ
));

3792 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_£c
);

3793 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_u£c
);

3794 
tvp
 = &
tv
;

3797 
tvp
 = 
NULL
;

3799 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3802 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3803 &
osf_tz
, (
osf_timez⁄e
));

3806 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_möuãswe°
);

3807 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_d°time
);

3808 
tzp
 = &
tz
;

3811 
tzp
 = 
NULL
;

3814  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
(
tvp
, 
tzp
);

3817 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3818 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3821 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3822 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3825 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

3828 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

3829 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

3832 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

3833 &
osf_tv
, (
osf_timevÆ
));

3836 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3839 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

3840 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

3843 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3844 &
osf_tz
, (
osf_timez⁄e
));

3850 
OSF_SYS_gërußge
:

3851 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

3853 
tms
 
tms_buf
;

3854 
osf_rußge
 
rußge
;

3857 i‡(
	`times
(&
tms_buf
Ë!(
qw‹d_t
)-1)

3860 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3861 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3865 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3866 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3870 #i‡
	`deföed
(
__svr4__
)

3871 
	`mem£t
(&
rußge
, '\0', (
osf_rußge
));

3873 
	`bzîo
(&
rußge
, (
osf_rußge
));

3877 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_utime
/
CLK_TCK
);

3878 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

3879 
	`MD_SWAPW
(
rußge
.
osf_ru_utime
.
osf_tv_£c
);

3880 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

3881 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_°ime
/
CLK_TCK
);

3882 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

3883 
	`MD_SWAPW
(
rußge
.
osf_ru_°ime
.
osf_tv_£c
);

3884 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

3887 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3888 &
rußge
, (
osf_rußge
));

3890 #ñi‡
	`deföed
(
__unix__
)

3892 
rußge
 
loˇl_rußge
;

3893 
osf_rußge
 
rußge
;

3896  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3897 
	`gërußge
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

3900 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3901 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3904 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3905 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3909 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

3910 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

3911 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

3912 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

3913 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

3914 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

3915 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

3916 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

3917 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

3918 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

3919 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

3920 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

3921 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

3922 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

3923 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

3924 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

3925 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

3926 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

3927 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

3928 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

3929 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

3930 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

3931 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

3932 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

3933 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

3934 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

3935 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

3936 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

3937 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

3938 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

3941 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3942 &
rußge
, (
osf_rußge
));

3944 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

3945 
	`w¨n
("syscall: called getrusage\n");

3946 
ªgs
->
ªgs_R
[7] = 0;

3948 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

3952 
OSF_SYS_utimes
:

3954 
buf
[
MAXBUFSIZE
];

3957 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

3959 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

3961 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__i386__
)

3963  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

3964 #ñi‡
	`deföed
(
_MSC_VER
)

3966  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

3967 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

3968  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
NULL
);

3969 #ñi‡
	`deföed
(
__CYGWIN32__
)

3970 
	`w¨n
("syscall: called utimes\n");

3972 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

3977 
osf_timevÆ
 
osf_tvÆ
[2];

3978 #i‚de‡
_MSC_VER


3979 
timevÆ
 
tvÆ
[2];

3983 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

3984 
osf_tvÆ
, 2*(
osf_timevÆ
));

3986 #i‚de‡
_MSC_VER


3988 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

3989 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_u£c
);

3990 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

3991 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_u£c
);

3994 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

3997 
utimbuf
 
ubuf
;

3999 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
tvÆ
[0].
tv_£c
);

4000 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
tvÆ
[1].
tv_£c
);

4002  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

4004 #ñi‡
	`deföed
(
_MSC_VER
)

4007 
_utimbuf
 
ubuf
;

4009 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

4010 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

4012  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

4014 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

4015  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
tvÆ
);

4016 #ñi‡
	`deföed
(
__CYGWIN32__
)

4017 
	`w¨n
("syscall: called utimes\n");

4019 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

4024 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4025 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4028 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4029 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4034 
OSF_SYS_gëæimô
:

4035 
OSF_SYS_£ålimô
:

4036 #ifde‡
_MSC_VER


4037 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

4038 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4039 #ñi‡
	`deföed
(
__CYGWIN32__
)

4041 
	`w¨n
("syscall: called get/setrlimit\n");

4042 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4046 
osf_æimô
 
osf_æ
;

4047 
æimô
 
æ
;

4050 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

4051 &
osf_æ
, (
osf_æimô
));

4054 
æ
.
æim_cur
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_cur
);

4055 
æ
.
æim_max
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_max
);

4058 i‡(
syscode
 =
OSF_SYS_gëæimô
)

4059  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4060 
	`gëæimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

4062  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4063 
	`£ålimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

4066 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4067 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4070 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4071 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4075 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
(
æ
.
æim_cur
);

4076 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
(
æ
.
æim_max
);

4079 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

4080 &
osf_æ
, (
osf_æimô
));

4085 
OSF_SYS_sig¥ocmask
:

4087 
fú°
 = 
TRUE
;

4089 i‡(
fú°
)

4091 
	`w¨n
("partially supported sigprocmask() call...");

4092 
fú°
 = 
FALSE
;

4104 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
sigmask
;

4105 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4107 
ªgs
->
ªgs_R
[
MD_REG_A0
])

4109 
OSF_SIG_BLOCK
:

4110 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

4112 
OSF_SIG_UNBLOCK
:

4113 
sigmask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

4115 
OSF_SIG_SETMASK
:

4116 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

4119 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

4120 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

4124 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

4125 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

4126 &
sigmask
, (sigmask));

4128 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4130 
ªgs
->
ªgs_R
[
MD_REG_A0
])

4132 
OSF_SIG_BLOCK
:

4133 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

4135 
OSF_SIG_UNBLOCK
:

4136 
sigmask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

4138 
OSF_SIG_SETMASK
:

4139 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

4142 
	`∑nic
("illegal how valueÅo sigprocmask()");

4145 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4146 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4151 
OSF_SYS_siga˘i⁄
:

4153 
signum
;

4154 
fú°
 = 
TRUE
;

4156 i‡(
fú°
)

4158 
	`w¨n
("partially supported sigaction() call...");

4159 
fú°
 = 
FALSE
;

4162 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4163 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4164 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

4166 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

4167 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

4169 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4172 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4182 
OSF_SYS_sig°ack
:

4183 
	`w¨n
("unsupported sigstack() call...");

4184 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4187 
OSF_SYS_sigªtu∫
:

4189 
i
;

4190 
osf_sigc⁄ãxt
 
sc
;

4191 
fú°
 = 
TRUE
;

4193 i‡(
fú°
)

4195 
	`w¨n
("partially supported sigreturn() call...");

4196 
fú°
 = 
FALSE
;

4199 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

4200 &
sc
, (
osf_sigc⁄ãxt
));

4202 
sigmask
 = 
	`MD_SWAPQ
(
sc
.
sc_mask
);

4203 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
(
sc
.
sc_pc
);

4207 
i
=0; i < 32; ++i)

4208 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

4209 
i
=0; i < 32; ++i)

4210 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

4211 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

4215 
OSF_SYS_uswôch
:

4216 
	`w¨n
("unsupported uswitch() call...");

4217 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

4220 
OSF_SYS_£tsysöfo
:

4221 
	`w¨n
("unsupported setsysinfo() call...");

4222 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4225 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4226 
OSF_SYS_gëdúíåõs
:

4228 
i
, 
˙t
, 
osf_˙t
;

4229 
dúít
 *
p
;

4230 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4231 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

4232 *
buf
;

4233 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

4234 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

4235 
sqw‹d_t
 
osf_ba£
;

4236 
ba£
 = 0;

4239 i‡(!
osf_nbyãs
)

4240 
	`w¨n
("attemptingÅo get 0 directoryÉntries...");

4243 
buf
 = 
	`ˇŒoc
(1, 
osf_nbyãs
);

4244 i‡(!
buf
)

4245 
	`Áèl
("out of virtual memory");

4248 #i‡
	`deföed
(
__svr4__
)

4249 
ba£
 = 
	`l£ek
 (()
fd
, (
off_t
)0, 
SEEK_CUR
);

4250 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4251 
	`gëdíts
(()
fd
, (
dúít
 *)
buf
, (
size_t
)
osf_nbyãs
);

4253 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4254 
	`gëdúíåõs
(()
fd
, 
buf
, (
size_t
)
osf_nbyãs
, &
ba£
);

4258 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4260 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4263 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

4266 
i
=0, 
˙t
=0, 
osf_˙t
=0, 
p
=(
dúít
 *)
buf
;

4267 
˙t
 < 
ªgs
->
ªgs_R
[
MD_REG_V0
] && 
p
->
d_ª˛í
 > 0;

4268 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

4270 
osf_dúít
 osf_dirent;

4272 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
(
p
->d_ino);

4273 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
(
	`°æí
(
p
->
d_«me
));

4274 
	`°r˝y
(
osf_dúít
.
d_«me
, 
p
->d_name);

4275 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
(
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

4277 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4278 
osf_buf
 + 
osf_˙t
,

4279 &
osf_dúít
, 
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

4280 
osf_˙t
 +
	`OSF_DIRENT_SZ
(
p
->
d_«me
);

4283 i‡(
osf_pba£
 != 0)

4285 
osf_ba£
 = (
sqw‹d_t
)
ba£
;

4286 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
,

4287 &
osf_ba£
, (osf_base));

4291 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

4296 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4297 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4300 
	`‰ì
(
buf
);

4305 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4306 
OSF_SYS_åunˇã
:

4308 
buf
[
MAXBUFSIZE
];

4311 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

4314  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4315 
	`åunˇã
(
buf
, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4318 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4319 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4322 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4323 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4329 #i‡!
	`deföed
(
__CYGWIN32__
Ë&& !deföed(
_MSC_VER
)

4330 
OSF_SYS_·runˇã
:

4332  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4333 
	`·runˇã
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4334  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4337 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4338 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4341 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4342 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4347 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4348 
OSF_SYS_°©fs
:

4350 
buf
[
MAXBUFSIZE
];

4351 
osf_°©fs
 
osf_sbuf
;

4352 
°©fs
 
sbuf
;

4355 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

4358  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
(
buf
, &
sbuf
);

4361 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4362 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4365 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4366 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4370 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

4371 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(0x6969) ;

4373 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(
sbuf
.f_type);

4375 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
(
sbuf
.
f_bsize
);

4376 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
(
sbuf
.f_blocks);

4377 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_bfree);

4378 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
(
sbuf
.f_bavail);

4379 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
(
sbuf
.f_files);

4380 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_ffree);

4384 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

4385 &
osf_sbuf
, (
osf_°©buf
));

4390 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4391 
OSF_SYS_£åegid
:

4394  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4395 
	`£åegid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

4396  (
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4399 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4400 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4403 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4404 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4409 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4410 
OSF_SYS_£åeuid
:

4413  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4414 
	`£åeuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

4415  (
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4418 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4419 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4422 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4423 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4428 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4429 
OSF_SYS_sockë
:

4432  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4433 
	`sockë
–
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4434 
Ámûy_m≠
, 
	`N_ELT
(family_map),

4436  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

4437 
sockty≥_m≠
, 
	`N_ELT
(socktype_map),

4439  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

4440 
Ámûy_m≠
, 
	`N_ELT
(family_map),

4444 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4445 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4448 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4449 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4454 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4455 
OSF_SYS_c⁄√˘
:

4457 
osf_sockaddr
 
osf_ß
;

4462 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > (
osf_sockaddr
))

4464 
	`Áèl
("sockaddr size overflow:áddrlen = %d",

4465 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4468 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

4469 &
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4471 
i
;

4472 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

4473 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4474 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

4476  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4477 
	`c⁄√˘
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4478 (*)&
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4481 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4482 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4485 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4486 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4492 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4493 
OSF_SYS_u«me
:

4496 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4497 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

4501 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4502 
OSF_SYS_wrôev
:

4504 
i
;

4505 *
buf
;

4506 
iovec
 *
iov
;

4509 
iov
 =

4510 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[
MD_REG_A2
]

4511 * (
iovec
));

4512 i‡(!
iov
)

4513 
	`Áèl
("out of virtual memory in SYS_writev");

4516 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4518 
osf_iovec
 
osf_iov
;

4521 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4522 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

4523 + 
i
*(
osf_iovec
)),

4524 &
osf_iov
, (
osf_iovec
));

4526 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
.iov_len);

4527 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

4529 
buf
 = (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
.
iov_Àn
), ());

4530 i‡(!
buf
)

4531 
	`Áèl
("out of virtual memory in SYS_writev");

4532 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
(
osf_iov
.
iov_ba£
),

4533 
buf
, 
	`MD_SWAPW
(
osf_iov
.
iov_Àn
));

4534 
iov
[
i
].
iov_ba£
 = 
buf
;

4537 
iov
[
i
].
iov_ba£
 = 
NULL
;

4542  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4543 
	`wrôev
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

4544  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4545 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

4546 && 
î∫o
 =
EAGAIN
);

4549 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4550 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4554 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4558 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4560 i‡(
iov
[
i
].
iov_ba£
)

4562 
	`‰ì
(
iov
[
i
].
iov_ba£
);

4563 
iov
[
i
].
iov_ba£
 = 
NULL
;

4566 
	`‰ì
(
iov
);

4571 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4572 
OSF_SYS_ªadv
:

4574 
i
;

4575 *
buf
 = 
NULL
;

4576 
osf_iovec
 *
osf_iov
;

4577 
iovec
 *
iov
;

4580 
osf_iov
 =

4581 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
],

4582 (
osf_iovec
));

4583 i‡(!
osf_iov
)

4584 
	`Áèl
("out of virtual memory in SYS_readv");

4586 
iov
 =

4587 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], (
iovec
));

4588 i‡(!
iov
)

4589 
	`Áèl
("out of virtual memory in SYS_readv");

4592 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4595 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4596 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

4597 + 
i
*(
osf_iovec
)),

4598 &
osf_iov
[
i
], (
osf_iovec
));

4600 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
[i].iov_len);

4601 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

4603 
buf
 =

4604 (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
[
i
].
iov_Àn
), ());

4605 i‡(!
buf
)

4606 
	`Áèl
("out of virtual memory in SYS_readv");

4607 
iov
[
i
].
iov_ba£
 = 
buf
;

4610 
iov
[
i
].
iov_ba£
 = 
NULL
;

4615  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4616 
	`ªadv
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

4617  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4618 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

4619 && 
î∫o
 =
EAGAIN
);

4622 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4624 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

4626 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
osf_iov
[
i
].
iov_ba£
),

4627 
iov
[
i
].
iov_ba£
, 
	`MD_SWAPW
(
osf_iov
[i].
iov_Àn
));

4632 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4633 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4636 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4637 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4641 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

4643 i‡(
iov
[
i
].
iov_ba£
)

4645 
	`‰ì
(
iov
[
i
].
iov_ba£
);

4646 
iov
[
i
].
iov_ba£
 = 
NULL
;

4650 i‡(
osf_iov
)

4651 
	`‰ì
(
osf_iov
);

4652 i‡(
iov
)

4653 
	`‰ì
(
iov
);

4658 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4659 
OSF_SYS_£tsock›t
:

4661 *
buf
;

4662 
xœã_èbÀ_t
 *
m≠
;

4663 
nm≠
;

4668 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

4669 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

4671 
buf
 = 
	`ˇŒoc
(1, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A4
]);

4672 i‡(!
buf
)

4673 
	`Áèl
("cannotállocate memory in OSF_SYS_setsockopt");

4676 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4677  
ªgs
->
ªgs_R
[
MD_REG_A3
],

4678 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A4
]);

4681 
buf
 = 
NULL
;

4684 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

4686 
m≠
 = 
sock›t_m≠
;

4687 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

4689 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

4691 
m≠
 = 
t˝›t_m≠
;

4692 
nm≠
 = 
	`N_ELT
(
t˝›t_m≠
);

4696 
	`w¨n
("noÅranslation mapávailable for `setsockopt()': %d",

4697 ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4698 
m≠
 = 
sock›t_m≠
;

4699 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

4702  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4703 
	`£tsock›t
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4704  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

4705 
sockÀvñ_m≠
, 
	`N_ELT
(socklevel_map),

4707  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

4708 
m≠
, 
nm≠
,

4710  
buf
,

4711  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

4714 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4715 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4718 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4719 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4722 i‡(
buf
 !
NULL
)

4723 
	`‰ì
(
buf
);

4728 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4729 
OSF_SYS_ﬁd_gësock«me
:

4732 *
buf
;

4733 
w‹d_t
 
osf_addæí
;

4734 
addæí
;

4737 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4738  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4739 &
osf_addæí
, (osf_addrlen));

4740 
addæí
 = ()
osf_addæí
;

4741 i‡(
addæí
 != 0)

4743 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

4744 i‡(!
buf
)

4745 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

4748 
buf
 = 
NULL
;

4750  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4751 
	`gësock«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4752  (
sockaddr
 *)
buf
,

4753  &
addæí
);

4756 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4757 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4760 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4761 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4765 i‡(
addæí
 != 0)

4766 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4767  
ªgs
->
ªgs_R
[
MD_REG_A1
],

4768 
buf
, 
addæí
);

4769 
osf_addæí
 = (
qw‹d_t
)
addæí
;

4770 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4771  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4772 &
osf_addæí
, (osf_addrlen));

4774 i‡(
buf
 !
NULL
)

4775 
	`‰ì
(
buf
);

4780 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4781 
OSF_SYS_ﬁd_gë≥î«me
:

4784 *
buf
;

4785 
w‹d_t
 
osf_addæí
;

4786 
addæí
;

4789 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4790  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4791 &
osf_addæí
, (osf_addrlen));

4792 
addæí
 = ()
osf_addæí
;

4793 i‡(
addæí
 != 0)

4795 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

4796 i‡(!
buf
)

4797 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

4800 
buf
 = 
NULL
;

4802  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4803 
	`gë≥î«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4804  (
sockaddr
 *)
buf
,

4805  &
addæí
);

4808 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4809 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4812 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4813 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4817 i‡(
addæí
 != 0)

4818 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4819  
ªgs
->
ªgs_R
[
MD_REG_A1
],

4820 
buf
, 
addæí
);

4821 
osf_addæí
 = (
qw‹d_t
)
addæí
;

4822 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4823  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4824 &
osf_addæí
, (osf_addrlen));

4826 i‡(
buf
 !
NULL
)

4827 
	`‰ì
(
buf
);

4832 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4833 
OSF_SYS_£tgid
:

4836  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4837 
	`£tgid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4840 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4841 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4844 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4845 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4850 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4851 
OSF_SYS_£tuid
:

4854  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4855 
	`£tuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4858 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4859 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4862 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4863 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4868 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4869 
OSF_SYS_gë¥i‹ôy
:

4872  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4873 
	`gë¥i‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4874  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4877 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4878 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4881 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4882 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4887 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4888 
OSF_SYS_£çri‹ôy
:

4891  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4892 
	`£çri‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

4893  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

4894  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4897 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4898 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4901 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4902 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4907 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4908 
OSF_SYS_£À˘
:

4910 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

4911 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

4912 
timevÆ
 
timeout
, *
timeouç
;

4915 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4917 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4918  
ªgs
->
ªgs_R
[
MD_REG_A1
],

4919 &
ªadfd
, (
fd_£t
));

4920 
ªadfdp
 = &
ªadfd
;

4923 
ªadfdp
 = 
NULL
;

4926 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

4928 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4929  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4930 &
wrôefd
, (
fd_£t
));

4931 
wrôefdp
 = &
wrôefd
;

4934 
wrôefdp
 = 
NULL
;

4937 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

4939 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4940  
ªgs
->
ªgs_R
[
MD_REG_A3
],

4941 &
ex˚±fd
, (
fd_£t
));

4942 
ex˚±fdp
 = &
ex˚±fd
;

4945 
ex˚±fdp
 = 
NULL
;

4948 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

4950 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

4951  
ªgs
->
ªgs_R
[
MD_REG_A4
],

4952 &
timeout
, (
timevÆ
));

4953 
timeouç
 = &
timeout
;

4956 
timeouç
 = 
NULL
;

4958 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

4960  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4961 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

4962 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

4965  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4966 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

4967 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

4971 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

4972 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4975 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4976 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4980 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4981 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4982  
ªgs
->
ªgs_R
[
MD_REG_A1
],

4983 &
ªadfd
, (
fd_£t
));

4986 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

4987 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4988  
ªgs
->
ªgs_R
[
MD_REG_A2
],

4989 &
wrôefd
, (
fd_£t
));

4992 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

4993 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

4994  
ªgs
->
ªgs_R
[
MD_REG_A3
],

4995 &
ex˚±fd
, (
fd_£t
));

4998 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

4999 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

5000  
ªgs
->
ªgs_R
[
MD_REG_A4
],

5001 &
timeout
, (
timevÆ
));

5006 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

5007 
OSF_SYS_shutdown
:

5010  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

5011 
	`shutdown
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

5012  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

5015 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

5016 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5019 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5020 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

5025 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

5026 
OSF_SYS_pﬁl
:

5028 
i
;

5029 
pﬁlfd
 *
fds
;

5032 
fds
 = 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A1
], (
pﬁlfd
));

5033 i‡(!
fds
)

5034 
	`Áèl
("out of virtual memory in SYS_poll");

5037 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

5040 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

5041 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

5042 + 
i
*(
pﬁlfd
)),

5043 &
fds
[
i
], (
pﬁlfd
));

5047  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

5048 
	`pﬁl
–
fds
,

5049  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

5050  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

5053 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

5054 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5057 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5058 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

5062 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

5065 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

5066 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

5067 + 
i
*(
pﬁlfd
)),

5068 &
fds
[
i
], (
pﬁlfd
));

5072 
	`‰ì
(
fds
);

5077 
OSF_SYS_u¶ìp_thªad
:

5079 
	`Ârötf
(
°dîr
, "u¶ìp(%d)\n", ()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

5081 #ifde‡
Æpha


5082 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
((Ïegs->ªgs_R[
MD_REG_A0
]);

5084 
	`u¶ìp
(()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

5085 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5088 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

5089 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5092 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5093 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

5096 
	`w¨n
("unsupported usleep_thread() call...");

5097 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5101 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

5102 
OSF_SYS_gëho°«me
:

5105 *
buf
;

5107 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

5108 i‡(!
buf
)

5109 
	`Áèl
("out of virtual memory in gethostname()");

5111  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

5112 
	`gëho°«me
–
buf
,

5113  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

5116 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

5117 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5120 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5121 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

5125 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

5126  
ªgs
->
ªgs_R
[
MD_REG_A0
],

5127 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

5132 
OSF_SYS_madvi£
:

5133 
	`w¨n
("unsupported madvise() call ignored...");

5134 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5138 
	`w¨n
("invalid/unimplemented syscall %ld, PC=0x%08p, RA=0x%08p, winging it",

5139 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

5140 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5141 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5143 
	`Áèl
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

5148 i‡(
vîbo£
)

5149 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

5150 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

5151 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

	@target-alpha/alpha.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

63 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

64 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

69 #i‡!
deföed
(
HOST_HAS_QWORD
)

70 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

71 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

75 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

78 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

79 
	gmd_›off£t
[
OP_MAX
];

82 
	gmd_›mask
[
OP_MAX
] = {

84 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

85 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

86 
	#CONNECT
(
OP
)

	)

87 
	~"machöe.def
"

91 
	gmd_›shi·
[
OP_MAX
] = {

93 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

94 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

95 
	#CONNECT
(
OP
)

	)

96 
	~"machöe.def
"

100 *
	gmd_›2«me
[
OP_MAX
] = {

101 
NULL
,

102 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

103 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

104 
	#CONNECT
(
OP
)

	)

105 
	~"machöe.def
"

109 *
	gmd_›2f‹m©
[
OP_MAX
] = {

110 
NULL
,

111 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

112 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

113 
	#CONNECT
(
OP
)

	)

114 
	~"machöe.def
"

118 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

119 
FUCœss_NA
,

120 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

121 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

122 
	#CONNECT
(
OP
)

	)

123 
	~"machöe.def
"

127 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

128 
NULL
,

142 *
	gmd_amode_°r
[
md_amode_NUM
] =

153 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

158 { "$r0", 
π_g¥
, 0 },

159 { "$v0", 
π_g¥
, 0 },

160 { "$r1", 
π_g¥
, 1 },

161 { "$r2", 
π_g¥
, 2 },

162 { "$r3", 
π_g¥
, 3 },

163 { "$r4", 
π_g¥
, 4 },

164 { "$r5", 
π_g¥
, 5 },

165 { "$r6", 
π_g¥
, 6 },

166 { "$r7", 
π_g¥
, 7 },

167 { "$îr", 
π_g¥
, 7 },

168 { "$r8", 
π_g¥
, 8 },

169 { "$r9", 
π_g¥
, 9 },

170 { "$r10", 
π_g¥
, 10 },

171 { "$r11", 
π_g¥
, 11 },

172 { "$r12", 
π_g¥
, 12 },

173 { "$r13", 
π_g¥
, 13 },

174 { "$r14", 
π_g¥
, 14 },

175 { "$r15", 
π_g¥
, 15 },

176 { "$Â", 
π_g¥
, 15 },

177 { "$r16", 
π_g¥
, 16 },

178 { "$a0", 
π_g¥
, 16 },

179 { "$r17", 
π_g¥
, 17 },

180 { "$a1", 
π_g¥
, 17 },

181 { "$r18", 
π_g¥
, 18 },

182 { "$a2", 
π_g¥
, 18 },

183 { "$r19", 
π_g¥
, 19 },

184 { "$a3", 
π_g¥
, 19 },

185 { "$r20", 
π_g¥
, 20 },

186 { "$a4", 
π_g¥
, 20 },

187 { "$r21", 
π_g¥
, 21 },

188 { "$a5", 
π_g¥
, 21 },

189 { "$r22", 
π_g¥
, 22 },

190 { "$r23", 
π_g¥
, 23 },

191 { "$r24", 
π_g¥
, 24 },

192 { "$r25", 
π_g¥
, 25 },

193 { "$r26", 
π_g¥
, 26 },

194 { "$ø", 
π_g¥
, 26 },

195 { "$r27", 
π_g¥
, 27 },

196 { "$r28", 
π_g¥
, 28 },

197 { "$r29", 
π_g¥
, 29 },

198 { "$gp", 
π_g¥
, 29 },

199 { "$r30", 
π_g¥
, 30 },

200 { "$•", 
π_g¥
, 30 },

201 { "$r31", 
π_g¥
, 31 },

202 { "$zîo", 
π_g¥
, 31 },

205 { "$f0", 
π_Âr
, 0 },

206 { "$f1", 
π_Âr
, 1 },

207 { "$f2", 
π_Âr
, 2 },

208 { "$f3", 
π_Âr
, 3 },

209 { "$f4", 
π_Âr
, 4 },

210 { "$f5", 
π_Âr
, 5 },

211 { "$f6", 
π_Âr
, 6 },

212 { "$f7", 
π_Âr
, 7 },

213 { "$f8", 
π_Âr
, 8 },

214 { "$f9", 
π_Âr
, 9 },

215 { "$f10", 
π_Âr
, 10 },

216 { "$f11", 
π_Âr
, 11 },

217 { "$f12", 
π_Âr
, 12 },

218 { "$f13", 
π_Âr
, 13 },

219 { "$f14", 
π_Âr
, 14 },

220 { "$f15", 
π_Âr
, 15 },

221 { "$f16", 
π_Âr
, 16 },

222 { "$f17", 
π_Âr
, 17 },

223 { "$f18", 
π_Âr
, 18 },

224 { "$f19", 
π_Âr
, 19 },

225 { "$f20", 
π_Âr
, 20 },

226 { "$f21", 
π_Âr
, 21 },

227 { "$f22", 
π_Âr
, 22 },

228 { "$f23", 
π_Âr
, 23 },

229 { "$f24", 
π_Âr
, 24 },

230 { "$f25", 
π_Âr
, 25 },

231 { "$f26", 
π_Âr
, 26 },

232 { "$f27", 
π_Âr
, 27 },

233 { "$f28", 
π_Âr
, 28 },

234 { "$f29", 
π_Âr
, 29 },

235 { "$f30", 
π_Âr
, 30 },

236 { "$f31", 
π_Âr
, 31 },

239 { "$l0", 
π_Õr
, 0 },

240 { "$l1", 
π_Õr
, 1 },

241 { "$l2", 
π_Õr
, 2 },

242 { "$l3", 
π_Õr
, 3 },

243 { "$l4", 
π_Õr
, 4 },

244 { "$l5", 
π_Õr
, 5 },

245 { "$l6", 
π_Õr
, 6 },

246 { "$l7", 
π_Õr
, 7 },

247 { "$l8", 
π_Õr
, 8 },

248 { "$l9", 
π_Õr
, 9 },

249 { "$l10", 
π_Õr
, 10 },

250 { "$l11", 
π_Õr
, 11 },

251 { "$l12", 
π_Õr
, 12 },

252 { "$l13", 
π_Õr
, 13 },

253 { "$l14", 
π_Õr
, 14 },

254 { "$l15", 
π_Õr
, 15 },

255 { "$l16", 
π_Õr
, 16 },

256 { "$l17", 
π_Õr
, 17 },

257 { "$l18", 
π_Õr
, 18 },

258 { "$l19", 
π_Õr
, 19 },

259 { "$l20", 
π_Õr
, 20 },

260 { "$l21", 
π_Õr
, 21 },

261 { "$l22", 
π_Õr
, 22 },

262 { "$l23", 
π_Õr
, 23 },

263 { "$l24", 
π_Õr
, 24 },

264 { "$l25", 
π_Õr
, 25 },

265 { "$l26", 
π_Õr
, 26 },

266 { "$l27", 
π_Õr
, 27 },

267 { "$l28", 
π_Õr
, 28 },

268 { "$l29", 
π_Õr
, 29 },

269 { "$l30", 
π_Õr
, 30 },

270 { "$l31", 
π_Õr
, 31 },

273 { "$Â¸", 
π_˘æ
, 0 },

274 { "$uniq", 
π_˘æ
, 1 },

277 { "$pc", 
π_PC
, 0 },

278 { "$≈c", 
π_NPC
, 0 },

281 { 
NULL
, 
π_g¥
, 0 }

286 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

288 
i
;

290 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

292 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

293  
md_ªg_«mes
[
i
].
°r
;

297  
NULL
;

298 
	}
}

301 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

302 
is_wrôe
,

303 
md_ªg_ty≥
 
π
,

304 
ªg
,

305 
evÆ_vÆue_t
 *
vÆ
)

307 
π
)

309 
π_g¥
:

310 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

313 i‡(!
is_wrôe
)

315 
vÆ
->
ty≥
 = 
ë_qw‹d
;

316 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

319 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

322 
π_Õr
:

323 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

326 i‡(!
is_wrôe
)

328 
vÆ
->
ty≥
 = 
ë_qw‹d
;

329 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

332 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

335 
π_Âr
:

336 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

339 i‡(!
is_wrôe
)

341 
vÆ
->
ty≥
 = 
ë_doubÀ
;

342 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

345 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

348 
π_˘æ
:

349 
ªg
)

352 i‡(!
is_wrôe
)

354 
vÆ
->
ty≥
 = 
ë_qw‹d
;

355 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

358 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

362 i‡(!
is_wrôe
)

364 
vÆ
->
ty≥
 = 
ë_qw‹d
;

365 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

368 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

376 
π_PC
:

377 i‡(!
is_wrôe
)

379 
vÆ
->
ty≥
 = 
ë_addr
;

380 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

383 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

386 
π_NPC
:

387 i‡(!
is_wrôe
)

389 
vÆ
->
ty≥
 = 
ë_addr
;

390 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

393 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

397 
	`∑nic
("bogusÑegister bank");

401  
NULL
;

402 
	}
}

406 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

408 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

409 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

410 
	}
}

413 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

415 
i
;

417 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

419 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

420 
	`Ârötf
(
°ªam
, " ");

421 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

422 
	`Ârötf
(
°ªam
, "\n");

424 
	}
}

428 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

430 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

431 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

432 
	}
}

435 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

437 
i
;

440 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

442 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

443 
	`Ârötf
(
°ªam
, "\n");

445 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

446 
	`Ârötf
(
°ªam
, "\n");

448 
	}
}

451 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

454 
ªg
)

457 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

461 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

465 
	`∑nic
("bogus controlÑegister index");

467 
	}
}

470 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

472 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

473 
	`Ârötf
(
°ªam
, " ");

474 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

476 
	}
}

479 
w‹d_t


480 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

482 
i
;

483 
qw‹d_t
 
checksum
 = 0;

485 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

486 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

488 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

489 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

491 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

492 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

493 
checksum
 ^
ªgs
->
ªgs_PC
;

494 
checksum
 ^
ªgs
->
ªgs_NPC
;

496  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

497 
	}
}

501 
	gmd_›2Êags
[
OP_MAX
] = {

502 
NA
,

503 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

504 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

505 
	#CONNECT
(
OP
)

	)

506 
	~"machöe.def
"

512 
	$md_öô_decodî
()

514 
max_off£t
 = 0;

515 
off£t
 = 0;

517 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

518 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

519 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

520 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

521 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

522 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

524 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

525 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

526 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

527 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

528 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

529 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

531 
	#CONNECT
(
OP
) \

532 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = off£t;

	)

534 
	~"machöe.def
"

536 i‡(
max_off£t
 >
MD_MAX_MASK
)

537 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

538 
	}
}

542 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

543 
md_addr_t
 
pc
,

544 
FILE
 *
°ªam
)

546 
md_›code
 
›
;

549 i‡(!
°ªam
)

550 
°ªam
 = 
°dîr
;

553 
	`MD_SET_OPCODE
(
›
, 
ö°
);

556 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

559 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

563 *
s
;

566 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

568 
s
 = 
	`MD_OP_FORMAT
(
›
);

569 *
s
) {

570 *
s
) {

572 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

575 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

578 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

581 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

584 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

587 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

590 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

593 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

596 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

599 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

603 
	`Âutc
(*
s
, 
°ªam
);

605 
s
++;

608 
	}
}

	@target-alpha/alpha.h

52 #i‚de‡
ALPHA_H


53 
	#ALPHA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

69 
	#TARGET_ALPHA


	)

72 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

73 
	#MD_CROSS_ENDIAN


	)

77 
	#NA
 0

	)

84 
	#MD_QWORD_ADDRS


	)

87 
qw‹d_t
 
	tmd_addr_t
;

95 
	#MD_PAGE_SIZE
 8192

	)

96 
	#MD_LOG_PAGE_SIZE
 13

	)

103 
	emd_Áu…_ty≥
 {

104 
	mmd_Áu…_n⁄e
 = 0,

105 
	mmd_Áu…_ac˚ss
,

106 
	mmd_Áu…_Æignmít
,

107 
	mmd_Áu…_ovîÊow
,

108 
	mmd_Áu…_div0
,

109 
	mmd_Áu…_övÆid
,

111 
	mmd_Áu…_bªak
,

112 
	mmd_Áu…_unim∂
,

113 
	mmd_Áu…_öã∫Æ


122 
	#MD_NUM_IREGS
 32

	)

125 
	#MD_NUM_FREGS
 32

	)

128 
	#MD_NUM_CREGS
 2

	)

131 
	#MD_TOTAL_REGS
 \

132 –32 + 32 + 2 + 1 + 1 + 1)

	)

135 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

139 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

140 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

141 } 
	tmd_Âr_t
;

145 
qw‹d_t
 
	mÂ¸
;

146 
qw‹d_t
 
	muniq
;

147 } 
	tmd_˘æ_t
;

150 
	emd_ªg_«mes
 {

151 
	mMD_REG_V0
 = 0,

152 
	mMD_REG_ERR
 = 7,

153 
	mMD_REG_FP
 = 15,

154 
	mMD_REG_A0
 = 16,

155 
	mMD_REG_A1
 = 17,

156 
	mMD_REG_A2
 = 18,

157 
	mMD_REG_A3
 = 19,

158 
	mMD_REG_A4
 = 20,

159 
	mMD_REG_A5
 = 21,

160 
	mMD_REG_RA
 = 26,

161 
	mMD_REG_GP
 = 29,

162 
	mMD_REG_SP
 = 30,

163 
	mMD_REG_ZERO
 = 31

172 
w‹d_t
 
	tmd_ö°_t
;

175 
md_ö°_t
 
MD_NOP_INST
;

178 #ifde‡
MD_CROSS_ENDIAN


180 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

181 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

182 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

183 
	#MD_SWAPI
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPH
(
X
Ë(X)

	)

188 
	#MD_SWAPW
(
X
Ë(X)

	)

189 
	#MD_SWAPQ
(
X
Ë(X)

	)

190 
	#MD_SWAPD
(
X
Ë(X)

	)

191 
	#MD_SWAPI
(
X
Ë(X)

	)

196 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

197 { (
INST
Ë
	`MEM_READ_WORD
((
MEM
), (
PC
)); }

	)

204 
	#MD_MAX_ENVIRON
 16384

	)

212 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

213 
	#MD_SET_OPCODE
(
OP
, 
INST
) \

214 { 
OP
 = 
md_mask2›
[
	`MD_TOP_OP
(
INST
)]; \

215 
md_›mask
[
OP
]) \

216 
OP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[OP]Ë& 
md_›mask
[OP]) \

217 + 
md_›off£t
[
OP
]]; }

	)

221 
	#MD_MAX_MASK
 2048

	)

224 
md_›code
 
md_mask2›
[];

225 
md_›off£t
[];

226 
md_›mask
[];

227 
md_›shi·
[];

230 
	emd_›code
 {

231 
	mOP_NA
 = 0,

232 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

233 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

234 
	#CONNECT
(
OP
)

	)

235 
	~"machöe.def
"

236 
	mOP_MAX


240 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

241 *
md_›2«me
[];

244 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

245 *
md_›2f‹m©
[];

248 
	emd_fu_˛ass
 {

249 
	mFUCœss_NA
 = 0,

250 
	mI¡ALU
,

251 
	mI¡MULT
,

252 
	mI¡DIV
,

253 
	mFlﬂtADD
,

254 
	mFlﬂtCMP
,

255 
	mFlﬂtCVT
,

256 
	mFlﬂtMULT
,

257 
	mFlﬂtDIV
,

258 
	mFlﬂtSQRT
,

259 
	mRdP‹t
,

260 
	mWrP‹t
,

261 
	mNUM_FU_CLASSES


265 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

266 
md_fu_˛ass
 
md_›2fu
[];

269 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

270 *
md_fu2«me
[];

273 
	#F_ICOMP
 0x00000001

	)

274 
	#F_FCOMP
 0x00000002

	)

275 
	#F_CTRL
 0x00000004

	)

276 
	#F_UNCOND
 0x00000008

	)

277 
	#F_COND
 0x00000010

	)

278 
	#F_MEM
 0x00000020

	)

279 
	#F_LOAD
 0x00000040

	)

280 
	#F_STORE
 0x00000080

	)

281 
	#F_DISP
 0x00000100

	)

282 
	#F_RR
 0x00000200

	)

283 
	#F_DIRECT
 0x00000400

	)

284 
	#F_TRAP
 0x00000800

	)

285 
	#F_LONGLAT
 0x00001000

	)

286 
	#F_DIRJMP
 0x00002000

	)

287 
	#F_INDIRJMP
 0x00004000

	)

288 
	#F_CALL
 0x00008000

	)

289 
	#F_FPCOND
 0x00010000

	)

290 
	#F_IMM
 0x00020000

	)

293 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

294 
md_›2Êags
[];

298 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

299 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

300 
	#RC
 (
ö°
 & 0x1fË

	)

303 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

306 
	#TARG
 (
ö°
 & 0x1fffff)

	)

309 
	#OFS
 (
ö°
 & 0xffff)

	)

312 
	#SEXT
(
X
) \

313 (((
X
Ë& 0x8000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xffffffffffff0000)Ë: (sqw‹d_t)(X))

	)

315 
	#SEXT21
(
X
) \

316 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xfffffffff„00000)Ë: (sqw‹d_t)(X))

	)

318 
	#SEXT32
(
X
) \

319 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	`LL
(0xffffffff00000000)Ë: (sqw‹d_t)(X))

	)

322 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

325 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

326 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

327 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

328 
	#IS_IEEEFP_DBL_NAN
(
Q
) \

329 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	`IEEEFP_DBL_FRACTION
(Q)))

	)

332 #i‚de‡
SET_TPC


333 
	#SET_TPC
(
PC
Ë()0

	)

342 
	#OSF_SYS_exô
 1

	)

343 
	#MD_EXIT_SYSCALL
(
REGS
) \

344 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

	)

347 
	#OSF_SYS_wrôe
 4

	)

348 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

349 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

350 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

351 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] = 2))

	)

354 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

357 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

360 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

363 
	#MD_IS_INDIR
(
OP
) \

364 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

	)

367 
	emd_amode_ty≥
 {

368 
	mmd_amode_imm
,

369 
	mmd_amode_gp
,

370 
	mmd_amode_•
,

371 
	mmd_amode_Â
,

372 
	mmd_amode_di•
,

373 
	mmd_amode_º
,

374 
	mmd_amode_NUM


376 *
md_amode_°r
[
md_amode_NUM
];

379 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; }

	)

382 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

384 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

386 i‡((
RB
Ë=
MD_REG_GP
) \

387 (
AM
Ë
md_amode_gp
; \

388 i‡((
RB
Ë=
MD_REG_SP
) \

389 (
AM
Ë
md_amode_•
; \

390 i‡((
RB
Ë=
MD_REG_FP
) \

391 (
AM
Ë
md_amode_Â
; \

393 (
AM
Ë
md_amode_di•
; \

395 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

396 (
AM
Ë
md_amode_º
; \

398 
	`∑nic
("cannot decodeáddressing mode"); \

399 }

	)

402 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

410 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

412 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

413 
	`exo_√w
(
ec_li°
, \

414  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

415  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

416  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

417  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

418  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

419 
NULL
)

	)

421 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

422 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

424 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

425 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

	)

427 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

429 i‡(!
exo
 \

430 || 
exo
->
ec
 !
ec_li°
 \

431 || !
exo
->
as_li°
.
hód
 \

432 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

433 || !
exo
->
as_li°
.
hód
->
√xt
 \

434 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

435 || !
exo
->
as_li°
.
hód
->
√xt
->next \

436 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

437 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

438 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

439 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

440 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

441 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

442 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

443 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

444 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

445 (
REGS
)->
ªgs_NPC
 = \

446 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

447 (
REGS
)->
ªgs_C
.
Â¸
 = \

448 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

449 (
REGS
)->
ªgs_C
.
uniq
 = \

450 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

452 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

453 ((
REGS
)->
ªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

455 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

456 ((
REGS
)->
ªgs_F
.
q
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

458 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

459 ((
REGS
)->
ªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

461 
	#MD_FIRST_IN_REG
 0

	)

462 
	#MD_LAST_IN_REG
 21

	)

464 
	#MD_FIRST_OUT_REG
 0

	)

465 
	#MD_LAST_OUT_REG
 21

	)

473 
qw‹d_t
 
	texo_addªss_t
;

476 
qw‹d_t
 
	texo_öãgî_t
;

479 
	texo_Êﬂt_t
;

487 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

488 
	#sc_cou¡î
 
sc_sqw‹d


	)

489 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

492 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

500 
	emd_ªg_ty≥
 {

501 
	mπ_g¥
,

502 
	mπ_Õr
,

503 
	mπ_Âr
,

504 
	mπ_d¥
,

505 
	mπ_˘æ
,

506 
	mπ_PC
,

507 
	mπ_NPC
,

508 
	mπ_NUM


512 
	smd_ªg_«mes_t
 {

513 *
	m°r
;

514 
md_ªg_ty≥
 
	mfûe
;

515 
	mªg
;

519 
md_ªg_«mes_t
 
md_ªg_«mes
[];

522 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

525 
	gevÆ_vÆue_t
;

526 
	gªgs_t
;

528 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

529 
is_wrôe
,

530 
md_ªg_ty≥
 
π
,

531 
ªg
,

532 
evÆ_vÆue_t
 *
vÆ
);

535 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

536 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

539 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

540 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

543 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

544 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

547 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

555 
	#MD_AGEN_OP
 
ADDQ


	)

558 
	#MD_NOP_OP
 
OP_NA


	)

562 
	#MD_VALID_ADDR
(
ADDR
) \

563 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

564 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

565 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024Ë&& (ADDRË<Üd_°ack_ba£))

	)

573 
	#MD_BR_SHIFT
 2

	)

581 
md_öô_decodî
();

585 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

586 
md_addr_t
 
pc
,

587 
FILE
 *
°ªam
);

	@target-alpha/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-alpha/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	~"Æpha.h
"

59 
	#ECOFF_EB_MAGIC
 0x0160

	)

60 
	#ECOFF_EB_OTHER
 0x6001

	)

61 
	#ECOFF_EL_MAGIC
 0x0162

	)

62 
	#ECOFF_EL_OTHER
 0x6201

	)

63 
	#ECOFF_ALPHAMAGIC
 0603

	)

65 
	secoff_fûehdr
 {

66 
hÆf_t
 
	mf_magic
;

67 
hÆf_t
 
	mf_ns˙s
;

68 
sw‹d_t
 
	mf_timd©
;

69 
qw‹d_t
 
	mf_sym±r
;

70 
sw‹d_t
 
	mf_nsyms
;

71 
hÆf_t
 
	mf_›thdr
;

72 
hÆf_t
 
	mf_Êags
;

75 
	secoff_aouthdr
 {

76 
hÆf_t
 
	mmagic
;

77 
hÆf_t
 
	mv°amp
;

78 
hÆf_t
 
	mbldªv
;

79 
hÆf_t
 
	m∑d˚Œ
;

80 
qw‹d_t
 
	mtsize
;

81 
qw‹d_t
 
	mdsize
;

82 
qw‹d_t
 
	mbsize
;

83 
qw‹d_t
 
	míåy
;

84 
qw‹d_t
 
	mãxt_°¨t
;

85 
qw‹d_t
 
	md©a_°¨t
;

86 
qw‹d_t
 
	mbss_°¨t
;

87 
sw‹d_t
 
	mg¥mask
;

88 
sw‹d_t
 
	mÂrmask
;

89 
qw‹d_t
 
	mgp_vÆue
;

92 
	secoff_s˙hdr
 {

93 
	ms_«me
[8];

94 
qw‹d_t
 
	ms_∑ddr
;

95 
qw‹d_t
 
	ms_vaddr
;

96 
qw‹d_t
 
	ms_size
;

97 
qw‹d_t
 
	ms_s˙±r
;

98 
qw‹d_t
 
	ms_ªÕå
;

99 
qw‹d_t
 
	ms_ n›å
;

100 
hÆf_t
 
	ms_ƒñoc
;

101 
hÆf_t
 
	ms_∆¬o
;

102 
sw‹d_t
 
	ms_Êags
;

105 
	secoff_symhdr_t
 {

106 
hÆf_t
 
	mmagic
;

107 
hÆf_t
 
	mv°amp
;

109 
sw‹d_t
 
	mûöeMax
;

110 
sw‹d_t
 
	midnMax
;

111 
sw‹d_t
 
	mùdMax
;

112 
sw‹d_t
 
	misymMax
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	müuxMax
;

115 
sw‹d_t
 
	missMax
;

116 
sw‹d_t
 
	missExtMax
;

117 
sw‹d_t
 
	mifdMax
;

118 
sw‹d_t
 
	m¸fd
;

119 
sw‹d_t
 
	mõxtMax
;

120 
qw‹d_t
 
	mcbLöe
;

121 
qw‹d_t
 
	mcbLöeOff£t
;

122 
qw‹d_t
 
	mcbDnOff£t
;

123 
qw‹d_t
 
	mcbPdOff£t
;

124 
qw‹d_t
 
	mcbSymOff£t
;

125 
qw‹d_t
 
	mcbO±Off£t
;

126 
qw‹d_t
 
	mcbAuxOff£t
;

127 
qw‹d_t
 
	mcbSsOff£t
;

128 
qw‹d_t
 
	mcbSsExtOff£t
;

129 
qw‹d_t
 
	mcbFdOff£t
;

130 
qw‹d_t
 
	mcbRfdOff£t
;

131 
qw‹d_t
 
	mcbExtOff£t
;

132 } 
	tecoff_HDRR
;

134 
	#ECOFF_magicSym
 0x1992

	)

136 
	secoff_fdr
 {

137 
w‹d_t
 
	madr
;

138 
sw‹d_t
 
	mrss
;

139 
sw‹d_t
 
	missBa£
;

140 
sw‹d_t
 
	mcbSs
;

141 
sw‹d_t
 
	misymBa£
;

142 
sw‹d_t
 
	mcsym
;

143 
sw‹d_t
 
	mûöeBa£
;

144 
sw‹d_t
 
	m˛öe
;

145 
sw‹d_t
 
	mi›tBa£
;

146 
sw‹d_t
 
	mc›t
;

147 
hÆf_t
 
	mùdFú°
;

148 
hÆf_t
 
	m˝d
;

149 
sw‹d_t
 
	müuxBa£
;

150 
sw‹d_t
 
	mˇux
;

151 
sw‹d_t
 
	mrfdBa£
;

152 
sw‹d_t
 
	m¸fd
;

153 
	mœng
 :5;

154 
	mfMîge
 :1;

155 
	mfRódö
 :1;

156 
	mfBigídün
 :1;

157 
	mª£rved
 :24;

158 
sw‹d_t
 
	mcbLöeOff£t
;

159 
sw‹d_t
 
	mcbLöe
;

160 } 
	tecoff_FDR
;

162 
	secoff_pdr
 {

163 
w‹d_t
 
	madr
;

164 
sw‹d_t
 
	misym
;

165 
sw‹d_t
 
	mûöe
;

166 
sw‹d_t
 
	mªgmask
;

167 
sw‹d_t
 
	mªgoff£t
;

168 
sw‹d_t
 
	mi›t
;

169 
sw‹d_t
 
	m‰egmask
;

170 
sw‹d_t
 
	m‰egoff£t
;

171 
sw‹d_t
 
	m‰ameoff£t
;

172 
hÆf_t
 
	m‰amîeg
;

173 
hÆf_t
 
	mp¸eg
;

174 
sw‹d_t
 
	m Low
;

175 
sw‹d_t
 
	m High
;

176 
sw‹d_t
 
	mcbLöeOff£t
;

177 } 
	tecoff_PDR
;

179 
	secoff_SYMR
 {

180 
qw‹d_t
 
	mvÆue
;

181 
sw‹d_t
 
	miss
;

182 
	m°
 :6;

183 
	msc
 :5;

184 
	mª£rved
 :1;

185 
	mödex
 :20;

186 } 
	tecoff_SYMR
;

188 
	secoff_EXTR
 {

189 
ecoff_SYMR
 
	masym
;

190 
sw‹d_t
 
	mifd
;

191 
sw‹d_t
 
	mª£rved
;

192 } 
	tecoff_EXTR
;

194 
	#ECOFF_R_SN_TEXT
 1

	)

195 
	#ECOFF_R_SN_RDATA
 2

	)

196 
	#ECOFF_R_SN_DATA
 3

	)

197 
	#ECOFF_R_SN_SDATA
 4

	)

198 
	#ECOFF_R_SN_SBSS
 5

	)

199 
	#ECOFF_R_SN_BSS
 6

	)

201 
	#ECOFF_STYP_TEXT
 0x0020

	)

202 
	#ECOFF_STYP_RTEXT
 0x20000020

	)

203 
	#ECOFF_STYP_RDATA
 0x0100

	)

204 
	#ECOFF_STYP_DATA
 0x0040

	)

205 
	#ECOFF_STYP_SDATA
 0x0200

	)

206 
	#ECOFF_STYP_SBSS
 0x0400

	)

207 
	#ECOFF_STYP_BSS
 0x0080

	)

208 
	#ECOFF_STYP_INIT
 0x80000000

	)

210 
	#ECOFF_STYP_FINI
 0x01000000

	)

211 
	#ECOFF_STYP_RCONST
 0x02200000

	)

212 
	#ECOFF_STYP_LITA
 0x04000000

	)

213 
	#ECOFF_STYP_LIT8
 0x08000000

	)

214 
	#ECOFF_STYP_LIT4
 0x10000000

	)

215 
	#ECOFF_STYP_XDATA
 0x02400000

	)

216 
	#ECOFF_STYP_PDATA
 0x02800000

	)

218 
	#ECOFF_°Nû
 0

	)

219 
	#ECOFF_°GlobÆ
 1

	)

220 
	#ECOFF_°Sètic
 2

	)

221 
	#ECOFF_°P¨am
 3

	)

222 
	#ECOFF_°Loˇl
 4

	)

223 
	#ECOFF_°Labñ
 5

	)

224 
	#ECOFF_°Proc
 6

	)

225 
	#ECOFF_°Block
 7

	)

226 
	#ECOFF_°End
 8

	)

227 
	#ECOFF_°Membî
 9

	)

228 
	#ECOFF_°Ty≥def
 10

	)

229 
	#ECOFF_°Fûe
 11

	)

230 
	#ECOFF_°RegRñoc
 12

	)

231 
	#ECOFF_°F‹w¨d
 13

	)

232 
	#ECOFF_°SèticProc
 14

	)

233 
	#ECOFF_°C⁄°™t
 15

	)

	@target-alpha/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-Æpha/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 0

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
md_addr_t
 
	gld_brk_poöt
 = 0;

87 
	gld_d©a_size
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 0;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = -1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, "0x%010p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, "0x%010p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, "0x%010p");

130 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

132 &
ld_°ack_mö
,Üd_stack_min, "0x%010p");

134 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

136 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, "0x%010p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, "0x%010p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
qw‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

219 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

220 
	`w¨n
("****************************************");

221 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

222 
	`w¨n
("****************************************");

224 
	`Áèl
("SimpleScalar/Alpha only supports binaryÉxecution on\n"

230 i‡(
sim_chk±_‚ame
 !
NULL
)

231 
	`Áèl
("checkpoints only supported while EIOÅracing");

233 #ifde‡
BFD_LOADER


236 
bfd
 *
abfd
;

237 
a£˘i⁄
 *
£˘
;

241 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

242 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

243 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

246 
ld_ívú⁄_ba£
 = 
•
;

249 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

250 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

251 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

256 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

258 
	`bfd_˛o£
(
abfd
);

259 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

263 
ld_¥og_‚ame
 = 
¨gv
[0];

266 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

268 
	`debug
("processing %d sections in `%s'...",

269 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

272 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

274 *
p
;

276 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

277 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

278 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

281 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

282 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

283 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

284 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

287 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

288 i‡(!
p
)

289 
	`Áèl
("cannotállocate %d bytes for section `%s'",

290 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

291 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

294 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

295 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

296 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

299 
	`mem_bc›y
(
mem_‚
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

300 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

303 
	`‰ì
(
p
);

306 i‡(
zîo_bss_£gs


307 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

308 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

309 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

312 
	`mem_bzîo
(
mem_‚
,

313 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

314 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

319 
	`debug
("ignoring section `%s' duringÜoad...",

320 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

324 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

327 
ld_ãxt_size
 =

328 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

329 - 
MD_TEXT_BASE
)

330 + 
TEXT_TAIL_PADDING
;

334 
	`mem_bzîo
(
mem_‚
,

335 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

336 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

337 
TEXT_TAIL_PADDING
);

341 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

342 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

343 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

344 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

345 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

348 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

349 
d©a_bªak
)

350 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

351 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

356 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

357 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

358 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

363 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

364 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

365 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

366 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

369 i‡(!
	`bfd_˛o£
(
abfd
))

370 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

376 
FILE
 *
fobj
;

377 
Êoc
;

378 
ecoff_fûehdr
 
fhdr
;

379 
ecoff_aouthdr
 
ahdr
;

380 
ecoff_s˙hdr
 
shdr
;

383 
ld_¥og_‚ame
 = 
¨gv
[0];

386 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

387 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

389 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

391 i‡(!
fobj
)

392 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

394 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

395 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

398 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_ALPHAMAGIC
))

399 
ld_èrgë_big_ídün
 = 
FALSE
;

400 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_MAGIC
)

401 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_MAGIC
)

402 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_OTHER
)

403 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_OTHER
))

404 
	`Áèl
("AÕh®simuœt‹ c™nŸÑu¿PISA bö¨y `%s'", 
¨gv
[0]);

406 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable)",

407 
¨gv
[0]);

409 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

410 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

412 
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
ãxt_°¨t
);

413 
ld_ãxt_size
 = 
	`MD_SWAPQ
(
ahdr
.
tsize
);

414 
ld_¥og_íåy
 = 
	`MD_SWAPQ
(
ahdr
.
íåy
);

415 
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
d©a_°¨t
);

416 
ld_d©a_size
 = 
	`MD_SWAPQ
(
ahdr
.
dsize
Ë+ MD_SWAPQ◊hdr.
bsize
);

417 
ªgs
->
ªgs_R
[
MD_REG_GP
] = 
	`MD_SWAPQ
(
ahdr
.
gp_vÆue
);

420 
d©a_bªak
 = 
ld_d©a_ba£
 + 
ld_d©a_size
;

425 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
	`MD_SWAPH
(
fhdr
.
f_›thdr
), 0);

427 
	`debug
("processing %d sections in `%s'...",

428 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
), 
¨gv
[0]);

431 
Êoc
 = 
	`·ñl
(
fobj
);

432 
i
 = 0; i < 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
); i++)

434 *
p
;

436 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

437 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

438 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

439 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

440 
Êoc
 = 
	`·ñl
(
fobj
);

442 
	`MD_SWAPW
(
shdr
.
s_Êags
))

444 
ECOFF_STYP_TEXT
:

445 
ECOFF_STYP_RTEXT
:

446 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

447 i‡(!
p
)

448 
	`Áèl
("out of virtual memory");

450 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

451 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

452 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

453 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

456 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

457 
	`MD_SWAPQ
(
shdr
.
s_vaddr
), 
p
, MD_SWAPQ(shdr.
s_size
));

461 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

462 
	`MD_SWAPQ
(
shdr
.
s_vaddr
Ë+ MD_SWAPQ(shdr.
s_size
),

463 
TEXT_TAIL_PADDING
);

467 
	`‰ì
(
p
);

470 
Text_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

471 
Text_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

472 
Text_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
) / 4;

474 
Text_size
 += 10;

475 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

480 
ECOFF_STYP_INIT
:

481 
ECOFF_STYP_FINI
:

482 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

484 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

485 i‡(!
p
)

486 
	`Áèl
("out of virtual memory");

488 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

489 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

490 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

491 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

494 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

495 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

496 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

499 
	`‰ì
(
p
);

502 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

505 
ECOFF_STYP_LITA
:

506 
ECOFF_STYP_LIT8
:

507 
ECOFF_STYP_LIT4
:

508 
ECOFF_STYP_XDATA
:

509 
ECOFF_STYP_PDATA
:

510 
ECOFF_STYP_RCONST
:

513 
ECOFF_STYP_RDATA
:

518 
Rd©a_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

519 
Rd©a_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
);

520 
Rd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

523 
ECOFF_STYP_DATA
:

525 
D©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

528 
ECOFF_STYP_SDATA
:

530 
Sd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

532 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

534 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

535 i‡(!
p
)

536 
	`Áèl
("out of virtual memory");

538 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

539 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

540 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

541 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

544 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

545 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

546 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

549 
	`‰ì
(
p
);

552 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

555 
ECOFF_STYP_BSS
:

556 
ECOFF_STYP_SBSS
:

561 
	`w¨n
("£˘i⁄ `%s' ign‹ed...", 
shdr
.
s_«me
);

566 i‡(
	`f˛o£
(
fobj
))

567 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

573 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

574 
	`Áèl
("executable is missingá `.text' section");

575 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

576 
	`Áèl
("executable is missingá `.data' section");

577 i‡(!
ld_¥og_íåy
)

578 
	`Áèl
("programÉntryÖointÇot specified");

581 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

582 i‡(
sim_sw≠_byãs
)

587 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

588 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

590 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

593 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

594 i‡(
sim_sw≠_w‹ds
)

599 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

600 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

602 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

608 
ld_°ack_ba£
 = 
ld_ãxt_ba£
 - (409600+4096);

610 
•
 = 
	`ROUND_DOWN
(
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

612 
•
 = 
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

613 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

616 
ld_ívú⁄_ba£
 = 
•
;

619 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

620 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
));

621 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

622 
•
 +(
qw‹d_t
);

625 
¨gv_addr
 = 
•
;

626 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

627 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

630 
ívp_addr
 = 
•
;

631 
i
=0; 
ívp
[i]; i++)

632 
•
 +(
md_addr_t
);

633 
•
 +(
md_addr_t
);

636 
i
=0; i<
¨gc
; i++)

639 
ãmp
 = 
	`MD_SWAPQ
(
•
);

640 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

641 &
ãmp
, (
md_addr_t
));

643 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

644 
•
 +
	`°æí
(
¨gv
[
i
])+1;

647 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

648 &
nuŒ_±r
, (
md_addr_t
));

651 
i
 = 0; 
ívp
[i]; i++)

654 
ãmp
 = 
	`MD_SWAPQ
(
•
);

655 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

656 &
ãmp
, (
md_addr_t
));

658 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

659 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

662 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

663 &
nuŒ_±r
, (
md_addr_t
));

666 i‡(
•
 > 
ld_°ack_ba£
)

671 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON inálpha.h");

675 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

678 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

680 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

681 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

683 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

684 
ld_ãxt_ba£
, 
ld_ãxt_size
);

685 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

686 
ld_d©a_ba£
, 
ld_d©a_size
);

687 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

688 
ld_°ack_ba£
, 
ld_°ack_size
);

689 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

690 
	}
}

	@target-alpha/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"lﬂdî.h
"

58 
	~"symbﬁ.h
"

60 #ifde‡
BFD_LOADER


61 
	~<bfd.h
>

63 
	~"èrgë-Æpha/ecoff.h
"

69 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

72 
	gsym_nsyms
 = 0;

73 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

76 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

79 
	gsym_¡extsyms
 = 0;

80 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

83 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

86 
	gsym_nd©asyms
 = 0;

87 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

90 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

93 
	gsyms_lﬂded
 = 
FALSE
;

95 #ifde‡
PRINT_SYMS


98 
	$Êags2°r
(
Êags
)

100 
buf
[256];

101 *
p
;

103 i‡(!
Êags
)

106 
p
 = 
buf
;

107 *
p
 = '\0';

109 i‡(
Êags
 & 
BSF_LOCAL
)

111 *
p
++ = 'L';

112 *
p
++ = '|';

114 i‡(
Êags
 & 
BSF_GLOBAL
)

116 *
p
++ = 'G';

117 *
p
++ = '|';

119 i‡(
Êags
 & 
BSF_DEBUGGING
)

121 *
p
++ = 'D';

122 *
p
++ = '|';

124 i‡(
Êags
 & 
BSF_FUNCTION
)

126 *
p
++ = 'F';

127 *
p
++ = '|';

129 i‡(
Êags
 & 
BSF_KEEP
)

131 *
p
++ = 'K';

132 *
p
++ = '|';

134 i‡(
Êags
 & 
BSF_KEEP_G
)

136 *
p
++ = 'k'; *p++ = '|';

138 i‡(
Êags
 & 
BSF_WEAK
)

140 *
p
++ = 'W';

141 *
p
++ = '|';

143 i‡(
Êags
 & 
BSF_SECTION_SYM
)

145 *
p
++ = 'S'; *p++ = '|';

147 i‡(
Êags
 & 
BSF_OLD_COMMON
)

149 *
p
++ = 'O';

150 *
p
++ = '|';

152 i‡(
Êags
 & 
BSF_NOT_AT_END
)

154 *
p
++ = 'N';

155 *
p
++ = '|';

157 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

159 *
p
++ = 'C';

160 *
p
++ = '|';

162 i‡(
Êags
 & 
BSF_WARNING
)

164 *
p
++ = 'w';

165 *
p
++ = '|';

167 i‡(
Êags
 & 
BSF_INDIRECT
)

169 *
p
++ = 'I';

170 *
p
++ = '|';

172 i‡(
Êags
 & 
BSF_FILE
)

174 *
p
++ = 'f';

175 *
p
++ = '|';

178 i‡(
p
 =
buf
)

179 
	`∑nic
("no flags detected");

181 *--
p
 = '\0';

182  
buf
;

183 
	}
}

188 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

190  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

191 
	}
}

195 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

197  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

198 
	}
}

200 
	#RELEVANT_SCOPE
(
SYM
) \

202 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

204 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

205 && (
SYM
)->
«me
[0] != '$') \

207 
lﬂd_loˇls
 \

209 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

210 && (
SYM
)->
«me
[0] == '$') \

212 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

213 && (
SYM
)->
«me
[0] ='$'))))

	)

218 
	$sym_lﬂdsyms
(*
‚ame
,

219 
lﬂd_loˇls
)

221 
i
, 
debug_˙t
;

222 #ifde‡
BFD_LOADER


223 
bfd
 *
abfd
;

224 
asymbﬁ
 **
syms
;

225 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

227 
Àn
;

228 
FILE
 *
fobj
;

229 
ecoff_fûehdr
 
fhdr
;

230 
ecoff_aouthdr
 
ahdr
;

231 
ecoff_symhdr_t
 
symhdr
;

232 *
°πab
 = 
NULL
;

233 
ecoff_EXTR
 *
exå
;

236 i‡(
syms_lﬂded
)

243 #ifde‡
BFD_LOADER


246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

247 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

248 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

253 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

255 
	`bfd_˛o£
(
abfd
);

256 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

260 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

261 
	`∑nic
("binaryÉndian changed");

263 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

266 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

267 i‡(
°‹age
 <= 0)

268 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

270 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

271 i‡(!
syms
)

272 
	`Áèl
("out of virtual memory");

274 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

275 i‡(
nsyms
 <= 0)

276 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

283 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

284 
i
=0; i < 
nsyms
; i++)

286 
asymbﬁ
 *
sym
 = 
syms
[
i
];

290 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

294 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

296 && 
	`RELEVANT_SCOPE
(
sym
))

299 
sym_nd©asyms
++;

300 #ifde‡
PRINT_SYMS


301 
	`Ârötf
(
°dîr
,

303 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

304 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

308 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

310 && 
	`RELEVANT_SCOPE
(
sym
))

313 
sym_¡extsyms
++;

314 #ifde‡
PRINT_SYMS


315 
	`Ârötf
(
°dîr
,

317 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

318 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

324 #ifde‡
PRINT_SYMS


325 
	`Ârötf
(
°dîr
,

327 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

328 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

332 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

333 i‡(
sym_nsyms
 <= 0)

334 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

337 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

338 i‡(!
sym_db
)

339 
	`Áèl
("out of virtual memory");

342 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

344 
asymbﬁ
 *
sym
 = 
syms
[
i
];

348 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

352 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

354 && 
	`RELEVANT_SCOPE
(
sym
))

357 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

358 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

359 
sym_db
[
debug_˙t
].
öôülized
 =

360 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

362 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

363 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

364 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

365 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

367 
debug_˙t
++;

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

376 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

377 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

378 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

379 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

380 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

382 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_nsyms
)

391 
	`∑nic
("couldÇotÜocateáll counted symbols");

394 
	`‰ì
(
syms
);

398 i‡(!
	`bfd_˛o£
(
abfd
))

399 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

404 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

405 
fobj
 = 
	`f›í
(
‚ame
, "rb");

407 
fobj
 = 
	`f›í
(
‚ame
, "r");

409 i‡(!
fobj
)

410 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

412 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

413 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

416 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

417 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

419 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

420 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

423 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

425 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

426 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

428 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

429 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

432 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

433 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

434 i‡(!
°πab
)

435 
	`Áèl
("out of virtual memory");

438 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

439 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

440 
	`Áèl
("error whileÑeading symbolÅableÇames");

443 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

444 i‡(
Àn
 <= 0)

445 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

446 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

447 i‡(!
sym_db
)

448 
	`Áèl
("out of virtual memory");

451 
exå
 =

452 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

453 i‡(!
exå
)

454 
	`Áèl
("out of virtual memory");

456 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

457 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

458 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

460 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

463 
i
=0; i < 
symhdr
.
õxtMax
; i++)

465 
°r_off£t
;

467 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

469 
exå
[
i
].
asym
.
°
)

471 
ECOFF_°GlobÆ
:

472 
ECOFF_°Sètic
:

474 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

475 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

476 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

477 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

478 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

479 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

480 
sym_nsyms
++;

481 
sym_nd©asyms
++;

484 
ECOFF_°Proc
:

485 
ECOFF_°SèticProc
:

486 
ECOFF_°Labñ
:

488 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

489 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

490 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

492 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

493 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

494 
sym_nsyms
++;

495 
sym_¡extsyms
++;

502 
	`‰ì
(
exå
);

505 i‡(
	`f˛o£
(
fobj
))

506 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

515 
sym_syms
 =

516 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

517 i‡(!
sym_syms
)

518 
	`Áèl
("out of virtual memory");

520 
sym_syms_by_«me
 =

521 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

522 i‡(!
sym_syms_by_«me
)

523 
	`Áèl
("out of virtual memory");

525 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

527 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

528 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

529 
debug_˙t
++;

532 i‡(
debug_˙t
 !
sym_nsyms
)

533 
	`∑nic
("couldÇotÜocateáll symbols");

536 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

539 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

542 
sym_ãxtsyms
 =

543 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

544 i‡(!
sym_ãxtsyms
)

545 
	`Áèl
("out of virtual memory");

547 
sym_ãxtsyms_by_«me
 =

548 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

549 i‡(!
sym_ãxtsyms_by_«me
)

550 
	`Áèl
("out of virtual memory");

552 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

554 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

556 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

557 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

558 
debug_˙t
++;

562 i‡(
debug_˙t
 !
sym_¡extsyms
)

563 
	`∑nic
("couldÇotÜocateállÅext symbols");

566 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

569 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

570 (
sym_sym_t
 *), (*)
ncmp
);

573 
sym_d©asyms
 =

574 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

575 i‡(!
sym_d©asyms
)

576 
	`Áèl
("out of virtual memory");

578 
sym_d©asyms_by_«me
 =

579 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

580 i‡(!
sym_d©asyms_by_«me
)

581 
	`Áèl
("out of virtual memory");

583 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

585 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

587 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

588 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

589 
debug_˙t
++;

593 i‡(
debug_˙t
 !
sym_nd©asyms
)

594 
	`∑nic
("couldÇotÜocateáll data symbols");

597 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

600 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

601 (
sym_sym_t
 *), (*)
ncmp
);

604 
i
=0; i<
sym_¡extsyms
; i++)

606 
sym_ãxtsyms
[
i
]->
size
 =

607 (
i
 !(
sym_¡extsyms
 - 1)

608 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

609 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

611 
i
=0; i<
sym_nd©asyms
; i++)

613 
sym_d©asyms
[
i
]->
size
 =

614 (
i
 !(
sym_nd©asyms
 - 1)

615 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

616 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

620 
syms_lﬂded
 = 
TRUE
;

621 
	}
}

625 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

626 
FILE
 *
fd
)

628 
	`myÂrötf
(
fd
,

630 
sym
->
«me
,

631 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

632 
sym
->
öôülized
 ? "y" : "n",

633 
sym
->
pub
 ? "y" : "n",

634 
sym
->
loˇl
 ? "y" : "n",

635 
sym
->
addr
,

636 
sym
->
size
);

637 
	}
}

641 
	$sym_dumpsyms
(
FILE
 *
fd
)

643 
i
;

645 
i
=0; i < 
sym_nsyms
; i++)

646 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

647 
	}
}

651 
	$sym_dump°©e
(
FILE
 *
fd
)

653 
i
;

655 i‡(
fd
 =
NULL
)

656 
fd
 = 
°dîr
;

658 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

659 
i
=0; i < 
sym_nsyms
; i++)

660 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

662 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

663 
i
=0; i < 
sym_nsyms
; i++)

664 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

666 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

667 
i
=0; i < 
sym_¡extsyms
; i++)

668 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

670 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

671 
i
=0; i < 
sym_¡extsyms
; i++)

672 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

674 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

675 
i
=0; i < 
sym_nd©asyms
; i++)

676 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

678 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

679 
i
=0; i < 
sym_nd©asyms
; i++)

680 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

681 
	}
}

687 
sym_sym_t
 *

688 
	$sym_böd_addr
(
md_addr_t
 
addr
,

689 *
pödex
,

690 
exa˘
,

691 
sym_db_t
 
db
)

693 
nsyms
, 
low
, 
high
, 
pos
;

694 
sym_sym_t
 **
syms
;

696 
db
)

698 
sdb_™y
:

699 
syms
 = 
sym_syms
;

700 
nsyms
 = 
sym_nsyms
;

702 
sdb_ãxt
:

703 
syms
 = 
sym_ãxtsyms
;

704 
nsyms
 = 
sym_¡extsyms
;

706 
sdb_d©a
:

707 
syms
 = 
sym_d©asyms
;

708 
nsyms
 = 
sym_nd©asyms
;

711 
	`∑nic
("bogus symbol database");

715 i‡(!
nsyms
)

717 i‡(
pödex
)

718 *
pödex
 = -1;

719  
NULL
;

723 
low
 = 0;

724 
high
 = 
nsyms
-1;

725 
pos
 = (
low
 + 
high
) >> 1;

727 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

729 || (!
exa˘


730 && 
syms
[
pos
]->
addr
 <=áddr

731 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

733 i‡(
addr
 < 
syms
[
pos
]->addr)

734 
high
 = 
pos
 - 1;

736 
low
 = 
pos
 + 1;

737 i‡(
high
 >
low
)

738 
pos
 = (
low
 + 
high
) >> 1;

741 i‡(
pödex
)

742 *
pödex
 = -1;

743  
NULL
;

748 i‡(
pödex
)

749 *
pödex
 = 
pos
;

750  
syms
[
pos
];

751 
	}
}

756 
sym_sym_t
 *

757 
	$sym_böd_«me
(*
«me
,

758 *
pödex
,

759 
sym_db_t
 
db
)

761 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

762 
sym_sym_t
 **
syms
;

764 
db
)

766 
sdb_™y
:

767 
syms
 = 
sym_syms_by_«me
;

768 
nsyms
 = 
sym_nsyms
;

770 
sdb_ãxt
:

771 
syms
 = 
sym_ãxtsyms_by_«me
;

772 
nsyms
 = 
sym_¡extsyms
;

774 
sdb_d©a
:

775 
syms
 = 
sym_d©asyms_by_«me
;

776 
nsyms
 = 
sym_nd©asyms
;

779 
	`∑nic
("bogus symbol database");

783 i‡(!
nsyms
)

785 i‡(
pödex
)

786 *
pödex
 = -1;

787  
NULL
;

791 
low
 = 0;

792 
high
 = 
nsyms
-1;

793 
pos
 = (
low
 + 
high
) >> 1;

794 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

796 i‡(
cmp
 > 0)

797 
high
 = 
pos
 - 1;

799 
low
 = 
pos
 + 1;

800 i‡(
high
 >
low
)

801 
pos
 = (
low
 + 
high
) >> 1;

804 i‡(
pödex
)

805 *
pödex
 = -1;

806  
NULL
;

811 i‡(
pödex
)

812 *
pödex
 = 
pos
;

813  
syms
[
pos
];

814 
	}
}

	@target-alpha/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

57 #i‚de‡
MIN_SYSCALL_MODE


58 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

59 
	#MIN_SYSCALL_MODE


	)

64 #ifde‡
_MSC_VER


65 
	~<io.h
>

67 
	~<uni°d.h
>

69 
	~<f˙é.h
>

70 
	~<sys/ty≥s.h
>

71 #i‚de‡
_MSC_VER


72 
	~<sys/∑øm.h
>

74 
	~<î∫o.h
>

75 
	~<time.h
>

76 #i‚de‡
_MSC_VER


77 
	~<sys/time.h
>

79 #i‚de‡
_MSC_VER


80 
	~<sys/ªsour˚.h
>

82 
	~<sig«l.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/fûe.h
>

86 
	~<sys/°©.h
>

87 #i‚de‡
_MSC_VER


88 
	~<sys/uio.h
>

90 
	~<£tjmp.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/times.h
>

94 
	~<limôs.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/io˘l.h
>

98 #i‡
deföed
(
löux
)

99 
	~<utime.h
>

100 
	~<dúít.h
>

101 
	~<sys/vfs.h
>

103 #i‡
deföed
(
_AIX
)

104 
	~<sys/°©fs.h
>

106 #i‚de‡
_MSC_VER


107 
	~<sys/mou¡.h
>

110 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

111 #i‚de‡
_MSC_VER


112 
	~<sys/£À˘.h
>

115 #ifde‡
löux


116 
	~<sgây.h
>

117 
	~<√töë/t˝.h
>

118 
	~<√töë/udp.h
>

119 
	~<√töë/ö.h
>

122 #i‡
deföed
(
__svr4__
)

123 
	~<sys/dúít.h
>

124 
	~<sys/fûio.h
>

125 #ñi‡
deföed
(
__osf__
)

126 
	~<dúít.h
>

131 
gëdúíåõs
(
fd
, *
buf
, 
nbyãs
, *
ba£p
);

134 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

135 
	~<sys/°©vfs.h
>

136 
	#°©fs
 
°©vfs


	)

137 
	~<sys/time.h
>

138 
	~<utime.h
>

139 
	~<sgây.h
>

140 
	~<√töë/ö.h
>

141 
	~<√töë/t˝.h
>

144 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

145 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

146 
	~<dúít.h
>

148 
	~<sys/dú.h
>

152 #unde‡
NL0


153 #unde‡
NL1


154 #unde‡
CR0


155 #unde‡
CR1


156 #unde‡
CR2


157 #unde‡
CR3


158 #unde‡
TAB0


159 #unde‡
TAB1


160 #unde‡
TAB2


161 #unde‡
XTABS


162 #unde‡
BS0


163 #unde‡
BS1


164 #unde‡
FF0


165 #unde‡
FF1


166 #unde‡
ECHO


167 #unde‡
NOFLSH


168 #unde‡
TOSTOP


169 #unde‡
FLUSHO


170 #unde‡
PENDIN


173 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

174 #unde‡
CR0


177 #ifde‡
__FªeBSD__


178 
	~<sys/io˘l_com∑t.h
>

180 #i‚de‡
_MSC_VER


181 
	~<ãrmio.h
>

185 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

187 #unde‡
HUPCL


188 #unde‡
ECHO


189 #unde‡
B50


190 #unde‡
B75


191 #unde‡
B110


192 #unde‡
B134


193 #unde‡
B150


194 #unde‡
B200


195 #unde‡
B300


196 #unde‡
B600


197 #unde‡
B1200


198 #unde‡
B1800


199 #unde‡
B2400


200 #unde‡
B4800


201 #unde‡
B9600


202 #unde‡
B19200


203 #unde‡
B38400


204 #unde‡
NL0


205 #unde‡
NL1


206 #unde‡
CR0


207 #unde‡
CR1


208 #unde‡
CR2


209 #unde‡
CR3


210 #unde‡
TAB0


211 #unde‡
TAB1


212 #unde‡
BS0


213 #unde‡
BS1


214 #unde‡
FF0


215 #unde‡
FF1


216 #unde‡
EXTA


217 #unde‡
EXTB


218 #unde‡
B900


219 #unde‡
B3600


220 #unde‡
B7200


221 #unde‡
XTABS


222 
	~<sgây.h
>

223 
	~<utime.h
>

226 #ifde‡
__CYGWIN32__


227 
	~<sys/uni°d.h
>

228 
	~<sys/vfs.h
>

231 
	~<sys/sockë.h
>

232 
	~<sys/pﬁl.h
>

234 #ifde‡
_MSC_VER


235 
	#ac˚ss
 
_ac˚ss


	)

236 
	#chmod
 
_chmod


	)

237 
	#chdú
 
_chdú


	)

238 
	#u∆ök
 
_u∆ök


	)

239 
	#›í
 
_›í


	)

240 
	#¸ót
 
_¸ót


	)

241 
	#pùe
 
_pùe


	)

242 
	#dup
 
_dup


	)

243 
	#dup2
 
_dup2


	)

244 
	#°©
 
_°©


	)

245 
	#f°©
 
_f°©


	)

246 
	#l£ek
 
_l£ek


	)

247 
	#ªad
 
_ªad


	)

248 
	#wrôe
 
_wrôe


	)

249 
	#˛o£
 
_˛o£


	)

250 
	#gëpid
 
_gëpid


	)

251 
	#utime
 
_utime


	)

252 
	~<sys/utime.h
>

255 
	~"ho°.h
"

256 
	~"misc.h
"

257 
	~"machöe.h
"

258 
	~"ªgs.h
"

259 
	~"mem‹y.h
"

260 
	~"lﬂdî.h
"

261 
	~"sim.h
"

262 
	~"ídün.h
"

263 
	~"eio.h
"

264 
	~"sysˇŒ.h
"

266 
	#OSF_SYS_sysˇŒ
 0

	)

268 
	#OSF_SYS_f‹k
 2

	)

269 
	#OSF_SYS_ªad
 3

	)

271 
	#OSF_SYS_ﬁd_›í
 5

	)

272 
	#OSF_SYS_˛o£
 6

	)

273 
	#OSF_SYS_waô4
 7

	)

274 
	#OSF_SYS_ﬁd_¸ót
 8

	)

275 
	#OSF_SYS_lök
 9

	)

276 
	#OSF_SYS_u∆ök
 10

	)

277 
	#OSF_SYS_execv
 11

	)

278 
	#OSF_SYS_chdú
 12

	)

279 
	#OSF_SYS_fchdú
 13

	)

280 
	#OSF_SYS_mknod
 14

	)

281 
	#OSF_SYS_chmod
 15

	)

282 
	#OSF_SYS_chown
 16

	)

283 
	#OSF_SYS_obªak
 17

	)

284 
	#OSF_SYS_gëfs°©
 18

	)

285 
	#OSF_SYS_l£ek
 19

	)

286 
	#OSF_SYS_gëpid
 20

	)

287 
	#OSF_SYS_mou¡
 21

	)

288 
	#OSF_SYS_unmou¡
 22

	)

289 
	#OSF_SYS_£tuid
 23

	)

290 
	#OSF_SYS_gëuid
 24

	)

291 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

292 
	#OSF_SYS_±ø˚
 26

	)

293 #ifde‡ 
COMPAT_43


294 
	#OSF_SYS_ƒecvmsg
 27

	)

295 
	#OSF_SYS_n£ndmsg
 28

	)

296 
	#OSF_SYS_ƒecv‰om
 29

	)

297 
	#OSF_SYS_«c˚±
 30

	)

298 
	#OSF_SYS_ngë≥î«me
 31

	)

299 
	#OSF_SYS_ngësock«me
 32

	)

301 
	#OSF_SYS_ªcvmsg
 27

	)

302 
	#OSF_SYS_£ndmsg
 28

	)

303 
	#OSF_SYS_ªcv‰om
 29

	)

304 
	#OSF_SYS_ac˚±
 30

	)

305 
	#OSF_SYS_gë≥î«me
 31

	)

306 
	#OSF_SYS_gësock«me
 32

	)

308 
	#OSF_SYS_ac˚ss
 33

	)

309 
	#OSF_SYS_chÊags
 34

	)

310 
	#OSF_SYS_fchÊags
 35

	)

311 
	#OSF_SYS_sync
 36

	)

312 
	#OSF_SYS_kûl
 37

	)

313 
	#OSF_SYS_ﬁd_°©
 38

	)

314 
	#OSF_SYS_£çgid
 39

	)

315 
	#OSF_SYS_ﬁd_l°©
 40

	)

316 
	#OSF_SYS_dup
 41

	)

317 
	#OSF_SYS_pùe
 42

	)

318 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

319 
	#OSF_SYS_¥ofû
 44

	)

320 
	#OSF_SYS_›í
 45

	)

322 
	#OSF_SYS_gëgid
 47

	)

323 
	#OSF_SYS_sig¥ocmask
 48

	)

324 
	#OSF_SYS_gëlogö
 49

	)

325 
	#OSF_SYS_£éogö
 50

	)

326 
	#OSF_SYS_ac˘
 51

	)

327 
	#OSF_SYS_sig≥ndög
 52

	)

328 
	#OSF_SYS_io˘l
 54

	)

329 
	#OSF_SYS_ªboŸ
 55

	)

330 
	#OSF_SYS_ªvoke
 56

	)

331 
	#OSF_SYS_symlök
 57

	)

332 
	#OSF_SYS_ªadlök
 58

	)

333 
	#OSF_SYS_execve
 59

	)

334 
	#OSF_SYS_umask
 60

	)

335 
	#OSF_SYS_chroŸ
 61

	)

336 
	#OSF_SYS_ﬁd_f°©
 62

	)

337 
	#OSF_SYS_gëpgΩ
 63

	)

338 
	#OSF_SYS_gë∑gesize
 64

	)

339 
	#OSF_SYS_mªm≠
 65

	)

340 
	#OSF_SYS_vf‹k
 66

	)

341 
	#OSF_SYS_°©
 67

	)

342 
	#OSF_SYS_l°©
 68

	)

343 
	#OSF_SYS_sbrk
 69

	)

344 
	#OSF_SYS_s°k
 70

	)

345 
	#OSF_SYS_mm≠
 71

	)

346 
	#OSF_SYS_ovadvi£
 72

	)

347 
	#OSF_SYS_munm≠
 73

	)

348 
	#OSF_SYS_m¥Ÿe˘
 74

	)

349 
	#OSF_SYS_madvi£
 75

	)

350 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

351 
	#OSF_SYS_kmodˇŒ
 77

	)

352 
	#OSF_SYS_möc‹e
 78

	)

353 
	#OSF_SYS_gëgroups
 79

	)

354 
	#OSF_SYS_£tgroups
 80

	)

355 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

356 
	#OSF_SYS_£çgΩ
 82

	)

357 
	#OSF_SYS_£tôimî
 83

	)

358 
	#OSF_SYS_ﬁd_waô
 84

	)

359 
	#OSF_SYS_èbÀ
 85

	)

360 
	#OSF_SYS_gëôimî
 86

	)

361 
	#OSF_SYS_gëho°«me
 87

	)

362 
	#OSF_SYS_£tho°«me
 88

	)

363 
	#OSF_SYS_gëdèbÀsize
 89

	)

364 
	#OSF_SYS_dup2
 90

	)

365 
	#OSF_SYS_f°©
 91

	)

366 
	#OSF_SYS_f˙é
 92

	)

367 
	#OSF_SYS_£À˘
 93

	)

368 
	#OSF_SYS_pﬁl
 94

	)

369 
	#OSF_SYS_fsync
 95

	)

370 
	#OSF_SYS_£çri‹ôy
 96

	)

371 
	#OSF_SYS_sockë
 97

	)

372 
	#OSF_SYS_c⁄√˘
 98

	)

373 #ifde‡ 
COMPAT_43


374 
	#OSF_SYS_ac˚±
 99

	)

376 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

378 
	#OSF_SYS_gë¥i‹ôy
 100

	)

379 #ifde‡ 
COMPAT_43


380 
	#OSF_SYS_£nd
 101

	)

381 
	#OSF_SYS_ªcv
 102

	)

383 
	#OSF_SYS_ﬁd_£nd
 101

	)

384 
	#OSF_SYS_ﬁd_ªcv
 102

	)

386 
	#OSF_SYS_sigªtu∫
 103

	)

387 
	#OSF_SYS_böd
 104

	)

388 
	#OSF_SYS_£tsock›t
 105

	)

389 
	#OSF_SYS_li°í
 106

	)

390 
	#OSF_SYS_∂ock
 107

	)

391 
	#OSF_SYS_ﬁd_sigvec
 108

	)

392 
	#OSF_SYS_ﬁd_sigblock
 109

	)

393 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

394 
	#OSF_SYS_sigsu•íd
 111

	)

395 
	#OSF_SYS_sig°ack
 112

	)

396 #ifde‡ 
COMPAT_43


397 
	#OSF_SYS_ªcvmsg
 113

	)

398 
	#OSF_SYS_£ndmsg
 114

	)

400 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

401 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

404 
	#OSF_SYS_gëtimeofday
 116

	)

405 
	#OSF_SYS_gërußge
 117

	)

406 
	#OSF_SYS_gësock›t
 118

	)

407 
	#OSF_SYS_ªadv
 120

	)

408 
	#OSF_SYS_wrôev
 121

	)

409 
	#OSF_SYS_£âimeofday
 122

	)

410 
	#OSF_SYS_fchown
 123

	)

411 
	#OSF_SYS_fchmod
 124

	)

412 #ifde‡ 
COMPAT_43


413 
	#OSF_SYS_ªcv‰om
 125

	)

415 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

417 
	#OSF_SYS_£åeuid
 126

	)

418 
	#OSF_SYS_£åegid
 127

	)

419 
	#OSF_SYS_ª«me
 128

	)

420 
	#OSF_SYS_åunˇã
 129

	)

421 
	#OSF_SYS_·runˇã
 130

	)

422 
	#OSF_SYS_Êock
 131

	)

423 
	#OSF_SYS_£tgid
 132

	)

424 
	#OSF_SYS_£ndto
 133

	)

425 
	#OSF_SYS_shutdown
 134

	)

426 
	#OSF_SYS_sockë∑ú
 135

	)

427 
	#OSF_SYS_mkdú
 136

	)

428 
	#OSF_SYS_rmdú
 137

	)

429 
	#OSF_SYS_utimes
 138

	)

431 
	#OSF_SYS_adjtime
 140

	)

432 #ifde‡ 
COMPAT_43


433 
	#OSF_SYS_gë≥î«me
 141

	)

435 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

437 
	#OSF_SYS_gëho°id
 142

	)

438 
	#OSF_SYS_£tho°id
 143

	)

439 
	#OSF_SYS_gëæimô
 144

	)

440 
	#OSF_SYS_£ålimô
 145

	)

441 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

442 
	#OSF_SYS_£tsid
 147

	)

443 
	#OSF_SYS_quŸa˘l
 148

	)

444 
	#OSF_SYS_ﬁdquŸa
 149

	)

445 #ifde‡ 
COMPAT_43


446 
	#OSF_SYS_gësock«me
 150

	)

448 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

450 
	#OSF_SYS_pid_block
 153

	)

451 
	#OSF_SYS_pid_unblock
 154

	)

452 
	#OSF_SYS_siga˘i⁄
 156

	)

453 
	#OSF_SYS_sigwaô¥im
 157

	)

454 
	#OSF_SYS_nfssvc
 158

	)

455 
	#OSF_SYS_gëdúíåõs
 159

	)

456 
	#OSF_SYS_°©fs
 160

	)

457 
	#OSF_SYS_f°©fs
 161

	)

458 
	#OSF_SYS_async_d´m⁄
 163

	)

459 
	#OSF_SYS_gëfh
 164

	)

460 
	#OSF_SYS_gëdomaö«me
 165

	)

461 
	#OSF_SYS_£tdomaö«me
 166

	)

462 
	#OSF_SYS_exp‹tfs
 169

	)

463 
	#OSF_SYS_Æt_∂ock
 181

	)

464 
	#OSF_SYS_gëm¡
 184

	)

465 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

466 
	#OSF_SYS_Æt_£tsid
 188

	)

467 
	#OSF_SYS_sw≠⁄
 199

	)

468 
	#OSF_SYS_msg˘l
 200

	)

469 
	#OSF_SYS_msggë
 201

	)

470 
	#OSF_SYS_msgrcv
 202

	)

471 
	#OSF_SYS_msg¢d
 203

	)

472 
	#OSF_SYS_£m˘l
 204

	)

473 
	#OSF_SYS_£mgë
 205

	)

474 
	#OSF_SYS_£m›
 206

	)

475 
	#OSF_SYS_u«me
 207

	)

476 
	#OSF_SYS_lchown
 208

	)

477 
	#OSF_SYS_shm©
 209

	)

478 
	#OSF_SYS_shm˘l
 210

	)

479 
	#OSF_SYS_shmdt
 211

	)

480 
	#OSF_SYS_shmgë
 212

	)

481 
	#OSF_SYS_mvÆid
 213

	)

482 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

483 
	#OSF_SYS_m¶ìp
 215

	)

484 
	#OSF_SYS_mwakeup
 216

	)

485 
	#OSF_SYS_msync
 217

	)

486 
	#OSF_SYS_sig«l
 218

	)

487 
	#OSF_SYS_utc_gëtime
 219

	)

488 
	#OSF_SYS_utc_adjtime
 220

	)

489 
	#OSF_SYS_£curôy
 222

	)

490 
	#OSF_SYS_klﬂdˇŒ
 223

	)

491 
	#OSF_SYS_gëpgid
 233

	)

492 
	#OSF_SYS_gësid
 234

	)

493 
	#OSF_SYS_sigÆt°ack
 235

	)

494 
	#OSF_SYS_waôid
 236

	)

495 
	#OSF_SYS_¥io˙é£t
 237

	)

496 
	#OSF_SYS_sig£nd£t
 238

	)

497 
	#OSF_SYS_£t_•ecuœtive
 239

	)

498 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

499 
	#OSF_SYS_sysöfo
 241

	)

500 
	#OSF_SYS_uadmö
 242

	)

501 
	#OSF_SYS_fu£r
 243

	)

502 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

503 
	#OSF_SYS_¡p_adjtime
 245

	)

504 
	#OSF_SYS_¡p_gëtime
 246

	)

505 
	#OSF_SYS_∑thc⁄f
 247

	)

506 
	#OSF_SYS_Â©hc⁄f
 248

	)

507 
	#OSF_SYS_uswôch
 250

	)

508 
	#OSF_SYS_u¶ìp_thªad
 251

	)

509 
	#OSF_SYS_aud˙é
 252

	)

510 
	#OSF_SYS_audgí
 253

	)

511 
	#OSF_SYS_sysfs
 254

	)

512 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

513 
	#OSF_SYS_gësysöfo
 256

	)

514 
	#OSF_SYS_£tsysöfo
 257

	)

515 
	#OSF_SYS_afs_sysˇŒ
 258

	)

516 
	#OSF_SYS_sw≠˘l
 259

	)

517 
	#OSF_SYS_mem˙é
 260

	)

518 
	#OSF_SYS_fd©async
 261

	)

521 
	sxœã_èbÀ_t


523 
	mèrgë_vÆ
;

524 
	mho°_vÆ
;

528 
	$xœã_¨g
(
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

530 
i
;

532 
i
=0; i < 
m≠_sz
; i++)

534 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

535  
m≠
[
i
].
ho°_vÆ
;

539 
	`w¨n
("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

540  
èrgë_vÆ
;

541 
	}
}

545 
	#MAXBUFSIZE
 1024

	)

551 
	#NUM_IOCTL_BYTES
 128

	)

554 
	#OSF_TIOCGETP
 0x40067408

	)

555 
	#OSF_FIONREAD
 0x4004667f

	)

559 
	sosf_°©buf


561 
w‹d_t
 
	mosf_°_dev
;

562 
w‹d_t
 
	mosf_°_öo
;

563 
w‹d_t
 
	mosf_°_mode
;

564 
hÆf_t
 
	mosf_°_∆ök
;

565 
hÆf_t
 
	m∑d0
;

566 
w‹d_t
 
	mosf_°_uid
;

567 
w‹d_t
 
	mosf_°_gid
;

568 
w‹d_t
 
	mosf_°_rdev
;

569 
w‹d_t
 
	m∑d1
;

570 
qw‹d_t
 
	mosf_°_size
;

571 
w‹d_t
 
	mosf_°_©ime
;

572 
w‹d_t
 
	mosf_°_•¨e1
;

573 
w‹d_t
 
	mosf_°_mtime
;

574 
w‹d_t
 
	mosf_°_•¨e2
;

575 
w‹d_t
 
	mosf_°_˘ime
;

576 
w‹d_t
 
	mosf_°_•¨e3
;

577 
w‹d_t
 
	mosf_°_blksize
;

578 
w‹d_t
 
	mosf_°_blocks
;

579 
w‹d_t
 
	mosf_°_gínum
;

580 
w‹d_t
 
	mosf_°_•¨e4
;

583 
	sosf_sgâyb
 {

584 
byã_t
 
	msg_i•ìd
;

585 
byã_t
 
	msg_o•ìd
;

586 
byã_t
 
	msg_îa£
;

587 
byã_t
 
	msg_kûl
;

588 
shÆf_t
 
	msg_Êags
;

591 
	#OSF_NSIG
 32

	)

593 
	#OSF_SIG_BLOCK
 1

	)

594 
	#OSF_SIG_UNBLOCK
 2

	)

595 
	#OSF_SIG_SETMASK
 3

	)

597 
	sosf_sigc⁄ãxt
 {

598 
qw‹d_t
 
	msc_⁄°ack
;

599 
qw‹d_t
 
	msc_mask
;

600 
qw‹d_t
 
	msc_pc
;

601 
qw‹d_t
 
	msc_ps
;

602 
qw‹d_t
 
	msc_ªgs
[32];

603 
qw‹d_t
 
	msc_ow√dÂ
;

604 
qw‹d_t
 
	msc_Âªgs
[32];

605 
qw‹d_t
 
	msc_Â¸
;

606 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

609 
	sosf_°©fs
 {

610 
shÆf_t
 
	mf_ty≥
;

611 
shÆf_t
 
	mf_Êags
;

612 
w‹d_t
 
	mf_fsize
;

613 
w‹d_t
 
	mf_bsize
;

614 
w‹d_t
 
	mf_blocks
;

616 
w‹d_t
 
	mf_b‰ì
;

617 
w‹d_t
 
	mf_bavaû
;

618 
w‹d_t
 
	mf_fûes
;

619 
w‹d_t
 
	mf_f‰ì
;

620 
qw‹d_t
 
	mf_fsid
;

621 
w‹d_t
 
	mf_•¨e
[9];

624 
	sosf_timevÆ


626 
sw‹d_t
 
	mosf_tv_£c
;

627 
sw‹d_t
 
	mosf_tv_u£c
;

630 
	sosf_timez⁄e


632 
sw‹d_t
 
	mosf_tz_möuãswe°
;

633 
sw‹d_t
 
	mosf_tz_d°time
;

638 
	sosf_rußge


640 
osf_timevÆ
 
	mosf_ru_utime
;

641 
osf_timevÆ
 
	mosf_ru_°ime
;

642 
sw‹d_t
 
	mosf_ru_maxrss
;

643 
sw‹d_t
 
	mosf_ru_ixrss
;

644 
sw‹d_t
 
	mosf_ru_idrss
;

645 
sw‹d_t
 
	mosf_ru_i§ss
;

646 
sw‹d_t
 
	mosf_ru_möÊt
;

647 
sw‹d_t
 
	mosf_ru_majÊt
;

648 
sw‹d_t
 
	mosf_ru_nsw≠
;

649 
sw‹d_t
 
	mosf_ru_öblock
;

650 
sw‹d_t
 
	mosf_ru_oublock
;

651 
sw‹d_t
 
	mosf_ru_msg¢d
;

652 
sw‹d_t
 
	mosf_ru_msgrcv
;

653 
sw‹d_t
 
	mosf_ru_nsig«ls
;

654 
sw‹d_t
 
	mosf_ru_nvcsw
;

655 
sw‹d_t
 
	mosf_ru_nivcsw
;

658 
	sosf_æimô


660 
qw‹d_t
 
	mosf_æim_cur
;

661 
qw‹d_t
 
	mosf_æim_max
;

664 
	sosf_sockaddr


666 
hÆf_t
 
	mß_Ámûy
;

667 
byã_t
 
	mß_d©a
[24];

670 
	sosf_iovec


672 
md_addr_t
 
	miov_ba£
;

673 
w‹d_t
 
	miov_Àn
;

674 
w‹d_t
 
	m∑d
;

678 
	#OSF_DIRENT_SZ
(
STR
) \

679 ((
w‹d_t
Ë+ 2*(
hÆf_t
Ë+ (((
	`°æí
(
STR
Ë+ 1Ë+ 3)/4)*4)

	)

681 
	sosf_dúít


683 
w‹d_t
 
	md_öo
;

684 
hÆf_t
 
	md_ª˛í
;

685 
hÆf_t
 
	md_«mÀn
;

686 
	md_«me
[256];

696 
	#OSF_O_RDONLY
 0x0000

	)

697 
	#OSF_O_WRONLY
 0x0001

	)

698 
	#OSF_O_RDWR
 0x0002

	)

699 
	#OSF_O_NONBLOCK
 0x0004

	)

700 
	#OSF_O_APPEND
 0x0008

	)

701 
	#OSF_O_CREAT
 0x0200

	)

702 
	#OSF_O_TRUNC
 0x0400

	)

703 
	#OSF_O_EXCL
 0x0800

	)

704 
	#OSF_O_NOCTTY
 0x1000

	)

705 
	#OSF_O_SYNC
 0x4000

	)

709 
	mosf_Êag
;

710 
	mloˇl_Êag
;

711 } 
	gosf_Êag_èbÀ
[] = {

713 #ifde‡
_MSC_VER


714 { 
OSF_O_RDONLY
, 
_O_RDONLY
 },

715 { 
OSF_O_WRONLY
, 
_O_WRONLY
 },

716 { 
OSF_O_RDWR
, 
_O_RDWR
 },

717 { 
OSF_O_APPEND
, 
_O_APPEND
 },

718 { 
OSF_O_CREAT
, 
_O_CREAT
 },

719 { 
OSF_O_TRUNC
, 
_O_TRUNC
 },

720 { 
OSF_O_EXCL
, 
_O_EXCL
 },

721 #ifde‡
_O_NONBLOCK


722 { 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
 },

724 #ifde‡
_O_NOCTTY


725 { 
OSF_O_NOCTTY
, 
_O_NOCTTY
 },

727 #ifde‡
_O_SYNC


728 { 
OSF_O_SYNC
, 
_O_SYNC
 },

731 { 
OSF_O_RDONLY
, 
O_RDONLY
 },

732 { 
OSF_O_WRONLY
, 
O_WRONLY
 },

733 { 
OSF_O_RDWR
, 
O_RDWR
 },

734 { 
OSF_O_APPEND
, 
O_APPEND
 },

735 { 
OSF_O_CREAT
, 
O_CREAT
 },

736 { 
OSF_O_TRUNC
, 
O_TRUNC
 },

737 { 
OSF_O_EXCL
, 
O_EXCL
 },

738 { 
OSF_O_NONBLOCK
, 
O_NONBLOCK
 },

739 { 
OSF_O_NOCTTY
, 
O_NOCTTY
 },

740 #ifde‡
O_SYNC


741 { 
OSF_O_SYNC
, 
O_SYNC
 },

745 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

747 
qw‹d_t
 
	gsigmask
 = 0;

749 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] =

753 
	#OSF_SO_DEBUG
 0x0001

	)

754 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

755 
	#OSF_SO_REUSEADDR
 0x0004

	)

756 
	#OSF_SO_KEEPALIVE
 0x0008

	)

757 
	#OSF_SO_DONTROUTE
 0x0010

	)

758 
	#OSF_SO_BROADCAST
 0x0020

	)

759 
	#OSF_SO_USELOOPBACK
 0x0040

	)

760 
	#OSF_SO_LINGER
 0x0080

	)

761 
	#OSF_SO_OOBINLINE
 0x0100

	)

762 
	#OSF_SO_REUSEPORT
 0x0200

	)

764 
xœã_èbÀ_t
 
	gsock›t_m≠
[] =

766 { 
OSF_SO_DEBUG
, 
SO_DEBUG
 },

767 #ifde‡
SO_ACCEPTCONN


768 { 
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
 },

770 { 
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
 },

771 { 
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
 },

772 { 
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
 },

773 { 
OSF_SO_BROADCAST
, 
SO_BROADCAST
 },

774 #ifde‡
SO_USELOOPBACK


775 { 
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
 },

777 { 
OSF_SO_LINGER
, 
SO_LINGER
 },

778 { 
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
 },

779 #ifde‡
SO_REUSEPORT


780 { 
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
 }

785 
	#OSF_TCP_NODELAY
 0x01

	)

786 
	#OSF_TCP_MAXSEG
 0x02

	)

787 
	#OSF_TCP_RPTR2RXT
 0x03

	)

788 
	#OSF_TCP_KEEPIDLE
 0x04

	)

789 
	#OSF_TCP_KEEPINTVL
 0x05

	)

790 
	#OSF_TCP_KEEPCNT
 0x06

	)

791 
	#OSF_TCP_KEEPINIT
 0x07

	)

792 
	#OSF_TCP_PUSH
 0x08

	)

793 
	#OSF_TCP_NODELACK
 0x09

	)

795 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] =

797 { 
OSF_TCP_NODELAY
, 
TCP_NODELAY
 },

798 { 
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
 },

799 #ifde‡
TCP_RPTR2RXT


800 { 
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
 },

802 #ifde‡
TCP_KEEPIDLE


803 { 
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
 },

805 #ifde‡
TCP_KEEPINTVL


806 { 
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
 },

808 #ifde‡
TCP_KEEPCNT


809 { 
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
 },

811 #ifde‡
TCP_KEEPINIT


812 { 
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
 },

814 #ifde‡
TCP_PUSH


815 { 
OSF_TCP_PUSH
, 
TCP_PUSH
 },

817 #ifde‡
TCP_NODELACK


818 { 
OSF_TCP_NODELACK
, 
TCP_NODELACK
 }

823 
	#OSF_SOL_SOCKET
 0xfff‡

	)

824 
	#OSF_SOL_IP
 0

	)

825 
	#OSF_SOL_TCP
 6

	)

826 
	#OSF_SOL_UDP
 17

	)

828 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] =

830 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

831 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

832 { 
OSF_SOL_IP
, 
IPPROTO_IP
 },

833 { 
OSF_SOL_TCP
, 
IPPROTO_TCP
 },

834 { 
OSF_SOL_UDP
, 
IPPROTO_UDP
 }

836 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

837 { 
OSF_SOL_IP
, 
SOL_IP
 },

838 { 
OSF_SOL_TCP
, 
SOL_TCP
 },

839 { 
OSF_SOL_UDP
, 
SOL_UDP
 }

844 
	#OSF_AF_UNSPEC
 0

	)

845 
	#OSF_AF_UNIX
 1

	)

846 
	#OSF_AF_INET
 2

	)

847 
	#OSF_AF_IMPLINK
 3

	)

848 
	#OSF_AF_PUP
 4

	)

849 
	#OSF_AF_CHAOS
 5

	)

850 
	#OSF_AF_NS
 6

	)

851 
	#OSF_AF_ISO
 7

	)

853 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] =

855 { 
OSF_AF_UNSPEC
, 
AF_UNSPEC
 },

856 { 
OSF_AF_UNIX
, 
AF_UNIX
 },

857 { 
OSF_AF_INET
, 
AF_INET
 },

858 #ifde‡
AF_IMPLINK


859 { 
OSF_AF_IMPLINK
, 
AF_IMPLINK
 },

861 #ifde‡
AF_PUP


862 { 
OSF_AF_PUP
, 
AF_PUP
 },

864 #ifde‡
AF_CHAOS


865 { 
OSF_AF_CHAOS
, 
AF_CHAOS
 },

867 #ifde‡
AF_NS


868 { 
OSF_AF_NS
, 
AF_NS
 },

870 #ifde‡
AF_ISO


871 { 
OSF_AF_ISO
, 
AF_ISO
 }

876 
	#OSF_SOCK_STREAM
 1

	)

877 
	#OSF_SOCK_DGRAM
 2

	)

878 
	#OSF_SOCK_RAW
 3

	)

879 
	#OSF_SOCK_RDM
 4

	)

880 
	#OSF_SOCK_SEQPACKET
 5

	)

882 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] =

884 { 
OSF_SOCK_STREAM
, 
SOCK_STREAM
 },

885 { 
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
 },

886 { 
OSF_SOCK_RAW
, 
SOCK_RAW
 },

887 { 
OSF_SOCK_RDM
, 
SOCK_RDM
 },

888 { 
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
 }

892 
	#OSF_TBL_SYSINFO
 12

	)

893 
	sosf_tbl_sysöfo


895 
	msi_u£r
;

896 
	msi_ni˚
;

897 
	msi_sys
;

898 
	msi_idÀ
;

899 
	msi_hz
;

900 
	msi_phz
;

901 
	msi_boŸtime
;

902 
	mwaô
;

917 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

918 
mem_ac˚ss_‚
 
mem_‚
,

919 
mem_t
 *
mem
,

920 
md_ö°_t
 
ö°
,

921 
åa˚abÀ
)

923 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

926 i‡(
syscode
 =
OSF_SYS_sysˇŒ
)

927 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

930 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

932 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

935 i‡(
syscode
 =
OSF_SYS_sigªtu∫
)

937 
i
;

938 
osf_sigc⁄ãxt
 
sc
;

939 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

941 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

942 &
sc
, (
osf_sigc⁄ãxt
));

943 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

944 
i
=0; i < 32; ++i)

945 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

946 
i
=0; i < 32; ++i)

947 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

948 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

956 
syscode
)

958 
OSF_SYS_exô
:

960 
	`l⁄gjmp
(
sim_exô_buf
,

961  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

964 
OSF_SYS_ªad
:

966 *
buf
;

969 i‡(!(
buf
 =

970 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

971 
	`Áèl
("out of memory in SYS_read");

975  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

976 
	`ªad
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

977  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

978 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

979 && 
î∫o
 =
EAGAIN
);

982 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

983 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

987 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

991 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

992  
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
]);

995 
	`‰ì
(
buf
);

999 
OSF_SYS_wrôe
:

1001 *
buf
;

1004 i‡(!(
buf
 =

1005 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

1006 
	`Áèl
("out of memory in SYS_write");

1009 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,

1010  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1013 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

1017  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1018 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

1025  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1026 
	`wrôe
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1027 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1028 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

1029 && 
î∫o
 =
EAGAIN
);

1033 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

1034 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1037 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1038 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1042 
	`‰ì
(
buf
);

1046 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1048 
OSF_SYS_gëdomaö«me
:

1051 *
buf
;

1053 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1054 i‡(!
buf
)

1055 
	`Áèl
("out of virtual memory in gethostname()");

1057  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1058 
	`gëdomaö«me
–
buf
,

1059  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1062 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1063 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1066 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1067 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1071 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1072  
ªgs
->
ªgs_R
[
MD_REG_A0
],

1073 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1078 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1080 
OSF_SYS_Êock
:

1083 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1084 
	`Êock
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1085  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1088 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1089 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1092 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1093 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1099 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1101 
OSF_SYS_böd
:

1103 c⁄° 
sockaddr
 
a_sock
;

1105 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1106 &
a_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1108 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1109 
	`böd
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1110 &
a_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1113 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1114 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1117 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1118 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1124 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1126 
OSF_SYS_£ndto
:

1128 *
buf
 = 
NULL
;

1129 
sockaddr
 
d_sock
;

1130 
buf_Àn
 = 0;

1132 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1134 i‡(
buf_Àn
 > 0)

1135 
buf
 = (*Ë
	`mÆloc
(
buf_Àn
*());

1137 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1138 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1140 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1141 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1142 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1144 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1145 
	`£ndto
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1146 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1147 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
],

1148 &
d_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1150 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1151 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1154 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1155 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1156 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1159 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1160 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1163 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1164 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1167 i‡(
buf
 !
NULL
)

1168 
	`‰ì
(
buf
);

1173 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1175 
OSF_SYS_ﬁd_ªcv‰om
:

1176 
OSF_SYS_ªcv‰om
:

1178 
addr_Àn
;

1179 *
buf
;

1180 
sockaddr
 *
a_sock
;

1182 
buf
 = (*Ë
	`mÆloc
(()*
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1184 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1185 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1187 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1188 &
addr_Àn
, ());

1190 
a_sock
 = (
sockaddr
 *)
	`mÆloc
(
addr_Àn
);

1192 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1193 
a_sock
, 
addr_Àn
);

1195 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1196 
	`ªcv‰om
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1197 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1198 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
], 
a_sock
,&
addr_Àn
);

1200 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1201 
buf
, (Ë
ªgs
->
ªgs_R
[
MD_REG_V0
]);

1203 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1204 &
addr_Àn
, ());

1206 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1207 
a_sock
, 
addr_Àn
);

1210 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1211 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1214 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1215 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1217 i‡(
buf
 !
NULL
)

1218 
	`‰ì
(
buf
);

1223 
OSF_SYS_›í
:

1225 
buf
[
MAXBUFSIZE
];

1226 
i
;

1227 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

1230 
i
=0; i < 
OSF_NFLAGS
; i++)

1232 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

1234 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

1235 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

1239 i‡(
osf_Êags
 != 0)

1240 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

1243 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1246 #ifde‡
__CYGWIN32__


1247  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1248 
	`›í
(
buf
, 
loˇl_Êags
|
O_BINARY
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1250  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1251 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1255 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1256 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1259 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1260 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1265 
OSF_SYS_˛o£
:

1267 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

1268 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

1269 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

1271 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1276 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
–ªgs->ªgs_R[
MD_REG_A0
]);

1279 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1280 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1283 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1284 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1289 
OSF_SYS_¸ót
:

1291 
buf
[
MAXBUFSIZE
];

1294 
	`mem_°r˝y
(
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1297  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1298 
	`¸ót
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1301 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1302 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1305 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1306 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1312 
OSF_SYS_u∆ök
:

1314 
buf
[
MAXBUFSIZE
];

1317 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1320  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
(
buf
);

1323 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1324 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1327 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1328 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1333 
OSF_SYS_chdú
:

1335 
buf
[
MAXBUFSIZE
];

1338 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1341  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
(
buf
);

1344 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1345 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1348 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1349 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1354 
OSF_SYS_chmod
:

1356 
buf
[
MAXBUFSIZE
];

1359 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1362  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1363 
	`chmod
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1366 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1367 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1370 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1371 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1376 
OSF_SYS_chown
:

1377 #ifde‡
_MSC_VER


1378 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

1379 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1382 
buf
[
MAXBUFSIZE
];

1385 
	`mem_°r˝y
(
mem_‚
, 
mem
,
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1388  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1389 
	`chown
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1390  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1393 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1394 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1397 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1398 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1404 
OSF_SYS_sbrk
:

1406 
sqw‹d_t
 
dñè
;

1407 
md_addr_t
 
addr
;

1409 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1410 
addr
 = 
ld_brk_poöt
 + 
dñè
;

1412 i‡(
vîbo£
)

1413 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

1415 
ld_brk_poöt
 = 
addr
;

1416 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1417 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1419 i‡(
vîbo£
)

1420 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1424 i‡–
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

1426 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1427 
ld_brk_poöt
 = 
addr
;

1432 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1438 
OSF_SYS_obªak
:

1440 
md_addr_t
 
addr
;

1444 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

1446 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1448 i‡(
vîbo£
)

1449 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

1451 
ld_brk_poöt
 = 
addr
;

1452 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1453 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1455 i‡(
vîbo£
)

1456 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1460 
OSF_SYS_l£ek
:

1462 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1463 
	`l£ek
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1464  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

1467 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1468 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1471 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1472 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1476 
OSF_SYS_gëpid
:

1478  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
();

1481 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1482 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1485 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1486 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1490 
OSF_SYS_gëuid
:

1491 #ifde‡
_MSC_VER


1492 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

1493 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1496  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
();

1497  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
();

1500 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1501 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1504 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1505 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1510 
OSF_SYS_ac˚ss
:

1512 
buf
[
MAXBUFSIZE
];

1515 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1518  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1519 
	`ac˚ss
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1522 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1523 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1526 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1527 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1532 
OSF_SYS_°©
:

1533 
OSF_SYS_l°©
:

1535 
buf
[
MAXBUFSIZE
];

1536 
osf_°©buf
 
osf_sbuf
;

1537 #ifde‡
_MSC_VER


1538 
_°©
 
sbuf
;

1540 
°©
 
sbuf
;

1544 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1547 i‡(
syscode
 =
OSF_SYS_°©
)

1548  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
(
buf
, &
sbuf
);

1551 #ifde‡
_MSC_VER


1552 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1556  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
(
buf
, &
sbuf
);

1561 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1562 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1565 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1566 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1570 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1571 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1572 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1573 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1574 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1575 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1576 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1577 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1578 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1579 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1580 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1581 #i‚de‡
_MSC_VER


1582 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1583 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1587 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1588 &
osf_sbuf
, (
osf_°©buf
));

1592 
OSF_SYS_dup
:

1594  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
–ªgs->ªgs_R[
MD_REG_A0
]);

1597 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1598 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1601 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1602 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1607 
OSF_SYS_pùe
:

1609 
fd
[2];

1612 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

1613 
fd
, (fd));

1616  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1619  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

1620  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1623 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
)-1)

1625 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1626 
ªgs
->
ªgs_R
[7] = 1;

1632 
OSF_SYS_gëgid
:

1633 #ifde‡
_MSC_VER


1634 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1635 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1638  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
();

1639  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
();

1642 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1643 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1646 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1647 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1652 
OSF_SYS_io˘l
:

1653  
ªgs
->
ªgs_R
[
MD_REG_A1
])

1655 #i‡!
	`deföed
(
TIOCGETP
Ë&& deföed(
löux
)

1656 
OSF_TIOCGETP
:

1658 
ãrmios
 
lbuf
;

1659 
osf_sgâyb
 
buf
;

1661  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1662 
	`tcgë©å
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1663 &
lbuf
);

1666 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1667 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1668 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1669 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1670 
buf
.
sg_Êags
 = 0;

1672 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1673  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1674 (
osf_sgâyb
));

1676 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1677 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1680 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1681 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1686 #ifde‡
TIOCGETP


1687 
OSF_TIOCGETP
:

1689 
sgâyb
 
lbuf
;

1690 
osf_sgâyb
 
buf
;

1692  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1693 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1694  
TIOCGETP
,

1695 &
lbuf
);

1698 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

1699 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

1700 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

1701 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

1702 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

1703 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1704  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1705 (
osf_sgâyb
));

1707 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1708 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1711 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1712 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1717 #ifde‡
FIONREAD


1718 
OSF_FIONREAD
:

1720 
ƒód
;

1722  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1723 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1724  
FIONREAD
,

1725  &
ƒód
);

1727 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1728  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1729 &
ƒód
, (nread));

1731 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1732 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1735 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1736 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1741 #ifde‡
FIONBIO


1742 
FIONBIO
:

1744 
¨g
 = 0;

1746 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1747 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

1748  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1749 &
¨g
, (arg));

1751 #ifde‡
NOTNOW


1752 
	`Ârötf
(
°dîr
, "FIONBIO: %d, %d\n",

1753 ()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1754 
¨g
);

1756  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1757 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1758  
FIONBIO
,

1759  &
¨g
);

1761 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1762 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1763  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1764 &
¨g
, (arg));

1766 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1767 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1770 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1771 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1777 
	`w¨n
("unsupported ioctl call: ioctl(%ld, ...)",

1778 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1779 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1786 
buf
[
NUM_IOCTL_BYTES
];

1787 
loˇl_ªq
 = 0;

1790  
ªgs
->
ªgs_R
[
MD_REG_A1
]) {

1792 
SS_IOCTL_TIOCGETP
:

1793 
loˇl_ªq
 = 
TIOCGETP
;

1795 
SS_IOCTL_TIOCSETP
:

1796 
loˇl_ªq
 = 
TIOCSETP
;

1798 
SS_IOCTL_TCGETP
:

1799 
loˇl_ªq
 = 
TIOCGETP
;

1802 #ifde‡
TCGETA


1803 
SS_IOCTL_TCGETA
:

1804 
loˇl_ªq
 = 
TCGETA
;

1807 #ifde‡
TIOCGLTC


1808 
SS_IOCTL_TIOCGLTC
:

1809 
loˇl_ªq
 = 
TIOCGLTC
;

1812 #ifde‡
TIOCSLTC


1813 
SS_IOCTL_TIOCSLTC
:

1814 
loˇl_ªq
 = 
TIOCSLTC
;

1817 
SS_IOCTL_TIOCGWINSZ
:

1818 
loˇl_ªq
 = 
TIOCGWINSZ
;

1820 #ifde‡
TCSETAW


1821 
SS_IOCTL_TCSETAW
:

1822 
loˇl_ªq
 = 
TCSETAW
;

1825 #ifde‡
TIOCGETC


1826 
SS_IOCTL_TIOCGETC
:

1827 
loˇl_ªq
 = 
TIOCGETC
;

1830 #ifde‡
TIOCSETC


1831 
SS_IOCTL_TIOCSETC
:

1832 
loˇl_ªq
 = 
TIOCSETC
;

1835 #ifde‡
TIOCLBIC


1836 
SS_IOCTL_TIOCLBIC
:

1837 
loˇl_ªq
 = 
TIOCLBIC
;

1840 #ifde‡
TIOCLBIS


1841 
SS_IOCTL_TIOCLBIS
:

1842 
loˇl_ªq
 = 
TIOCLBIS
;

1845 #ifde‡
TIOCLGET


1846 
SS_IOCTL_TIOCLGET
:

1847 
loˇl_ªq
 = 
TIOCLGET
;

1850 #ifde‡
TIOCLSET


1851 
SS_IOCTL_TIOCLSET
:

1852 
loˇl_ªq
 = 
TIOCLSET
;

1857 i‡(!
loˇl_ªq
)

1861 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1862 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

1863 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

1864 
ªgs
->
ªgs_R
[7] = 0;

1871 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1872 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1873 
buf
, 
NUM_IOCTL_BYTES
);

1876  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1877 
	`io˘l
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

1880 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1881 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1882 
buf
, 
NUM_IOCTL_BYTES
);

1885 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1886 
ªgs
->
ªgs_R
[7] = 0;

1890 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1891 
ªgs
->
ªgs_R
[7] = 1;

1898 
OSF_SYS_f°©
:

1900 
osf_°©buf
 
osf_sbuf
;

1901 #ifde‡
_MSC_VER


1902 
_°©
 
sbuf
;

1904 
°©
 
sbuf
;

1908  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1909 
	`f°©
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

1912 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1913 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1916 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1917 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1921 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1922 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1923 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1924 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1925 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1926 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1927 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1928 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1929 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1930 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1931 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1932 #i‚de‡
_MSC_VER


1933 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1934 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1938 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1939 &
osf_sbuf
, (
osf_°©buf
));

1943 
OSF_SYS_gë∑gesize
:

1945 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

1948 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1949 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1952 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1953 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1957 
OSF_SYS_£tôimî
:

1959 
	`w¨n
("syscall: setitimer ignored");

1960 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1963 
OSF_SYS_èbÀ
:

1965 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

1966 
osf_tbl_sysöfo
 
sysöfo
;

1968 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

1969 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1970 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

1971 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

1972 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

1974 
èbÀ_id
)

1976 
OSF_TBL_SYSINFO
:

1977 i‡(
èbÀ_ödex
 != 0)

1979 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 0 index, got %08d",

1980 
èbÀ_ödex
 );

1982 i‡(
num_ñem
 != 1)

1984 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 1Élts, got %08d",

1985 
num_ñem
 );

1989 
rußge
 
rußge_öfo
;

1992 i‡(
	`gërußge
(
RUSAGE_SELF
, &
rußge_öfo
) < 0)

1995 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1998 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2003 
sysöfo
.
si_hz
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

2006 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 +

2007 (
rußge_öfo
.
ru_utime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2008 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 +

2009 (
rußge_öfo
.
ru_°ime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2013 
sysöfo
.
si_ni˚
 = 0;

2014 
sysöfo
.
si_idÀ
 = 0;

2015 
sysöfo
.
si_phz
 = 0;

2016 
sysöfo
.
si_boŸtime
 = 0;

2017 
sysöfo
.
waô
 = 0;

2020 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
,

2021 &
sysöfo
, (
osf_tbl_sysöfo
));

2024 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2029 
	`w¨n
("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

2030 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2035 
OSF_SYS_gëdèbÀsize
:

2036 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

2038 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
();

2041 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2042 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2045 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2046 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2048 #ñi‡
	`deföed
(
u…rix
)

2051 
	`w¨n
("syscall: called getdtablesize\n");

2052 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2053 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2055 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

2058 
	`w¨n
("syscall: called getdtablesize\n");

2059 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2060 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2064 
æimô
 
æ
;

2067 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
)-1)

2069 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

2070 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2074 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2075 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2081 
OSF_SYS_dup2
:

2083 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2084 
	`dup2
–
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2087 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2088 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2091 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2092 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2096 
OSF_SYS_f˙é
:

2097 #ifde‡
_MSC_VER


2098 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

2099 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2102 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2103 
	`f˙é
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

2104  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2107 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2108 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2111 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2112 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2118 
OSF_SYS_sigvec
:

2120 
	`w¨n
("syscall: sigvec ignored");

2121 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2126 
OSF_SYS_sigblock
:

2128 
	`w¨n
("syscall: sigblock ignored");

2129 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2134 
OSF_SYS_sig£tmask
:

2136 
	`w¨n
("syscall: sigsetmask ignored");

2137 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2141 
OSF_SYS_gëtimeofday
:

2142 #ifde‡
_MSC_VER


2143 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

2144 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2147 
osf_timevÆ
 
osf_tv
;

2148 
timevÆ
 
tv
, *
tvp
;

2149 
osf_timez⁄e
 
osf_tz
;

2150 
timez⁄e
 
tz
, *
tzp
;

2152 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2155 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2156 &
osf_tv
, (
osf_timevÆ
));

2159 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_£c
);

2160 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_u£c
);

2161 
tvp
 = &
tv
;

2164 
tvp
 = 
NULL
;

2166 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2169 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2170 &
osf_tz
, (
osf_timez⁄e
));

2173 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_möuãswe°
);

2174 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_d°time
);

2175 
tzp
 = &
tz
;

2178 
tzp
 = 
NULL
;

2181  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
(
tvp
, 
tzp
);

2184 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2185 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2188 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2189 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2192 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2195 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

2196 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

2199 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2200 &
osf_tv
, (
osf_timevÆ
));

2203 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2206 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

2207 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

2210 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2211 &
osf_tz
, (
osf_timez⁄e
));

2217 
OSF_SYS_gërußge
:

2218 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

2220 
tms
 
tms_buf
;

2221 
osf_rußge
 
rußge
;

2224 i‡(
	`times
(&
tms_buf
Ë!(
qw‹d_t
)-1)

2227 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2228 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2232 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2233 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2237 #i‡
	`deföed
(
__svr4__
)

2238 
	`mem£t
(&
rußge
, '\0', (
osf_rußge
));

2240 
	`bzîo
(&
rußge
, (
osf_rußge
));

2244 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_utime
/
CLK_TCK
);

2245 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2246 
	`MD_SWAPW
(
rußge
.
osf_ru_utime
.
osf_tv_£c
);

2247 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

2248 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_°ime
/
CLK_TCK
);

2249 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2250 
	`MD_SWAPW
(
rußge
.
osf_ru_°ime
.
osf_tv_£c
);

2251 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

2254 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2255 &
rußge
, (
osf_rußge
));

2257 #ñi‡
	`deföed
(
__unix__
)

2259 
rußge
 
loˇl_rußge
;

2260 
osf_rußge
 
rußge
;

2263  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2264 
	`gërußge
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

2267 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2268 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2271 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2272 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2276 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2277 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2278 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2279 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2280 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2281 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2282 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2283 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2284 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2285 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2286 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2287 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2288 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2289 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2290 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2291 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2292 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

2293 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

2294 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

2295 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

2296 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

2297 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

2298 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

2299 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

2300 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

2301 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

2302 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

2303 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

2304 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

2305 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

2308 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2309 &
rußge
, (
osf_rußge
));

2311 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

2312 
	`w¨n
("syscall: called getrusage\n");

2313 
ªgs
->
ªgs_R
[7] = 0;

2315 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

2319 
OSF_SYS_utimes
:

2321 
buf
[
MAXBUFSIZE
];

2324 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2326 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

2328 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__i386__
)

2330  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2331 #ñi‡
	`deföed
(
_MSC_VER
)

2333  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2334 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2335  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
NULL
);

2336 #ñi‡
	`deföed
(
__CYGWIN32__
)

2337 
	`w¨n
("syscall: called utimes\n");

2339 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2344 
osf_timevÆ
 
osf_tvÆ
[2];

2345 #i‚de‡
_MSC_VER


2346 
timevÆ
 
tvÆ
[2];

2350 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2351 
osf_tvÆ
, 2*(
osf_timevÆ
));

2353 #i‚de‡
_MSC_VER


2355 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2356 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_u£c
);

2357 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2358 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_u£c
);

2361 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

2364 
utimbuf
 
ubuf
;

2366 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
tvÆ
[0].
tv_£c
);

2367 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
tvÆ
[1].
tv_£c
);

2369  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2371 #ñi‡
	`deföed
(
_MSC_VER
)

2374 
_utimbuf
 
ubuf
;

2376 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2377 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2379  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2381 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2382  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
tvÆ
);

2383 #ñi‡
	`deföed
(
__CYGWIN32__
)

2384 
	`w¨n
("syscall: called utimes\n");

2386 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2391 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2392 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2395 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2396 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2401 
OSF_SYS_gëæimô
:

2402 
OSF_SYS_£ålimô
:

2403 #ifde‡
_MSC_VER


2404 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

2405 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2406 #ñi‡
	`deföed
(
__CYGWIN32__
)

2408 
	`w¨n
("syscall: called get/setrlimit\n");

2409 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2413 
osf_æimô
 
osf_æ
;

2414 
æimô
 
æ
;

2417 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2418 &
osf_æ
, (
osf_æimô
));

2421 
æ
.
æim_cur
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_cur
);

2422 
æ
.
æim_max
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_max
);

2425 i‡(
syscode
 =
OSF_SYS_gëæimô
)

2426  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2427 
	`gëæimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2429  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2430 
	`£ålimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2433 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2434 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2437 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2438 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2442 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
(
æ
.
æim_cur
);

2443 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
(
æ
.
æim_max
);

2446 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2447 &
osf_æ
, (
osf_æimô
));

2452 
OSF_SYS_sig¥ocmask
:

2454 
fú°
 = 
TRUE
;

2456 i‡(
fú°
)

2458 
	`w¨n
("partially supported sigprocmask() call...");

2459 
fú°
 = 
FALSE
;

2471 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
sigmask
;

2472 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2474 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2476 
OSF_SIG_BLOCK
:

2477 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2479 
OSF_SIG_UNBLOCK
:

2480 
sigmask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

2482 
OSF_SIG_SETMASK
:

2483 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2486 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

2487 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

2491 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

2492 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

2493 &
sigmask
, (sigmask));

2495 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2497 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2499 
OSF_SIG_BLOCK
:

2500 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2502 
OSF_SIG_UNBLOCK
:

2503 
sigmask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

2505 
OSF_SIG_SETMASK
:

2506 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2509 
	`∑nic
("illegal how valueÅo sigprocmask()");

2512 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2513 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2518 
OSF_SYS_siga˘i⁄
:

2520 
signum
;

2521 
fú°
 = 
TRUE
;

2523 i‡(
fú°
)

2525 
	`w¨n
("partially supported sigaction() call...");

2526 
fú°
 = 
FALSE
;

2529 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2530 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2531 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2533 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2534 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

2536 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2539 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2549 
OSF_SYS_sig°ack
:

2550 
	`w¨n
("unsupported sigstack() call...");

2551 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2554 
OSF_SYS_sigªtu∫
:

2556 
i
;

2557 
osf_sigc⁄ãxt
 
sc
;

2558 
fú°
 = 
TRUE
;

2560 i‡(
fú°
)

2562 
	`w¨n
("partially supported sigreturn() call...");

2563 
fú°
 = 
FALSE
;

2566 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2567 &
sc
, (
osf_sigc⁄ãxt
));

2569 
sigmask
 = 
	`MD_SWAPQ
(
sc
.
sc_mask
);

2570 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
(
sc
.
sc_pc
);

2574 
i
=0; i < 32; ++i)

2575 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

2576 
i
=0; i < 32; ++i)

2577 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

2578 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

2582 
OSF_SYS_uswôch
:

2583 
	`w¨n
("unsupported uswitch() call...");

2584 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

2587 
OSF_SYS_£tsysöfo
:

2588 
	`w¨n
("unsupported setsysinfo() call...");

2589 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2592 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2593 
OSF_SYS_gëdúíåõs
:

2595 
i
, 
˙t
, 
osf_˙t
;

2596 
dúít
 *
p
;

2597 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2598 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2599 *
buf
;

2600 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2601 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

2602 
sqw‹d_t
 
osf_ba£
;

2603 
ba£
 = 0;

2606 i‡(!
osf_nbyãs
)

2607 
	`w¨n
("attemptingÅo get 0 directoryÉntries...");

2610 
buf
 = 
	`ˇŒoc
(1, 
osf_nbyãs
);

2611 i‡(!
buf
)

2612 
	`Áèl
("out of virtual memory");

2615 #i‡
	`deföed
(
__svr4__
)

2616 
ba£
 = 
	`l£ek
 (()
fd
, (
off_t
)0, 
SEEK_CUR
);

2617 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2618 
	`gëdíts
(()
fd
, (
dúít
 *)
buf
, (
size_t
)
osf_nbyãs
);

2620 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2621 
	`gëdúíåõs
(()
fd
, 
buf
, (
size_t
)
osf_nbyãs
, &
ba£
);

2625 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2627 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2630 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

2633 
i
=0, 
˙t
=0, 
osf_˙t
=0, 
p
=(
dúít
 *)
buf
;

2634 
˙t
 < 
ªgs
->
ªgs_R
[
MD_REG_V0
] && 
p
->
d_ª˛í
 > 0;

2635 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

2637 
osf_dúít
 osf_dirent;

2639 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
(
p
->d_ino);

2640 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
(
	`°æí
(
p
->
d_«me
));

2641 
	`°r˝y
(
osf_dúít
.
d_«me
, 
p
->d_name);

2642 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
(
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2644 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2645 
osf_buf
 + 
osf_˙t
,

2646 &
osf_dúít
, 
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2647 
osf_˙t
 +
	`OSF_DIRENT_SZ
(
p
->
d_«me
);

2650 i‡(
osf_pba£
 != 0)

2652 
osf_ba£
 = (
sqw‹d_t
)
ba£
;

2653 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
,

2654 &
osf_ba£
, (osf_base));

2658 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

2663 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2664 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2667 
	`‰ì
(
buf
);

2672 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2673 
OSF_SYS_åunˇã
:

2675 
buf
[
MAXBUFSIZE
];

2678 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2681  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2682 
	`åunˇã
(
buf
, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2685 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2686 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2689 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2690 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2696 #i‡!
	`deföed
(
__CYGWIN32__
Ë&& !deföed(
_MSC_VER
)

2697 
OSF_SYS_·runˇã
:

2699  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2700 
	`·runˇã
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2701  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2704 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2705 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2708 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2709 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2714 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2715 
OSF_SYS_°©fs
:

2717 
buf
[
MAXBUFSIZE
];

2718 
osf_°©fs
 
osf_sbuf
;

2719 
°©fs
 
sbuf
;

2722 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2725  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
(
buf
, &
sbuf
);

2728 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2729 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2732 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2733 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2737 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

2738 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(0x6969) ;

2740 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(
sbuf
.f_type);

2742 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
(
sbuf
.
f_bsize
);

2743 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
(
sbuf
.f_blocks);

2744 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_bfree);

2745 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
(
sbuf
.f_bavail);

2746 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
(
sbuf
.f_files);

2747 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_ffree);

2751 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2752 &
osf_sbuf
, (
osf_°©buf
));

2757 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2758 
OSF_SYS_£åegid
:

2761  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2762 
	`£åegid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2763  (
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2766 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2767 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2770 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2771 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2776 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2777 
OSF_SYS_£åeuid
:

2780  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2781 
	`£åeuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2782  (
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2785 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2786 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2789 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2790 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2795 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2796 
OSF_SYS_sockë
:

2799  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2800 
	`sockë
–
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2801 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2803  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

2804 
sockty≥_m≠
, 
	`N_ELT
(socktype_map),

2806  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

2807 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2811 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2812 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2815 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2816 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2821 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2822 
OSF_SYS_c⁄√˘
:

2824 
osf_sockaddr
 
osf_ß
;

2829 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > (
osf_sockaddr
))

2831 
	`Áèl
("sockaddr size overflow:áddrlen = %d",

2832 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2835 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2836 &
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2838 
i
;

2839 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

2840 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2841 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

2843  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2844 
	`c⁄√˘
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2845 (*)&
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2848 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2849 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2852 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2853 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2859 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2860 
OSF_SYS_u«me
:

2863 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2864 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

2868 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2869 
OSF_SYS_wrôev
:

2871 
i
;

2872 *
buf
;

2873 
iovec
 *
iov
;

2876 
iov
 =

2877 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[
MD_REG_A2
]

2878 * (
iovec
));

2879 i‡(!
iov
)

2880 
	`Áèl
("out of virtual memory in SYS_writev");

2883 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2885 
osf_iovec
 
osf_iov
;

2888 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2889 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2890 + 
i
*(
osf_iovec
)),

2891 &
osf_iov
, (
osf_iovec
));

2893 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
.iov_len);

2894 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

2896 
buf
 = (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
.
iov_Àn
), ());

2897 i‡(!
buf
)

2898 
	`Áèl
("out of virtual memory in SYS_writev");

2899 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
(
osf_iov
.
iov_ba£
),

2900 
buf
, 
	`MD_SWAPW
(
osf_iov
.
iov_Àn
));

2901 
iov
[
i
].
iov_ba£
 = 
buf
;

2904 
iov
[
i
].
iov_ba£
 = 
NULL
;

2909  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2910 
	`wrôev
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2911  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2912 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2913 && 
î∫o
 =
EAGAIN
);

2916 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2917 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2920 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2921 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2925 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2927 i‡(
iov
[
i
].
iov_ba£
)

2929 
	`‰ì
(
iov
[
i
].
iov_ba£
);

2930 
iov
[
i
].
iov_ba£
 = 
NULL
;

2933 
	`‰ì
(
iov
);

2938 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2939 
OSF_SYS_ªadv
:

2941 
i
;

2942 *
buf
 = 
NULL
;

2943 
osf_iovec
 *
osf_iov
;

2944 
iovec
 *
iov
;

2947 
osf_iov
 =

2948 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
],

2949 (
osf_iovec
));

2950 i‡(!
osf_iov
)

2951 
	`Áèl
("out of virtual memory in SYS_readv");

2953 
iov
 =

2954 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], (
iovec
));

2955 i‡(!
iov
)

2956 
	`Áèl
("out of virtual memory in SYS_readv");

2959 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2962 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2963 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2964 + 
i
*(
osf_iovec
)),

2965 &
osf_iov
[
i
], (
osf_iovec
));

2967 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
[i].iov_len);

2968 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

2970 
buf
 =

2971 (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
[
i
].
iov_Àn
), ());

2972 i‡(!
buf
)

2973 
	`Áèl
("out of virtual memory in SYS_readv");

2974 
iov
[
i
].
iov_ba£
 = 
buf
;

2977 
iov
[
i
].
iov_ba£
 = 
NULL
;

2982  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2983 
	`ªadv
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2984  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2985 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2986 && 
î∫o
 =
EAGAIN
);

2989 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2991 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

2993 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
osf_iov
[
i
].
iov_ba£
),

2994 
iov
[
i
].
iov_ba£
, 
	`MD_SWAPW
(
osf_iov
[i].
iov_Àn
));

2999 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3000 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3003 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3004 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3008 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3010 i‡(
iov
[
i
].
iov_ba£
)

3012 
	`‰ì
(
iov
[
i
].
iov_ba£
);

3013 
iov
[
i
].
iov_ba£
 = 
NULL
;

3017 i‡(
osf_iov
)

3018 
	`‰ì
(
osf_iov
);

3019 i‡(
iov
)

3020 
	`‰ì
(
iov
);

3025 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3026 
OSF_SYS_£tsock›t
:

3028 *
buf
;

3029 
xœã_èbÀ_t
 *
m≠
;

3030 
nm≠
;

3035 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

3036 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3038 
buf
 = 
	`ˇŒoc
(1, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3039 i‡(!
buf
)

3040 
	`Áèl
("cannotállocate memory in OSF_SYS_setsockopt");

3043 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3044  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3045 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3048 
buf
 = 
NULL
;

3051 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

3053 
m≠
 = 
sock›t_m≠
;

3054 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3056 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

3058 
m≠
 = 
t˝›t_m≠
;

3059 
nm≠
 = 
	`N_ELT
(
t˝›t_m≠
);

3063 
	`w¨n
("noÅranslation mapávailable for `setsockopt()': %d",

3064 ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3065 
m≠
 = 
sock›t_m≠
;

3066 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3069  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3070 
	`£tsock›t
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3071  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3072 
sockÀvñ_m≠
, 
	`N_ELT
(socklevel_map),

3074  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

3075 
m≠
, 
nm≠
,

3077  
buf
,

3078  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3081 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3082 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3085 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3086 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3089 i‡(
buf
 !
NULL
)

3090 
	`‰ì
(
buf
);

3095 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3096 
OSF_SYS_ﬁd_gësock«me
:

3099 *
buf
;

3100 
w‹d_t
 
osf_addæí
;

3101 
addæí
;

3104 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3105  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3106 &
osf_addæí
, (osf_addrlen));

3107 
addæí
 = ()
osf_addæí
;

3108 i‡(
addæí
 != 0)

3110 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3111 i‡(!
buf
)

3112 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3115 
buf
 = 
NULL
;

3117  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3118 
	`gësock«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3119  (
sockaddr
 *)
buf
,

3120  &
addæí
);

3123 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3124 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3127 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3128 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3132 i‡(
addæí
 != 0)

3133 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3134  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3135 
buf
, 
addæí
);

3136 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3137 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3138  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3139 &
osf_addæí
, (osf_addrlen));

3141 i‡(
buf
 !
NULL
)

3142 
	`‰ì
(
buf
);

3147 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3148 
OSF_SYS_ﬁd_gë≥î«me
:

3151 *
buf
;

3152 
w‹d_t
 
osf_addæí
;

3153 
addæí
;

3156 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3157  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3158 &
osf_addæí
, (osf_addrlen));

3159 
addæí
 = ()
osf_addæí
;

3160 i‡(
addæí
 != 0)

3162 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3163 i‡(!
buf
)

3164 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3167 
buf
 = 
NULL
;

3169  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3170 
	`gë≥î«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3171  (
sockaddr
 *)
buf
,

3172  &
addæí
);

3175 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3176 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3179 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3180 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3184 i‡(
addæí
 != 0)

3185 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3186  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3187 
buf
, 
addæí
);

3188 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3189 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3190  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3191 &
osf_addæí
, (osf_addrlen));

3193 i‡(
buf
 !
NULL
)

3194 
	`‰ì
(
buf
);

3199 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3200 
OSF_SYS_£tgid
:

3203  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3204 
	`£tgid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3207 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3208 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3211 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3212 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3217 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3218 
OSF_SYS_£tuid
:

3221  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3222 
	`£tuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3225 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3226 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3229 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3230 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3235 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3236 
OSF_SYS_gë¥i‹ôy
:

3239  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3240 
	`gë¥i‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3241  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3244 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3245 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3248 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3249 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3254 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3255 
OSF_SYS_£çri‹ôy
:

3258  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3259 
	`£çri‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3260  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3261  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3264 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3265 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3268 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3269 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3274 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3275 
OSF_SYS_£À˘
:

3277 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

3278 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

3279 
timevÆ
 
timeout
, *
timeouç
;

3282 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3284 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3285  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3286 &
ªadfd
, (
fd_£t
));

3287 
ªadfdp
 = &
ªadfd
;

3290 
ªadfdp
 = 
NULL
;

3293 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3295 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3296  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3297 &
wrôefd
, (
fd_£t
));

3298 
wrôefdp
 = &
wrôefd
;

3301 
wrôefdp
 = 
NULL
;

3304 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3306 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3307  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3308 &
ex˚±fd
, (
fd_£t
));

3309 
ex˚±fdp
 = &
ex˚±fd
;

3312 
ex˚±fdp
 = 
NULL
;

3315 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3317 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3318  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3319 &
timeout
, (
timevÆ
));

3320 
timeouç
 = &
timeout
;

3323 
timeouç
 = 
NULL
;

3325 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

3327  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3328 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3329 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

3332  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3333 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3334 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

3338 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3339 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3342 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3343 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3347 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3348 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3349  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3350 &
ªadfd
, (
fd_£t
));

3353 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3354 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3355  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3356 &
wrôefd
, (
fd_£t
));

3359 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3360 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3361  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3362 &
ex˚±fd
, (
fd_£t
));

3365 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3366 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3367  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3368 &
timeout
, (
timevÆ
));

3373 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3374 
OSF_SYS_shutdown
:

3377  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3378 
	`shutdown
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3379  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3382 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3383 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3386 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3387 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3392 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3393 
OSF_SYS_pﬁl
:

3395 
i
;

3396 
pﬁlfd
 *
fds
;

3399 
fds
 = 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A1
], (
pﬁlfd
));

3400 i‡(!
fds
)

3401 
	`Áèl
("out of virtual memory in SYS_poll");

3404 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3407 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3408 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3409 + 
i
*(
pﬁlfd
)),

3410 &
fds
[
i
], (
pﬁlfd
));

3414  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3415 
	`pﬁl
–
fds
,

3416  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3417  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3420 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3421 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3424 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3425 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3429 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3432 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3433 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3434 + 
i
*(
pﬁlfd
)),

3435 &
fds
[
i
], (
pﬁlfd
));

3439 
	`‰ì
(
fds
);

3444 
OSF_SYS_u¶ìp_thªad
:

3446 
	`Ârötf
(
°dîr
, "u¶ìp(%d)\n", ()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3448 #ifde‡
Æpha


3449 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
((Ïegs->ªgs_R[
MD_REG_A0
]);

3451 
	`u¶ìp
(()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3452 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3455 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3456 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3459 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3460 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3463 
	`w¨n
("unsupported usleep_thread() call...");

3464 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3468 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3469 
OSF_SYS_gëho°«me
:

3472 *
buf
;

3474 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3475 i‡(!
buf
)

3476 
	`Áèl
("out of virtual memory in gethostname()");

3478  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3479 
	`gëho°«me
–
buf
,

3480  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3483 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3484 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3487 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3488 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3492 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3493  
ªgs
->
ªgs_R
[
MD_REG_A0
],

3494 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3499 
OSF_SYS_madvi£
:

3500 
	`w¨n
("unsupported madvise() call ignored...");

3501 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3505 
	`w¨n
("invalid/unimplemented syscall %ld, PC=0x%08p, RA=0x%08p, winging it",

3506 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

3507 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3508 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3510 
	`Áèl
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

3514 i‡(
vîbo£
)

3515 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

3516 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

3517 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

3518 
	}
}

	@target-pisa/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-pisa/configbig.h

52 #i‚de‡
CONFIGBIG_H


53 
	#CONFIGBIG_H


	)

56 
	#TARGET_PISA_BIG


	)

	@target-pisa/configlit.h

52 #i‚de‡
CONFIGLIT_H


53 
	#CONFIGLIT_H


	)

56 
	#TARGET_PISA_LITTLE


	)

	@target-pisa/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	#ECOFF_EB_MAGIC
 0x0160

	)

58 
	#ECOFF_EB_OTHER
 0x6001

	)

59 
	#ECOFF_EL_MAGIC
 0x0162

	)

60 
	#ECOFF_EL_OTHER
 0x6201

	)

61 
	#ECOFF_ALPHAMAGIC
 0603

	)

63 
	secoff_fûehdr
 {

64 
hÆf_t
 
	mf_magic
;

65 
hÆf_t
 
	mf_ns˙s
;

66 
sw‹d_t
 
	mf_timd©
;

67 
sw‹d_t
 
	mf_sym±r
;

68 
sw‹d_t
 
	mf_nsyms
;

69 
hÆf_t
 
	mf_›thdr
;

70 
hÆf_t
 
	mf_Êags
;

73 
	secoff_aouthdr
 {

74 
shÆf_t
 
	mmagic
;

75 
shÆf_t
 
	mv°amp
;

76 
sw‹d_t
 
	mtsize
;

77 
sw‹d_t
 
	mdsize
;

78 
sw‹d_t
 
	mbsize
;

79 
sw‹d_t
 
	míåy
;

80 
sw‹d_t
 
	mãxt_°¨t
;

81 
sw‹d_t
 
	md©a_°¨t
;

82 
sw‹d_t
 
	mbss_°¨t
;

83 
sw‹d_t
 
	mg¥mask
;

84 
sw‹d_t
 
	m˝rmask
[4];

85 
sw‹d_t
 
	mgp_vÆue
;

88 
	secoff_s˙hdr
 {

89 
	ms_«me
[8];

90 
sw‹d_t
 
	ms_∑ddr
;

91 
sw‹d_t
 
	ms_vaddr
;

92 
sw‹d_t
 
	ms_size
;

93 
sw‹d_t
 
	ms_s˙±r
;

94 
sw‹d_t
 
	ms_ªÕå
;

95 
sw‹d_t
 
	ms_ n›å
;

96 
hÆf_t
 
	ms_ƒñoc
;

97 
hÆf_t
 
	ms_∆¬o
;

98 
sw‹d_t
 
	ms_Êags
;

101 
	secoff_symhdr_t
 {

102 
shÆf_t
 
	mmagic
;

103 
shÆf_t
 
	mv°amp
;

104 
sw‹d_t
 
	mûöeMax
;

105 
sw‹d_t
 
	mcbLöe
;

106 
sw‹d_t
 
	mcbLöeOff£t
;

107 
sw‹d_t
 
	midnMax
;

108 
sw‹d_t
 
	mcbDnOff£t
;

109 
sw‹d_t
 
	mùdMax
;

110 
sw‹d_t
 
	mcbPdOff£t
;

111 
sw‹d_t
 
	misymMax
;

112 
sw‹d_t
 
	mcbSymOff£t
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	mcbO±Off£t
;

115 
sw‹d_t
 
	müuxMax
;

116 
sw‹d_t
 
	mcbAuxOff£t
;

117 
sw‹d_t
 
	missMax
;

118 
sw‹d_t
 
	mcbSsOff£t
;

119 
sw‹d_t
 
	missExtMax
;

120 
sw‹d_t
 
	mcbSsExtOff£t
;

121 
sw‹d_t
 
	mifdMax
;

122 
sw‹d_t
 
	mcbFdOff£t
;

123 
sw‹d_t
 
	m¸fd
;

124 
sw‹d_t
 
	mcbRfdOff£t
;

125 
sw‹d_t
 
	mõxtMax
;

126 
sw‹d_t
 
	mcbExtOff£t
;

127 } 
	tecoff_HDRR
;

129 
	#ECOFF_magicSym
 0x7009

	)

131 
	secoff_fdr
 {

132 
w‹d_t
 
	madr
;

133 
sw‹d_t
 
	mrss
;

134 
sw‹d_t
 
	missBa£
;

135 
sw‹d_t
 
	mcbSs
;

136 
sw‹d_t
 
	misymBa£
;

137 
sw‹d_t
 
	mcsym
;

138 
sw‹d_t
 
	mûöeBa£
;

139 
sw‹d_t
 
	m˛öe
;

140 
sw‹d_t
 
	mi›tBa£
;

141 
sw‹d_t
 
	mc›t
;

142 
hÆf_t
 
	mùdFú°
;

143 
hÆf_t
 
	m˝d
;

144 
sw‹d_t
 
	müuxBa£
;

145 
sw‹d_t
 
	mˇux
;

146 
sw‹d_t
 
	mrfdBa£
;

147 
sw‹d_t
 
	m¸fd
;

148 
	mœng
 :5;

149 
	mfMîge
 :1;

150 
	mfRódö
 :1;

151 
	mfBigídün
 :1;

152 
	mª£rved
 :24;

153 
sw‹d_t
 
	mcbLöeOff£t
;

154 
sw‹d_t
 
	mcbLöe
;

155 } 
	tecoff_FDR
;

157 
	secoff_pdr
 {

158 
w‹d_t
 
	madr
;

159 
sw‹d_t
 
	misym
;

160 
sw‹d_t
 
	mûöe
;

161 
sw‹d_t
 
	mªgmask
;

162 
sw‹d_t
 
	mªgoff£t
;

163 
sw‹d_t
 
	mi›t
;

164 
sw‹d_t
 
	m‰egmask
;

165 
sw‹d_t
 
	m‰egoff£t
;

166 
sw‹d_t
 
	m‰ameoff£t
;

167 
shÆf_t
 
	m‰amîeg
;

168 
shÆf_t
 
	mp¸eg
;

169 
sw‹d_t
 
	m Low
;

170 
sw‹d_t
 
	m High
;

171 
sw‹d_t
 
	mcbLöeOff£t
;

172 } 
	tecoff_PDR
;

174 
	secoff_SYMR
 {

175 
sw‹d_t
 
	miss
;

176 
sw‹d_t
 
	mvÆue
;

177 
	m°
 :6;

178 
	msc
 :5;

179 
	mª£rved
 :1;

180 
	mödex
 :20;

181 } 
	tecoff_SYMR
;

183 
	secoff_EXTR
 {

184 
shÆf_t
 
	mª£rved
;

185 
shÆf_t
 
	mifd
;

186 
ecoff_SYMR
 
	masym
;

187 } 
	tecoff_EXTR
;

189 
	#ECOFF_R_SN_TEXT
 1

	)

190 
	#ECOFF_R_SN_RDATA
 2

	)

191 
	#ECOFF_R_SN_DATA
 3

	)

192 
	#ECOFF_R_SN_SDATA
 4

	)

193 
	#ECOFF_R_SN_SBSS
 5

	)

194 
	#ECOFF_R_SN_BSS
 6

	)

196 
	#ECOFF_STYP_TEXT
 0x0020

	)

197 
	#ECOFF_STYP_RDATA
 0x0100

	)

198 
	#ECOFF_STYP_DATA
 0x0040

	)

199 
	#ECOFF_STYP_SDATA
 0x0200

	)

200 
	#ECOFF_STYP_SBSS
 0x0400

	)

201 
	#ECOFF_STYP_BSS
 0x0080

	)

203 
	#ECOFF_°Nû
 0

	)

204 
	#ECOFF_°GlobÆ
 1

	)

205 
	#ECOFF_°Sètic
 2

	)

206 
	#ECOFF_°P¨am
 3

	)

207 
	#ECOFF_°Loˇl
 4

	)

208 
	#ECOFF_°Labñ
 5

	)

209 
	#ECOFF_°Proc
 6

	)

210 
	#ECOFF_°Block
 7

	)

211 
	#ECOFF_°End
 8

	)

212 
	#ECOFF_°Membî
 9

	)

213 
	#ECOFF_°Ty≥def
 10

	)

214 
	#ECOFF_°Fûe
 11

	)

215 
	#ECOFF_°RegRñoc
 12

	)

216 
	#ECOFF_°F‹w¨d
 13

	)

217 
	#ECOFF_°SèticProc
 14

	)

218 
	#ECOFF_°C⁄°™t
 15

	)

	@target-pisa/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-piß/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 128

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
	gld_d©a_size
 = 0;

87 
md_addr_t
 
	gld_brk_poöt
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 
MD_STACK_BASE
;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = (md_addr_t)-1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, " 0x%08p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, " 0x%08p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, " 0x%08p");

129 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

131 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

133 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

135 &
ld_°ack_mö
,Üd_stack_min, " 0x%08p");

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, " 0x%08p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, " 0x%08p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
w‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`Áèl
("SimpleScalar/PISA only supports binaryÉxecution on\n"

224 i‡(
sim_chk±_‚ame
 !
NULL
)

225 
	`Áèl
("checkpoints only supported while EIOÅracing");

227 #ifde‡
BFD_LOADER


230 
bfd
 *
abfd
;

231 
a£˘i⁄
 *
£˘
;

235 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

236 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

237 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

240 
ld_ívú⁄_ba£
 = 
•
;

243 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

244 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

245 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

250 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

252 
	`bfd_˛o£
(
abfd
);

253 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

257 
ld_¥og_‚ame
 = 
¨gv
[0];

260 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

262 
	`debug
("processing %d sections in `%s'...",

263 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

266 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

268 *
p
;

270 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

271 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

272 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

275 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

276 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

277 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

278 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

281 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

282 i‡(!
p
)

283 
	`Áèl
("cannotállocate %d bytes for section `%s'",

284 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

285 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

287 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

288 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

289 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

290 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

294 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

297 
	`‰ì
(
p
);

300 i‡(
zîo_bss_£gs


301 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

302 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

303 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

306 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

307 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

308 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

313 
	`debug
("ignoring section `%s' duringÜoad...",

314 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

318 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

321 
ld_ãxt_size
 =

322 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

323 - 
MD_TEXT_BASE
)

324 + 
TEXT_TAIL_PADDING
;

327 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

328 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

329 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

330 
TEXT_TAIL_PADDING
);

333 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

334 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

335 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

336 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

337 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

340 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

341 
d©a_bªak
)

342 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

343 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

348 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

349 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

350 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

355 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

356 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

357 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

358 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

361 i‡(!
	`bfd_˛o£
(
abfd
))

362 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

368 
FILE
 *
fobj
;

369 
Êoc
;

370 
ecoff_fûehdr
 
fhdr
;

371 
ecoff_aouthdr
 
ahdr
;

372 
ecoff_s˙hdr
 
shdr
;

376 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

377 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

378 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

381 
ld_ívú⁄_ba£
 = 
•
;

384 
ld_¥og_‚ame
 = 
¨gv
[0];

387 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

388 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

390 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

392 i‡(!
fobj
)

393 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

395 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

396 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

399 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_MAGIC
)

400 
ld_èrgë_big_ídün
 = 
TRUE
;

401 i‡(
fhdr
.
f_magic
 =
ECOFF_EL_MAGIC
)

402 
ld_èrgë_big_ídün
 = 
FALSE
;

403 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_OTHER
 || fhdr.f_magi¯=
ECOFF_EL_OTHER
)

404 
	`Áèl
("PISA bö¨y `%s' ha†wr⁄gÉndü¿f‹m©", 
¨gv
[0]);

405 i‡(
fhdr
.
f_magic
 =
ECOFF_ALPHAMAGIC
)

406 
	`Áèl
("PISA simuœt‹ c™nŸÑu¿AÕh®bö¨y `%s'", 
¨gv
[0]);

408 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable?)",

409 
¨gv
[0]);

411 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

414 
d©a_bªak
 = 
MD_DATA_BASE
 + 
ahdr
.
dsize
 +áhdr.
bsize
;

417 
D©a_°¨t
 = 
ahdr
.
d©a_°¨t
;

418 
D©a_size
 = 
ahdr
.
dsize
;

419 
Bss_size
 = 
ahdr
.
bsize
;

420 
Bss_°¨t
 = 
ahdr
.
bss_°¨t
;

421 
Gp_vÆue
 = 
ahdr
.
gp_vÆue
;

422 
Text_íåy
 = 
ahdr
.
íåy
;

428 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
fhdr
.
f_›thdr
, 0);

430 
	`debug
("¥o˚ssög %d se˘i⁄†ö `%s'...", 
fhdr
.
f_ns˙s
, 
¨gv
[0]);

433 
Êoc
 = 
	`·ñl
(
fobj
);

434 
i
 = 0; i < 
fhdr
.
f_ns˙s
; i++)

436 *
p
;

438 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

439 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

440 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

441 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

442 
Êoc
 = 
	`·ñl
(
fobj
);

444 
shdr
.
s_Êags
)

446 
ECOFF_STYP_TEXT
:

447 
ld_ãxt_size
 = ((
shdr
.
s_vaddr
 + shdr.
s_size
Ë- 
MD_TEXT_BASE
)

448 + 
TEXT_TAIL_PADDING
;

450 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

451 i‡(!
p
)

452 
	`Áèl
("out of virtual memory");

454 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

455 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

456 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

457 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

460 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

463 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

464 
shdr
.
s_vaddr
 + shdr.
s_size
, 
TEXT_TAIL_PADDING
);

467 
	`‰ì
(
p
);

470 
Text_£ek
 = 
shdr
.
s_s˙±r
;

471 
Text_°¨t
 = 
shdr
.
s_vaddr
;

472 
Text_size
 = 
shdr
.
s_size
 / 4;

474 
Text_size
 += 10;

475 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

480 
ECOFF_STYP_RDATA
:

485 
Rd©a_°¨t
 = 
shdr
.
s_vaddr
;

486 
Rd©a_size
 = 
shdr
.
s_size
;

487 
Rd©a_£ek
 = 
shdr
.
s_s˙±r
;

490 
ECOFF_STYP_DATA
:

492 
D©a_£ek
 = 
shdr
.
s_s˙±r
;

495 
ECOFF_STYP_SDATA
:

497 
Sd©a_£ek
 = 
shdr
.
s_s˙±r
;

500 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

501 i‡(!
p
)

502 
	`Áèl
("out of virtual memory");

504 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

505 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

506 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

507 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

510 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

513 
	`‰ì
(
p
);

517 
ECOFF_STYP_BSS
:

520 
ECOFF_STYP_SBSS
:

526 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

527 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

528 
ld_¥og_íåy
 = 
ahdr
.
íåy
;

529 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

532 i‡(
	`f˛o£
(
fobj
))

533 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

538 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

539 
	`Áèl
("executable is missingá `.text' section");

540 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

541 
	`Áèl
("executable is missingá `.data' section");

542 i‡(!
ld_¥og_íåy
)

543 
	`Áèl
("programÉntryÖointÇot specified");

546 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

547 i‡(
sim_sw≠_byãs
)

552 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

553 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

555 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

558 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

559 i‡(
sim_sw≠_w‹ds
)

564 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

565 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

567 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

572 
ãmp
 = 
	`MD_SWAPW
(
¨gc
);

573 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
w‹d_t
));

574 
•
 +(
w‹d_t
);

577 
¨gv_addr
 = 
•
;

578 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

581 
ívp_addr
 = 
•
;

582 
i
=0; 
ívp
[i]; i++)

583 
•
 +(
md_addr_t
);

584 
•
 +(
md_addr_t
);

587 
i
=0; i<
¨gc
; i++)

590 
ãmp
 = 
	`MD_SWAPW
(
•
);

591 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

592 &
ãmp
, (
md_addr_t
));

594 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

595 
•
 +
	`°æí
(
¨gv
[
i
]) + 1;

598 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

599 &
nuŒ_±r
, (
md_addr_t
));

602 
i
 = 0; 
ívp
[i]; i++)

605 
ãmp
 = 
	`MD_SWAPW
(
•
);

606 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

607 &
ãmp
, (
md_addr_t
));

609 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

610 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

613 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

614 &
nuŒ_±r
, (
md_addr_t
));

617 i‡(
•
 > 
ld_°ack_ba£
)

622 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON in ss.h");

626 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

629 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

632 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

633 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

635 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

636 
ld_ãxt_ba£
, 
ld_ãxt_size
);

637 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

638 
ld_d©a_ba£
, 
ld_d©a_size
);

639 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

640 
ld_°ack_ba£
, 
ld_°ack_size
);

641 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

645 
md_addr_t
 
addr
;

646 
md_ö°_t
 
ö°
;

647 
md_Áu…_ty≥
 
Áu…
;

649 i‡(
OP_MAX
 > 255)

650 
	`Áèl
("cannotÖerform fast decoding,Åoo many opcodes");

652 
	`debug
("sim: decodingÅext segment...");

653 
addr
=
ld_ãxt_ba£
;

654 
addr
 < (
ld_ãxt_ba£
+
ld_ãxt_size
);

655 
addr
 +(
md_ö°_t
))

657 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
ö°
, (inst));

658 i‡(
Áu…
 !
md_Áu…_n⁄e
)

659 
	`Áèl
("couldÇotÑead instruction memory");

660 
ö°
.
a
 = (ö°.®& ~0xffË| (
w‹d_t
)
	`MD_OP_ENUM
(
	`MD_OPFIELD
(inst));

661 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
ö°
, (inst));

662 i‡(
Áu…
 !
md_Áu…_n⁄e
)

663 
	`Áèl
("couldÇot write instruction memory");

666 
	}
}

	@target-pisa/pisa.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

62 
md_ö°_t
 
	gMD_NOP_INST
 = { 
NOP
, 0 };

65 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

68 *
	gmd_›2«me
[
OP_MAX
] = {

69 
NULL
,

70 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

71 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

72 
	#CONNECT
(
OP
)

	)

73 
	~"machöe.def
"

77 *
	gmd_›2f‹m©
[
OP_MAX
] = {

78 
NULL
,

79 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

80 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

81 
	#CONNECT
(
OP
)

	)

82 
	~"machöe.def
"

86 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

87 
FUCœss_NA
,

88 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

89 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

90 
	#CONNECT
(
OP
)

	)

91 
	~"machöe.def
"

95 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

96 
NULL
,

111 
	gmd_›2Êags
[
OP_MAX
] = {

112 
NA
,

113 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

114 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

115 
	#CONNECT
(
OP
)

	)

116 
	~"machöe.def
"

120 
w‹d_t
 
	gmd_Ã_masks
[] = {

121 #ifde‡
BYTES_BIG_ENDIAN


136 *
	gmd_amode_°r
[
md_amode_NUM
] =

147 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

152 { "$r0", 
π_g¥
, 0 },

153 { "$zîo", 
π_g¥
, 0 },

154 { "$r1", 
π_g¥
, 1 },

155 { "$r2", 
π_g¥
, 2 },

156 { "$r3", 
π_g¥
, 3 },

157 { "$r4", 
π_g¥
, 4 },

158 { "$r5", 
π_g¥
, 5 },

159 { "$r6", 
π_g¥
, 6 },

160 { "$r7", 
π_g¥
, 7 },

161 { "$r8", 
π_g¥
, 8 },

162 { "$r9", 
π_g¥
, 9 },

163 { "$r10", 
π_g¥
, 10 },

164 { "$r11", 
π_g¥
, 11 },

165 { "$r12", 
π_g¥
, 12 },

166 { "$r13", 
π_g¥
, 13 },

167 { "$r14", 
π_g¥
, 14 },

168 { "$r15", 
π_g¥
, 15 },

169 { "$r16", 
π_g¥
, 16 },

170 { "$r17", 
π_g¥
, 17 },

171 { "$r18", 
π_g¥
, 18 },

172 { "$r19", 
π_g¥
, 19 },

173 { "$r20", 
π_g¥
, 20 },

174 { "$r21", 
π_g¥
, 21 },

175 { "$r22", 
π_g¥
, 22 },

176 { "$r23", 
π_g¥
, 23 },

177 { "$r24", 
π_g¥
, 24 },

178 { "$r25", 
π_g¥
, 25 },

179 { "$r26", 
π_g¥
, 26 },

180 { "$r27", 
π_g¥
, 27 },

181 { "$r28", 
π_g¥
, 28 },

182 { "$gp", 
π_g¥
, 28 },

183 { "$r29", 
π_g¥
, 29 },

184 { "$•", 
π_g¥
, 29 },

185 { "$r30", 
π_g¥
, 30 },

186 { "$Â", 
π_g¥
, 30 },

187 { "$r31", 
π_g¥
, 31 },

190 { "$f0", 
π_Âr
, 0 },

191 { "$f1", 
π_Âr
, 1 },

192 { "$f2", 
π_Âr
, 2 },

193 { "$f3", 
π_Âr
, 3 },

194 { "$f4", 
π_Âr
, 4 },

195 { "$f5", 
π_Âr
, 5 },

196 { "$f6", 
π_Âr
, 6 },

197 { "$f7", 
π_Âr
, 7 },

198 { "$f8", 
π_Âr
, 8 },

199 { "$f9", 
π_Âr
, 9 },

200 { "$f10", 
π_Âr
, 10 },

201 { "$f11", 
π_Âr
, 11 },

202 { "$f12", 
π_Âr
, 12 },

203 { "$f13", 
π_Âr
, 13 },

204 { "$f14", 
π_Âr
, 14 },

205 { "$f15", 
π_Âr
, 15 },

206 { "$f16", 
π_Âr
, 16 },

207 { "$f17", 
π_Âr
, 17 },

208 { "$f18", 
π_Âr
, 18 },

209 { "$f19", 
π_Âr
, 19 },

210 { "$f20", 
π_Âr
, 20 },

211 { "$f21", 
π_Âr
, 21 },

212 { "$f22", 
π_Âr
, 22 },

213 { "$f23", 
π_Âr
, 23 },

214 { "$f24", 
π_Âr
, 24 },

215 { "$f25", 
π_Âr
, 25 },

216 { "$f26", 
π_Âr
, 26 },

217 { "$f27", 
π_Âr
, 27 },

218 { "$f28", 
π_Âr
, 28 },

219 { "$f29", 
π_Âr
, 29 },

220 { "$f30", 
π_Âr
, 30 },

221 { "$f31", 
π_Âr
, 31 },

224 { "$d0", 
π_d¥
, 0 },

225 { "$d1", 
π_d¥
, 1 },

226 { "$d2", 
π_d¥
, 2 },

227 { "$d3", 
π_d¥
, 3 },

228 { "$d4", 
π_d¥
, 4 },

229 { "$d5", 
π_d¥
, 5 },

230 { "$d6", 
π_d¥
, 6 },

231 { "$d7", 
π_d¥
, 7 },

232 { "$d8", 
π_d¥
, 8 },

233 { "$d9", 
π_d¥
, 9 },

234 { "$d10", 
π_d¥
, 10 },

235 { "$d11", 
π_d¥
, 11 },

236 { "$d12", 
π_d¥
, 12 },

237 { "$d13", 
π_d¥
, 13 },

238 { "$d14", 
π_d¥
, 14 },

239 { "$d15", 
π_d¥
, 15 },

242 { "$l0", 
π_Õr
, 0 },

243 { "$l1", 
π_Õr
, 1 },

244 { "$l2", 
π_Õr
, 2 },

245 { "$l3", 
π_Õr
, 3 },

246 { "$l4", 
π_Õr
, 4 },

247 { "$l5", 
π_Õr
, 5 },

248 { "$l6", 
π_Õr
, 6 },

249 { "$l7", 
π_Õr
, 7 },

250 { "$l8", 
π_Õr
, 8 },

251 { "$l9", 
π_Õr
, 9 },

252 { "$l10", 
π_Õr
, 10 },

253 { "$l11", 
π_Õr
, 11 },

254 { "$l12", 
π_Õr
, 12 },

255 { "$l13", 
π_Õr
, 13 },

256 { "$l14", 
π_Õr
, 14 },

257 { "$l15", 
π_Õr
, 15 },

258 { "$l16", 
π_Õr
, 16 },

259 { "$l17", 
π_Õr
, 17 },

260 { "$l18", 
π_Õr
, 18 },

261 { "$l19", 
π_Õr
, 19 },

262 { "$l20", 
π_Õr
, 20 },

263 { "$l21", 
π_Õr
, 21 },

264 { "$l22", 
π_Õr
, 22 },

265 { "$l23", 
π_Õr
, 23 },

266 { "$l24", 
π_Õr
, 24 },

267 { "$l25", 
π_Õr
, 25 },

268 { "$l26", 
π_Õr
, 26 },

269 { "$l27", 
π_Õr
, 27 },

270 { "$l28", 
π_Õr
, 28 },

271 { "$l29", 
π_Õr
, 29 },

272 { "$l30", 
π_Õr
, 30 },

273 { "$l31", 
π_Õr
, 31 },

276 { "$hi", 
π_˘æ
, 0 },

277 { "$lo", 
π_˘æ
, 1 },

278 { "$fcc", 
π_˘æ
, 2 },

281 { "$pc", 
π_PC
, 0 },

282 { "$≈c", 
π_NPC
, 0 },

285 { 
NULL
, 
π_g¥
, 0 }

290 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

292 
i
;

294 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

296 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

297  
md_ªg_«mes
[
i
].
°r
;

301  
NULL
;

302 
	}
}

305 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

306 
is_wrôe
,

307 
md_ªg_ty≥
 
π
,

308 
ªg
,

309 
evÆ_vÆue_t
 *
vÆ
)

311 
π
)

313 
π_g¥
:

314 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

317 i‡(!
is_wrôe
)

319 
vÆ
->
ty≥
 = 
ë_uöt
;

320 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_R
[
ªg
];

323 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

326 
π_Õr
:

327 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

330 i‡(!
is_wrôe
)

332 
vÆ
->
ty≥
 = 
ë_uöt
;

333 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
l
[
ªg
];

336 
ªgs
->
ªgs_F
.
l
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

339 
π_Âr
:

340 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

343 i‡(!
is_wrôe
)

345 
vÆ
->
ty≥
 = 
ë_Êﬂt
;

346 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
f
[
ªg
];

349 
ªgs
->
ªgs_F
.
f
[
ªg
] = 
	`evÆ_as_Êﬂt
(*
vÆ
);

352 
π_d¥
:

353 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
/2)

356 i‡(!
is_wrôe
)

358 
vÆ
->
ty≥
 = 
ë_doubÀ
;

359 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

362 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

365 
π_˘æ
:

366 
ªg
)

369 i‡(!
is_wrôe
)

371 
vÆ
->
ty≥
 = 
ë_uöt
;

372 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
hi
;

375 
ªgs
->
ªgs_C
.
hi
 = 
	`evÆ_as_uöt
(*
vÆ
);

379 i‡(!
is_wrôe
)

381 
vÆ
->
ty≥
 = 
ë_uöt
;

382 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
lo
;

385 
ªgs
->
ªgs_C
.
lo
 = 
	`evÆ_as_uöt
(*
vÆ
);

389 i‡(!
is_wrôe
)

391 
vÆ
->
ty≥
 = 
ë_öt
;

392 
vÆ
->
vÆue
.
as_öt
 = 
ªgs
->
ªgs_C
.
fcc
;

395 
ªgs
->
ªgs_C
.
fcc
 = 
	`evÆ_as_uöt
(*
vÆ
);

403 
π_PC
:

404 i‡(!
is_wrôe
)

406 
vÆ
->
ty≥
 = 
ë_addr
;

407 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

410 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

413 
π_NPC
:

414 i‡(!
is_wrôe
)

416 
vÆ
->
ty≥
 = 
ë_addr
;

417 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

420 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

424 
	`∑nic
("bogusÑegister bank");

428  
NULL
;

429 
	}
}

433 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

435 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x",

436 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

437 
	}
}

440 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

442 
i
;

444 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

446 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

447 
	`Ârötf
(
°ªam
, " ");

448 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

449 
	`Ârötf
(
°ªam
, "\n");

451 
	}
}

455 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

457 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x/%f",

458 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
l
[ªg],Ñegs.l[ªg],Ñegs.
f
[reg]);

459 i‡–!(
ªg
 & 1))

461 
	`Ârötf
(
°ªam
, " (%4sás double: %f)",

462 
	`md_ªg_«me
(
π_d¥
, 
ªg
/2), 
ªgs
.
d
[reg/2]);

464 
	}
}

467 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

469 
i
;

472 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

474 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

477 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

478 
	`Ârötf
(
°ªam
, "\n");

480 
	}
}

483 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

486 
ªg
)

489 
	`Ârötf
(
°ªam
, "HI: 0x%08x", 
ªgs
.
hi
);

493 
	`Ârötf
(
°ªam
, "LO: 0x%08x", 
ªgs
.
lo
);

497 
	`Ârötf
(
°ªam
, "FCC: 0x%08x", 
ªgs
.
fcc
);

501 
	`∑nic
("bogus controlÑegister index");

503 
	}
}

506 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

508 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

509 
	`Ârötf
(
°ªam
, " ");

510 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

511 
	`Ârötf
(
°ªam
, " ");

512 
	`md_¥öt_¸eg
(
ªgs
, 2, 
°ªam
);

513 
	`Ârötf
(
°ªam
, "\n");

514 
	}
}

517 
w‹d_t


518 
	$md_¸c_ªgs
(
ªgs_t
 *
ªgs
)

520 
i
;

521 
w‹d_t
 
¸c_accum
 = 0;

523 
i
=0; i < 
MD_NUM_IREGS
; i++)

524 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_R
[
i
]);

526 
i
=0; i < 
MD_NUM_FREGS
; i++)

527 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_F
.
l
[
i
]);

529 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
hi
);

530 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
lo
);

531 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
fcc
);

532 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_PC
);

533 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_NPC
);

535  
¸c_accum
;

536 
	}
}

539 
w‹d_t


540 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

542 
i
;

543 
w‹d_t
 
checksum
 = 0;

545 
i
=0; i < 
MD_NUM_IREGS
; i++)

546 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

548 
i
=0; i < 
MD_NUM_FREGS
; i++)

549 
checksum
 ^
ªgs
->
ªgs_F
.
l
[
i
];

551 
checksum
 ^
ªgs
->
ªgs_C
.
hi
;

552 
checksum
 ^
ªgs
->
ªgs_C
.
lo
;

553 
checksum
 ^
ªgs
->
ªgs_C
.
fcc
;

554 
checksum
 ^
ªgs
->
ªgs_PC
;

555 
checksum
 ^
ªgs
->
ªgs_NPC
;

557  
checksum
;

558 
	}
}

562 
	$md_öô_decodî
()

565 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

566 i‡(
md_mask2›
[(
MSK
)]Ë
	`Áèl
("doubly defined mask value"); \

567 i‡((
MSK
Ë>
MD_MAX_MASK
Ë
	`Áèl
("mask value isÅooÜarge"); \

568 
md_mask2›
[(
MSK
)]=(
OP
);

	)

570 
	~"machöe.def
"

571 
	}
}

575 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

576 
md_addr_t
 
pc
,

577 
FILE
 *
°ªam
)

579 
md_›code
 
›
;

582 i‡(!
°ªam
)

583 
°ªam
 = 
°dîr
;

586 
	`MD_SET_OPCODE
(
›
, 
ö°
);

589 i‡(
›
 =
OP_NA
 || o∞>
OP_MAX
)

592 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x:%08x>", 
ö°
.
a
, in°.
b
);

596 *
s
;

598 
	`Ârötf
(
°ªam
, "%-10s", 
	`MD_OP_NAME
(
›
));

600 
s
 = 
	`MD_OP_FORMAT
(
›
);

601 *
s
) {

602 *
s
) {

604 
	`Ârötf
(
°ªam
, "r%d", 
RD
);

607 
	`Ârötf
(
°ªam
, "r%d", 
RS
);

610 
	`Ârötf
(
°ªam
, "r%d", 
RT
);

613 
	`Ârötf
(
°ªam
, "r%d", 
BS
);

616 
	`Ârötf
(
°ªam
, "f%d", 
FD
);

619 
	`Ârötf
(
°ªam
, "f%d", 
FS
);

622 
	`Ârötf
(
°ªam
, "f%d", 
FT
);

625 
	`Ârötf
(
°ªam
, "0x%x", (
pc
 + 8 + (
OFS
 << 2)));

629 
	`Ârötf
(
°ªam
, "%d", 
IMM
);

632 
	`Ârötf
(
°ªam
, "%d", 
SHAMT
);

635 
	`Ârötf
(
°ªam
, "%u", 
UIMM
);

638 
	`Ârötf
(
°ªam
, "0x%x", 
UIMM
);

641 
	`Ârötf
(
°ªam
, "0x%x", ((
pc
 & 036000000000Ë| (
TARG
 << 2)));

644 
	`Ârötf
(
°ªam
, "0x%x", 
BCODE
);

649 i‡(
SS_COMP_OP
 =
SS_COMP_NOP
)

650 
	`Ârötf
(
°ªam
, ")");

651 i‡(
SS_COMP_OP
 =
SS_COMP_POST_INC
)

652 
	`Ârötf
(
°ªam
, ")+");

653 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DEC
)

654 
	`Ârötf
(
°ªam
, ")-");

655 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_INC
)

656 
	`Ârötf
(
°ªam
, ")^+");

657 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DEC
)

658 
	`Ârötf
(
°ªam
, ")^-");

659 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_INC
)

660 
	`Ârötf
(
°ªam
, ")++");

661 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_DEC
)

662 
	`Ârötf
(
°ªam
, ")--");

663 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_INC
)

664 
	`Ârötf
(
°ªam
, ")^++");

665 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_DEC
)

666 
	`Ârötf
(
°ªam
, ")^--");

668 
	`∑nic
("bogus SS_COMP_OP");

673 
	`Âutc
(*
s
, 
°ªam
);

675 
s
++;

678 
	}
}

	@target-pisa/pisa.h

52 #i‚de‡
PISA_H


53 
	#PISA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

68 
	#TARGET_PISA


	)

70 #i‚de‡
TARGET_PISA_BIG


71 #i‚de‡
TARGET_PISA_LITTLE


73 #ifde‡
BYTES_BIG_ENDIAN


74 
	#TARGET_PISA_BIG


	)

76 
	#TARGET_PISA_LITTLE


	)

82 #i‡
deföed
(
BYTES_BIG_ENDIAN
Ë&& deföed(
TARGET_PISA_LITTLE
)

83 
	#MD_CROSS_ENDIAN


	)

85 #i‡
deföed
(
BYTES_LITTLE_ENDIAN
Ë&& deföed(
TARGET_PISA_BIG
)

86 
	#MD_CROSS_ENDIAN


	)

90 
	#NA
 0

	)

97 #unde‡
MD_QWORD_ADDRS


100 
w‹d_t
 
	tmd_addr_t
;

108 
	#MD_PAGE_SIZE
 4096

	)

109 
	#MD_LOG_PAGE_SIZE
 12

	)

116 
	emd_Áu…_ty≥
 {

117 
	mmd_Áu…_n⁄e
 = 0,

118 
	mmd_Áu…_ac˚ss
,

119 
	mmd_Áu…_Æignmít
,

120 
	mmd_Áu…_ovîÊow
,

121 
	mmd_Áu…_div0
,

122 
	mmd_Áu…_bªak
,

123 
	mmd_Áu…_unim∂
,

124 
	mmd_Áu…_öã∫Æ


133 
	#MD_NUM_IREGS
 32

	)

136 
	#MD_NUM_FREGS
 32

	)

139 
	#MD_NUM_CREGS
 3

	)

142 
	#MD_TOTAL_REGS
 \

143 –32 + 32 + 3 + 1 + 1 + 1)

	)

146 
sw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

150 
sw‹d_t
 
	ml
[
MD_NUM_FREGS
];

151 
sÊﬂt_t
 
	mf
[
MD_NUM_FREGS
];

152 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
/2];

153 } 
	tmd_Âr_t
;

157 
sw‹d_t
 
	mhi
, 
	mlo
;

158 
	mfcc
;

159 } 
	tmd_˘æ_t
;

162 
	emd_ªg_«mes
 {

163 
	mMD_REG_ZERO
 = 0,

164 
	mMD_REG_GP
 = 28,

165 
	mMD_REG_SP
 = 29,

166 
	mMD_REG_FP
 = 30

176 
w‹d_t
 
	ma
;

177 
w‹d_t
 
	mb
;

178 } 
	tmd_ö°_t
;

181 
md_ö°_t
 
MD_NOP_INST
;

184 #ifde‡
MD_CROSS_ENDIAN


186 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

187 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

188 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

189 
	#MD_SWAPI
(
X
Ë((X).
a
 = 
	`SWAP_WORD
((X).a), \

190 (
X
).
b
 = 
	`SWAP_WORD
((X).b))

	)

194 
	#MD_SWAPH
(
X
Ë(X)

	)

195 
	#MD_SWAPW
(
X
Ë(X)

	)

196 
	#MD_SWAPQ
(
X
Ë(X)

	)

197 
	#MD_SWAPD
(
X
Ë(X)

	)

198 
	#MD_SWAPI
(
X
Ë(X)

	)

203 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

204 { 
ö°
.
a
 = 
	`MEM_READ_WORD
(
mem
, (
PC
)); \

205 
ö°
.
b
 = 
	`MEM_READ_WORD
(
mem
, (
PC
Ë+ (
w‹d_t
)); }

	)

212 
	#MD_TEXT_BASE
 0x00400000

	)

213 
	#MD_DATA_BASE
 0x10000000

	)

214 
	#MD_STACK_BASE
 0x7fffc000

	)

217 
	#MD_MAX_ENVIRON
 16384

	)

225 
	#MD_OPFIELD
(
INST
Ë(INST.
a
 & 0xff)

	)

226 
	#MD_SET_OPCODE
(
OP
, 
INST
Ë((OPË((INST).
a
 & 0xff))

	)

230 
	#MD_MAX_MASK
 255

	)

233 
	emd_›code
 {

234 
	mOP_NA
 = 0,

235 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

236 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

237 
	#CONNECT
(
OP
)

	)

238 
	~"machöe.def
"

239 
	mOP_MAX


243 
	#MD_OP_ENUM
(
MSK
Ë(
md_mask2›
[MSK])

	)

244 
md_›code
 
md_mask2›
[];

247 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

248 *
md_›2«me
[];

251 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

252 *
md_›2f‹m©
[];

255 
	emd_fu_˛ass
 {

256 
	mFUCœss_NA
 = 0,

257 
	mI¡ALU
,

258 
	mI¡MULT
,

259 
	mI¡DIV
,

260 
	mFlﬂtADD
,

261 
	mFlﬂtCMP
,

262 
	mFlﬂtCVT
,

263 
	mFlﬂtMULT
,

264 
	mFlﬂtDIV
,

265 
	mFlﬂtSQRT
,

266 
	mRdP‹t
,

267 
	mWrP‹t
,

268 
	mNUM_FU_CLASSES


272 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

273 
md_fu_˛ass
 
md_›2fu
[];

276 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

277 *
md_fu2«me
[];

280 
	#F_ICOMP
 0x00000001

	)

281 
	#F_FCOMP
 0x00000002

	)

282 
	#F_CTRL
 0x00000004

	)

283 
	#F_UNCOND
 0x00000008

	)

284 
	#F_COND
 0x00000010

	)

285 
	#F_MEM
 0x00000020

	)

286 
	#F_LOAD
 0x00000040

	)

287 
	#F_STORE
 0x00000080

	)

288 
	#F_DISP
 0x00000100

	)

289 
	#F_RR
 0x00000200

	)

290 
	#F_DIRECT
 0x00000400

	)

291 
	#F_TRAP
 0x00000800

	)

292 
	#F_LONGLAT
 0x00001000

	)

293 
	#F_DIRJMP
 0x00002000

	)

294 
	#F_INDIRJMP
 0x00004000

	)

295 
	#F_CALL
 0x00008000

	)

296 
	#F_FPCOND
 0x00010000

	)

297 
	#F_IMM
 0x00020000

	)

300 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

301 
md_›2Êags
[];

304 #unde‡
RS


305 
	#RS
 (
ö°
.
b
 >> 24Ë

	)

306 
	#RT
 ((
ö°
.
b
 >> 16Ë& 0xffË

	)

307 
	#RD
 ((
ö°
.
b
 >> 8Ë& 0xffË

	)

310 
	#SHAMT
 (
ö°
.
b
 & 0xff)

	)

313 
	#FS
 
RS


	)

314 
	#FT
 
RT


	)

315 
	#FD
 
RD


	)

318 
	#IMM
 (()(–)(
ö°
.
b
 & 0xffff)))

	)

321 
	#UIMM
 (
ö°
.
b
 & 0xffff)

	)

324 
	#TARG
 (
ö°
.
b
 & 0x3ffffff)

	)

327 
	#BCODE
 (
ö°
.
b
 & 0xfffff)

	)

330 
	#OFS
 
IMM


	)

333 
	#BS
 
RS


	)

336 
	#MAXINT_VAL
 0x7fffffff

	)

339 
	#OVER
(
X
,
Y
) \

340 ((((
X
Ë> 0Ë&& ((
Y
Ë> 0Ë&& (
MAXINT_VAL
 - (X) < (Y))) \

341 || (((
X
Ë< 0Ë&& ((
Y
Ë< 0Ë&& (-
MAXINT_VAL
 - (XË> (Y))))

	)

344 
	#UNDER
(
X
,
Y
) \

345 ((((
X
Ë> 0Ë&& ((
Y
Ë< 0Ë&& (
MAXINT_VAL
 + (Y) < (X))) \

346 || (((
X
Ë< 0Ë&& ((
Y
Ë> 0Ë&& (-
MAXINT_VAL
 + (YË> (X))))

	)

349 #i‚de‡
SET_TPC


350 
	#SET_TPC
(
PC
Ë()0

	)

353 #ifde‡
BYTES_BIG_ENDIAN


355 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

356 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

357 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

358 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

359 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

362 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

363 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

364 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

365 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

366 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

369 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

370 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

371 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

372 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

373 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

376 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

377 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

378 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

379 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

380 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

384 
w‹d_t
 
md_Ã_masks
[];

388 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

389 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

390 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

393 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

394 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

395 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

398 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

399 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

400 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

401 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

404 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

405 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

406 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

407 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

416 
	#SS_SYS_exô
 1

	)

417 
	#MD_EXIT_SYSCALL
(
REGS
Ë((REGS)->
ªgs_R
[2] =
SS_SYS_exô
)

	)

420 
	#SS_SYS_wrôe
 4

	)

421 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

422 ((
REGS
)->
ªgs_R
[2] =
SS_SYS_wrôe
 \

423 && ((
REGS
)->
ªgs_R
[4] == 1 \

424 || (
REGS
)->
ªgs_R
[4] = 2))

	)

427 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[4])

	)

430 
	#MD_IS_CALL
(
OP
) \

431 ((
	`MD_OP_FLAGS
(
OP
Ë& (
F_CTRL
|
F_CALL
)Ë=(F_CTRL|F_CALL))

	)

434 
	#MD_IS_RETURN
(
OP
Ë((OPË=
JR
 && (
RS
Ë=31)

	)

437 
	#MD_IS_INDIR
(
OP
Ë((OPË=
JR
)

	)

440 
	emd_amode_ty≥
 {

441 
	mmd_amode_imm
,

442 
	mmd_amode_gp
,

443 
	mmd_amode_•
,

444 
	mmd_amode_Â
,

445 
	mmd_amode_di•
,

446 
	mmd_amode_º
,

447 
	mmd_amode_NUM


449 *
md_amode_°r
[
md_amode_NUM
];

452 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
) \

453 { i‡((
OP
Ë=
LUI
Ë(
FSM
Ë(
RT
); }

	)

456 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

458 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

460 i‡((
BS
Ë=(
FSM
)) \

461 (
AM
Ë
md_amode_imm
; \

462 i‡((
BS
Ë=
MD_REG_GP
) \

463 (
AM
Ë
md_amode_gp
; \

464 i‡((
BS
Ë=
MD_REG_SP
) \

465 (
AM
Ë
md_amode_•
; \

466 i‡((
BS
Ë=
MD_REG_FP
) \

467 (
AM
Ë
md_amode_Â
; \

469 (
AM
Ë
md_amode_di•
; \

471 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

472 (
AM
Ë
md_amode_º
; \

474 
	`∑nic
("cannot decodeáddressing mode"); \

475 }

	)

478 
	#MD_AMODE_POSTPROBE
(
FSM
) \

479 { (
FSM
Ë
MD_REG_ZERO
; }

	)

487 
	#MD_EIO_FILE_FORMAT
 
EIO_PISA_FORMAT


	)

489 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

490 
	`exo_√w
(
ec_li°
, \

491  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

492  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

493  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

494  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
hi
), \

495  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
lo
), \

496  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
fcc
),\

497 
NULL
)

	)

499 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

500 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

502 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

503 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
l
[
IDX
])

	)

505 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

507 i‡(!
exo
 \

508 || 
exo
->
ec
 !
ec_li°
 \

509 || !
exo
->
as_li°
.
hód
 \

510 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

511 || !
exo
->
as_li°
.
hód
->
√xt
 \

512 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

513 || !
exo
->
as_li°
.
hód
->
√xt
->next \

514 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

515 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

516 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

517 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

518 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

519 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next->next \

520 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
ec
 !
ec_öãgî
\

521 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->√xà!
NULL
) \

522 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

523 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

524 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
; \

525 (
REGS
)->
ªgs_NPC
 = \

526 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
; \

527 (
REGS
)->
ªgs_C
.
hi
 = \

528 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

529 (
REGS
)->
ªgs_C
.
lo
 = \

530 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
; \

531 (
REGS
)->
ªgs_C
.
fcc
 = \

532 ()
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

534 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

535 ((
REGS
)->
ªgs_R
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

537 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

538 ((
REGS
)->
ªgs_F
.
l
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

540 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

541 ((
REGS
)->
ªgs_R
[
IDX
] !(
sw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

543 
	#MD_FIRST_IN_REG
 2

	)

544 
	#MD_LAST_IN_REG
 7

	)

546 
	#MD_FIRST_OUT_REG
 2

	)

547 
	#MD_LAST_OUT_REG
 7

	)

555 
qw‹d_t
 
	texo_addªss_t
;

558 
qw‹d_t
 
	texo_öãgî_t
;

561 
	texo_Êﬂt_t
;

569 #ifde‡
HOST_HAS_QWORD


570 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

571 
	#sc_cou¡î
 
sc_sqw‹d


	)

572 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

574 
	#°©_ªg_cou¡î
 
°©_ªg_doubÀ


	)

575 
	#sc_cou¡î
 
sc_doubÀ


	)

576 
	#f‹_cou¡î
 
f‹_doubÀ


	)

580 
	#°©_ªg_addr
 
°©_ªg_uöt


	)

588 
	emd_ªg_ty≥
 {

589 
	mπ_g¥
,

590 
	mπ_Õr
,

591 
	mπ_Âr
,

592 
	mπ_d¥
,

593 
	mπ_˘æ
,

594 
	mπ_PC
,

595 
	mπ_NPC
,

596 
	mπ_NUM


600 
	smd_ªg_«mes_t
 {

601 *
	m°r
;

602 
md_ªg_ty≥
 
	mfûe
;

603 
	mªg
;

607 
md_ªg_«mes_t
 
md_ªg_«mes
[];

610 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

613 
	gevÆ_vÆue_t
;

614 
	gªgs_t
;

616 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

617 
is_wrôe
,

618 
md_ªg_ty≥
 
π
,

619 
ªg
,

620 
evÆ_vÆue_t
 *
vÆ
);

623 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

624 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

627 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

628 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

631 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

632 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

635 
w‹d_t
 
md_¸c_ªgs
(
ªgs_t
 *
ªgs
);

638 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

646 
	#MD_AGEN_OP
 
ADD


	)

649 
	#MD_NOP_OP
 
NOP


	)

653 
	#MD_VALID_ADDR
(
ADDR
) \

654 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

655 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_°ack_ba£
))

	)

664 
	#MD_BR_SHIFT
 3

	)

672 
md_öô_decodî
();

676 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

677 
md_addr_t
 
pc
,

678 
FILE
 *
°ªam
);

	@target-pisa/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 #ifde‡
BFD_LOADER


58 
	~<bfd.h
>

60 
	~"èrgë-piß/ecoff.h
"

62 
	~"lﬂdî.h
"

63 
	~"symbﬁ.h
"

68 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

71 
	gsym_nsyms
 = 0;

72 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

75 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

78 
	gsym_¡extsyms
 = 0;

79 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

82 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

85 
	gsym_nd©asyms
 = 0;

86 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

89 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

92 
	gsyms_lﬂded
 = 
FALSE
;

94 #ifde‡
PRINT_SYMS


97 
	$Êags2°r
(
Êags
)

99 
buf
[256];

100 *
p
;

102 i‡(!
Êags
)

105 
p
 = 
buf
;

106 *
p
 = '\0';

108 i‡(
Êags
 & 
BSF_LOCAL
)

110 *
p
++ = 'L';

111 *
p
++ = '|';

113 i‡(
Êags
 & 
BSF_GLOBAL
)

115 *
p
++ = 'G';

116 *
p
++ = '|';

118 i‡(
Êags
 & 
BSF_DEBUGGING
)

120 *
p
++ = 'D';

121 *
p
++ = '|';

123 i‡(
Êags
 & 
BSF_FUNCTION
)

125 *
p
++ = 'F';

126 *
p
++ = '|';

128 i‡(
Êags
 & 
BSF_KEEP
)

130 *
p
++ = 'K';

131 *
p
++ = '|';

133 i‡(
Êags
 & 
BSF_KEEP_G
)

135 *
p
++ = 'k'; *p++ = '|';

137 i‡(
Êags
 & 
BSF_WEAK
)

139 *
p
++ = 'W';

140 *
p
++ = '|';

142 i‡(
Êags
 & 
BSF_SECTION_SYM
)

144 *
p
++ = 'S'; *p++ = '|';

146 i‡(
Êags
 & 
BSF_OLD_COMMON
)

148 *
p
++ = 'O';

149 *
p
++ = '|';

151 i‡(
Êags
 & 
BSF_NOT_AT_END
)

153 *
p
++ = 'N';

154 *
p
++ = '|';

156 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

158 *
p
++ = 'C';

159 *
p
++ = '|';

161 i‡(
Êags
 & 
BSF_WARNING
)

163 *
p
++ = 'w';

164 *
p
++ = '|';

166 i‡(
Êags
 & 
BSF_INDIRECT
)

168 *
p
++ = 'I';

169 *
p
++ = '|';

171 i‡(
Êags
 & 
BSF_FILE
)

173 *
p
++ = 'f';

174 *
p
++ = '|';

177 i‡(
p
 =
buf
)

178 
	`∑nic
("no flags detected");

180 *--
p
 = '\0';

181  
buf
;

182 
	}
}

187 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

189  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

190 
	}
}

194 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

196  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

197 
	}
}

199 
	#RELEVANT_SCOPE
(
SYM
) \

201 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

203 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

204 && (
SYM
)->
«me
[0] != '$') \

206 
lﬂd_loˇls
 \

208 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

209 && (
SYM
)->
«me
[0] == '$') \

211 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

212 && (
SYM
)->
«me
[0] ='$'))))

	)

217 
	$sym_lﬂdsyms
(*
‚ame
,

218 
lﬂd_loˇls
)

220 
i
, 
debug_˙t
;

221 #ifde‡
BFD_LOADER


222 
bfd
 *
abfd
;

223 
asymbﬁ
 **
syms
;

224 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

226 
Àn
;

227 
FILE
 *
fobj
;

228 
ecoff_fûehdr
 
fhdr
;

229 
ecoff_aouthdr
 
ahdr
;

230 
ecoff_symhdr_t
 
symhdr
;

231 *
°πab
 = 
NULL
;

232 
ecoff_EXTR
 *
exå
;

235 i‡(
syms_lﬂded
)

242 #ifde‡
BFD_LOADER


245 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

247 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

252 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

254 
	`bfd_˛o£
(
abfd
);

255 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

259 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

260 
	`∑nic
("binaryÉndian changed");

262 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

265 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

266 i‡(
°‹age
 <= 0)

267 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

269 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

270 i‡(!
syms
)

271 
	`Áèl
("out of virtual memory");

273 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

274 i‡(
nsyms
 <= 0)

275 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

282 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

283 
i
=0; i < 
nsyms
; i++)

285 
asymbﬁ
 *
sym
 = 
syms
[
i
];

289 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

290 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

295 && 
	`RELEVANT_SCOPE
(
sym
))

298 
sym_nd©asyms
++;

299 #ifde‡
PRINT_SYMS


300 
	`Ârötf
(
°dîr
,

302 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

303 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

307 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

309 && 
	`RELEVANT_SCOPE
(
sym
))

312 
sym_¡extsyms
++;

313 #ifde‡
PRINT_SYMS


314 
	`Ârötf
(
°dîr
,

316 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

317 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

323 #ifde‡
PRINT_SYMS


324 
	`Ârötf
(
°dîr
,

326 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

327 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

331 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

332 i‡(
sym_nsyms
 <= 0)

333 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

336 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

337 i‡(!
sym_db
)

338 
	`Áèl
("out of virtual memory");

341 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

343 
asymbﬁ
 *
sym
 = 
syms
[
i
];

347 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

348 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

353 && 
	`RELEVANT_SCOPE
(
sym
))

356 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

357 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

358 
sym_db
[
debug_˙t
].
öôülized
 =

359 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

360 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

362 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

363 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

364 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

366 
debug_˙t
++;

369 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

371 && 
	`RELEVANT_SCOPE
(
sym
))

374 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

375 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

376 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

377 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

378 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

379 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

381 
debug_˙t
++;

389 i‡(
debug_˙t
 !
sym_nsyms
)

390 
	`∑nic
("couldÇotÜocateáll counted symbols");

393 
	`‰ì
(
syms
);

397 i‡(!
	`bfd_˛o£
(
abfd
))

398 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

403 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

404 
fobj
 = 
	`f›í
(
‚ame
, "rb");

406 
fobj
 = 
	`f›í
(
‚ame
, "r");

408 i‡(!
fobj
)

409 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

411 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

415 i‡(
fhdr
.
f_magic
 !
ECOFF_EB_MAGIC
 && fhdr.f_magi¯!
ECOFF_EL_MAGIC
)

416 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

418 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

419 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

422 
	`f£ek
(
fobj
, 
fhdr
.
f_sym±r
, 0);

424 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

425 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

427 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

428 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

431 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

432 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

433 i‡(!
°πab
)

434 
	`Áèl
("out of virtual memory");

437 
	`f£ek
(
fobj
, 
symhdr
.
cbSsOff£t
, 0);

438 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

439 
	`Áèl
("error whileÑeading symbolÅableÇames");

442 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

443 i‡(
Àn
 <= 0)

444 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

445 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

446 i‡(!
sym_db
)

447 
	`Áèl
("out of virtual memory");

450 
exå
 =

451 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

452 i‡(!
exå
)

453 
	`Áèl
("out of virtual memory");

455 
	`f£ek
(
fobj
, 
symhdr
.
cbExtOff£t
, 0);

456 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

457 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

459 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

462 
i
=0; i < 
symhdr
.
õxtMax
; i++)

464 
°r_off£t
;

466 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

469 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

471 
i
, 
exå
[i].
ifd
,

472 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

473 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

474 
exå
[
i
].
asym
.
ödex
);

475 
	`¥ötf
(" %08x %2d %2d %s\n",

476 
exå
[
i
].
asym
.
vÆue
,

477 
exå
[
i
].
asym
.
°
,

478 
exå
[
i
].
asym
.
sc
,

479 &
°πab
[
°r_off£t
]);

482 
exå
[
i
].
asym
.
°
)

484 
ECOFF_°GlobÆ
:

485 
ECOFF_°Sètic
:

487 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

488 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

489 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

490 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

492 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

493 
sym_nsyms
++;

494 
sym_nd©asyms
++;

497 
ECOFF_°Proc
:

498 
ECOFF_°SèticProc
:

499 
ECOFF_°Labñ
:

501 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

502 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

503 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

504 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

506 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

507 
sym_nsyms
++;

508 
sym_¡extsyms
++;

515 
	`‰ì
(
exå
);

518 i‡(
	`f˛o£
(
fobj
))

519 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

528 
sym_syms
 =

529 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

530 i‡(!
sym_syms
)

531 
	`Áèl
("out of virtual memory");

533 
sym_syms_by_«me
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms_by_«me
)

536 
	`Áèl
("out of virtual memory");

538 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

540 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

541 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

542 
debug_˙t
++;

545 i‡(
debug_˙t
 !
sym_nsyms
)

546 
	`∑nic
("couldÇotÜocateáll symbols");

549 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

552 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

555 
sym_ãxtsyms
 =

556 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

557 i‡(!
sym_ãxtsyms
)

558 
	`Áèl
("out of virtual memory");

560 
sym_ãxtsyms_by_«me
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms_by_«me
)

563 
	`Áèl
("out of virtual memory");

565 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

567 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

569 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

570 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

571 
debug_˙t
++;

575 i‡(
debug_˙t
 !
sym_¡extsyms
)

576 
	`∑nic
("couldÇotÜocateállÅext symbols");

579 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

582 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

583 (
sym_sym_t
 *), (*)
ncmp
);

586 
sym_d©asyms
 =

587 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

588 i‡(!
sym_d©asyms
)

589 
	`Áèl
("out of virtual memory");

591 
sym_d©asyms_by_«me
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms_by_«me
)

594 
	`Áèl
("out of virtual memory");

596 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

598 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

600 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

601 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

602 
debug_˙t
++;

606 i‡(
debug_˙t
 !
sym_nd©asyms
)

607 
	`∑nic
("couldÇotÜocateáll data symbols");

610 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

613 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

614 (
sym_sym_t
 *), (*)
ncmp
);

617 
i
=0; i<
sym_¡extsyms
; i++)

619 
sym_ãxtsyms
[
i
]->
size
 =

620 (
i
 !(
sym_¡extsyms
 - 1)

621 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

622 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

624 
i
=0; i<
sym_nd©asyms
; i++)

626 
sym_d©asyms
[
i
]->
size
 =

627 (
i
 !(
sym_nd©asyms
 - 1)

628 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

629 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

633 
syms_lﬂded
 = 
TRUE
;

634 
	}
}

638 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

639 
FILE
 *
fd
)

641 
	`Ârötf
(
fd
,

643 
sym
->
«me
,

644 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

645 
sym
->
öôülized
 ? "y" : "n",

646 
sym
->
pub
 ? "y" : "n",

647 
sym
->
loˇl
 ? "y" : "n",

648 
sym
->
addr
,

649 
sym
->
size
);

650 
	}
}

654 
	$sym_dumpsyms
(
FILE
 *
fd
)

656 
i
;

658 
i
=0; i < 
sym_nsyms
; i++)

659 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

660 
	}
}

664 
	$sym_dump°©e
(
FILE
 *
fd
)

666 
i
;

668 i‡(
fd
 =
NULL
)

669 
fd
 = 
°dîr
;

671 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

672 
i
=0; i < 
sym_nsyms
; i++)

673 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

675 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

676 
i
=0; i < 
sym_nsyms
; i++)

677 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

679 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

680 
i
=0; i < 
sym_¡extsyms
; i++)

681 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

683 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

684 
i
=0; i < 
sym_¡extsyms
; i++)

685 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

687 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

688 
i
=0; i < 
sym_nd©asyms
; i++)

689 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

691 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

692 
i
=0; i < 
sym_nd©asyms
; i++)

693 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

694 
	}
}

700 
sym_sym_t
 *

701 
	$sym_böd_addr
(
md_addr_t
 
addr
,

702 *
pödex
,

703 
exa˘
,

704 
sym_db_t
 
db
)

706 
nsyms
, 
low
, 
high
, 
pos
;

707 
sym_sym_t
 **
syms
;

709 
db
)

711 
sdb_™y
:

712 
syms
 = 
sym_syms
;

713 
nsyms
 = 
sym_nsyms
;

715 
sdb_ãxt
:

716 
syms
 = 
sym_ãxtsyms
;

717 
nsyms
 = 
sym_¡extsyms
;

719 
sdb_d©a
:

720 
syms
 = 
sym_d©asyms
;

721 
nsyms
 = 
sym_nd©asyms
;

724 
	`∑nic
("bogus symbol database");

728 i‡(!
nsyms
)

730 i‡(
pödex
)

731 *
pödex
 = -1;

732  
NULL
;

736 
low
 = 0;

737 
high
 = 
nsyms
-1;

738 
pos
 = (
low
 + 
high
) >> 1;

740 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

742 || (!
exa˘


743 && 
syms
[
pos
]->
addr
 <=áddr

744 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

746 i‡(
addr
 < 
syms
[
pos
]->addr)

747 
high
 = 
pos
 - 1;

749 
low
 = 
pos
 + 1;

750 i‡(
high
 >
low
)

751 
pos
 = (
low
 + 
high
) >> 1;

754 i‡(
pödex
)

755 *
pödex
 = -1;

756  
NULL
;

761 i‡(
pödex
)

762 *
pödex
 = 
pos
;

763  
syms
[
pos
];

764 
	}
}

769 
sym_sym_t
 *

770 
	$sym_böd_«me
(*
«me
,

771 *
pödex
,

772 
sym_db_t
 
db
)

774 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

775 
sym_sym_t
 **
syms
;

777 
db
)

779 
sdb_™y
:

780 
syms
 = 
sym_syms_by_«me
;

781 
nsyms
 = 
sym_nsyms
;

783 
sdb_ãxt
:

784 
syms
 = 
sym_ãxtsyms_by_«me
;

785 
nsyms
 = 
sym_¡extsyms
;

787 
sdb_d©a
:

788 
syms
 = 
sym_d©asyms_by_«me
;

789 
nsyms
 = 
sym_nd©asyms
;

792 
	`∑nic
("bogus symbol database");

796 i‡(!
nsyms
)

798 i‡(
pödex
)

799 *
pödex
 = -1;

800  
NULL
;

804 
low
 = 0;

805 
high
 = 
nsyms
-1;

806 
pos
 = (
low
 + 
high
) >> 1;

807 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

809 i‡(
cmp
 > 0)

810 
high
 = 
pos
 - 1;

812 
low
 = 
pos
 + 1;

813 i‡(
high
 >
low
)

814 
pos
 = (
low
 + 
high
) >> 1;

817 i‡(
pödex
)

818 *
pödex
 = -1;

819  
NULL
;

824 i‡(
pödex
)

825 *
pödex
 = 
pos
;

826  
syms
[
pos
];

827 
	}
}

	@target-pisa/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~"ho°.h
"

55 
	~"misc.h
"

56 
	~"machöe.h
"

57 
	~"ªgs.h
"

58 
	~"mem‹y.h
"

59 
	~"lﬂdî.h
"

60 
	~"sim.h
"

61 
	~"ídün.h
"

62 
	~"eio.h
"

63 
	~"sysˇŒ.h
"

66 #i‚de‡
MD_CROSS_ENDIAN


68 #ifde‡
_MSC_VER


69 
	~<io.h
>

71 
	~<uni°d.h
>

73 
	~<f˙é.h
>

74 
	~<sys/ty≥s.h
>

75 #i‚de‡
_MSC_VER


76 
	~<sys/∑øm.h
>

78 
	~<î∫o.h
>

79 
	~<time.h
>

80 #i‚de‡
_MSC_VER


81 
	~<sys/time.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/ªsour˚.h
>

86 
	~<sig«l.h
>

90 
	~<sys/°©.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/uio.h
>

94 
	~<£tjmp.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/times.h
>

98 
	~<limôs.h
>

99 #i‚de‡
_MSC_VER


100 
	~<sys/io˘l.h
>

102 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

103 #i‚de‡
_MSC_VER


104 
	~<sys/£À˘.h
>

107 #ifde‡
löux


108 
	~<utime.h
>

109 
	~<sgây.h
>

112 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

113 
	~<sgây.h
>

116 #ifde‡
__svr4__


117 
	~"utime.h
"

120 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

121 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

122 
	~<dúít.h
>

124 
	~<sys/dú.h
>

128 #unde‡
NL0


129 #unde‡
NL1


130 #unde‡
CR0


131 #unde‡
CR1


132 #unde‡
CR2


133 #unde‡
CR3


134 #unde‡
TAB0


135 #unde‡
TAB1


136 #unde‡
TAB2


137 #unde‡
XTABS


138 #unde‡
BS0


139 #unde‡
BS1


140 #unde‡
FF0


141 #unde‡
FF1


142 #unde‡
ECHO


143 #unde‡
NOFLSH


144 #unde‡
TOSTOP


145 #unde‡
FLUSHO


146 #unde‡
PENDIN


149 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

150 #unde‡
CR0


153 #ifde‡
__FªeBSD__


154 
	~<sys/io˘l_com∑t.h
>

156 #i‚de‡
_MSC_VER


157 
	~<ãrmio.h
>

161 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

163 #unde‡
HUPCL


164 #unde‡
ECHO


165 #unde‡
B50


166 #unde‡
B75


167 #unde‡
B110


168 #unde‡
B134


169 #unde‡
B150


170 #unde‡
B200


171 #unde‡
B300


172 #unde‡
B600


173 #unde‡
B1200


174 #unde‡
B1800


175 #unde‡
B2400


176 #unde‡
B4800


177 #unde‡
B9600


178 #unde‡
B19200


179 #unde‡
B38400


180 #unde‡
NL0


181 #unde‡
NL1


182 #unde‡
CR0


183 #unde‡
CR1


184 #unde‡
CR2


185 #unde‡
CR3


186 #unde‡
TAB0


187 #unde‡
TAB1


188 #unde‡
BS0


189 #unde‡
BS1


190 #unde‡
FF0


191 #unde‡
FF1


192 #unde‡
EXTA


193 #unde‡
EXTB


194 #unde‡
B900


195 #unde‡
B3600


196 #unde‡
B7200


197 #unde‡
XTABS


198 
	~<sgây.h
>

199 
	~<utime.h
>

202 #ifde‡
_MSC_VER


203 
	#ac˚ss
 
_ac˚ss


	)

204 
	#chmod
 
_chmod


	)

205 
	#chdú
 
_chdú


	)

206 
	#u∆ök
 
_u∆ök


	)

207 
	#›í
 
_›í


	)

208 
	#¸ót
 
_¸ót


	)

209 
	#pùe
 
_pùe


	)

210 
	#dup
 
_dup


	)

211 
	#dup2
 
_dup2


	)

212 
	#°©
 
_°©


	)

213 
	#f°©
 
_f°©


	)

214 
	#l£ek
 
_l£ek


	)

215 
	#ªad
 
_ªad


	)

216 
	#wrôe
 
_wrôe


	)

217 
	#˛o£
 
_˛o£


	)

218 
	#gëpid
 
_gëpid


	)

219 
	#utime
 
_utime


	)

220 
	~<sys/utime.h
>

228 
	#SS_SYS_sysˇŒ
 0

	)

230 
	#SS_SYS_f‹k
 2

	)

231 
	#SS_SYS_ªad
 3

	)

233 
	#SS_SYS_›í
 5

	)

234 
	#SS_SYS_˛o£
 6

	)

236 
	#SS_SYS_¸ót
 8

	)

237 
	#SS_SYS_lök
 9

	)

238 
	#SS_SYS_u∆ök
 10

	)

239 
	#SS_SYS_execv
 11

	)

240 
	#SS_SYS_chdú
 12

	)

242 
	#SS_SYS_mknod
 14

	)

243 
	#SS_SYS_chmod
 15

	)

244 
	#SS_SYS_chown
 16

	)

245 
	#SS_SYS_brk
 17

	)

247 
	#SS_SYS_l£ek
 19

	)

248 
	#SS_SYS_gëpid
 20

	)

249 
	#SS_SYS_mou¡
 21

	)

250 
	#SS_SYS_umou¡
 22

	)

252 
	#SS_SYS_gëuid
 24

	)

254 
	#SS_SYS_±ø˚
 26

	)

261 
	#SS_SYS_ac˚ss
 33

	)

264 
	#SS_SYS_sync
 36

	)

265 
	#SS_SYS_kûl
 37

	)

266 
	#SS_SYS_°©
 38

	)

268 
	#SS_SYS_l°©
 40

	)

269 
	#SS_SYS_dup
 41

	)

270 
	#SS_SYS_pùe
 42

	)

272 
	#SS_SYS_¥ofû
 44

	)

275 
	#SS_SYS_gëgid
 47

	)

279 
	#SS_SYS_ac˘
 51

	)

282 
	#SS_SYS_io˘l
 54

	)

283 
	#SS_SYS_ªboŸ
 55

	)

285 
	#SS_SYS_symlök
 57

	)

286 
	#SS_SYS_ªadlök
 58

	)

287 
	#SS_SYS_execve
 59

	)

288 
	#SS_SYS_umask
 60

	)

289 
	#SS_SYS_chroŸ
 61

	)

290 
	#SS_SYS_f°©
 62

	)

292 
	#SS_SYS_gë∑gesize
 64

	)

293 
	#SS_SYS_mªm≠
 65

	)

294 
	#SS_SYS_vf‹k
 66

	)

297 
	#SS_SYS_sbrk
 69

	)

298 
	#SS_SYS_s°k
 70

	)

299 
	#SS_SYS_mm≠
 71

	)

300 
	#SS_SYS_vadvi£
 72

	)

301 
	#SS_SYS_munm≠
 73

	)

302 
	#SS_SYS_m¥Ÿe˘
 74

	)

303 
	#SS_SYS_madvi£
 75

	)

304 
	#SS_SYS_vh™gup
 76

	)

306 
	#SS_SYS_möc‹e
 78

	)

307 
	#SS_SYS_gëgroups
 79

	)

308 
	#SS_SYS_£tgroups
 80

	)

309 
	#SS_SYS_gëpgΩ
 81

	)

310 
	#SS_SYS_£çgΩ
 82

	)

311 
	#SS_SYS_£tôimî
 83

	)

312 
	#SS_SYS_waô3
 84

	)

313 
	#SS_SYS_waô
 
SYS_waô3


	)

314 
	#SS_SYS_sw≠⁄
 85

	)

315 
	#SS_SYS_gëôimî
 86

	)

316 
	#SS_SYS_gëho°«me
 87

	)

317 
	#SS_SYS_£tho°«me
 88

	)

318 
	#SS_SYS_gëdèbÀsize
 89

	)

319 
	#SS_SYS_dup2
 90

	)

320 
	#SS_SYS_gëd›t
 91

	)

321 
	#SS_SYS_f˙é
 92

	)

322 
	#SS_SYS_£À˘
 93

	)

323 
	#SS_SYS_£td›t
 94

	)

324 
	#SS_SYS_fsync
 95

	)

325 
	#SS_SYS_£çri‹ôy
 96

	)

326 
	#SS_SYS_sockë
 97

	)

327 
	#SS_SYS_c⁄√˘
 98

	)

328 
	#SS_SYS_ac˚±
 99

	)

329 
	#SS_SYS_gë¥i‹ôy
 100

	)

330 
	#SS_SYS_£nd
 101

	)

331 
	#SS_SYS_ªcv
 102

	)

332 
	#SS_SYS_sigªtu∫
 103

	)

334 
	#SS_SYS_böd
 104

	)

335 
	#SS_SYS_£tsock›t
 105

	)

336 
	#SS_SYS_li°í
 106

	)

338 
	#SS_SYS_sigvec
 108

	)

339 
	#SS_SYS_sigblock
 109

	)

340 
	#SS_SYS_sig£tmask
 110

	)

341 
	#SS_SYS_sig∑u£
 111

	)

342 
	#SS_SYS_sig°ack
 112

	)

343 
	#SS_SYS_ªcvmsg
 113

	)

344 
	#SS_SYS_£ndmsg
 114

	)

346 
	#SS_SYS_gëtimeofday
 116

	)

347 
	#SS_SYS_gërußge
 117

	)

348 
	#SS_SYS_gësock›t
 118

	)

350 
	#SS_SYS_ªadv
 120

	)

351 
	#SS_SYS_wrôev
 121

	)

352 
	#SS_SYS_£âimeofday
 122

	)

353 
	#SS_SYS_fchown
 123

	)

354 
	#SS_SYS_fchmod
 124

	)

355 
	#SS_SYS_ªcv‰om
 125

	)

356 
	#SS_SYS_£åeuid
 126

	)

357 
	#SS_SYS_£åegid
 127

	)

358 
	#SS_SYS_ª«me
 128

	)

359 
	#SS_SYS_åunˇã
 129

	)

360 
	#SS_SYS_·runˇã
 130

	)

361 
	#SS_SYS_Êock
 131

	)

363 
	#SS_SYS_£ndto
 133

	)

364 
	#SS_SYS_shutdown
 134

	)

365 
	#SS_SYS_sockë∑ú
 135

	)

366 
	#SS_SYS_mkdú
 136

	)

367 
	#SS_SYS_rmdú
 137

	)

368 
	#SS_SYS_utimes
 138

	)

369 
	#SS_SYS_sig˛ónup
 139

	)

371 
	#SS_SYS_adjtime
 140

	)

372 
	#SS_SYS_gë≥î«me
 141

	)

373 
	#SS_SYS_gëho°id
 142

	)

374 
	#SS_SYS_£tho°id
 143

	)

375 
	#SS_SYS_gëæimô
 144

	)

376 
	#SS_SYS_£ålimô
 145

	)

377 
	#SS_SYS_kûÕg
 146

	)

379 
	#SS_SYS_£tquŸa
 148

	)

380 
	#SS_SYS_quŸa
 149

	)

381 
	#SS_SYS_gësock«me
 150

	)

383 
	#SS_SYS_sysmùs
 151

	)

387 
	#SS_SYS_ˇcheÊush
 152

	)

388 
	#SS_SYS_ˇche˘l
 153

	)

389 
	#SS_SYS_©omic_›
 155

	)

392 
	#SS_SYS_debug
 154

	)

394 
	#SS_SYS_°©fs
 160

	)

395 
	#SS_SYS_f°©fs
 161

	)

396 
	#SS_SYS_unmou¡
 162

	)

398 
	#SS_SYS_quŸa˘l
 168

	)

401 
	#SS_SYS_hdwc⁄f
 171

	)

405 
	#SS_SYS_nfs_svc
 158

	)

406 
	#SS_SYS_nfssvc
 158

	)

407 
	#SS_SYS_nfs_biod
 163

	)

408 
	#SS_SYS_async_d´m⁄
 163

	)

409 
	#SS_SYS_nfs_gëfh
 164

	)

410 
	#SS_SYS_gëfh
 164

	)

411 
	#SS_SYS_gëdúíåõs
 159

	)

412 
	#SS_SYS_gëdomaö«me
 165

	)

413 
	#SS_SYS_£tdomaö«me
 166

	)

414 
	#SS_SYS_exp‹tfs
 169

	)

416 
	#SS_SYS_msg˘l
 172

	)

417 
	#SS_SYS_msggë
 173

	)

418 
	#SS_SYS_msgrcv
 174

	)

419 
	#SS_SYS_msg¢d
 175

	)

420 
	#SS_SYS_£m˘l
 176

	)

421 
	#SS_SYS_£mgë
 177

	)

422 
	#SS_SYS_£m›
 178

	)

423 
	#SS_SYS_u«me
 179

	)

424 
	#SS_SYS_shmsys
 180

	)

425 
	#SS_SYS_∂ock
 181

	)

426 
	#SS_SYS_lockf
 182

	)

427 
	#SS_SYS_u°©
 183

	)

428 
	#SS_SYS_gëm¡
 184

	)

429 
	#SS_SYS_sig≥ndög
 187

	)

430 
	#SS_SYS_£tsid
 188

	)

431 
	#SS_SYS_waôpid
 189

	)

433 
	#SS_SYS_utc_gëtime
 233

	)

434 
	#SS_SYS_utc_adjtime
 234

	)

435 
	#SS_SYS_aud˙é
 252

	)

436 
	#SS_SYS_audgí
 253

	)

437 
	#SS_SYS_°¨t˝u
 254

	)

438 
	#SS_SYS_°›˝u
 255

	)

439 
	#SS_SYS_gësysöfo
 256

	)

440 
	#SS_SYS_£tsysöfo
 257

	)

443 
	#SS_IOCTL_TIOCGETP
 1074164744

	)

444 
	#SS_IOCTL_TIOCSETP
 -2147060727

	)

445 
	#SS_IOCTL_TCGETP
 1076130901

	)

446 
	#SS_IOCTL_TCGETA
 1075082331

	)

447 
	#SS_IOCTL_TIOCGLTC
 1074164852

	)

448 
	#SS_IOCTL_TIOCSLTC
 -2147060619

	)

449 
	#SS_IOCTL_TIOCGWINSZ
 1074295912

	)

450 
	#SS_IOCTL_TCSETAW
 -2146143143

	)

451 
	#SS_IOCTL_TIOCGETC
 1074164754

	)

452 
	#SS_IOCTL_TIOCSETC
 -2147060719

	)

453 
	#SS_IOCTL_TIOCLBIC
 -2147191682

	)

454 
	#SS_IOCTL_TIOCLBIS
 -2147191681

	)

455 
	#SS_IOCTL_TIOCLGET
 0x4004747c

	)

456 
	#SS_IOCTL_TIOCLSET
 -2147191683

	)

460 
	#MAXBUFSIZE
 1024

	)

466 
	#NUM_IOCTL_BYTES
 128

	)

470 
	sss_°©buf


472 
shÆf_t
 
	mss_°_dev
;

473 
shÆf_t
 
	mss_∑d
;

474 
w‹d_t
 
	mss_°_öo
;

475 
hÆf_t
 
	mss_°_mode
;

476 
shÆf_t
 
	mss_°_∆ök
;

477 
shÆf_t
 
	mss_°_uid
;

478 
shÆf_t
 
	mss_°_gid
;

479 
shÆf_t
 
	mss_°_rdev
;

480 
shÆf_t
 
	mss_∑d1
;

481 
sw‹d_t
 
	mss_°_size
;

482 
sw‹d_t
 
	mss_°_©ime
;

483 
sw‹d_t
 
	mss_°_•¨e1
;

484 
sw‹d_t
 
	mss_°_mtime
;

485 
sw‹d_t
 
	mss_°_•¨e2
;

486 
sw‹d_t
 
	mss_°_˘ime
;

487 
sw‹d_t
 
	mss_°_•¨e3
;

488 
sw‹d_t
 
	mss_°_blksize
;

489 
sw‹d_t
 
	mss_°_blocks
;

490 
w‹d_t
 
	mss_°_gínum
;

491 
sw‹d_t
 
	mss_°_•¨e4
;

494 
	sss_sgâyb
 {

495 
byã_t
 
	msg_i•ìd
;

496 
byã_t
 
	msg_o•ìd
;

497 
byã_t
 
	msg_îa£
;

498 
byã_t
 
	msg_kûl
;

499 
shÆf_t
 
	msg_Êags
;

502 
	sss_timevÆ


504 
sw‹d_t
 
	mss_tv_£c
;

505 
sw‹d_t
 
	mss_tv_u£c
;

510 
	sss_rußge


512 
ss_timevÆ
 
	mss_ru_utime
;

513 
ss_timevÆ
 
	mss_ru_°ime
;

514 
sw‹d_t
 
	mss_ru_maxrss
;

515 
sw‹d_t
 
	mss_ru_ixrss
;

516 
sw‹d_t
 
	mss_ru_idrss
;

517 
sw‹d_t
 
	mss_ru_i§ss
;

518 
sw‹d_t
 
	mss_ru_möÊt
;

519 
sw‹d_t
 
	mss_ru_majÊt
;

520 
sw‹d_t
 
	mss_ru_nsw≠
;

521 
sw‹d_t
 
	mss_ru_öblock
;

522 
sw‹d_t
 
	mss_ru_oublock
;

523 
sw‹d_t
 
	mss_ru_msg¢d
;

524 
sw‹d_t
 
	mss_ru_msgrcv
;

525 
sw‹d_t
 
	mss_ru_nsig«ls
;

526 
sw‹d_t
 
	mss_ru_nvcsw
;

527 
sw‹d_t
 
	mss_ru_nivcsw
;

530 
	sss_timez⁄e


532 
sw‹d_t
 
	mss_tz_möuãswe°
;

533 
sw‹d_t
 
	mss_tz_d°time
;

536 
	sss_æimô


538 
	mss_æim_cur
;

539 
	mss_æim_max
;

544 
	#SS_O_RDONLY
 0

	)

545 
	#SS_O_WRONLY
 1

	)

546 
	#SS_O_RDWR
 2

	)

547 
	#SS_O_APPEND
 0x0008

	)

548 
	#SS_O_CREAT
 0x0200

	)

549 
	#SS_O_TRUNC
 0x0400

	)

550 
	#SS_O_EXCL
 0x0800

	)

551 
	#SS_O_NONBLOCK
 0x4000

	)

552 
	#SS_O_NOCTTY
 0x8000

	)

553 
	#SS_O_SYNC
 0x2000

	)

557 
	mss_Êag
;

558 
	mloˇl_Êag
;

559 } 
	gss_Êag_èbÀ
[] = {

561 #ifde‡
_MSC_VER


562 { 
SS_O_RDONLY
, 
_O_RDONLY
 },

563 { 
SS_O_WRONLY
, 
_O_WRONLY
 },

564 { 
SS_O_RDWR
, 
_O_RDWR
 },

565 { 
SS_O_APPEND
, 
_O_APPEND
 },

566 { 
SS_O_CREAT
, 
_O_CREAT
 },

567 { 
SS_O_TRUNC
, 
_O_TRUNC
 },

568 { 
SS_O_EXCL
, 
_O_EXCL
 },

569 #ifde‡
_O_NONBLOCK


570 { 
SS_O_NONBLOCK
, 
_O_NONBLOCK
 },

572 #ifde‡
_O_NOCTTY


573 { 
SS_O_NOCTTY
, 
_O_NOCTTY
 },

575 #ifde‡
_O_SYNC


576 { 
SS_O_SYNC
, 
_O_SYNC
 },

579 { 
SS_O_RDONLY
, 
O_RDONLY
 },

580 { 
SS_O_WRONLY
, 
O_WRONLY
 },

581 { 
SS_O_RDWR
, 
O_RDWR
 },

582 { 
SS_O_APPEND
, 
O_APPEND
 },

583 { 
SS_O_CREAT
, 
O_CREAT
 },

584 { 
SS_O_TRUNC
, 
O_TRUNC
 },

585 { 
SS_O_EXCL
, 
O_EXCL
 },

586 { 
SS_O_NONBLOCK
, 
O_NONBLOCK
 },

587 { 
SS_O_NOCTTY
, 
O_NOCTTY
 },

588 #ifde‡
O_SYNC


589 { 
SS_O_SYNC
, 
O_SYNC
 },

593 
	#SS_NFLAGS
 ((
ss_Êag_èbÀ
)/(ss_Êag_èbÀ[0]))

	)

602 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

603 
mem_ac˚ss_‚
 
mem_‚
,

604 
mem_t
 *
mem
,

605 
md_ö°_t
 
ö°
,

606 
åa˚abÀ
)

608 
w‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[2];

611 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

613 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

618 #ifde‡
MD_CROSS_ENDIAN


619 i‡(
syscode
 =
SS_SYS_exô
)

622 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

625 
	`Áèl
("cannotÉxecute PISA system call on cross-endian host");

630 
syscode
)

632 
SS_SYS_exô
:

634 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

638 
SS_SYS_f‹k
:

640 
ªgs
->
ªgs_R
[2] = 
	`f‹k
();

641 i‡(
ªgs
->
ªgs_R
[2] != -1)

643 
ªgs
->
ªgs_R
[7] = 0;

645 i‡(
ªgs
->
ªgs_R
[2] != 0)

646 
ªgs
->
ªgs_R
[3] = 0;

649 
	`Áèl
("SYS_fork failed");

654 
SS_SYS_vf‹k
:

656 
r31_∑ª¡
 = 
ªgs
->
ªgs_R
[31];

657  
ªgs
->
ªgs_R
[2] = 
	`vf‹k
();

658 i‡(
ªgs
->
ªgs_R
[2] != -1)

659 
ªgs
->
ªgs_R
[7] = 0;

661 
	`Áèl
("vfork() in SYS_vfork failed");

662 i‡(
ªgs
->
ªgs_R
[2] != 0)

664 
ªgs
->
ªgs_R
[3] = 0;

665 
ªgs
->
ªgs_R
[7] = 0;

666 
ªgs
->
ªgs_R
[31] = 
r31_∑ª¡
;

671 
SS_SYS_ªad
:

673 *
buf
;

676 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

677 
	`Áèl
("out of memory in SYS_read");

680  
ªgs
->
ªgs_R
[2] =

681 
	`ªad
–
ªgs
->
ªgs_R
[4], 
buf
,Ñegs->regs_R[6]);

684 i‡(
ªgs
->
ªgs_R
[2] != -1)

685 
ªgs
->
ªgs_R
[7] = 0;

689 
ªgs
->
ªgs_R
[2] = 
î∫o
;

690 
ªgs
->
ªgs_R
[7] = 1;

694 
	`mem_bc›y
(
mem_‚
, 
mem
,

695 
Wrôe
, 
ªgs
->
ªgs_R
[5],

696 
buf
, 
ªgs
->
ªgs_R
[2]);

699 
	`‰ì
(
buf
);

703 
SS_SYS_wrôe
:

705 *
buf
;

708 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

709 
	`Áèl
("out of memory in SYS_write");

712 
	`mem_bc›y
(
mem_‚
, 
mem
,

713 
Ród
, 
ªgs
->
ªgs_R
[5],

714 
buf
, 
ªgs
->
ªgs_R
[6]);

717 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

721  
ªgs
->
ªgs_R
[2] =

722 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[6], 
sim_¥ogfd
);

728  
ªgs
->
ªgs_R
[2] =

729 
	`wrôe
–
ªgs
->
ªgs_R
[4],

730 
buf
, 
ªgs
->
ªgs_R
[6]);

734 i‡(
ªgs
->
ªgs_R
[2] ==Ñegs->regs_R[6])

735  
ªgs
->
ªgs_R
[7] = 0;

739 
ªgs
->
ªgs_R
[2] = 
î∫o
;

740 
ªgs
->
ªgs_R
[7] = 1;

744 
	`‰ì
(
buf
);

748 
SS_SYS_›í
:

750 
buf
[
MAXBUFSIZE
];

751 
i
;

752 
ss_Êags
 = 
ªgs
->
ªgs_R
[5], 
loˇl_Êags
 = 0;

755 
i
=0; i<
SS_NFLAGS
; i++)

757 i‡(
ss_Êags
 & 
ss_Êag_èbÀ
[
i
].
ss_Êag
)

759 
ss_Êags
 &~
ss_Êag_èbÀ
[
i
].
ss_Êag
;

760 
loˇl_Êags
 |
ss_Êag_èbÀ
[
i
].
loˇl_Êag
;

764 i‡(
ss_Êags
 != 0)

765 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
ss_Êags
);

768 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

771 #ifde‡
__CYGWIN32__


772  
ªgs
->
ªgs_R
[2] =

773 
	`›í
(
buf
, 
loˇl_Êags
|
O_BINARY
, 
ªgs
->
ªgs_R
[6]);

775  
ªgs
->
ªgs_R
[2] =

776 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[6]);

780 i‡(
ªgs
->
ªgs_R
[2] != -1)

781 
ªgs
->
ªgs_R
[7] = 0;

785 
ªgs
->
ªgs_R
[2] = 
î∫o
;

786 
ªgs
->
ªgs_R
[7] = 1;

791 
SS_SYS_˛o£
:

793 i‡–
ªgs
->
ªgs_R
[4] == 0

794 || 
ªgs
->
ªgs_R
[4] == 1

795 || 
ªgs
->
ªgs_R
[4] == 2)

797 
ªgs
->
ªgs_R
[7] = 0;

802 
ªgs
->
ªgs_R
[2] = 
	`˛o£
(Ñegs->regs_R[4]);

805 i‡(
ªgs
->
ªgs_R
[2] != -1)

806 
ªgs
->
ªgs_R
[7] = 0;

810 
ªgs
->
ªgs_R
[2] = 
î∫o
;

811 
ªgs
->
ªgs_R
[7] = 1;

815 
SS_SYS_¸ót
:

817 
buf
[
MAXBUFSIZE
];

820 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

823  
ªgs
->
ªgs_R
[2] = 
	`¸ót
(
buf
,Ñegs->regs_R[5]);

826 i‡(
ªgs
->
ªgs_R
[2] != -1)

827 
ªgs
->
ªgs_R
[7] = 0;

831 
ªgs
->
ªgs_R
[2] = 
î∫o
;

832 
ªgs
->
ªgs_R
[7] = 1;

837 
SS_SYS_u∆ök
:

839 
buf
[
MAXBUFSIZE
];

842 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

845  
ªgs
->
ªgs_R
[2] = 
	`u∆ök
(
buf
);

848 i‡(
ªgs
->
ªgs_R
[2] != -1)

849 
ªgs
->
ªgs_R
[7] = 0;

853 
ªgs
->
ªgs_R
[2] = 
î∫o
;

854 
ªgs
->
ªgs_R
[7] = 1;

859 
SS_SYS_chdú
:

861 
buf
[
MAXBUFSIZE
];

864 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

867  
ªgs
->
ªgs_R
[2] = 
	`chdú
(
buf
);

870 i‡(
ªgs
->
ªgs_R
[2] != -1)

871 
ªgs
->
ªgs_R
[7] = 0;

875 
ªgs
->
ªgs_R
[2] = 
î∫o
;

876 
ªgs
->
ªgs_R
[7] = 1;

881 
SS_SYS_chmod
:

883 
buf
[
MAXBUFSIZE
];

886 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

889  
ªgs
->
ªgs_R
[2] = 
	`chmod
(
buf
,Ñegs->regs_R[5]);

892 i‡(
ªgs
->
ªgs_R
[2] != -1)

893 
ªgs
->
ªgs_R
[7] = 0;

897 
ªgs
->
ªgs_R
[2] = 
î∫o
;

898 
ªgs
->
ªgs_R
[7] = 1;

903 
SS_SYS_chown
:

904 #ifde‡
_MSC_VER


905 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

906 
ªgs
->
ªgs_R
[7] = 0;

909 
buf
[
MAXBUFSIZE
];

912 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

915  
ªgs
->
ªgs_R
[2] = 
	`chown
(
buf
,Ñegs->regs_R[5],

916  
ªgs
->
ªgs_R
[6]);

919 i‡(
ªgs
->
ªgs_R
[2] != -1)

920 
ªgs
->
ªgs_R
[7] = 0;

924 
ªgs
->
ªgs_R
[2] = 
î∫o
;

925 
ªgs
->
ªgs_R
[7] = 1;

931 
SS_SYS_brk
:

933 
md_addr_t
 
addr
;

936 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[4], 
MD_PAGE_SIZE
);

939 i‡(
addr
 >
ld_brk_poöt
 &&ádd∏< (
md_addr_t
)
ªgs
->
ªgs_R
[29])

941 
ªgs
->
ªgs_R
[2] = 0;

942 
ªgs
->
ªgs_R
[7] = 0;

943 
ld_brk_poöt
 = 
addr
;

948 
ªgs
->
ªgs_R
[2] = 
ENOMEM
;

949 
ªgs
->
ªgs_R
[7] = 1;

954 
SS_SYS_l£ek
:

956 
ªgs
->
ªgs_R
[2] =

957 
	`l£ek
–
ªgs
->
ªgs_R
[4],

958  
ªgs
->
ªgs_R
[5],Ñegs->regs_R[6]);

961 i‡(
ªgs
->
ªgs_R
[2] != -1)

962 
ªgs
->
ªgs_R
[7] = 0;

966 
ªgs
->
ªgs_R
[2] = 
î∫o
;

967 
ªgs
->
ªgs_R
[7] = 1;

971 
SS_SYS_gëpid
:

973  
ªgs
->
ªgs_R
[2] = 
	`gëpid
();

976 i‡(
ªgs
->
ªgs_R
[2] != -1)

977 
ªgs
->
ªgs_R
[7] = 0;

981 
ªgs
->
ªgs_R
[2] = 
î∫o
;

982 
ªgs
->
ªgs_R
[7] = 1;

986 
SS_SYS_gëuid
:

987 #ifde‡
_MSC_VER


988 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

989 
ªgs
->
ªgs_R
[7] = 0;

992  
ªgs
->
ªgs_R
[2] = 
	`gëuid
();

995  
ªgs
->
ªgs_R
[3] = 
	`gëeuid
();

998 i‡(
ªgs
->
ªgs_R
[2] != -1)

999 
ªgs
->
ªgs_R
[7] = 0;

1003 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1004 
ªgs
->
ªgs_R
[7] = 1;

1009 
SS_SYS_ac˚ss
:

1011 
buf
[
MAXBUFSIZE
];

1014 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1017  
ªgs
->
ªgs_R
[2] = 
	`ac˚ss
(
buf
,Ñegs->regs_R[5]);

1020 i‡(
ªgs
->
ªgs_R
[2] != -1)

1021 
ªgs
->
ªgs_R
[7] = 0;

1025 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1026 
ªgs
->
ªgs_R
[7] = 1;

1031 
SS_SYS_°©
:

1032 
SS_SYS_l°©
:

1034 
buf
[
MAXBUFSIZE
];

1035 
ss_°©buf
 
ss_sbuf
;

1036 #ifde‡
_MSC_VER


1037 
_°©
 
sbuf
;

1039 
°©
 
sbuf
;

1043 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1046 i‡(
syscode
 =
SS_SYS_°©
)

1047  
ªgs
->
ªgs_R
[2] = 
	`°©
(
buf
, &
sbuf
);

1050 #ifde‡
_MSC_VER


1051 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1052 
ªgs
->
ªgs_R
[7] = 0;

1055  
ªgs
->
ªgs_R
[2] = 
	`l°©
(
buf
, &
sbuf
);

1060 i‡(
ªgs
->
ªgs_R
[2] != -1)

1061 
ªgs
->
ªgs_R
[7] = 0;

1065 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1066 
ªgs
->
ªgs_R
[7] = 1;

1070 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1071 
ss_sbuf
.
ss_∑d
 = 0;

1072 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1073 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1074 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1075 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1076 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1077 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1078 
ss_sbuf
.
ss_∑d1
 = 0;

1079 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1080 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1081 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1082 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1083 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1084 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1085 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1086 #i‚de‡
_MSC_VER


1087 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1088 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1090 
ss_sbuf
.
ss_°_gínum
 = 0;

1091 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1094 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1095 &
ss_sbuf
, (
ss_°©buf
));

1099 
SS_SYS_dup
:

1101  
ªgs
->
ªgs_R
[2] = 
	`dup
(Ñegs->regs_R[4]);

1104 i‡(
ªgs
->
ªgs_R
[2] != -1)

1105 
ªgs
->
ªgs_R
[7] = 0;

1109 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1110 
ªgs
->
ªgs_R
[7] = 1;

1114 #i‚de‡
_MSC_VER


1115 
SS_SYS_pùe
:

1117 
fd
[2];

1120 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
fd
, (fd));

1123  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1126  
ªgs
->
ªgs_R
[2] = 
fd
[0];

1127  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1130 i‡(
ªgs
->
ªgs_R
[7] == -1)

1132 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1133 
ªgs
->
ªgs_R
[7] = 1;

1139 
SS_SYS_gëgid
:

1140 #ifde‡
_MSC_VER


1141 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1142 
ªgs
->
ªgs_R
[7] = 0;

1145  
ªgs
->
ªgs_R
[2] = 
	`gëgid
();

1148  
ªgs
->
ªgs_R
[3] = 
	`gëegid
();

1151 i‡(
ªgs
->
ªgs_R
[2] != -1)

1152 
ªgs
->
ªgs_R
[7] = 0;

1156 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1157 
ªgs
->
ªgs_R
[7] = 1;

1162 
SS_SYS_io˘l
:

1164 
buf
[
NUM_IOCTL_BYTES
];

1165 
loˇl_ªq
 = 0;

1168  
ªgs
->
ªgs_R
[5]) {

1169 #ifde‡
TIOCGETP


1170 
SS_IOCTL_TIOCGETP
:

1171 
loˇl_ªq
 = 
TIOCGETP
;

1174 #ifde‡
TIOCSETP


1175 
SS_IOCTL_TIOCSETP
:

1176 
loˇl_ªq
 = 
TIOCSETP
;

1179 #ifde‡
TIOCGETP


1180 
SS_IOCTL_TCGETP
:

1181 
loˇl_ªq
 = 
TIOCGETP
;

1184 #ifde‡
TCGETA


1185 
SS_IOCTL_TCGETA
:

1186 
loˇl_ªq
 = 
TCGETA
;

1189 #ifde‡
TIOCGLTC


1190 
SS_IOCTL_TIOCGLTC
:

1191 
loˇl_ªq
 = 
TIOCGLTC
;

1194 #ifde‡
TIOCSLTC


1195 
SS_IOCTL_TIOCSLTC
:

1196 
loˇl_ªq
 = 
TIOCSLTC
;

1199 #ifde‡
TIOCGWINSZ


1200 
SS_IOCTL_TIOCGWINSZ
:

1201 
loˇl_ªq
 = 
TIOCGWINSZ
;

1204 #ifde‡
TCSETAW


1205 
SS_IOCTL_TCSETAW
:

1206 
loˇl_ªq
 = 
TCSETAW
;

1209 #ifde‡
TIOCGETC


1210 
SS_IOCTL_TIOCGETC
:

1211 
loˇl_ªq
 = 
TIOCGETC
;

1214 #ifde‡
TIOCSETC


1215 
SS_IOCTL_TIOCSETC
:

1216 
loˇl_ªq
 = 
TIOCSETC
;

1219 #ifde‡
TIOCLBIC


1220 
SS_IOCTL_TIOCLBIC
:

1221 
loˇl_ªq
 = 
TIOCLBIC
;

1224 #ifde‡
TIOCLBIS


1225 
SS_IOCTL_TIOCLBIS
:

1226 
loˇl_ªq
 = 
TIOCLBIS
;

1229 #ifde‡
TIOCLGET


1230 
SS_IOCTL_TIOCLGET
:

1231 
loˇl_ªq
 = 
TIOCLGET
;

1234 #ifde‡
TIOCLSET


1235 
SS_IOCTL_TIOCLSET
:

1236 
loˇl_ªq
 = 
TIOCLSET
;

1241 #i‡!
	`deföed
(
TIOCGETP
Ë&& deföed(
löux
)

1242 i‡(!
loˇl_ªq
 && 
ªgs
->
ªgs_R
[5] =
SS_IOCTL_TIOCGETP
)

1244 
ãrmios
 
lbuf
;

1245 
ss_sgâyb
 
buf
;

1247  
ªgs
->
ªgs_R
[2] =

1248 
	`tcgë©å
–()
ªgs
->
ªgs_R
[4], &
lbuf
);

1251 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1252 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1253 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1254 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1255 
buf
.
sg_Êags
 = 0;

1257 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1258  
ªgs
->
ªgs_R
[6], &
buf
,

1259 (
ss_sgâyb
));

1261 i‡(
ªgs
->
ªgs_R
[2] != -1)

1262 
ªgs
->
ªgs_R
[7] = 0;

1265 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1266 
ªgs
->
ªgs_R
[7] = 1;

1272 i‡(!
loˇl_ªq
)

1276 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1277 
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1278 
ªgs
->
ªgs_R
[2] = 0;

1279 
ªgs
->
ªgs_R
[7] = 0;

1283 #ifde‡
_MSC_VER


1284 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1285 
ªgs
->
ªgs_R
[7] = 0;

1290 #ifde‡
TIOCGETP


1291 i‡(
loˇl_ªq
 =
TIOCGETP
 && 
sim_¥ogfd
)

1297 
ªgs
->
ªgs_R
[2] = 
ENOTTY
;

1298 
ªgs
->
ªgs_R
[7] = 1;

1306 i‡–
ªgs
->
ªgs_R
[6] != 0)

1307 
	`mem_bc›y
(
mem_‚
, 
mem
,

1308 
Ród
, 
ªgs
->
ªgs_R
[6], 
buf
, 
NUM_IOCTL_BYTES
);

1311  
ªgs
->
ªgs_R
[2] =

1312 
	`io˘l
–
ªgs
->
ªgs_R
[4], 
loˇl_ªq
, 
buf
);

1315 i‡–
ªgs
->
ªgs_R
[6] != 0)

1316 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1317 
buf
, 
NUM_IOCTL_BYTES
);

1320 i‡(
ªgs
->
ªgs_R
[2] != -1)

1321 
ªgs
->
ªgs_R
[7] = 0;

1325 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1326 
ªgs
->
ªgs_R
[7] = 1;

1333 
SS_SYS_f°©
:

1335 
ss_°©buf
 
ss_sbuf
;

1336 #ifde‡
_MSC_VER


1337 
_°©
 
sbuf
;

1339 
°©
 
sbuf
;

1343  
ªgs
->
ªgs_R
[2] = 
	`f°©
–ªgs->ªgs_R[4], &
sbuf
);

1346 i‡(
ªgs
->
ªgs_R
[2] != -1)

1347 
ªgs
->
ªgs_R
[7] = 0;

1351 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1352 
ªgs
->
ªgs_R
[7] = 1;

1356 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1357 
ss_sbuf
.
ss_∑d
 = 0;

1358 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1359 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1360 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1361 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1362 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1363 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1364 
ss_sbuf
.
ss_∑d1
 = 0;

1365 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1366 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1367 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1368 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1369 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1370 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1371 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1372 #i‚de‡
_MSC_VER


1373 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1374 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1376 
ss_sbuf
.
ss_°_gínum
 = 0;

1377 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1380 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1381 &
ss_sbuf
, (
ss_°©buf
));

1385 
SS_SYS_gë∑gesize
:

1387 
ªgs
->
ªgs_R
[2] = 
MD_PAGE_SIZE
;

1390 i‡(
ªgs
->
ªgs_R
[2] != -1)

1391 
ªgs
->
ªgs_R
[7] = 0;

1395 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1396 
ªgs
->
ªgs_R
[7] = 1;

1400 
SS_SYS_£tôimî
:

1402 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1403 
	`w¨n
("syscall: setitimer ignored");

1406 
SS_SYS_gëdèbÀsize
:

1407 #i‡
	`deföed
(
_AIX
)

1409 
ªgs
->
ªgs_R
[2] = 
	`gëdèbÀsize
();

1412 i‡(
ªgs
->
ªgs_R
[2] != -1)

1413 
ªgs
->
ªgs_R
[7] = 0;

1417 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1418 
ªgs
->
ªgs_R
[7] = 1;

1420 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
u…rix
Ë|| deföed(
_MSC_VER
)

1423 
	`w¨n
("syscall: called getdtablesize()\n");

1424 
ªgs
->
ªgs_R
[2] = 16;

1425 
ªgs
->
ªgs_R
[7] = 0;

1429 
æimô
 
æ
;

1432 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) != -1)

1434 
ªgs
->
ªgs_R
[2] = 
æ
.
æim_cur
;

1435 
ªgs
->
ªgs_R
[7] = 0;

1440 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1441 
ªgs
->
ªgs_R
[7] = 1;

1447 
SS_SYS_dup2
:

1449 
ªgs
->
ªgs_R
[2] =

1450 
	`dup2
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1453 i‡(
ªgs
->
ªgs_R
[2] != -1)

1454 
ªgs
->
ªgs_R
[7] = 0;

1458 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1459 
ªgs
->
ªgs_R
[7] = 1;

1463 
SS_SYS_f˙é
:

1464 #ifde‡
_MSC_VER


1465 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

1466 
ªgs
->
ªgs_R
[7] = 0;

1469 
ªgs
->
ªgs_R
[2] =

1470 
	`f˙é
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5],

1471  
ªgs
->
ªgs_R
[6]);

1474 i‡(
ªgs
->
ªgs_R
[2] != -1)

1475 
ªgs
->
ªgs_R
[7] = 0;

1479 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1480 
ªgs
->
ªgs_R
[7] = 1;

1485 
SS_SYS_£À˘
:

1486 #ifde‡
_MSC_VER


1487 
	`w¨n
("syscall select()Çot yet implemented for MSC...");

1488 
ªgs
->
ªgs_R
[7] = 0;

1491 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

1492 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

1493 
timevÆ
 
timeout
, *
timeouç
;

1494 
w‹d_t
 
∑øm5
;

1499 
	`mem_bc›y
(
mem_‚
, 
mem
,

1500 
Ród
, 
ªgs
->
ªgs_R
[29]+16, &
∑øm5
, (
w‹d_t
));

1503 i‡–
ªgs
->
ªgs_R
[5] != 0)

1505 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1506 &
ªadfd
, (
fd_£t
));

1507 
ªadfdp
 = &
ªadfd
;

1510 
ªadfdp
 = 
NULL
;

1513 i‡–
ªgs
->
ªgs_R
[6] != 0)

1515 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[6],

1516 &
wrôefd
, (
fd_£t
));

1517 
wrôefdp
 = &
wrôefd
;

1520 
wrôefdp
 = 
NULL
;

1523 i‡–
ªgs
->
ªgs_R
[7] != 0)

1525 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[7],

1526 &
ex˚±fd
, (
fd_£t
));

1527 
ex˚±fdp
 = &
ex˚±fd
;

1530 
ex˚±fdp
 = 
NULL
;

1533 i‡–
∑øm5
 != 0)

1535 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
∑øm5
,

1536 &
timeout
, (
timevÆ
));

1537 
timeouç
 = &
timeout
;

1540 
timeouç
 = 
NULL
;

1542 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

1544  
ªgs
->
ªgs_R
[2] =

1545 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1546 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

1549  
ªgs
->
ªgs_R
[2] =

1550 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1551 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

1555 i‡(
ªgs
->
ªgs_R
[2] != -1)

1556 
ªgs
->
ªgs_R
[7] = 0;

1560 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1561 
ªgs
->
ªgs_R
[7] = 1;

1565 i‡–
ªgs
->
ªgs_R
[5] != 0)

1566 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1567 &
ªadfd
, (
fd_£t
));

1570 i‡–
ªgs
->
ªgs_R
[6] != 0)

1571 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1572 &
wrôefd
, (
fd_£t
));

1575 i‡–
ªgs
->
ªgs_R
[7] != 0)

1576 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[7],

1577 &
ex˚±fd
, (
fd_£t
));

1580 i‡–
∑øm5
 != 0)

1581 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
∑øm5
,

1582 &
timeout
, (
timevÆ
));

1587 
SS_SYS_sigvec
:

1589 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1590 
	`w¨n
("syscall: sigvec ignored");

1593 
SS_SYS_sigblock
:

1595 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1596 
	`w¨n
("syscall: sigblock ignored");

1599 
SS_SYS_sig£tmask
:

1601 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1602 
	`w¨n
("syscall: sigsetmask ignored");

1606 
SS_SYS_sig°ack
:

1611 i‡(
ªgs
->
ªgs_R
[5] != 0)

1613 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[29]+28, (*)&
ãmp
, 4);

1614 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5], (*)&
ãmp
, 4);

1616 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1620 
SS_SYS_gëtimeofday
:

1621 #ifde‡
_MSC_VER


1622 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

1623 
ªgs
->
ªgs_R
[7] = 0;

1626 
ss_timevÆ
 
ss_tv
;

1627 
timevÆ
 
tv
, *
tvp
;

1628 
ss_timez⁄e
 
ss_tz
;

1629 
timez⁄e
 
tz
, *
tzp
;

1631 i‡–
ªgs
->
ªgs_R
[4] != 0)

1634 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4],

1635 &
ss_tv
, (
ss_timevÆ
));

1638 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_£c
);

1639 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_u£c
);

1640 
tvp
 = &
tv
;

1643 
tvp
 = 
NULL
;

1645 i‡–
ªgs
->
ªgs_R
[5] != 0)

1648 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1649 &
ss_tz
, (
ss_timez⁄e
));

1652 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_möuãswe°
);

1653 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_d°time
);

1654 
tzp
 = &
tz
;

1657 
tzp
 = 
NULL
;

1660  
ªgs
->
ªgs_R
[2] = 
	`gëtimeofday
(
tvp
, 
tzp
);

1663 i‡(
ªgs
->
ªgs_R
[2] != -1)

1664 
ªgs
->
ªgs_R
[7] = 0;

1668 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1669 
ªgs
->
ªgs_R
[7] = 1;

1672 i‡–
ªgs
->
ªgs_R
[4] != 0)

1675 
ss_tv
.
ss_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

1676 
ss_tv
.
ss_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

1679 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[4],

1680 &
ss_tv
, (
ss_timevÆ
));

1683 i‡–
ªgs
->
ªgs_R
[5] != 0)

1686 
ss_tz
.
ss_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

1687 
ss_tz
.
ss_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

1690 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1691 &
ss_tz
, (
ss_timez⁄e
));

1697 
SS_SYS_gërußge
:

1698 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

1700 
tms
 
tms_buf
;

1701 
ss_rußge
 
rußge
;

1704 i‡(
	`times
(&
tms_buf
) != -1)

1707 
ªgs
->
ªgs_R
[2] = 0;

1708 
ªgs
->
ªgs_R
[7] = 0;

1713 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1714 
ªgs
->
ªgs_R
[7] = 1;

1718 #i‡
	`deföed
(
__svr4__
)

1719 
	`mem£t
(&
rußge
, '\0', (
ss_rußge
));

1721 
	`bzîo
(&
rußge
, (
ss_rußge
));

1725 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
tms_buf
.
tms_utime
/
CLK_TCK
;

1726 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_utime.ss_tv_sec);

1727 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 0;

1728 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
tms_buf
.
tms_°ime
/
CLK_TCK
;

1729 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_stime.ss_tv_sec);

1730 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 0;

1733 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1734 &
rußge
, (
ss_rußge
));

1736 #ñi‡
	`deföed
(
__unix__
Ë|| deföed(
unix
)

1738 
rußge
 
loˇl_rußge
;

1739 
ss_rußge
 
rußge
;

1742  
ªgs
->
ªgs_R
[2] =

1743 
	`gërußge
–
ªgs
->
ªgs_R
[4], &
loˇl_rußge
);

1746 i‡(
ªgs
->
ªgs_R
[2] != -1)

1747 
ªgs
->
ªgs_R
[7] = 0;

1751 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1752 
ªgs
->
ªgs_R
[7] = 1;

1756 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_utime
.
tv_£c
;

1757 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_utime
.
tv_u£c
;

1758 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

1759 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 =

1760 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

1761 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_£c
;

1762 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_u£c
;

1763 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 =

1764 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

1765 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 =

1766 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

1767 
rußge
.
ss_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

1768 
rußge
.
ss_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

1769 
rußge
.
ss_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

1770 
rußge
.
ss_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

1771 
rußge
.
ss_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

1772 
rußge
.
ss_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

1773 
rußge
.
ss_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

1774 
rußge
.
ss_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

1775 
rußge
.
ss_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

1776 
rußge
.
ss_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

1777 
rußge
.
ss_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

1778 
rußge
.
ss_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

1779 
rußge
.
ss_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

1780 
rußge
.
ss_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

1783 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1784 &
rußge
, (
ss_rußge
));

1786 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

1787 
	`w¨n
("syscall: called getrusage()\n");

1788 
ªgs
->
ªgs_R
[7] = 0;

1790 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

1794 
SS_SYS_wrôev
:

1795 #ifde‡
_MSC_VER


1796 
	`w¨n
("syscall writev()Çot yet implemented for MSC...");

1797 
ªgs
->
ªgs_R
[7] = 0;

1800 
i
;

1801 *
buf
;

1802 
iovec
 *
iov
;

1805 
iov
 =

1806 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[6]

1807 * (
iovec
));

1808 i‡(!
iov
)

1809 
	`Áèl
("out of virtual memory in SYS_writev");

1812 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1813 
iov
, 
ªgs
->
ªgs_R
[6] * (
iovec
));

1816 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1818 
iov
[
i
].
iov_ba£
 = (*)
	`MD_SWAPW
(()iov[i].iov_base);

1819 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(iov[i].iov_len);

1820 i‡(
iov
[
i
].
iov_ba£
 !
NULL
)

1822 
buf
 = (*)
	`ˇŒoc
(
iov
[
i
].
iov_Àn
, ());

1823 i‡(!
buf
)

1824 
	`Áèl
("out of virtual memory in SYS_writev");

1825 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, (
md_addr_t
)
iov
[
i
].
iov_ba£
,

1826 
buf
, 
iov
[
i
].
iov_Àn
);

1827 
iov
[
i
].
iov_ba£
 = 
buf
;

1832  
ªgs
->
ªgs_R
[2] =

1833 
	`wrôev
–
ªgs
->
ªgs_R
[4], 
iov
,Ñegs->regs_R[6]);

1836 i‡(
ªgs
->
ªgs_R
[2] != -1)

1837 
ªgs
->
ªgs_R
[7] = 0;

1841 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1842 
ªgs
->
ªgs_R
[7] = 1;

1846 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1848 i‡(
iov
[
i
].
iov_ba£
)

1850 
	`‰ì
(
iov
[
i
].
iov_ba£
);

1851 
iov
[
i
].
iov_ba£
 = 
NULL
;

1854 
	`‰ì
(
iov
);

1859 
SS_SYS_utimes
:

1861 
buf
[
MAXBUFSIZE
];

1864 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1866 i‡–
ªgs
->
ªgs_R
[5] == 0)

1868 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__i386__
)

1870  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1871 #ñi‡
	`deföed
(
_MSC_VER
)

1873  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1874 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1875  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
NULL
);

1876 #ñi‡
	`deföed
(
__CYGWIN32__
)

1877 
	`w¨n
("syscall: called utimes()\n");

1879 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1884 
ss_timevÆ
 
ss_tvÆ
[2];

1885 #i‚de‡
_MSC_VER


1886 
timevÆ
 
tvÆ
[2];

1890 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1891 
ss_tvÆ
, 2*(
ss_timevÆ
));

1893 #i‚de‡
_MSC_VER


1895 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_£c
);

1896 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_u£c
);

1897 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_£c
);

1898 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_u£c
);

1901 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

1904 
utimbuf
 
ubuf
;

1906 
ubuf
.
a˘ime
 = 
tvÆ
[0].
tv_£c
;

1907 
ubuf
.
modtime
 = 
tvÆ
[1].
tv_£c
;

1909  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1911 #ñi‡
	`deföed
(
_MSC_VER
)

1914 
_utimbuf
 
ubuf
;

1916 
ubuf
.
a˘ime
 = 
ss_tvÆ
[0].
ss_tv_£c
;

1917 
ubuf
.
modtime
 = 
ss_tvÆ
[1].
ss_tv_£c
;

1919  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1921 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1922  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
tvÆ
);

1923 #ñi‡
	`deföed
(
__CYGWIN32__
)

1924 
	`w¨n
("syscall: called utimes()\n");

1926 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1931 i‡(
ªgs
->
ªgs_R
[2] != -1)

1932 
ªgs
->
ªgs_R
[7] = 0;

1936 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1937 
ªgs
->
ªgs_R
[7] = 1;

1942 
SS_SYS_gëæimô
:

1943 
SS_SYS_£ålimô
:

1944 #ifde‡
_MSC_VER


1945 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

1946 
ªgs
->
ªgs_R
[7] = 0;

1947 #ñi‡
	`deföed
(
__CYGWIN32__
)

1948 
	`w¨n
("syscall: called get/setrlimit()\n");

1949 
ªgs
->
ªgs_R
[7] = 0;

1953 
ss_æimô
 
ss_æ
;

1954 
æimô
 
æ
;

1957 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1958 &
ss_æ
, (
ss_æimô
));

1961 
æ
.
æim_cur
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_cur
);

1962 
æ
.
æim_max
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_max
);

1965 i‡(
syscode
 =
SS_SYS_gëæimô
)

1966  
ªgs
->
ªgs_R
[2] = 
	`gëæimô
‘egs->ªgs_R[4], &
æ
);

1968  
ªgs
->
ªgs_R
[2] = 
	`£ålimô
‘egs->ªgs_R[4], &
æ
);

1971 i‡(
ªgs
->
ªgs_R
[2] != -1)

1972 
ªgs
->
ªgs_R
[7] = 0;

1976 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1977 
ªgs
->
ªgs_R
[7] = 1;

1981 
ss_æ
.
ss_æim_cur
 = 
	`MD_SWAPW
(
æ
.
æim_cur
);

1982 
ss_æ
.
ss_æim_max
 = 
	`MD_SWAPW
(
æ
.
æim_max
);

1985 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1986 &
ss_æ
, (
ss_æimô
));

1992 
SS_SYS_gëdúíåõs
:

1996 
i
;

1997 *
buf
;

1998 
ba£
;

2000 
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6] + 1, ());

2001 i‡(!
buf
)

2002 
	`Áèl
("out of memory in SYS_getdirentries");

2005 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2006 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[5]+
i
,

2007 (*)&
buf
[
i
], 1);

2008 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2010  
ªgs
->
ªgs_R
[2] =

2011 
	`gëdúíåõs
–
ªgs
->
ªgs_R
[4], 
buf
,

2012  
ªgs
->
ªgs_R
[6], &
ba£
);

2014 i‡(
ªgs
->
ªgs_R
[2] != -1)

2015 
ªgs
->
ªgs_R
[7] = 0;

2018 
ªgs
->
ªgs_R
[2] = 
î∫o
;

2019 
ªgs
->
ªgs_R
[7] = 1;

2023 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2024 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5]+
i
,

2025 (*)&
buf
[
i
], 1);

2026 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2028 
	`‰ì
(
buf
);

2034 
	`∑nic
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

2039 
	}
}

	@tests-alpha/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-alpha/src/test-dirent.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<dúít.h
>

7 
	$maö
(
¨gc
, **
¨gv
)

9 *
buf
;

10 
dúít
 *
p
;

11 
i
, 
˙t
, 
dú
, 
nbyãs
;

12 
off_t
 
ba£
 = 0;

14 i‡(
¨gc
 != 2)

16 
	`Ârötf
(
°dîr
, "Usage:Åest-dirent <path>\n");

17 
	`exô
(1);

20 
buf
 = 
	`ˇŒoc
(1, 8192);

21 i‡(!
buf
)

23 
	`Ârötf
(
°dîr
, "error: out of virtual memory\n");

24 
	`exô
(1);

27 
	`Ârötf
(
°dout
, "ã°-dúít: o≥nög `%s'...\n", 
¨gv
[1]);

28 
dú
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
);

29 i‡(
dú
 == -1)

31 
	`Ârötf
(
°dîr
, "îr‹: c™nŸ o≥¿dúe˘‹y `%s'\n", 
¨gv
[1]);

32 
	`exô
(1);

35 
nbyãs
 = 
	`gëdúíåõs
(
dú
, 
buf
, 8192, &
ba£
);

36 
	`Ârötf
(
°dout
, "%d = getdirentries(%d, %p, %d, %d)\n",

37 
nbyãs
, 
dú
, 
buf
, 8192, 
ba£
);

40 
i
=0, 
˙t
=0, 
p
=(
dúít
 *)
buf
;

41 
˙t
 < 
nbyãs
 && 
p
->
d_ª˛í
 > 0;

42 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

44 
	`Ârötf
(
°dout
, "rec #%2d: d_ino: %7d, d_reclen: %2d, d_name: %s\n",

45 
i
, 
p
->
d_öo
,Ö->
d_ª˛í
,Ö->
d_«me
);

48 i‡(
˙t
 !
nbyãs
)

49 
	`Ârötf
(
°dîr
, "warn: cnt !=Çbytes, cnt == %d,Çbytes == %d",

50 
˙t
, 
nbyãs
);

51 
	}
}

	@tests-alpha/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-alpha/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-alpha/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-alpha/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-alpha/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@tests-pisa/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-pisa/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-pisa/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-pisa/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-pisa/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-pisa/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@version.h

52 #i‡
deföed
(
TARGET_PISA
)

53 
	#VER_TARGET
 "PISA"

	)

54 #ñi‡
deföed
(
TARGET_ALPHA
)

55 
	#VER_TARGET
 "AÕha"

	)

57 #îr‹ 
C™nŸ
 
decode
 
Sim∂eSˇœr
 
èrgë
...

60 
	#VER_MAJOR
 4

	)

61 
	#VER_MINOR
 0

	)

63 
	#VER_UPDATE
 "De˚mbî, 2001"

	)

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name \

90 : 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


404 
	~<bôs/dúít_ext.h
>

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_FILE_OFFSET64


148 
f˙é
 (
__fd
, 
__cmd
, ...);

150 #ifde‡
__REDIRECT


151 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

153 
	#f˙é
 
f˙é64


	)

156 #ifde‡
__USE_LARGEFILE64


157 
f˙é64
 (
__fd
, 
__cmd
, ...);

167 #i‚de‡
__USE_FILE_OFFSET64


168 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__REDIRECT


171 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

172 
	`__n⁄nuŒ
 ((1));

174 
	#›í
 
›í64


	)

177 #ifde‡
__USE_LARGEFILE64


178 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__USE_ATFILE


191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

195 #ifde‡
__REDIRECT


196 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

197 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

199 
	#›í©
 
›í©64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

204 
	`__n⁄nuŒ
 ((2));

213 #i‚de‡
__USE_FILE_OFFSET64


214 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #ifde‡
__REDIRECT


217 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

218 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

220 
	#¸ót
 
¸ót64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

227 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

228 && !
deföed
 
__USE_POSIX
))

237 
	#F_ULOCK
 0

	)

238 
	#F_LOCK
 1

	)

239 
	#F_TLOCK
 2

	)

240 
	#F_TEST
 3

	)

242 #i‚de‡
__USE_FILE_OFFSET64


243 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

245 #ifde‡
__REDIRECT


246 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

248 
	#lockf
 
lockf64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

256 #ifde‡
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


260 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

261 
__advi£
Ë
__THROW
;

263 #ifde‡
__REDIRECT_NTH


264 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

265 
__off64_t
 
__Àn
, 
__advi£
),

266 
posix_Ádvi£64
);

268 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

273 
__advi£
Ë
__THROW
;

281 #i‚de‡
__USE_FILE_OFFSET64


282 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

284 #ifde‡
__REDIRECT


285 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

286 
__off64_t
 
__Àn
),

287 
posix_ÁŒoˇã64
);

289 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

292 #ifde‡
__USE_LARGEFILE64


293 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

299 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

300 && 
deföed
 
__va_¨g_∑ck_Àn


301 
	~<bôs/f˙é2.h
>

304 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

878 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

879 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

886 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

887 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

889 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

893 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

894 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

895 #ñi‡
deföed
 
__˝lu•lus


903 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

904 #ñi‡
	`__GNUC_PREREQ
 (4,0)

905 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

907 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

911 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

912 || 
	$__glibc_˛™g_¥îeq
 (2,8)

913 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

915 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

919 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

920 || 
	$__glibc_˛™g_¥îeq
 (2,8)

921 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

923 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

928 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

929 || 
	$__glibc_˛™g_¥îeq
 (2,8)

930 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

932 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

936 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

937 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


943 
	#isöf
(
x
) \

944 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

945 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

946 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

947 || 
	$__glibc_˛™g_¥îeq
 (3,7)

948 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

950 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

954 
	#MATH_ERRNO
 1

	)

955 
	#MATH_ERREXCEPT
 2

	)

962 #ifde‡
__FAST_MATH__


963 
	#m©h_îrh™dlög
 0

	)

964 #ñi‡
deföed
 
__NO_MATH_ERRNO__


965 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

967 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

972 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

973 
	~<bôs/isˇn⁄iˇl.h
>

976 #i‚de‡
__˝lu•lus


977 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

986 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

987 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

988 
ölöe
 

989 
	`issig«lög
 (
__vÆ
)

991 #ifde‡
__NO_LONG_DOUBLE_MATH


992  
	`__issig«lög
 (
__vÆ
);

994  
	`__issig«lögl
 (
__vÆ
);

997 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1000 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1002 
	}
}

1006 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1009 #i‚de‡
__˝lu•lus


1010 #ifde‡
__SUPPORT_SNAN__


1011 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1013 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1017 #ifde‡
__SUPPORT_SNAN__


1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1028 
ölöe
 

1029 
iszîo
 (
__vÆ
)

1031 #ifde‡
__NO_LONG_DOUBLE_MATH


1032  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1034  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1037 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1040 
ölöe
 

1041 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1043  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1047 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1048 
iszîo
 (
__T
 
__vÆ
)

1050  
__vÆ
 == 0;

1057 #ifde‡
__USE_XOPEN


1059 
	#MAXFLOAT
 3.40282347e+38F

	)

1064 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1065 
	#M_E
 2.7182818284590452354

	)

1066 
	#M_LOG2E
 1.4426950408889634074

	)

1067 
	#M_LOG10E
 0.43429448190325182765

	)

1068 
	#M_LN2
 0.69314718055994530942

	)

1069 
	#M_LN10
 2.30258509299404568402

	)

1070 
	#M_PI
 3.14159265358979323846

	)

1071 
	#M_PI_2
 1.57079632679489661923

	)

1072 
	#M_PI_4
 0.78539816339744830962

	)

1073 
	#M_1_PI
 0.31830988618379067154

	)

1074 
	#M_2_PI
 0.63661977236758134308

	)

1075 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1076 
	#M_SQRT2
 1.41421356237309504880

	)

1077 
	#M_SQRT1_2
 0.70710678118654752440

	)

1083 #ifde‡
__USE_GNU


1084 
	#M_El
 2.718281828459045235360287471352662498L

	)

1085 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1086 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1087 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1088 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1089 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1090 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1091 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1092 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1093 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1094 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1095 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1096 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1099 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1100 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1101 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1102 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1103 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1104 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1105 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1106 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1107 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1108 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1109 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1110 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1111 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1112 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1115 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1116 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1117 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1118 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1119 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1120 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1121 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1122 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1123 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1124 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1125 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1126 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1127 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1128 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1131 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1132 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1133 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1134 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1135 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1136 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1137 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1138 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1139 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1140 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1141 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1142 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1143 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1144 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1147 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1148 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1149 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1150 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1151 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1152 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1153 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1154 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1155 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1156 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1157 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1158 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1159 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1160 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1163 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1164 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1165 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1166 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1167 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1168 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1169 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1170 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1171 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1172 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1173 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1174 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1175 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1176 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1179 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1180 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1181 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1182 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1183 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1184 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1185 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1186 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1187 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1188 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1189 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1190 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1191 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1192 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1195 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1202 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1203 
	#__NO_MATH_INLINES
 1

	)

1206 #ifde‡
__USE_ISOC99


1207 #i‡
__GNUC_PREREQ
 (3, 1)

1214 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1215 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1216 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1217 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1218 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1219 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1221 
	#isgª©î
(
x
, 
y
) \

1222 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1223 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1224 
	#isgª©îequÆ
(
x
, 
y
) \

1225 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1226 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1227 
	#i¶ess
(
x
, 
y
) \

1228 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1229 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1230 
	#i¶es£quÆ
(
x
, 
y
) \

1231 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1232 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1233 
	#i¶essgª©î
(
x
, 
y
) \

1234 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1235 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1237 
	#isun‹dîed
(
x
, 
y
) \

1238 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1239 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1244 #ifde‡
__USE_EXTERN_INLINES


1245 
	~<bôs/m©hölöe.h
>

1249 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1252 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1253 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1254 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1255 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1256 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1257 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1259 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1264 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1265 
	#i£qsig
(
x
, 
y
) \

1266 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1279 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1281 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1283 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1285  
__i£qsigf
 (
__x
, 
__y
);

1289 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1291 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1293  
__i£qsig
 (
__x
, 
__y
);

1297 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1299 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1301 #i‚de‡
__NO_LONG_DOUBLE_MATH


1302  
__i£qsigl
 (
__x
, 
__y
);

1304  
__i£qsig
 (
__x
, 
__y
);

1309 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1312 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1314 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1316  
__i£qsigf128
 (
__x
, 
__y
);

1321 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1322 
ölöe
 

1323 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1325 #i‡
__˝lu•lus
 >= 201103L

1326 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1328 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1330  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1338 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‡!
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_ALLSNOOPERS_GROUP
 ((
ö_addr_t
Ë0xe000006aË

	)

208 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

210 #i‡!
__USE_KERNEL_IPV6_DEFS


212 
	sö6_addr


216 
uöt8_t
 
	m__u6_addr8
[16];

217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

219 } 
	m__ö6_u
;

220 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

221 #ifde‡
__USE_MISC


222 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

223 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

228 c⁄° 
ö6_addr
 
ö6addr_™y
;

229 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

230 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

231 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

233 
	#INET_ADDRSTRLEN
 16

	)

234 
	#INET6_ADDRSTRLEN
 46

	)

238 
	ssockaddr_ö


240 
__SOCKADDR_COMMON
 (
sö_
);

241 
ö_p‹t_t
 
	msö_p‹t
;

242 
ö_addr
 
	msö_addr
;

245 
	msö_zîo
[ (
sockaddr
)

246 - 
__SOCKADDR_COMMON_SIZE


247 -  (
ö_p‹t_t
)

248 -  (
ö_addr
)];

251 #i‡!
__USE_KERNEL_IPV6_DEFS


253 
	ssockaddr_ö6


255 
__SOCKADDR_COMMON
 (
sö6_
);

256 
ö_p‹t_t
 
	msö6_p‹t
;

257 
uöt32_t
 
	msö6_Êowöfo
;

258 
ö6_addr
 
	msö6_addr
;

259 
uöt32_t
 
	msö6_sc›e_id
;

263 #ifde‡
__USE_MISC


265 
	sù_mªq


268 
ö_addr
 
	mimr_mu…üddr
;

271 
ö_addr
 
	mimr_öãrÁ˚
;

274 
	sù_mªq_sour˚


277 
ö_addr
 
	mimr_mu…üddr
;

280 
ö_addr
 
	mimr_öãrÁ˚
;

283 
ö_addr
 
	mimr_sour˚addr
;

287 #i‡!
__USE_KERNEL_IPV6_DEFS


289 
	sùv6_mªq


292 
ö6_addr
 
	mùv6mr_mu…üddr
;

295 
	mùv6mr_öãrÁ˚
;

299 #ifde‡
__USE_MISC


301 
	sgroup_ªq


304 
uöt32_t
 
	mgr_öãrÁ˚
;

307 
sockaddr_°‹age
 
	mgr_group
;

310 
	sgroup_sour˚_ªq


313 
uöt32_t
 
	mg§_öãrÁ˚
;

316 
sockaddr_°‹age
 
	mg§_group
;

319 
sockaddr_°‹age
 
	mg§_sour˚
;

324 
	sù_msfûãr


327 
ö_addr
 
	mimsf_mu…üddr
;

330 
ö_addr
 
	mimsf_öãrÁ˚
;

333 
uöt32_t
 
	mimsf_fmode
;

336 
uöt32_t
 
	mimsf_num§c
;

338 
ö_addr
 
	mimsf_¶i°
[1];

341 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

342 -  (
ö_addr
) \

343 + (
num§c
Ë*  (
ö_addr
))

	)

345 
	sgroup_fûãr


348 
uöt32_t
 
	mgf_öãrÁ˚
;

351 
sockaddr_°‹age
 
	mgf_group
;

354 
uöt32_t
 
	mgf_fmode
;

357 
uöt32_t
 
	mgf_num§c
;

359 
sockaddr_°‹age
 
	mgf_¶i°
[1];

362 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

363 -  (
sockaddr_°‹age
) \

364 + ((
num§c
) \

365 *  (
sockaddr_°‹age
)))

	)

375 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

376 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

377 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

378 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

379 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

380 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

381 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

383 
	~<ídün.h
>

386 
	~<bôs/byãsw≠.h
>

387 
	~<bôs/uöä-idítôy.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

397 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

398 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

399 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

415 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

416 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

417 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

425 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

441 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

442 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

449 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

457 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

458 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

459 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‡!
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

64 
	#TCP_NOTSENT_LOWAT
 25

	)

66 
	#TCP_CC_INFO
 26

	)

68 
	#TCP_SAVE_SYN
 27

	)

70 
	#TCP_SAVED_SYN
 28

	)

72 
	#TCP_REPAIR_WINDOW
 29

	)

73 
	#TCP_FASTOPEN_CONNECT
 30

	)

74 
	#TCP_ULP
 31

	)

75 
	#TCP_MD5SIG_EXT
 32

	)

76 
	#TCP_FASTOPEN_KEY
 33

	)

77 
	#TCP_FASTOPEN_NO_COOKIE
 34

	)

78 
	#TCP_ZEROCOPY_RECEIVE
 35

	)

79 
	#TCP_INQ
 36

	)

81 
	#TCP_CM_INQ
 
TCP_INQ


	)

82 
	#TCP_TX_DELAY
 37

	)

84 
	#TCP_REPAIR_ON
 1

	)

85 
	#TCP_REPAIR_OFF
 0

	)

86 
	#TCP_REPAIR_OFF_NO_WP
 -1

	)

88 #ifde‡
__USE_MISC


89 
	~<sys/ty≥s.h
>

90 
	~<sys/sockë.h
>

91 
	~<°döt.h
>

93 
uöt32_t
 
	tt˝_£q
;

98 
	st˝hdr


100 
__exãnsi⁄__
 union

104 
uöt16_t
 
	mth_•‹t
;

105 
uöt16_t
 
	mth_dp‹t
;

106 
t˝_£q
 
	mth_£q
;

107 
t˝_£q
 
	mth_ack
;

108 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


109 
uöt8_t
 
	mth_x2
:4;

110 
uöt8_t
 
	mth_off
:4;

112 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


113 
uöt8_t
 
	mth_off
:4;

114 
uöt8_t
 
	mth_x2
:4;

116 
uöt8_t
 
	mth_Êags
;

117 
	#TH_FIN
 0x01

	)

118 
	#TH_SYN
 0x02

	)

119 
	#TH_RST
 0x04

	)

120 
	#TH_PUSH
 0x08

	)

121 
	#TH_ACK
 0x10

	)

122 
	#TH_URG
 0x20

	)

123 
uöt16_t
 
	mth_wö
;

124 
uöt16_t
 
	mth_sum
;

125 
uöt16_t
 
	mth_uΩ
;

129 
uöt16_t
 
	msour˚
;

130 
uöt16_t
 
	mde°
;

131 
uöt32_t
 
	m£q
;

132 
uöt32_t
 
	mack_£q
;

133 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


134 
uöt16_t
 
	mªs1
:4;

135 
uöt16_t
 
	mdoff
:4;

136 
uöt16_t
 
	mfö
:1;

137 
uöt16_t
 
	msyn
:1;

138 
uöt16_t
 
	mr°
:1;

139 
uöt16_t
 
	mpsh
:1;

140 
uöt16_t
 
	mack
:1;

141 
uöt16_t
 
	murg
:1;

142 
uöt16_t
 
	mªs2
:2;

143 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


144 
uöt16_t
 
	mdoff
:4;

145 
uöt16_t
 
	mªs1
:4;

146 
uöt16_t
 
	mªs2
:2;

147 
uöt16_t
 
	murg
:1;

148 
uöt16_t
 
	mack
:1;

149 
uöt16_t
 
	mpsh
:1;

150 
uöt16_t
 
	mr°
:1;

151 
uöt16_t
 
	msyn
:1;

152 
uöt16_t
 
	mfö
:1;

156 
uöt16_t
 
	mwödow
;

157 
uöt16_t
 
	mcheck
;

158 
uöt16_t
 
	murg_±r
;

165 
	mTCP_ESTABLISHED
 = 1,

166 
	mTCP_SYN_SENT
,

167 
	mTCP_SYN_RECV
,

168 
	mTCP_FIN_WAIT1
,

169 
	mTCP_FIN_WAIT2
,

170 
	mTCP_TIME_WAIT
,

171 
	mTCP_CLOSE
,

172 
	mTCP_CLOSE_WAIT
,

173 
	mTCP_LAST_ACK
,

174 
	mTCP_LISTEN
,

175 
	mTCP_CLOSING


178 
	#TCPOPT_EOL
 0

	)

179 
	#TCPOPT_NOP
 1

	)

180 
	#TCPOPT_MAXSEG
 2

	)

181 
	#TCPOLEN_MAXSEG
 4

	)

182 
	#TCPOPT_WINDOW
 3

	)

183 
	#TCPOLEN_WINDOW
 3

	)

184 
	#TCPOPT_SACK_PERMITTED
 4

	)

185 
	#TCPOLEN_SACK_PERMITTED
 2

	)

186 
	#TCPOPT_SACK
 5

	)

187 
	#TCPOPT_TIMESTAMP
 8

	)

188 
	#TCPOLEN_TIMESTAMP
 10

	)

189 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

191 
	#TCPOPT_TSTAMP_HDR
 \

192 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

200 
	#TCP_MSS
 512

	)

202 
	#TCP_MAXWIN
 65535

	)

204 
	#TCP_MAX_WINSHIFT
 14

	)

206 
	#SOL_TCP
 6

	)

209 
	#TCPI_OPT_TIMESTAMPS
 1

	)

210 
	#TCPI_OPT_SACK
 2

	)

211 
	#TCPI_OPT_WSCALE
 4

	)

212 
	#TCPI_OPT_ECN
 8

	)

213 
	#TCPI_OPT_ECN_SEEN
 16

	)

214 
	#TCPI_OPT_SYN_DATA
 32

	)

217 
	et˝_ˇ_°©e


219 
	mTCP_CA_O≥n
 = 0,

220 
	mTCP_CA_Dis‹dî
 = 1,

221 
	mTCP_CA_CWR
 = 2,

222 
	mTCP_CA_Recovîy
 = 3,

223 
	mTCP_CA_Loss
 = 4

226 
	st˝_öfo


228 
uöt8_t
 
	mt˝i_°©e
;

229 
uöt8_t
 
	mt˝i_ˇ_°©e
;

230 
uöt8_t
 
	mt˝i_ªå™smôs
;

231 
uöt8_t
 
	mt˝i_¥obes
;

232 
uöt8_t
 
	mt˝i_backoff
;

233 
uöt8_t
 
	mt˝i_›ti⁄s
;

234 
uöt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

236 
uöt32_t
 
	mt˝i_πo
;

237 
uöt32_t
 
	mt˝i_©o
;

238 
uöt32_t
 
	mt˝i_¢d_mss
;

239 
uöt32_t
 
	mt˝i_rcv_mss
;

241 
uöt32_t
 
	mt˝i_u«cked
;

242 
uöt32_t
 
	mt˝i_ßcked
;

243 
uöt32_t
 
	mt˝i_lo°
;

244 
uöt32_t
 
	mt˝i_ªå™s
;

245 
uöt32_t
 
	mt˝i_Áckës
;

248 
uöt32_t
 
	mt˝i_œ°_d©a_£¡
;

249 
uöt32_t
 
	mt˝i_œ°_ack_£¡
;

250 
uöt32_t
 
	mt˝i_œ°_d©a_ªcv
;

251 
uöt32_t
 
	mt˝i_œ°_ack_ªcv
;

254 
uöt32_t
 
	mt˝i_pmtu
;

255 
uöt32_t
 
	mt˝i_rcv_s°hªsh
;

256 
uöt32_t
 
	mt˝i_πt
;

257 
uöt32_t
 
	mt˝i_πtv¨
;

258 
uöt32_t
 
	mt˝i_¢d_s°hªsh
;

259 
uöt32_t
 
	mt˝i_¢d_cwnd
;

260 
uöt32_t
 
	mt˝i_advmss
;

261 
uöt32_t
 
	mt˝i_ª‹dîög
;

263 
uöt32_t
 
	mt˝i_rcv_πt
;

264 
uöt32_t
 
	mt˝i_rcv_•a˚
;

266 
uöt32_t
 
	mt˝i_tŸÆ_ªå™s
;

271 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

274 
	#TCP_MD5SIG_FLAG_PREFIX
 1

	)

276 
	st˝_md5sig


278 
sockaddr_°‹age
 
	mt˝m_addr
;

279 
uöt8_t
 
	mt˝m_Êags
;

280 
uöt8_t
 
	mt˝m_¥efixÀn
;

281 
uöt16_t
 
	mt˝m_keyÀn
;

282 
uöt32_t
 
	m__t˝m_∑d
;

283 
uöt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

287 
	st˝_ª∑ú_›t


289 
uöt32_t
 
	m›t_code
;

290 
uöt32_t
 
	m›t_vÆ
;

296 
	mTCP_NO_QUEUE
,

297 
	mTCP_RECV_QUEUE
,

298 
	mTCP_SEND_QUEUE
,

299 
	mTCP_QUEUES_NR
,

303 
	#TCP_COOKIE_MIN
 8

	)

304 
	#TCP_COOKIE_MAX
 16

	)

305 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

308 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

309 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

313 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

314 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

316 
	#TCP_MSS_DEFAULT
 536U

	)

317 
	#TCP_MSS_DESIRED
 1220U

	)

319 
	st˝_cookõ_å™ß˘i⁄s


321 
uöt16_t
 
	mt˝˘_Êags
;

322 
uöt8_t
 
	m__t˝˘_∑d1
;

323 
uöt8_t
 
	mt˝˘_cookõ_desúed
;

324 
uöt16_t
 
	mt˝˘_s_d©a_desúed
;

325 
uöt16_t
 
	mt˝˘_u£d
;

326 
uöt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

330 
	st˝_ª∑ú_wödow


332 
uöt32_t
 
	m¢d_wl1
;

333 
uöt32_t
 
	m¢d_wnd
;

334 
uöt32_t
 
	mmax_wödow
;

335 
uöt32_t
 
	mrcv_wnd
;

336 
uöt32_t
 
	mrcv_wup
;

340 
	st˝_zîoc›y_ª˚ive


342 
uöt64_t
 
	maddªss
;

343 
uöt32_t
 
	mÀngth
;

344 
uöt32_t
 
	mªcv_skù_höt
;

	@/usr/include/netinet/udp.h

47 #i‚de‡
__NETINET_UDP_H


48 
	#__NETINET_UDP_H
 1

	)

50 
	~<sys/ty≥s.h
>

51 
	~<°döt.h
>

55 
	sudphdr


57 
__exãnsi⁄__
 union

61 
uöt16_t
 
	muh_•‹t
;

62 
uöt16_t
 
	muh_dp‹t
;

63 
uöt16_t
 
	muh_uÀn
;

64 
uöt16_t
 
	muh_sum
;

68 
uöt16_t
 
	msour˚
;

69 
uöt16_t
 
	mde°
;

70 
uöt16_t
 
	mÀn
;

71 
uöt16_t
 
	mcheck
;

77 
	#UDP_CORK
 1

	)

78 
	#UDP_ENCAP
 100

	)

80 
	#UDP_NO_CHECK6_TX
 101

	)

82 
	#UDP_NO_CHECK6_RX
 102

	)

84 
	#UDP_SEGMENT
 103

	)

85 
	#UDP_GRO
 104

	)

88 
	#UDP_ENCAP_ESPINUDP_NON_IKE
 1

	)

89 
	#UDP_ENCAP_ESPINUDP
 2

	)

90 
	#UDP_ENCAP_L2TPINUDP
 3

	)

91 
	#UDP_ENCAP_GTP0
 4

	)

92 
	#UDP_ENCAP_GTP1U
 5

	)

94 
	#SOL_UDP
 17

	)

	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/ty≥s/__sig£t_t.h
>

33 
	s__jmp_buf_èg


39 
__jmp_buf
 
	m__jmpbuf
;

40 
	m__mask_was_ßved
;

41 
__sig£t_t
 
	m__ßved_mask
;

45 
__jmp_buf_èg
 
	tjmp_buf
[1];

49 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

58 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

62 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

67 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

68 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

70 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


74 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

79 #ifdef 
__USE_POSIX


83 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

87 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

93 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

94 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

99 #i‡
__USE_FORTIFY_LEVEL
 > 0

100 
	~<bôs/£tjmp2.h
>

103 
__END_DECLS


	@/usr/include/sgtty.h

18 #i‚def 
_SGTTY_H


19 
	#_SGTTY_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/io˘l.h
>

27 
	gsgâyb
;

29 
__BEGIN_DECLS


32 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

35 
	$°ty
 (
__fd
, c⁄° 
sgâyb
 *
__∑øms
Ë
__THROW
;

38 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

374 
	~<bôs/sig«l_ext.h
>

376 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	$©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/sys/dir.h

18 #i‚def 
_SYS_DIR_H


19 
	#_SYS_DIR_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<dúít.h
>

25 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/file.h

18 #i‚def 
_SYS_FILE_H


19 
	#_SYS_FILE_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‚def 
_FCNTL_H


24 
	~<f˙é.h
>

27 
	g__BEGIN_DECLS


32 #i‚de‡
L_SET


33 
	#L_SET
 0

	)

34 
	#L_INCR
 1

	)

35 
	#L_XTND
 2

	)

40 
	#LOCK_SH
 1

	)

41 
	#LOCK_EX
 2

	)

42 
	#LOCK_UN
 8

	)

45 
	#LOCK_NB
 4

	)

50 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

53 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mount.h

21 #i‚de‡
_SYS_MOUNT_H


22 
	#_SYS_MOUNT_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/io˘l.h
>

27 
	#BLOCK_SIZE
 1024

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

35 
	mMS_RDONLY
 = 1,

36 
	#MS_RDONLY
 
MS_RDONLY


	)

37 
	mMS_NOSUID
 = 2,

38 
	#MS_NOSUID
 
MS_NOSUID


	)

39 
	mMS_NODEV
 = 4,

40 
	#MS_NODEV
 
MS_NODEV


	)

41 
	mMS_NOEXEC
 = 8,

42 
	#MS_NOEXEC
 
MS_NOEXEC


	)

43 
	mMS_SYNCHRONOUS
 = 16,

44 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

45 
	mMS_REMOUNT
 = 32,

46 
	#MS_REMOUNT
 
MS_REMOUNT


	)

47 
	mMS_MANDLOCK
 = 64,

48 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

49 
	mMS_DIRSYNC
 = 128,

50 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

51 
	mMS_NOATIME
 = 1024,

52 
	#MS_NOATIME
 
MS_NOATIME


	)

53 
	mMS_NODIRATIME
 = 2048,

54 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

55 
	mMS_BIND
 = 4096,

56 
	#MS_BIND
 
MS_BIND


	)

57 
	mMS_MOVE
 = 8192,

58 
	#MS_MOVE
 
MS_MOVE


	)

59 
	mMS_REC
 = 16384,

60 
	#MS_REC
 
MS_REC


	)

61 
	mMS_SILENT
 = 32768,

62 
	#MS_SILENT
 
MS_SILENT


	)

63 
	mMS_POSIXACL
 = 1 << 16,

64 
	#MS_POSIXACL
 
MS_POSIXACL


	)

65 
	mMS_UNBINDABLE
 = 1 << 17,

66 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

67 
	mMS_PRIVATE
 = 1 << 18,

68 
	#MS_PRIVATE
 
MS_PRIVATE


	)

69 
	mMS_SLAVE
 = 1 << 19,

70 
	#MS_SLAVE
 
MS_SLAVE


	)

71 
	mMS_SHARED
 = 1 << 20,

72 
	#MS_SHARED
 
MS_SHARED


	)

73 
	mMS_RELATIME
 = 1 << 21,

74 
	#MS_RELATIME
 
MS_RELATIME


	)

75 
	mMS_KERNMOUNT
 = 1 << 22,

76 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

77 
	mMS_I_VERSION
 = 1 << 23,

78 
	#MS_I_VERSION
 
MS_I_VERSION


	)

79 
	mMS_STRICTATIME
 = 1 << 24,

80 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

81 
	mMS_LAZYTIME
 = 1 << 25,

82 
	#MS_LAZYTIME
 
MS_LAZYTIME


	)

83 
	mMS_ACTIVE
 = 1 << 30,

84 
	#MS_ACTIVE
 
MS_ACTIVE


	)

85 
	mMS_NOUSER
 = 1 << 31

86 
	#MS_NOUSER
 
MS_NOUSER


	)

90 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
 \

91 |
MS_LAZYTIME
)

	)

96 
	#MS_MGC_VAL
 0xc0ed0000

	)

97 
	#MS_MGC_MSK
 0xffff0000

	)

104 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

105 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

106 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

107 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

108 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

109 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

110 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

111 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

112 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

113 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

114 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

115 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

116 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

117 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

118 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

124 
	mMNT_FORCE
 = 1,

125 
	#MNT_FORCE
 
MNT_FORCE


	)

126 
	mMNT_DETACH
 = 2,

127 
	#MNT_DETACH
 
MNT_DETACH


	)

128 
	mMNT_EXPIRE
 = 4,

129 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

130 
	mUMOUNT_NOFOLLOW
 = 8

131 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

135 
__BEGIN_DECLS


138 
	$mou¡
 (c⁄° *
__•ecül_fûe
, c⁄° *
__dú
,

139 c⁄° *
__f°y≥
, 
__rwÊag
,

140 c⁄° *
__d©a
Ë
__THROW
;

143 
	$umou¡
 (c⁄° *
__•ecül_fûe
Ë
__THROW
;

146 
	$umou¡2
 (c⁄° *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

148 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‡!
deföed
 
MAXHOSTNAMELEN
 && deföed 
HOST_NAME_MAX


54 
	#MAXHOSTNAMELEN
 
HOST_NAME_MAX


	)

56 #i‚de‡
NCARGS


57 #ifde‡
ARG_MAX


58 
	#NCARGS
 
ARG_MAX


	)

62 
	#NCARGS
 
INT_MAX


	)

68 #i‚de‡
NOGROUP


69 
	#NOGROUP
 65535

	)

71 #i‚de‡
NODEV


72 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

77 #i‚de‡
DEV_BSIZE


78 
	#DEV_BSIZE
 512

	)

83 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

84 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

85 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

86 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

89 #i‚de‡
howm™y


90 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

92 #ifde‡
__GNUC__


93 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

94 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

95 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

97 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

99 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

102 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

103 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/poll.h

19 #i‚def 
_SYS_POLL_H


20 
	#_SYS_POLL_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/pﬁl.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/ty≥s/__sig£t_t.h
>

28 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 
	tnfds_t
;

36 
	spﬁlfd


38 
	mfd
;

39 
	mevíts
;

40 
	mªvíts
;

44 
__BEGIN_DECLS


54 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

56 #ifde‡
__USE_GNU


63 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

64 c⁄° 
time•ec
 *
__timeout
,

65 c⁄° 
__sig£t_t
 *
__ss
);

68 
	g__END_DECLS


72 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


73 
	~<bôs/pﬁl2.h
>

	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<bôs/ty≥s/°ru˘_iovec.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

33 
	~<bôs/sockë.h
>

35 #ifde‡
__USE_MISC


36 
	~<bôs/ty≥s/°ru˘_osockaddr.h
>

43 
	mSHUT_RD
 = 0,

44 
	#SHUT_RD
 
SHUT_RD


	)

45 
	mSHUT_WR
,

46 
	#SHUT_WR
 
SHUT_WR


	)

47 
	mSHUT_RDWR


48 
	#SHUT_RDWR
 
SHUT_RDWR


	)

57 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


58 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

59 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

63 
	#__SOCKADDR_ALLTYPES
 \

64 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

65 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

66 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

67 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

68 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

69 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

70 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

71 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

78 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

79 uni⁄ { 
	m__SOCKADDR_ALLTYPES


80 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

81 #unde‡
__SOCKADDR_ONETYPE


82 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

83 uni⁄ { 
	m__SOCKADDR_ALLTYPES


84 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

85 #unde‡
__SOCKADDR_ONETYPE


88 #ifde‡
__USE_GNU


90 
	smmsghdr


92 
msghdr
 
	mmsg_hdr
;

93 
	mmsg_Àn
;

102 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

108 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

109 
__fds
[2]Ë
__THROW
;

112 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

113 
__THROW
;

116 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

117 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

126 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

130 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

131 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

145 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

152 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

153 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

154 
sockÀn_t
 
__addr_Àn
);

163 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

173 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

174 
__Êags
);

176 #ifde‡
__USE_GNU


182 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

183 
__vÀn
, 
__Êags
);

191 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

193 #ifde‡
__USE_GNU


199 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

200 
__vÀn
, 
__Êags
,

201 
time•ec
 *
__tmo
);

208 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

209 *
__ª°ri˘
 
__›tvÆ
,

210 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

215 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

216 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

222 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

232 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

233 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

235 #ifde‡
__USE_GNU


240 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

241 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

250 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

253 #ifde‡
__USE_XOPEN2K


255 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

259 #ifde‡
__USE_MISC


263 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

268 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


269 
	~<bôs/sockë2.h
>

272 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_XOPEN2K8


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__REDIRECT_NTH


213 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

214 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

215 
	`__n⁄nuŒ
 ((1, 2));

216 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

217 
	`__n⁄nuŒ
 ((2));

219 
	#°©
 
°©64


	)

220 
	#f°©
 
f°©64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

225 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

226 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

229 #ifde‡
__USE_ATFILE


233 #i‚de‡
__USE_FILE_OFFSET64


234 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

235 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

236 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
,

241 
__Êag
),

242 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

244 
	#f°©©
 
f°©©64


	)

248 #ifde‡
__USE_LARGEFILE64


249 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

250 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

251 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_MISC


287 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

300 
__Êag
)

301 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

308 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

310 #ifdef 
__USE_GNU


313 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

317 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

320 #ifde‡
__USE_ATFILE


324 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

325 
__THROW
 
	`__n⁄nuŒ
 ((2));

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


332 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 #ifde‡
__USE_ATFILE


353 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

354 
__THROW
 
	`__n⁄nuŒ
 ((2));

357 #ifde‡
__USE_ATFILE


360 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

361 c⁄° 
time•ec
 
__times
[2],

362 
__Êags
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 #ifde‡
__USE_XOPEN2K8


368 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

386 #i‚de‡
_STAT_VER


387 
	#_STAT_VER
 0

	)

389 #i‚de‡
_MKNOD_VER


390 
	#_MKNOD_VER
 0

	)

394 #i‚de‡
__USE_FILE_OFFSET64


395 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

396 
__THROW
 
	`__n⁄nuŒ
 ((3));

397 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

398 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

399 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
)

403 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

405 #ifde‡
__REDIRECT_NTH


406 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

407 
°©
 *
__°©_buf
), 
__fx°©64
)

408 
	`__n⁄nuŒ
 ((3));

409 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

410 
°©
 *
__°©_buf
), 
__x°©64
)

411 
	`__n⁄nuŒ
 ((2, 3));

412 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__lx°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

416 c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
, 
__Êag
),

418 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

421 
	#__fx°©
 
__fx°©64


	)

422 
	#__x°©
 
__x°©64


	)

423 
	#__lx°©
 
__lx°©64


	)

427 #ifde‡
__USE_LARGEFILE64


428 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

429 
__THROW
 
	`__n⁄nuŒ
 ((3));

430 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

431 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

432 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
, 
__Êag
)

436 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

438 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

439 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

441 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

442 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

445 #ifde‡
__USE_GNU


446 
	~<bôs/°©x.h
>

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #ifde‡
__USE_MISC


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/statfs.h

19 #i‚def 
_SYS_STATFS_H


20 
	#_SYS_STATFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©fs.h
>

27 
	g__BEGIN_DECLS


30 #i‚de‡
__USE_FILE_OFFSET64


31 
	$°©fs
 (c⁄° *
__fûe
, 
°©fs
 *
__buf
)

32 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

34 #ifde‡
__REDIRECT_NTH


35 
	`__REDIRECT_NTH
 (
°©fs
,

36 (c⁄° *
__fûe
, 
°©fs
 *
__buf
),

37 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

39 
	#°©fs
 
°©fs64


	)

42 #ifde‡
__USE_LARGEFILE64


43 
	$°©fs64
 (c⁄° *
__fûe
, 
°©fs64
 *
__buf
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

51 
__THROW
 
	`__n⁄nuŒ
 ((2));

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

55 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

57 
	#f°©fs
 
f°©fs64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

62 
__THROW
 
	`__n⁄nuŒ
 ((2));

65 
__END_DECLS


	@/usr/include/sys/statvfs.h

19 #i‚def 
_SYS_STATVFS_H


20 
	#_SYS_STATVFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©vfs.h
>

27 #i‚de‡
__USE_FILE_OFFSET64


28 #i‚de‡
__fsblk˙t_t_deföed


29 
__fsblk˙t_t
 
	tfsblk˙t_t
;

30 
	#__fsblk˙t_t_deföed


	)

32 #i‚de‡
__fsfû˙t_t_deföed


33 
__fsfû˙t_t
 
	tfsfû˙t_t
;

34 
	#__fsfû˙t_t_deföed


	)

37 #i‚de‡
__fsblk˙t_t_deföed


38 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

39 
	#__fsblk˙t_t_deföed


	)

41 #i‚de‡
__fsfû˙t_t_deföed


42 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

43 
	#__fsfû˙t_t_deföed


	)

47 
	g__BEGIN_DECLS


50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$°©vfs
 (c⁄° *
__ª°ri˘
 
__fûe
,

52 
°©vfs
 *
__ª°ri˘
 
__buf
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

55 #ifde‡
__REDIRECT_NTH


56 
	`__REDIRECT_NTH
 (
°©vfs
,

57 (c⁄° *
__ª°ri˘
 
__fûe
,

58 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

59 
	`__n⁄nuŒ
 ((1, 2));

61 
	#°©vfs
 
°©vfs64


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	$°©vfs64
 (c⁄° *
__ª°ri˘
 
__fûe
,

66 
°©vfs64
 *
__ª°ri˘
 
__buf
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

74 
__THROW
 
	`__n⁄nuŒ
 ((2));

76 #ifde‡
__REDIRECT_NTH


77 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

78 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

80 
	#f°©vfs
 
f°©vfs64


	)

83 #ifde‡
__USE_LARGEFILE64


84 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

85 
__THROW
 
	`__n⁄nuŒ
 ((2));

88 
__END_DECLS


	@/usr/include/sys/sysinfo.h

18 #i‚de‡
_SYS_SYSINFO_H


19 
	#_SYS_SYSINFO_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<löux/kî√l.h
>

26 
__BEGIN_DECLS


29 
	$sysöfo
 (
sysöfo
 *
__öfo
Ë
__THROW
;

33 
	$gë_≈rocs_c⁄f
 (Ë
__THROW
;

36 
	$gë_≈rocs
 (Ë
__THROW
;

40 
	$gë_phys_∑ges
 (Ë
__THROW
;

43 
	$gë_avphys_∑ges
 (Ë
__THROW
;

45 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/time_t.h
>

25 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

27 #i‚de‡
__su£c⁄ds_t_deföed


28 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

29 
	#__su£c⁄ds_t_deföed


	)

32 
	~<sys/£À˘.h
>

34 
	g__BEGIN_DECLS


36 #ifde‡
__USE_GNU


38 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

39 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

40 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

41 }

	)

42 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

43 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

44 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

45 }

	)

49 #ifde‡
__USE_MISC


52 
	stimez⁄e


54 
	mtz_möuãswe°
;

55 
	mtz_d°time
;

66 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

67 *
__ª°ri˘
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 #ifde‡
__USE_MISC


75 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

76 c⁄° 
timez⁄e
 *
__tz
)

77 
__THROW
;

83 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

84 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

89 
	e__ôimî_which


92 
ITIMER_REAL
 = 0,

93 
	#ITIMER_REAL
 
ITIMER_REAL


	)

95 
ITIMER_VIRTUAL
 = 1,

96 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

99 
ITIMER_PROF
 = 2

100 
	#ITIMER_PROF
 
ITIMER_PROF


	)

105 
	sôimîvÆ


108 
timevÆ
 
ô_öãrvÆ
;

110 
timevÆ
 
ô_vÆue
;

113 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


116 
__ôimî_which
 
	t__ôimî_which_t
;

118 
	t__ôimî_which_t
;

123 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

124 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

129 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

130 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

131 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

136 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #ifde‡
__USE_MISC


141 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

148 #ifde‡
__USE_GNU


152 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

153 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

157 #ifde‡
__USE_MISC


160 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

161 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

162 
	#timîcmp
(
a
, 
b
, 
CMP
) \

163 (((
a
)->
tv_£c
 =(
b
)->tv_sec) \

164 ? ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) \

165 : ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

166 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

168 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

169 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

170 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

172 ++(
ªsu…
)->
tv_£c
; \

173 (
ªsu…
)->
tv_u£c
 -= 1000000; \

175 
	}
} 0)

	)

176 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

178 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

179 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

180 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

181 --(
ªsu…
)->
tv_£c
; \

182 (
ªsu…
)->
tv_u£c
 += 1000000; \

184 } 0)

	)

187 
	g__END_DECLS


	@/usr/include/sys/times.h

22 #i‚def 
_SYS_TIMES_H


23 
	#_SYS_TIMES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s/˛ock_t.h
>

29 
__BEGIN_DECLS


32 
	stms


34 
˛ock_t
 
	mtms_utime
;

35 
˛ock_t
 
	mtms_°ime
;

37 
˛ock_t
 
	mtms_cutime
;

38 
˛ock_t
 
	mtms_c°ime
;

46 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

48 
__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<bôs/ty≥s/°ru˘_iovec.h
>

24 
	~<bôs/uio_lim.h
>

25 #ifde‡
__IOV_MAX


26 
	#UIO_MAXIOV
 
__IOV_MAX


	)

28 #unde‡
UIO_MAXIOV


31 
__BEGIN_DECLS


41 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

42 
__wur
;

52 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

53 
__wur
;

56 #ifde‡
__USE_MISC


57 #i‚de‡
__USE_FILE_OFFSET64


67 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

68 
__off_t
 
__off£t
Ë
__wur
;

79 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

80 
__off_t
 
__off£t
Ë
__wur
;

83 #ifde‡
__REDIRECT


84 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
¥ódv64
Ë
__wur
;

87 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

88 
__cou¡
, 
__off64_t
 
__off£t
),

89 
pwrôev64
Ë
__wur
;

91 
	#¥ódv
 
¥ódv64


	)

92 
	#pwrôev
 
pwrôev64


	)

96 #ifde‡
__USE_LARGEFILE64


106 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

107 
__off64_t
 
__off£t
Ë
__wur
;

118 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

119 
__off64_t
 
__off£t
Ë
__wur
;

124 #ifde‡
__USE_GNU


125 #i‚de‡
__USE_FILE_OFFSET64


127 
ssize_t
 
	$¥ódv2
 (
__Â
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

128 
__off_t
 
__off£t
, 
___Êags
Ë
__wur
;

131 
ssize_t
 
	$pwrôev2
 (
__fd
, c⁄° 
iovec
 *
__iodev
, 
__cou¡
,

132 
__off_t
 
__off£t
, 
__Êags
Ë
__wur
;

135 #ifde‡
__REDIRECT


136 
ssize_t
 
	`__REDIRECT
 (
pwrôev2
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

137 
__cou¡
, 
__off64_t
 
__off£t
,

138 
__Êags
),

139 
pwrôev64v2
Ë
__wur
;

140 
ssize_t
 
	`__REDIRECT
 (
¥ódv2
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

141 
__cou¡
, 
__off64_t
 
__off£t
,

142 
__Êags
),

143 
¥ódv64v2
Ë
__wur
;

145 
	#¥ódv2
 
¥ódv64v2


	)

146 
	#pwrôev2
 
pwrôev64v2


	)

150 #ifde‡
__USE_LARGEFILE64


152 
ssize_t
 
	$¥ódv64v2
 (
__Â
, c⁄° 
iovec
 *
__iovec
,

153 
__cou¡
, 
__off64_t
 
__off£t
,

154 
___Êags
Ë
__wur
;

157 
ssize_t
 
	$pwrôev64v2
 (
__fd
, c⁄° 
iovec
 *
__iodev
,

158 
__cou¡
, 
__off64_t
 
__off£t
,

159 
__Êags
Ë
__wur
;

163 
__END_DECLS


167 #ifde‡
__USE_GNU


168 
	~<bôs/uio-ext.h
>

	@/usr/include/sys/unistd.h

1 
	~<uni°d.h
>

	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_MISC


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/sys/vfs.h

4 
	~<sys/°©fs.h
>

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1170 
	~<bôs/uni°d_ext.h
>

1172 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	~<bôs/ty≥s/time_t.h
>

36 
	sutimbuf


38 
__time_t
 
	ma˘ime
;

39 
__time_t
 
	mmodtime
;

44 
	$utime
 (c⁄° *
__fûe
,

45 c⁄° 
utimbuf
 *
__fûe_times
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1));

48 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

58 
	#_DIRENT_MATCHES_DIRENT64
 0

	)

	@/usr/include/bits/dirent_ext.h

19 #i‚de‡
_DIRENT_H


23 
	g__BEGIN_DECLS


25 #ifde‡
__USE_GNU


29 
__ssize_t
 
	$gëdíts64
 (
__fd
, *
__buf„r
, 
size_t
 
__Àngth
)

30 
__THROW
 
	`__n⁄nuŒ
 ((2));

33 
__END_DECLS


	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #i‚de‡
_BITS_ERRNO_H


20 
	#_BITS_ERRNO_H
 1

	)

22 #i‡!
deföed
 
_ERRNO_H


26 
	~<löux/î∫o.h
>

29 #i‚de‡
ENOTSUP


30 
	#ENOTSUP
 
EOPNOTSUPP


	)

33 #i‚de‡
ECANCELED


34 
	#ECANCELED
 125

	)

37 #i‚de‡
EOWNERDEAD


38 
	#EOWNERDEAD
 130

	)

41 #i‚de‡
ENOTRECOVERABLE


42 
	#ENOTRECOVERABLE
 131

	)

45 #i‚de‡
ERFKILL


46 
	#ERFKILL
 132

	)

49 #i‚de‡
EHWPOISON


50 
	#EHWPOISON
 133

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	$deföed
(
__CUDACC__
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


32 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 \

33 || 
deföed
 
	g_UAPI_IPV6_H
 \

34 || 
deföed
 
	g_LINUX_IN6_H
 \

35 || 
deföed
 
	g_IPV6_H


39 
	#__USE_KERNEL_IPV6_DEFS
 1

	)

41 
	#__USE_KERNEL_IPV6_DEFS
 0

	)

47 
	#IP_OPTIONS
 4

	)

48 
	#IP_HDRINCL
 3

	)

49 
	#IP_TOS
 1

	)

50 
	#IP_TTL
 2

	)

51 
	#IP_RECVOPTS
 6

	)

53 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

54 
	#IP_RETOPTS
 7

	)

55 
	#IP_MULTICAST_IF
 32

	)

56 
	#IP_MULTICAST_TTL
 33

	)

57 
	#IP_MULTICAST_LOOP
 34

	)

58 
	#IP_ADD_MEMBERSHIP
 35

	)

59 
	#IP_DROP_MEMBERSHIP
 36

	)

60 
	#IP_UNBLOCK_SOURCE
 37

	)

61 
	#IP_BLOCK_SOURCE
 38

	)

62 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

63 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

64 
	#IP_MSFILTER
 41

	)

65 #ifde‡
__USE_MISC


66 
	#MCAST_JOIN_GROUP
 42

	)

67 
	#MCAST_BLOCK_SOURCE
 43

	)

68 
	#MCAST_UNBLOCK_SOURCE
 44

	)

69 
	#MCAST_LEAVE_GROUP
 45

	)

70 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

71 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

72 
	#MCAST_MSFILTER
 48

	)

73 
	#IP_MULTICAST_ALL
 49

	)

74 
	#IP_UNICAST_IF
 50

	)

76 
	#MCAST_EXCLUDE
 0

	)

77 
	#MCAST_INCLUDE
 1

	)

80 
	#IP_ROUTER_ALERT
 5

	)

81 
	#IP_PKTINFO
 8

	)

82 
	#IP_PKTOPTIONS
 9

	)

83 
	#IP_PMTUDISC
 10

	)

84 
	#IP_MTU_DISCOVER
 10

	)

85 
	#IP_RECVERR
 11

	)

86 
	#IP_RECVTTL
 12

	)

87 
	#IP_RECVTOS
 13

	)

88 
	#IP_MTU
 14

	)

89 
	#IP_FREEBIND
 15

	)

90 
	#IP_IPSEC_POLICY
 16

	)

91 
	#IP_XFRM_POLICY
 17

	)

92 
	#IP_PASSSEC
 18

	)

93 
	#IP_TRANSPARENT
 19

	)

94 
	#IP_MULTICAST_ALL
 49

	)

97 
	#IP_ORIGDSTADDR
 20

	)

98 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

100 
	#IP_MINTTL
 21

	)

101 
	#IP_NODEFRAG
 22

	)

102 
	#IP_CHECKSUM
 23

	)

103 
	#IP_BIND_ADDRESS_NO_PORT
 24

	)

104 
	#IP_RECVFRAGSIZE
 25

	)

107 
	#IP_PMTUDISC_DONT
 0

	)

108 
	#IP_PMTUDISC_WANT
 1

	)

109 
	#IP_PMTUDISC_DO
 2

	)

110 
	#IP_PMTUDISC_PROBE
 3

	)

114 
	#IP_PMTUDISC_INTERFACE
 4

	)

116 
	#IP_PMTUDISC_OMIT
 5

	)

118 
	#IP_MULTICAST_IF
 32

	)

119 
	#IP_MULTICAST_TTL
 33

	)

120 
	#IP_MULTICAST_LOOP
 34

	)

121 
	#IP_ADD_MEMBERSHIP
 35

	)

122 
	#IP_DROP_MEMBERSHIP
 36

	)

123 
	#IP_UNBLOCK_SOURCE
 37

	)

124 
	#IP_BLOCK_SOURCE
 38

	)

125 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

126 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

127 
	#IP_MSFILTER
 41

	)

128 
	#IP_MULTICAST_ALL
 49

	)

129 
	#IP_UNICAST_IF
 50

	)

132 
	#SOL_IP
 0

	)

134 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

135 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

136 
	#IP_MAX_MEMBERSHIPS
 20

	)

138 #ifde‡
__USE_MISC


142 
	sù_›ts


144 
ö_addr
 
	mù_d°
;

145 
	mù_›ts
[40];

149 
	sù_mªqn


151 
ö_addr
 
	mimr_mu…üddr
;

152 
ö_addr
 
	mimr_addªss
;

153 
	mimr_ifödex
;

157 
	sö_pktöfo


159 
	mùi_ifödex
;

160 
ö_addr
 
	mùi_•ec_d°
;

161 
ö_addr
 
	mùi_addr
;

168 
	#IPV6_ADDRFORM
 1

	)

169 
	#IPV6_2292PKTINFO
 2

	)

170 
	#IPV6_2292HOPOPTS
 3

	)

171 
	#IPV6_2292DSTOPTS
 4

	)

172 
	#IPV6_2292RTHDR
 5

	)

173 
	#IPV6_2292PKTOPTIONS
 6

	)

174 
	#IPV6_CHECKSUM
 7

	)

175 
	#IPV6_2292HOPLIMIT
 8

	)

177 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

179 
	#IPV6_NEXTHOP
 9

	)

180 
	#IPV6_AUTHHDR
 10

	)

181 
	#IPV6_UNICAST_HOPS
 16

	)

182 
	#IPV6_MULTICAST_IF
 17

	)

183 
	#IPV6_MULTICAST_HOPS
 18

	)

184 
	#IPV6_MULTICAST_LOOP
 19

	)

185 
	#IPV6_JOIN_GROUP
 20

	)

186 
	#IPV6_LEAVE_GROUP
 21

	)

187 
	#IPV6_ROUTER_ALERT
 22

	)

188 
	#IPV6_MTU_DISCOVER
 23

	)

189 
	#IPV6_MTU
 24

	)

190 
	#IPV6_RECVERR
 25

	)

191 
	#IPV6_V6ONLY
 26

	)

192 
	#IPV6_JOIN_ANYCAST
 27

	)

193 
	#IPV6_LEAVE_ANYCAST
 28

	)

194 
	#IPV6_MULTICAST_ALL
 29

	)

195 
	#IPV6_ROUTER_ALERT_ISOLATE
 30

	)

196 
	#IPV6_IPSEC_POLICY
 34

	)

197 
	#IPV6_XFRM_POLICY
 35

	)

198 
	#IPV6_HDRINCL
 36

	)

201 
	#IPV6_RECVPKTINFO
 49

	)

202 
	#IPV6_PKTINFO
 50

	)

203 
	#IPV6_RECVHOPLIMIT
 51

	)

204 
	#IPV6_HOPLIMIT
 52

	)

205 
	#IPV6_RECVHOPOPTS
 53

	)

206 
	#IPV6_HOPOPTS
 54

	)

207 
	#IPV6_RTHDRDSTOPTS
 55

	)

208 
	#IPV6_RECVRTHDR
 56

	)

209 
	#IPV6_RTHDR
 57

	)

210 
	#IPV6_RECVDSTOPTS
 58

	)

211 
	#IPV6_DSTOPTS
 59

	)

212 
	#IPV6_RECVPATHMTU
 60

	)

213 
	#IPV6_PATHMTU
 61

	)

214 
	#IPV6_DONTFRAG
 62

	)

217 
	#IPV6_RECVTCLASS
 66

	)

218 
	#IPV6_TCLASS
 67

	)

220 
	#IPV6_AUTOFLOWLABEL
 70

	)

223 
	#IPV6_ADDR_PREFERENCES
 72

	)

226 
	#IPV6_MINHOPCOUNT
 73

	)

228 
	#IPV6_ORIGDSTADDR
 74

	)

229 
	#IPV6_RECVORIGDSTADDR
 
IPV6_ORIGDSTADDR


	)

230 
	#IPV6_TRANSPARENT
 75

	)

231 
	#IPV6_UNICAST_IF
 76

	)

232 
	#IPV6_RECVFRAGSIZE
 77

	)

233 
	#IPV6_FREEBIND
 78

	)

236 #i‡!
__USE_KERNEL_IPV6_DEFS


237 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

238 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

240 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

241 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

244 
	#IPV6_PMTUDISC_DONT
 0

	)

245 
	#IPV6_PMTUDISC_WANT
 1

	)

246 
	#IPV6_PMTUDISC_DO
 2

	)

247 
	#IPV6_PMTUDISC_PROBE
 3

	)

248 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

249 
	#IPV6_PMTUDISC_OMIT
 5

	)

252 
	#SOL_IPV6
 41

	)

253 
	#SOL_ICMPV6
 58

	)

256 
	#IPV6_RTHDR_LOOSE
 0

	)

257 
	#IPV6_RTHDR_STRICT
 1

	)

259 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

49 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


50 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

53 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

55 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


56 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

57 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

59 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

66 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


68 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

70 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

72 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


73 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

74 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

76 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

81 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


82 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


83 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

85 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

21 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

22 
__©åibuã__
 ((
__c⁄°__
));

25 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

26 
__©åibuã__
 ((
__c⁄°__
));

30 
__MATHDECL_1
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_1
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

36 
__MATHDECL_1
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

39 
__MATHDECL_1
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

42 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

43 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls-narrow.h

19 #i‚de‡
_MATH_H


24 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
add
), 
__MATHCALL_REDIR_NAME
 (add), 2);

27 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
div
), 
__MATHCALL_REDIR_NAME
 (div), 2);

30 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
mul
), 
__MATHCALL_REDIR_NAME
 (mul), 2);

33 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sub
), 
__MATHCALL_REDIR_NAME
 (sub), 2);

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT_C2X
)

114 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

180 #i‡!
__MATH_DECLARING_FLOATN


182 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

185 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

189 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

194 #ifde‡
__USE_ISOC99


196 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

199 #ifde‡
__USE_ISOC99


201 
__MATHCALL
 (
«n
,, (c⁄° *
__ègb
));

205 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

206 #i‡((!
deföed
 
__˝lu•lus
 \

207 || 
	g__˝lu•lus
 < 201103L \

208 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

209 && !
__MATH_DECLARING_FLOATN


211 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

215 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

217 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

218 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

219 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

220 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

226 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


228 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

229 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

230 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

233 #ifde‡
__USE_ISOC99


235 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

238 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

239 #i‡!
__MATH_DECLARING_FLOATN


241 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

245 #ifde‡
__USE_MISC


249 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

253 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


256 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

259 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

260 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


261 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

264 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


266 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

268 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

272 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

274 #ifde‡
__USE_ISOC99


276 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

280 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

283 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


285 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

288 #ifde‡
__USE_ISOC99


290 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

294 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

298 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

302 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

307 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

314 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

315 
__exãnsi⁄__


316 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

320 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

321 
__exãnsi⁄__


322 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

329 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

332 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

335 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

338 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


340 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

344 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

345 
__width
));

349 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

355 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

356 
__width
));

361 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

362 
__width
));

365 
__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

368 
__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

371 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

374 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


376 
__MATHDECL_1
 (, 
tŸÆ‹dî
,, (c⁄° 
_MdoubÀ_
 *
__x
,

377 c⁄° 
_MdoubÀ_
 *
__y
))

378 
	g__©åibuã_puª__
;

381 
__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (c⁄° 
_MdoubÀ_
 *
__x
,

382 c⁄° 
_MdoubÀ_
 *
__y
))

383 
	g__©åibuã_puª__
;

386 
__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

389 
__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

392 
__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

395 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

396 && 
	g__MATH_DECLARING_DOUBLE
 \

397 && !
deföed
 
	g__USE_XOPEN2K8
)) \

398 && !
__MATH_DECLARING_FLOATN


400 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathinline.h

8 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/poll.h

18 #i‚de‡
_SYS_POLL_H


25 
	#POLLIN
 0x001

	)

26 
	#POLLPRI
 0x002

	)

27 
	#POLLOUT
 0x004

	)

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


31 
	#POLLRDNORM
 0x040

	)

32 
	#POLLRDBAND
 0x080

	)

33 
	#POLLWRNORM
 0x100

	)

34 
	#POLLWRBAND
 0x200

	)

37 #ifde‡
__USE_GNU


39 
	#POLLMSG
 0x400

	)

40 
	#POLLREMOVE
 0x1000

	)

41 
	#POLLRDHUP
 0x2000

	)

47 
	#POLLERR
 0x008

	)

48 
	#POLLHUP
 0x010

	)

49 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/poll2.h

19 #i‚de‡
_SYS_POLL_H


24 
__BEGIN_DECLS


26 
__REDIRECT
 (
__pﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

27 
__timeout
), 
pﬁl
);

28 
__pﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
,

29 
__SIZE_TYPE__
 
__fd¶í
);

30 
__REDIRECT
 (
__pﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

31 
__timeout
, 
__SIZE_TYPE__
 
__fd¶í
),

32 
__pﬁl_chk
)

33 
__w¨«âr
 ("poll called with fds bufferÅoo small fileÇfdsÉntries");

35 
__f‹tify_fun˘i⁄
 

36 
	$pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
)

38 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

40 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

41  
	`__pﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

42 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

43  
	`__pﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

46  
	`__pﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
);

47 
	}
}

50 #ifde‡
__USE_GNU


51 
__REDIRECT
 (
__µﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

52 c⁄° 
time•ec
 *
__timeout
,

53 c⁄° 
__sig£t_t
 *
__ss
), 
µﬁl
);

54 
__µﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

55 c⁄° 
time•ec
 *
__timeout
,

56 c⁄° 
__sig£t_t
 *
__ss
, 
__SIZE_TYPE__
 
__fd¶í
);

57 
__REDIRECT
 (
__µﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

58 c⁄° 
time•ec
 *
__timeout
,

59 c⁄° 
__sig£t_t
 *
__ss
,

60 
__SIZE_TYPE__
 
__fd¶í
),

61 
__µﬁl_chk
)

62 
__w¨«âr
 ("ppoll called with fds bufferÅoo small fileÇfdsÉntries");

64 
__f‹tify_fun˘i⁄
 

65 
	$µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, c⁄° 
time•ec
 *
__timeout
,

66 c⁄° 
__sig£t_t
 *
__ss
)

68 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

70 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

71  
	`__µﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
, 
	`__bos
 (__fds));

72 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

73  
	`__µﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
,

74 
	`__bos
 (
__fds
));

77  
	`__µﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
);

78 
	}
}

81 
	g__END_DECLS


	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

179 
	~<bôs/ty≥s/°ru˘_rußge.h
>

182 
	#PRIO_MIN
 -20

	)

183 
	#PRIO_MAX
 20

	)

187 
	e__¥i‹ôy_which


189 
	mPRIO_PROCESS
 = 0,

190 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

191 
	mPRIO_PGRP
 = 1,

192 
	#PRIO_PGRP
 
PRIO_PGRP


	)

193 
	mPRIO_USER
 = 2

194 
	#PRIO_USER
 
PRIO_USER


	)

198 
	g__BEGIN_DECLS


200 #ifde‡
__USE_GNU


202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

204 c⁄° 
æimô
 *
__√w_limô
,

205 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

207 #ifde‡
__REDIRECT_NTH


208 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

209 
__æimô_ªsour˚
 
__ªsour˚
,

210 c⁄° 
æimô
 *
__√w_limô
,

211 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

213 
	#¥limô
 
¥limô64


	)

216 #ifde‡
__USE_LARGEFILE64


217 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

218 c⁄° 
æimô64
 *
__√w_limô
,

219 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

223 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_BITS_SIGACTION_H


20 
	#_BITS_SIGACTION_H
 1

	)

22 #i‚de‡
_SIGNAL_H


27 
	ssiga˘i⁄


30 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


34 
__sigh™dÀr_t
 
	mß_h™dÀr
;

36 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

38 
	m__siga˘i⁄_h™dÀr
;

39 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

40 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

42 
__sigh™dÀr_t
 
	mß_h™dÀr
;

46 
__sig£t_t
 
	mß_mask
;

49 
	mß_Êags
;

52 (*
	mß_ª°‹î
) ();

56 
	#SA_NOCLDSTOP
 1

	)

57 
	#SA_NOCLDWAIT
 2

	)

58 
	#SA_SIGINFO
 4

	)

60 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


61 
	#SA_ONSTACK
 0x08000000

	)

63 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


64 
	#SA_RESTART
 0x10000000

	)

65 
	#SA_NODEFER
 0x40000000

	)

67 
	#SA_RESETHAND
 0x80000000

	)

69 #ifde‡
__USE_MISC


70 
	#SA_INTERRUPT
 0x20000000

	)

73 
	#SA_NOMASK
 
SA_NODEFER


	)

74 
	#SA_ONESHOT
 
SA_RESETHAND


	)

75 
	#SA_STACK
 
SA_ONSTACK


	)

79 
	#SIG_BLOCK
 0

	)

80 
	#SIG_UNBLOCK
 1

	)

81 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	~<bôs/ty≥s.h
>

27 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

28 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

29 
	#FP_XSTATE_MAGIC2_SIZE
  (
FP_XSTATE_MAGIC2
)

	)

31 
	s_Âx_sw_byãs


33 
__uöt32_t
 
	mmagic1
;

34 
__uöt32_t
 
	mexãnded_size
;

35 
__uöt64_t
 
	mx°©e_bv
;

36 
__uöt32_t
 
	mx°©e_size
;

37 
__uöt32_t
 
	m__glibc_ª£rved1
[7];

40 
	s_Âªg


42 
	msignifiˇnd
[4];

43 
	mexp⁄ít
;

46 
	s_Âxªg


48 
	msignifiˇnd
[4];

49 
	mexp⁄ít
;

50 
	m__glibc_ª£rved1
[3];

53 
	s_xmmªg


55 
__uöt32_t
 
	mñemít
[4];

60 #i‚de‡
__x86_64__


62 
	s_Â°©e


65 
__uöt32_t
 
	mcw
;

66 
__uöt32_t
 
	msw
;

67 
__uöt32_t
 
	mèg
;

68 
__uöt32_t
 
	mùoff
;

69 
__uöt32_t
 
	mcs£l
;

70 
__uöt32_t
 
	md©aoff
;

71 
__uöt32_t
 
	md©a£l
;

72 
_Âªg
 
	m_°
[8];

73 
	m°©us
;

74 
	mmagic
;

77 
__uöt32_t
 
	m_fx§_ív
[6];

78 
__uöt32_t
 
	mmxc§
;

79 
__uöt32_t
 
	m__glibc_ª£rved1
;

80 
_Âxªg
 
	m_fx§_°
[8];

81 
_xmmªg
 
	m_xmm
[8];

82 
__uöt32_t
 
	m__glibc_ª£rved2
[56];

85 #i‚de‡
sigc⁄ãxt_°ru˘


90 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

93 
	#X86_FXSR_MAGIC
 0x0000

	)

95 
	ssigc⁄ãxt


97 
	mgs
, 
	m__gsh
;

98 
	mfs
, 
	m__fsh
;

99 
	mes
, 
	m__esh
;

100 
	mds
, 
	m__dsh
;

101 
	medi
;

102 
	mesi
;

103 
	mebp
;

104 
	me•
;

105 
	mebx
;

106 
	medx
;

107 
	mecx
;

108 
	móx
;

109 
	må≠no
;

110 
	mîr
;

111 
	meù
;

112 
	mcs
, 
	m__csh
;

113 
	meÊags
;

114 
	me•_©_sig«l
;

115 
	mss
, 
	m__ssh
;

116 
_Â°©e
 * 
	mÂ°©e
;

117 
	mﬁdmask
;

118 
	m¸2
;

123 
	s_Â°©e


126 
__uöt16_t
 
	mcwd
;

127 
__uöt16_t
 
	mswd
;

128 
__uöt16_t
 
	m·w
;

129 
__uöt16_t
 
	mf›
;

130 
__uöt64_t
 
	mrù
;

131 
__uöt64_t
 
	mrdp
;

132 
__uöt32_t
 
	mmxc§
;

133 
__uöt32_t
 
	mmx¸_mask
;

134 
_Âxªg
 
	m_°
[8];

135 
_xmmªg
 
	m_xmm
[16];

136 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

139 
	ssigc⁄ãxt


141 
__uöt64_t
 
	mr8
;

142 
__uöt64_t
 
	mr9
;

143 
__uöt64_t
 
	mr10
;

144 
__uöt64_t
 
	mr11
;

145 
__uöt64_t
 
	mr12
;

146 
__uöt64_t
 
	mr13
;

147 
__uöt64_t
 
	mr14
;

148 
__uöt64_t
 
	mr15
;

149 
__uöt64_t
 
	mrdi
;

150 
__uöt64_t
 
	mrsi
;

151 
__uöt64_t
 
	mrbp
;

152 
__uöt64_t
 
	mrbx
;

153 
__uöt64_t
 
	mrdx
;

154 
__uöt64_t
 
	møx
;

155 
__uöt64_t
 
	mrcx
;

156 
__uöt64_t
 
	mr•
;

157 
__uöt64_t
 
	mrù
;

158 
__uöt64_t
 
	meÊags
;

159 
	mcs
;

160 
	mgs
;

161 
	mfs
;

162 
	m__∑d0
;

163 
__uöt64_t
 
	mîr
;

164 
__uöt64_t
 
	må≠no
;

165 
__uöt64_t
 
	mﬁdmask
;

166 
__uöt64_t
 
	m¸2
;

167 
__exãnsi⁄__
 union

169 
_Â°©e
 * 
	mÂ°©e
;

170 
__uöt64_t
 
	m__Â°©e_w‹d
;

172 
__uöt64_t
 
	m__ª£rved1
 [8];

177 
	s_xßve_hdr


179 
__uöt64_t
 
	mx°©e_bv
;

180 
__uöt64_t
 
	m__glibc_ª£rved1
[2];

181 
__uöt64_t
 
	m__glibc_ª£rved2
[5];

184 
	s_ymmh_°©e


186 
__uöt32_t
 
	mymmh_•a˚
[64];

189 
	s_x°©e


191 
_Â°©e
 
	mÂ°©e
;

192 
_xßve_hdr
 
	mx°©e_hdr
;

193 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/sigevent-consts.h

19 #i‚de‡
_BITS_SIGEVENT_CONSTS_H


20 
	#_BITS_SIGEVENT_CONSTS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_AIO_H


29 
	mSIGEV_SIGNAL
 = 0,

30 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

31 
	mSIGEV_NONE
,

32 
	#SIGEV_NONE
 
SIGEV_NONE


	)

33 
	mSIGEV_THREAD
,

34 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

36 
	mSIGEV_THREAD_ID
 = 4

38 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/siginfo-consts.h

19 #i‚de‡
_BITS_SIGINFO_CONSTS_H


20 
	#_BITS_SIGINFO_CONSTS_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	~<bôs/sigöfo-¨ch.h
>

29 #i‚de‡
__SI_ASYNCIO_AFTER_SIGIO


30 
	#__SI_ASYNCIO_AFTER_SIGIO
 1

	)

37 
	mSI_ASYNCNL
 = -60,

38 
	mSI_DETHREAD
 = -7,

40 
	mSI_TKILL
,

41 
	mSI_SIGIO
,

42 #i‡
__SI_ASYNCIO_AFTER_SIGIO


43 
	mSI_ASYNCIO
,

44 
	mSI_MESGQ
,

45 
	mSI_TIMER
,

47 
	mSI_MESGQ
,

48 
	mSI_TIMER
,

49 
	mSI_ASYNCIO
,

51 
	mSI_QUEUE
,

52 
	mSI_USER
,

53 
	mSI_KERNEL
 = 0x80

55 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

56 
	#SI_DETHREAD
 
SI_DETHREAD


	)

57 
	#SI_TKILL
 
SI_TKILL


	)

58 
	#SI_SIGIO
 
SI_SIGIO


	)

59 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

60 
	#SI_MESGQ
 
SI_MESGQ


	)

61 
	#SI_TIMER
 
SI_TIMER


	)

62 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

63 
	#SI_QUEUE
 
SI_QUEUE


	)

64 
	#SI_USER
 
SI_USER


	)

65 
	#SI_KERNEL
 
SI_KERNEL


	)

69 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


73 
	mILL_ILLOPC
 = 1,

74 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

75 
	mILL_ILLOPN
,

76 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

77 
	mILL_ILLADR
,

78 
	#ILL_ILLADR
 
ILL_ILLADR


	)

79 
	mILL_ILLTRP
,

80 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

81 
	mILL_PRVOPC
,

82 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

83 
	mILL_PRVREG
,

84 
	#ILL_PRVREG
 
ILL_PRVREG


	)

85 
	mILL_COPROC
,

86 
	#ILL_COPROC
 
ILL_COPROC


	)

87 
	mILL_BADSTK
,

88 
	#ILL_BADSTK
 
ILL_BADSTK


	)

89 
	mILL_BADIADDR


90 
	#ILL_BADIADDR
 
ILL_BADIADDR


	)

96 
	mFPE_INTDIV
 = 1,

97 
	#FPE_INTDIV
 
FPE_INTDIV


	)

98 
	mFPE_INTOVF
,

99 
	#FPE_INTOVF
 
FPE_INTOVF


	)

100 
	mFPE_FLTDIV
,

101 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

102 
	mFPE_FLTOVF
,

103 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

104 
	mFPE_FLTUND
,

105 
	#FPE_FLTUND
 
FPE_FLTUND


	)

106 
	mFPE_FLTRES
,

107 
	#FPE_FLTRES
 
FPE_FLTRES


	)

108 
	mFPE_FLTINV
,

109 
	#FPE_FLTINV
 
FPE_FLTINV


	)

110 
	mFPE_FLTSUB
,

111 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

112 
	mFPE_FLTUNK
 = 14,

113 
	#FPE_FLTUNK
 
FPE_FLTUNK


	)

114 
	mFPE_CONDTRAP


115 
	#FPE_CONDTRAP
 
FPE_CONDTRAP


	)

121 
	mSEGV_MAPERR
 = 1,

122 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

123 
	mSEGV_ACCERR
,

124 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

125 
	mSEGV_BNDERR
,

126 
	#SEGV_BNDERR
 
SEGV_BNDERR


	)

127 
	mSEGV_PKUERR
,

128 
	#SEGV_PKUERR
 
SEGV_PKUERR


	)

129 
	mSEGV_ACCADI
,

130 
	#SEGV_ACCADI
 
SEGV_ACCADI


	)

131 
	mSEGV_ADIDERR
,

132 
	#SEGV_ADIDERR
 
SEGV_ADIDERR


	)

133 
	mSEGV_ADIPERR


134 
	#SEGV_ADIPERR
 
SEGV_ADIPERR


	)

140 
	mBUS_ADRALN
 = 1,

141 
	#BUS_ADRALN
 
BUS_ADRALN


	)

142 
	mBUS_ADRERR
,

143 
	#BUS_ADRERR
 
BUS_ADRERR


	)

144 
	mBUS_OBJERR
,

145 
	#BUS_OBJERR
 
BUS_OBJERR


	)

146 
	mBUS_MCEERR_AR
,

147 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

148 
	mBUS_MCEERR_AO


149 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

153 #ifde‡
__USE_XOPEN_EXTENDED


157 
	mTRAP_BRKPT
 = 1,

158 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

159 
	mTRAP_TRACE
,

160 
	#TRAP_TRACE
 
TRAP_TRACE


	)

161 
	mTRAP_BRANCH
,

162 
	#TRAP_BRANCH
 
TRAP_BRANCH


	)

163 
	mTRAP_HWBKPT
,

164 
	#TRAP_HWBKPT
 
TRAP_HWBKPT


	)

165 
	mTRAP_UNK


166 
	#TRAP_UNK
 
TRAP_UNK


	)

170 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


174 
	mCLD_EXITED
 = 1,

175 
	#CLD_EXITED
 
CLD_EXITED


	)

176 
	mCLD_KILLED
,

177 
	#CLD_KILLED
 
CLD_KILLED


	)

178 
	mCLD_DUMPED
,

179 
	#CLD_DUMPED
 
CLD_DUMPED


	)

180 
	mCLD_TRAPPED
,

181 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

182 
	mCLD_STOPPED
,

183 
	#CLD_STOPPED
 
CLD_STOPPED


	)

184 
	mCLD_CONTINUED


185 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

191 
	mPOLL_IN
 = 1,

192 
	#POLL_IN
 
POLL_IN


	)

193 
	mPOLL_OUT
,

194 
	#POLL_OUT
 
POLL_OUT


	)

195 
	mPOLL_MSG
,

196 
	#POLL_MSG
 
POLL_MSG


	)

197 
	mPOLL_ERR
,

198 
	#POLL_ERR
 
POLL_ERR


	)

199 
	mPOLL_PRI
,

200 
	#POLL_PRI
 
POLL_PRI


	)

201 
	mPOLL_HUP


202 
	#POLL_HUP
 
POLL_HUP


	)

208 #ifde‡
__USE_GNU


209 
	~<bôs/sigöfo-c⁄°s-¨ch.h
>

	@/usr/include/bits/signal_ext.h

19 #i‚de‡
_SIGNAL_H


23 #ifde‡
__USE_GNU


29 
tgkûl
 (
__pid_t
 
__tgid
, __pid_à
__tid
, 
__sig«l
);

	@/usr/include/bits/signum.h

19 #i‚de‡
_BITS_SIGNUM_H


20 
	#_BITS_SIGNUM_H
 1

	)

22 #i‚de‡
_SIGNAL_H


26 
	~<bôs/signum-gíîic.h
>

31 
	#SIGSTKFLT
 16

	)

32 
	#SIGPWR
 30

	)

34 #unde‡
SIGBUS


35 
	#SIGBUS
 7

	)

36 #unde‡
SIGUSR1


37 
	#SIGUSR1
 10

	)

38 #unde‡
SIGUSR2


39 
	#SIGUSR2
 12

	)

40 #unde‡
SIGCHLD


41 
	#SIGCHLD
 17

	)

42 #unde‡
SIGCONT


43 
	#SIGCONT
 18

	)

44 #unde‡
SIGSTOP


45 
	#SIGSTOP
 19

	)

46 #unde‡
SIGTSTP


47 
	#SIGTSTP
 20

	)

48 #unde‡
SIGURG


49 
	#SIGURG
 23

	)

50 #unde‡
SIGPOLL


51 
	#SIGPOLL
 29

	)

52 #unde‡
SIGSYS


53 
	#SIGSYS
 31

	)

55 #unde‡
__SIGRTMAX


56 
	#__SIGRTMAX
 64

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_BITS_SIGSTACK_H


20 
	#_BITS_SIGSTACK_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


27 
	#MINSIGSTKSZ
 2048

	)

30 
	#SIGSTKSZ
 8192

	)

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	$±hªad_sigmask
 (
__how
,

32 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_IB
 27

	)

72 
	#PF_MPLS
 28

	)

73 
	#PF_CAN
 29

	)

74 
	#PF_TIPC
 30

	)

75 
	#PF_BLUETOOTH
 31

	)

76 
	#PF_IUCV
 32

	)

77 
	#PF_RXRPC
 33

	)

78 
	#PF_ISDN
 34

	)

79 
	#PF_PHONET
 35

	)

80 
	#PF_IEEE802154
 36

	)

81 
	#PF_CAIF
 37

	)

82 
	#PF_ALG
 38

	)

83 
	#PF_NFC
 39

	)

84 
	#PF_VSOCK
 40

	)

85 
	#PF_KCM
 41

	)

86 
	#PF_QIPCRTR
 42

	)

87 
	#PF_SMC
 43

	)

88 
	#PF_XDP
 44

	)

89 
	#PF_MAX
 45

	)

92 
	#AF_UNSPEC
 
PF_UNSPEC


	)

93 
	#AF_LOCAL
 
PF_LOCAL


	)

94 
	#AF_UNIX
 
PF_UNIX


	)

95 
	#AF_FILE
 
PF_FILE


	)

96 
	#AF_INET
 
PF_INET


	)

97 
	#AF_AX25
 
PF_AX25


	)

98 
	#AF_IPX
 
PF_IPX


	)

99 
	#AF_APPLETALK
 
PF_APPLETALK


	)

100 
	#AF_NETROM
 
PF_NETROM


	)

101 
	#AF_BRIDGE
 
PF_BRIDGE


	)

102 
	#AF_ATMPVC
 
PF_ATMPVC


	)

103 
	#AF_X25
 
PF_X25


	)

104 
	#AF_INET6
 
PF_INET6


	)

105 
	#AF_ROSE
 
PF_ROSE


	)

106 
	#AF_DEC√t
 
PF_DEC√t


	)

107 
	#AF_NETBEUI
 
PF_NETBEUI


	)

108 
	#AF_SECURITY
 
PF_SECURITY


	)

109 
	#AF_KEY
 
PF_KEY


	)

110 
	#AF_NETLINK
 
PF_NETLINK


	)

111 
	#AF_ROUTE
 
PF_ROUTE


	)

112 
	#AF_PACKET
 
PF_PACKET


	)

113 
	#AF_ASH
 
PF_ASH


	)

114 
	#AF_ECONET
 
PF_ECONET


	)

115 
	#AF_ATMSVC
 
PF_ATMSVC


	)

116 
	#AF_RDS
 
PF_RDS


	)

117 
	#AF_SNA
 
PF_SNA


	)

118 
	#AF_IRDA
 
PF_IRDA


	)

119 
	#AF_PPPOX
 
PF_PPPOX


	)

120 
	#AF_WANPIPE
 
PF_WANPIPE


	)

121 
	#AF_LLC
 
PF_LLC


	)

122 
	#AF_IB
 
PF_IB


	)

123 
	#AF_MPLS
 
PF_MPLS


	)

124 
	#AF_CAN
 
PF_CAN


	)

125 
	#AF_TIPC
 
PF_TIPC


	)

126 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

127 
	#AF_IUCV
 
PF_IUCV


	)

128 
	#AF_RXRPC
 
PF_RXRPC


	)

129 
	#AF_ISDN
 
PF_ISDN


	)

130 
	#AF_PHONET
 
PF_PHONET


	)

131 
	#AF_IEEE802154
 
PF_IEEE802154


	)

132 
	#AF_CAIF
 
PF_CAIF


	)

133 
	#AF_ALG
 
PF_ALG


	)

134 
	#AF_NFC
 
PF_NFC


	)

135 
	#AF_VSOCK
 
PF_VSOCK


	)

136 
	#AF_KCM
 
PF_KCM


	)

137 
	#AF_QIPCRTR
 
PF_QIPCRTR


	)

138 
	#AF_SMC
 
PF_SMC


	)

139 
	#AF_XDP
 
PF_XDP


	)

140 
	#AF_MAX
 
PF_MAX


	)

146 
	#SOL_RAW
 255

	)

147 
	#SOL_DECNET
 261

	)

148 
	#SOL_X25
 262

	)

149 
	#SOL_PACKET
 263

	)

150 
	#SOL_ATM
 264

	)

151 
	#SOL_AAL
 265

	)

152 
	#SOL_IRDA
 266

	)

153 
	#SOL_NETBEUI
 267

	)

154 
	#SOL_LLC
 268

	)

155 
	#SOL_DCCP
 269

	)

156 
	#SOL_NETLINK
 270

	)

157 
	#SOL_TIPC
 271

	)

158 
	#SOL_RXRPC
 272

	)

159 
	#SOL_PPPOL2TP
 273

	)

160 
	#SOL_BLUETOOTH
 274

	)

161 
	#SOL_PNPIPE
 275

	)

162 
	#SOL_RDS
 276

	)

163 
	#SOL_IUCV
 277

	)

164 
	#SOL_CAIF
 278

	)

165 
	#SOL_ALG
 279

	)

166 
	#SOL_NFC
 280

	)

167 
	#SOL_KCM
 281

	)

168 
	#SOL_TLS
 282

	)

169 
	#SOL_XDP
 283

	)

172 
	#SOMAXCONN
 4096

	)

175 
	~<bôs/sockaddr.h
>

178 
	ssockaddr


180 
__SOCKADDR_COMMON
 (
ß_
);

181 
	mß_d©a
[14];

187 
	#__ss_Æig¡y≥
 

	)

188 
	#_SS_PADSIZE
 \

189 (
_SS_SIZE
 - 
__SOCKADDR_COMMON_SIZE
 -  (
__ss_Æig¡y≥
))

	)

191 
	ssockaddr_°‹age


193 
__SOCKADDR_COMMON
 (
ss_
);

194 
	m__ss_∑ddög
[
_SS_PADSIZE
];

195 
__ss_Æig¡y≥
 
	m__ss_Æign
;

202 
	mMSG_OOB
 = 0x01,

203 
	#MSG_OOB
 
MSG_OOB


	)

204 
	mMSG_PEEK
 = 0x02,

205 
	#MSG_PEEK
 
MSG_PEEK


	)

206 
	mMSG_DONTROUTE
 = 0x04,

207 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

208 #ifde‡
__USE_GNU


210 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

211 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

213 
	mMSG_CTRUNC
 = 0x08,

214 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

215 
	mMSG_PROXY
 = 0x10,

216 
	#MSG_PROXY
 
MSG_PROXY


	)

217 
	mMSG_TRUNC
 = 0x20,

218 
	#MSG_TRUNC
 
MSG_TRUNC


	)

219 
	mMSG_DONTWAIT
 = 0x40,

220 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

221 
	mMSG_EOR
 = 0x80,

222 
	#MSG_EOR
 
MSG_EOR


	)

223 
	mMSG_WAITALL
 = 0x100,

224 
	#MSG_WAITALL
 
MSG_WAITALL


	)

225 
	mMSG_FIN
 = 0x200,

226 
	#MSG_FIN
 
MSG_FIN


	)

227 
	mMSG_SYN
 = 0x400,

228 
	#MSG_SYN
 
MSG_SYN


	)

229 
	mMSG_CONFIRM
 = 0x800,

230 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

231 
	mMSG_RST
 = 0x1000,

232 
	#MSG_RST
 
MSG_RST


	)

233 
	mMSG_ERRQUEUE
 = 0x2000,

234 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

235 
	mMSG_NOSIGNAL
 = 0x4000,

236 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

237 
	mMSG_MORE
 = 0x8000,

238 
	#MSG_MORE
 
MSG_MORE


	)

239 
	mMSG_WAITFORONE
 = 0x10000,

240 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

241 
	mMSG_BATCH
 = 0x40000,

242 
	#MSG_BATCH
 
MSG_BATCH


	)

243 
	mMSG_ZEROCOPY
 = 0x4000000,

244 
	#MSG_ZEROCOPY
 
MSG_ZEROCOPY


	)

245 
	mMSG_FASTOPEN
 = 0x20000000,

246 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

248 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

251 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

257 
	smsghdr


259 *
	mmsg_«me
;

260 
sockÀn_t
 
	mmsg_«mñí
;

262 
iovec
 *
	mmsg_iov
;

263 
size_t
 
	mmsg_iovÀn
;

265 *
	mmsg_c⁄åﬁ
;

266 
size_t
 
	mmsg_c⁄åﬁÀn
;

271 
	mmsg_Êags
;

275 
	scmsghdr


277 
size_t
 
	mcmsg_Àn
;

282 
	mcmsg_Àvñ
;

283 
	mcmsg_ty≥
;

284 #i‡
__glibc_c99_Êex¨r_avaûabÀ


285 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

290 #i‡
__glibc_c99_Êex¨r_avaûabÀ


291 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

293 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

295 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

296 
	#CMSG_FIRSTHDR
(
mhdr
) \

297 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

298 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

299 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

300 & (
size_t
Ë~( (size_tË- 1))

	)

301 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

302 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

303 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

305 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

306 
cmsghdr
 *
__cmsg
Ë
__THROW
;

307 #ifde‡
__USE_EXTERN_INLINES


308 #i‚de‡
_EXTERN_INLINE


309 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

311 
_EXTERN_INLINE
 
cmsghdr
 *

312 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

314 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

316  (
cmsghdr
 *) 0;

318 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

319 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

320 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


321 + 
__mhdr
->
msg_c⁄åﬁÀn
)

322 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

323 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

325  (
cmsghdr
 *) 0;

326  
__cmsg
;

327 
	}
}

334 
	mSCM_RIGHTS
 = 0x01

335 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

336 #ifde‡
__USE_GNU


337 , 
	mSCM_CREDENTIALS
 = 0x02

338 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

342 #ifde‡
__USE_GNU


344 
	su¸ed


346 
pid_t
 
	mpid
;

347 
uid_t
 
	muid
;

348 
gid_t
 
	mgid
;

352 #ifde‡
__USE_MISC


353 
	~<bôs/ty≥s/time_t.h
>

354 
	~<asm/sockë.h
>

356 
	#SO_DEBUG
 1

	)

357 
	~<bôs/sockë-c⁄°™ts.h
>

361 
	slögî


363 
	ml_⁄off
;

364 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/ss_flags.h

19 #i‚de‡
_BITS_SS_FLAGS_H


20 
	#_BITS_SS_FLAGS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


29 
	mSS_ONSTACK
 = 1,

30 
	#SS_ONSTACK
 
SS_ONSTACK


	)

31 
	mSS_DISABLE


32 
	#SS_DISABLE
 
SS_DISABLE


	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statfs.h

18 #i‚de‡
_SYS_STATFS_H


22 
	~<bôs/ty≥s.h
>

24 
	s°©fs


26 
__fsw‹d_t
 
	mf_ty≥
;

27 
__fsw‹d_t
 
	mf_bsize
;

28 #i‚de‡
__USE_FILE_OFFSET64


29 
__fsblk˙t_t
 
	mf_blocks
;

30 
__fsblk˙t_t
 
	mf_b‰ì
;

31 
__fsblk˙t_t
 
	mf_bavaû
;

32 
__fsfû˙t_t
 
	mf_fûes
;

33 
__fsfû˙t_t
 
	mf_f‰ì
;

35 
__fsblk˙t64_t
 
	mf_blocks
;

36 
__fsblk˙t64_t
 
	mf_b‰ì
;

37 
__fsblk˙t64_t
 
	mf_bavaû
;

38 
__fsfû˙t64_t
 
	mf_fûes
;

39 
__fsfû˙t64_t
 
	mf_f‰ì
;

41 
__fsid_t
 
	mf_fsid
;

42 
__fsw‹d_t
 
	mf_«mñí
;

43 
__fsw‹d_t
 
	mf_‰size
;

44 
__fsw‹d_t
 
	mf_Êags
;

45 
__fsw‹d_t
 
	mf_•¨e
[4];

48 #ifde‡
__USE_LARGEFILE64


49 
	s°©fs64


51 
__fsw‹d_t
 
	mf_ty≥
;

52 
__fsw‹d_t
 
	mf_bsize
;

53 
__fsblk˙t64_t
 
	mf_blocks
;

54 
__fsblk˙t64_t
 
	mf_b‰ì
;

55 
__fsblk˙t64_t
 
	mf_bavaû
;

56 
__fsfû˙t64_t
 
	mf_fûes
;

57 
__fsfû˙t64_t
 
	mf_f‰ì
;

58 
__fsid_t
 
	mf_fsid
;

59 
__fsw‹d_t
 
	mf_«mñí
;

60 
__fsw‹d_t
 
	mf_‰size
;

61 
__fsw‹d_t
 
	mf_Êags
;

62 
__fsw‹d_t
 
	mf_•¨e
[4];

67 
	#_STATFS_F_NAMELEN


	)

68 
	#_STATFS_F_FRSIZE


	)

69 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/statvfs.h

18 #i‚de‡
_SYS_STATVFS_H


22 
	~<bôs/ty≥s.h
>

24 #i‡(
__WORDSIZE
 == 32 \

25 && (!
deföed
 
	g__SYSCALL_WORDSIZE
 || __SYSCALL_WORDSIZE == 32))

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
f_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/statx.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

29 #ifde‡
__has_ö˛ude


30 #i‡
__has_ö˛ude
 ("linux/stat.h")

31 
	~"löux/°©.h
"

32 #ifde‡
STATX_TYPE


33 
	#__°©x_time°amp_deföed
 1

	)

34 
	#__°©x_deföed
 1

	)

39 
	~<bôs/°©x-gíîic.h
>

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

31 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

32 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

34 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

35 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

39 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


40 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

41 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

44 #ifdef 
__USE_ISOC99


45 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

46 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

47 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

48 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

50 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

51 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

52 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

56 #ifde‡
__USE_XOPEN2K8


57 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

61 #ifde‡
__USE_GNU


62 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

63 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

64 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

65 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

66 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


70 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

72 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


73 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 1

77 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

79 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

81 #ifde‡
__USE_XOPEN2K8


82 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

85 #ifde‡
__USE_GNU


86 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

28 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

29 c⁄° *
__ª°ri˘
 
__f‹m©
,

30 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

32 #ifde‡
__va_¨g_∑ck


33 
__f‹tify_fun˘i⁄
 

34 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

36  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

37 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

38 
	}
}

39 #ñi‡!
deföed
 
__˝lu•lus


40 
	#•rötf
(
°r
, ...) \

41 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

42 
__VA_ARGS__
)

	)

45 
__f‹tify_fun˘i⁄
 

46 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

47 
__gnuc_va_li°
 
__≠
))

49  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

50 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

51 
	}
}

53 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


55 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 ...Ë
__THROW
;

58 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

62 #ifde‡
__va_¨g_∑ck


63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

65 c⁄° *
__ª°ri˘
 
__fmt
, ...))

67  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

68 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

69 
	}
}

70 #ñi‡!
deföed
 
__˝lu•lus


71 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

72 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

73 
__VA_ARGS__
)

	)

76 
__f‹tify_fun˘i⁄
 

77 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

78 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

80  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

82 
	}
}

86 #i‡
__USE_FORTIFY_LEVEL
 > 1

88 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

90 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

91 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

92 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

93 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

94 
__gnuc_va_li°
 
__≠
);

96 #ifde‡
__va_¨g_∑ck


97 
__f‹tify_fun˘i⁄
 

98 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

100  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

101 
	`__va_¨g_∑ck
 ());

102 
	}
}

104 
__f‹tify_fun˘i⁄
 

105 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

107  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

108 
	}
}

109 #ñi‡!
deföed
 
__˝lu•lus


110 
	#¥ötf
(...) \

111 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

112 
	#Ârötf
(
°ªam
, ...) \

113 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

116 
__f‹tify_fun˘i⁄
 

117 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

119 #ifde‡
__USE_EXTERN_INLINES


120  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

124 
	}
}

126 
__f‹tify_fun˘i⁄
 

127 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

128 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

130  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

131 
	}
}

133 #ifde‡
__USE_XOPEN2K8


134 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

135 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

136 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

137 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

138 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

140 #ifde‡
__va_¨g_∑ck


141 
__f‹tify_fun˘i⁄
 

142 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

144  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

145 
	`__va_¨g_∑ck
 ());

146 
	}
}

147 #ñi‡!
deföed
 
__˝lu•lus


148 
	#d¥ötf
(
fd
, ...) \

149 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

152 
__f‹tify_fun˘i⁄
 

153 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

155  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

156 
	}
}

159 #ifde‡
__USE_GNU


161 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, ...)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

164 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

165 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

166 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

167 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

168 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

170 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

171 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

172 
__Êag
,

173 c⁄° *
__ª°ri˘
 
__f‹m©
,

174 
__gnuc_va_li°
 
__¨gs
)

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

177 #ifde‡
__va_¨g_∑ck


178 
__f‹tify_fun˘i⁄
 

179 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

181  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

185 
__f‹tify_fun˘i⁄
 

186 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

189  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

190 
	`__va_¨g_∑ck
 ());

191 
	}
}

193 
__f‹tify_fun˘i⁄
 

194 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

195 c⁄° *
__ª°ri˘
 
__fmt
, ...))

197  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

198 
	`__va_¨g_∑ck
 ());

199 
	}
}

200 #ñi‡!
deföed
 
__˝lu•lus


201 
	#a•rötf
(
±r
, ...) \

202 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

203 
	#__a•rötf
(
±r
, ...) \

204 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

205 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

206 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

209 
__f‹tify_fun˘i⁄
 

210 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

211 
__gnuc_va_li°
 
__≠
))

213  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

214 
	}
}

216 
__f‹tify_fun˘i⁄
 

217 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

218 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

220  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

221 
__≠
);

222 
	}
}

228 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

229 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

230 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

231 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

234 
__f‹tify_fun˘i⁄
 
__wur
 *

235 
	$gës
 (*
__°r
)

237 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

238  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

239  
	`__gës_w¨n
 (
__°r
);

240 
	}
}

243 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_Æüs
,

246 (*
__ª°ri˘
 
__s
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

248 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

249 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

250 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

251 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

254 
__f‹tify_fun˘i⁄
 
__wur
 *

255 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

257 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

260  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

263  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

265  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

266 
	}
}

268 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

269 
size_t
 
__size
, size_à
__n
,

270 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

271 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

272 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

273 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

274 
‰ód
Ë
__wur
;

275 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

276 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

277 
size_t
 
__size
, size_à
__n
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
),

279 
__‰ód_chk
)

280 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

283 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


284 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
)

287 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

289 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

290 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

291 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

292  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

295  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

297  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

298 
	}
}

300 #ifde‡
__USE_GNU


301 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

302 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

304 (*
__ª°ri˘
 
__s
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

306 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

307 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

308 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

309 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

312 
__f‹tify_fun˘i⁄
 
__wur
 *

313 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

315 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

317 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

318  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

321  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

323  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

324 
	}
}

327 #ifde‡
__USE_MISC


328 #unde‡
‰ód_u∆ocked


329 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

330 
size_t
 
__size
, size_à
__n
,

331 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

332 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

333 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

334 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

335 
‰ód_u∆ocked
Ë
__wur
;

336 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

337 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

338 
size_t
 
__size
, size_à
__n
,

339 
FILE
 *
__ª°ri˘
 
__°ªam
),

340 
__‰ód_u∆ocked_chk
)

341 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

344 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


345 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

346 
FILE
 *
__ª°ri˘
 
__°ªam
)

348 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

350 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

351 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

352 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

353  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

354 
__°ªam
);

356 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

357  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

358 
__°ªam
);

361 #ifde‡
__USE_EXTERN_INLINES


362 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

363 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

364 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

365 && 
__size
 * 
__n
 <= 8)

367 
size_t
 
__˙t
 = 
__size
 * 
__n
;

368 *
__˝å
 = (*Ë
__±r
;

369 i‡(
__˙t
 == 0)

372 ; 
__˙t
 > 0; --__cnt)

374 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

375 i‡(
__c
 =
EOF
)

377 *
__˝å
++ = 
__c
;

379  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

382  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

383 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

164 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

165 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

168 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

171 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

174 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

179 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

180 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

183 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

184 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

187 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

188 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

191 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

193 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

196 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

198 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

202 
__off64_t
 
	t__loff_t
;

203 *
	t__ˇddr_t
;

206 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

209 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

214 
	t__sig_©omic_t
;

219 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


220 
	#__time64_t
 
__time_t


	)

221 #ñi‡
__TIMESIZE
 != 64

222 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

225 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/error_t.h

19 #i‚de‡
__îr‹_t_deföed


20 
	#__îr‹_t_deföed
 1

	)

22 
	tîr‹_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/sig_atomic_t.h

1 #i‚de‡
__sig_©omic_t_deföed


2 
	#__sig_©omic_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
__sig_©omic_t
 
	tsig_©omic_t
;

	@/usr/include/bits/types/sigevent_t.h

1 #i‚de‡
__sigevít_t_deföed


2 
	#__sigevít_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SIGEV_MAX_SIZE
 64

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

16 #i‚de‡
__have_±hªad_©å_t


17 
±hªad_©å_t
 
	t±hªad_©å_t
;

18 
	#__have_±hªad_©å_t
 1

	)

22 
	ssigevít


24 
__sigvÆ_t
 
	msigev_vÆue
;

25 
	msigev_signo
;

26 
	msigev_nŸify
;

30 
	m_∑d
[
__SIGEV_PAD_SIZE
];

34 
__pid_t
 
	m_tid
;

38 (*
	m_fun˘i⁄
Ë(
	m__sigvÆ_t
);

39 
±hªad_©å_t
 *
	m_©åibuã
;

40 } 
	m_sigev_thªad
;

41 } 
	m_sigev_un
;

42 } 
	tsigevít_t
;

45 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

46 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

	@/usr/include/bits/types/siginfo_t.h

1 #i‚de‡
__sigöfo_t_deföed


2 
	#__sigöfo_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SI_MAX_SIZE
 128

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

16 
	~<bôs/sigöfo-¨ch.h
>

17 #i‚de‡
__SI_ALIGNMENT


18 
	#__SI_ALIGNMENT


	)

20 #i‚de‡
__SI_BAND_TYPE


21 
	#__SI_BAND_TYPE
 

	)

23 #i‚de‡
__SI_CLOCK_T


24 
	#__SI_CLOCK_T
 
__˛ock_t


	)

26 #i‚de‡
__SI_ERRNO_THEN_CODE


27 
	#__SI_ERRNO_THEN_CODE
 1

	)

29 #i‚de‡
__SI_HAVE_SIGSYS


30 
	#__SI_HAVE_SIGSYS
 1

	)

32 #i‚de‡
__SI_SIGFAULT_ADDL


33 
	#__SI_SIGFAULT_ADDL


	)

38 
	msi_signo
;

39 #i‡
__SI_ERRNO_THEN_CODE


40 
	msi_î∫o
;

42 
	msi_code
;

44 
	msi_code
;

45 
	msi_î∫o
;

47 #i‡
__WORDSIZE
 == 64

48 
	m__∑d0
;

53 
	m_∑d
[
__SI_PAD_SIZE
];

58 
__pid_t
 
	msi_pid
;

59 
__uid_t
 
	msi_uid
;

60 } 
	m_kûl
;

65 
	msi_tid
;

66 
	msi_ovîrun
;

67 
__sigvÆ_t
 
	msi_sigvÆ
;

68 } 
	m_timî
;

73 
__pid_t
 
	msi_pid
;

74 
__uid_t
 
	msi_uid
;

75 
__sigvÆ_t
 
	msi_sigvÆ
;

76 } 
	m_π
;

81 
__pid_t
 
	msi_pid
;

82 
__uid_t
 
	msi_uid
;

83 
	msi_°©us
;

84 
__SI_CLOCK_T
 
	msi_utime
;

85 
__SI_CLOCK_T
 
	msi_°ime
;

86 } 
	m_sigchld
;

91 *
	msi_addr
;

92 
__SI_SIGFAULT_ADDL


93 
	msi_addr_lsb
;

99 *
	m_lowî
;

100 *
	m_uµî
;

101 } 
	m_addr_bnd
;

103 
__uöt32_t
 
	m_pkey
;

104 } 
	m_bounds
;

105 } 
	m_sigÁu…
;

110 
__SI_BAND_TYPE
 
	msi_b™d
;

111 
	msi_fd
;

112 } 
	m_sigpﬁl
;

115 #i‡
__SI_HAVE_SIGSYS


118 *
	m_ˇŒ_addr
;

119 
	m_sysˇŒ
;

120 
	m_¨ch
;

121 } 
	m_sigsys
;

123 } 
	m_sifõlds
;

124 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

128 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

129 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

130 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

131 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

132 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

133 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

134 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

135 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

136 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

137 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

138 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

139 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

140 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_lowî


	)

141 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_uµî


	)

142 
	#si_pkey
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_pkey


	)

143 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

144 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

145 #i‡
__SI_HAVE_SIGSYS


146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/sigval_t.h

1 #i‚de‡
__sigvÆ_t_deföed


2 
	#__sigvÆ_t_deföed


	)

4 
	~<bôs/ty≥s/__sigvÆ_t.h
>

12 #i‚de‡
__USE_POSIX199309


16 
__sigvÆ_t
 
	tsigvÆ_t
;

	@/usr/include/bits/types/stack_t.h

19 #i‚de‡
__°ack_t_deföed


20 
	#__°ack_t_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

28 *
	mss_•
;

29 
	mss_Êags
;

30 
size_t
 
	mss_size
;

31 } 
	t°ack_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_osockaddr.h

1 #i‚de‡
__osockaddr_deföed


2 
	#__osockaddr_deföed
 1

	)

6 
	sosockaddr


8 
	mß_Ámûy
;

9 
	mß_d©a
[14];

	@/usr/include/bits/types/struct_sigstack.h

19 #i‚de‡
__sig°ack_deföed


20 
	#__sig°ack_deföed
 1

	)

23 
	ssig°ack


25 *
	mss_•
;

26 
	mss_⁄°ack
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

10 
	stime•ec


12 
__time_t
 
	mtv_£c
;

13 #i‡
__WORDSIZE
 == 64 \

14 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

15 || 
__TIMESIZE
 == 32

16 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

18 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


20 
	mtv_n£c
;

22 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/uio-ext.h

19 #i‚de‡
_BITS_UIO_EXT_H


20 
	#_BITS_UIO_EXT_H
 1

	)

22 #i‚de‡
_SYS_UIO_H


26 
__BEGIN_DECLS


29 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

30 
__liov˙t
,

31 c⁄° 
iovec
 *
__rvec
,

32 
__riov˙t
,

33 
__Êags
)

34 
__THROW
;

37 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

38 
__liov˙t
,

39 c⁄° 
iovec
 *
__rvec
,

40 
__riov˙t
,

41 
__Êags
)

42 
__THROW
;

45 
	#RWF_HIPRI
 0x00000001

	)

46 
	#RWF_DSYNC
 0x00000002

	)

47 
	#RWF_SYNC
 0x00000004

	)

48 
	#RWF_NOWAIT
 0x00000008

	)

49 
	#RWF_APPEND
 0x00000010

	)

51 
__END_DECLS


	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/linux/kernel.h

2 #i‚de‡
_LINUX_KERNEL_H


3 
	#_LINUX_KERNEL_H


	)

5 
	~<löux/sysöfo.h
>

6 
	~<löux/c⁄°.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/sig£t_t.h
>

25 
	~<bôs/ty≥s/°ack_t.h
>

28 #ifde‡
__USE_MISC


29 
	#__˘x
(
Êd
Ë
	)
fld

31 
	#__˘x
(
Êd
Ë
__
 ## 
	)
fld

34 #ifde‡
__x86_64__


37 
__exãnsi⁄__
 
	tgªg_t
;

40 
	#__NGREG
 23

	)

41 #ifde‡
__USE_MISC


42 
	#NGREG
 
__NGREG


	)

46 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

48 #ifde‡
__USE_GNU


52 
	mREG_R8
 = 0,

53 
	#REG_R8
 
REG_R8


	)

54 
	mREG_R9
,

55 
	#REG_R9
 
REG_R9


	)

56 
	mREG_R10
,

57 
	#REG_R10
 
REG_R10


	)

58 
	mREG_R11
,

59 
	#REG_R11
 
REG_R11


	)

60 
	mREG_R12
,

61 
	#REG_R12
 
REG_R12


	)

62 
	mREG_R13
,

63 
	#REG_R13
 
REG_R13


	)

64 
	mREG_R14
,

65 
	#REG_R14
 
REG_R14


	)

66 
	mREG_R15
,

67 
	#REG_R15
 
REG_R15


	)

68 
	mREG_RDI
,

69 
	#REG_RDI
 
REG_RDI


	)

70 
	mREG_RSI
,

71 
	#REG_RSI
 
REG_RSI


	)

72 
	mREG_RBP
,

73 
	#REG_RBP
 
REG_RBP


	)

74 
	mREG_RBX
,

75 
	#REG_RBX
 
REG_RBX


	)

76 
	mREG_RDX
,

77 
	#REG_RDX
 
REG_RDX


	)

78 
	mREG_RAX
,

79 
	#REG_RAX
 
REG_RAX


	)

80 
	mREG_RCX
,

81 
	#REG_RCX
 
REG_RCX


	)

82 
	mREG_RSP
,

83 
	#REG_RSP
 
REG_RSP


	)

84 
	mREG_RIP
,

85 
	#REG_RIP
 
REG_RIP


	)

86 
	mREG_EFL
,

87 
	#REG_EFL
 
REG_EFL


	)

88 
	mREG_CSGSFS
,

89 
	#REG_CSGSFS
 
REG_CSGSFS


	)

90 
	mREG_ERR
,

91 
	#REG_ERR
 
REG_ERR


	)

92 
	mREG_TRAPNO
,

93 
	#REG_TRAPNO
 
REG_TRAPNO


	)

94 
	mREG_OLDMASK
,

95 
	#REG_OLDMASK
 
REG_OLDMASK


	)

96 
	mREG_CR2


97 
	#REG_CR2
 
REG_CR2


	)

101 
	s_libc_Âxªg


103 
__˘x
(
signifiˇnd
)[4];

104 
__˘x
(
exp⁄ít
);

105 
	m__glibc_ª£rved1
[3];

108 
	s_libc_xmmªg


110 
__uöt32_t
 
__˘x
(
ñemít
)[4];

113 
	s_libc_Â°©e


116 
__uöt16_t
 
__˘x
(
cwd
);

117 
__uöt16_t
 
__˘x
(
swd
);

118 
__uöt16_t
 
__˘x
(
·w
);

119 
__uöt16_t
 
__˘x
(
f›
);

120 
__uöt64_t
 
__˘x
(
rù
);

121 
__uöt64_t
 
__˘x
(
rdp
);

122 
__uöt32_t
 
__˘x
(
mxc§
);

123 
__uöt32_t
 
__˘x
(
mx¸_mask
);

124 
_libc_Âxªg
 
	m_°
[8];

125 
_libc_xmmªg
 
	m_xmm
[16];

126 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

130 
_libc_Â°©e
 *
	tÂªg£t_t
;

135 
gªg£t_t
 
__˘x
(
gªgs
);

137 
Âªg£t_t
 
__˘x
(
Âªgs
);

138 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

139 } 
	tmc⁄ãxt_t
;

142 
	suc⁄ãxt_t


144 
__˘x
(
uc_Êags
);

145 
uc⁄ãxt_t
 *
	muc_lök
;

146 
°ack_t
 
	muc_°ack
;

147 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

148 
sig£t_t
 
	muc_sigmask
;

149 
_libc_Â°©e
 
	m__Âªgs_mem
;

150 
__exãnsi⁄__
 
	m__s•
[4];

151 } 
	tuc⁄ãxt_t
;

156 
	tgªg_t
;

159 
	#__NGREG
 19

	)

160 #ifde‡
__USE_MISC


161 
	#NGREG
 
__NGREG


	)

165 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

167 #ifde‡
__USE_GNU


171 
	mREG_GS
 = 0,

172 
	#REG_GS
 
REG_GS


	)

173 
	mREG_FS
,

174 
	#REG_FS
 
REG_FS


	)

175 
	mREG_ES
,

176 
	#REG_ES
 
REG_ES


	)

177 
	mREG_DS
,

178 
	#REG_DS
 
REG_DS


	)

179 
	mREG_EDI
,

180 
	#REG_EDI
 
REG_EDI


	)

181 
	mREG_ESI
,

182 
	#REG_ESI
 
REG_ESI


	)

183 
	mREG_EBP
,

184 
	#REG_EBP
 
REG_EBP


	)

185 
	mREG_ESP
,

186 
	#REG_ESP
 
REG_ESP


	)

187 
	mREG_EBX
,

188 
	#REG_EBX
 
REG_EBX


	)

189 
	mREG_EDX
,

190 
	#REG_EDX
 
REG_EDX


	)

191 
	mREG_ECX
,

192 
	#REG_ECX
 
REG_ECX


	)

193 
	mREG_EAX
,

194 
	#REG_EAX
 
REG_EAX


	)

195 
	mREG_TRAPNO
,

196 
	#REG_TRAPNO
 
REG_TRAPNO


	)

197 
	mREG_ERR
,

198 
	#REG_ERR
 
REG_ERR


	)

199 
	mREG_EIP
,

200 
	#REG_EIP
 
REG_EIP


	)

201 
	mREG_CS
,

202 
	#REG_CS
 
REG_CS


	)

203 
	mREG_EFL
,

204 
	#REG_EFL
 
REG_EFL


	)

205 
	mREG_UESP
,

206 
	#REG_UESP
 
REG_UESP


	)

207 
	mREG_SS


208 
	#REG_SS
 
REG_SS


	)

213 
	s_libc_Âªg


215 
__˘x
(
signifiˇnd
)[4];

216 
__˘x
(
exp⁄ít
);

219 
	s_libc_Â°©e


221 
__˘x
(
cw
);

222 
__˘x
(
sw
);

223 
__˘x
(
èg
);

224 
__˘x
(
ùoff
);

225 
__˘x
(
cs£l
);

226 
__˘x
(
d©aoff
);

227 
__˘x
(
d©a£l
);

228 
_libc_Âªg
 
	m_°
[8];

229 
__˘x
(
°©us
);

233 
_libc_Â°©e
 *
	tÂªg£t_t
;

238 
gªg£t_t
 
__˘x
(
gªgs
);

241 
Âªg£t_t
 
__˘x
(
Âªgs
);

242 
__˘x
(
ﬁdmask
);

243 
__˘x
(
¸2
);

244 } 
	tmc⁄ãxt_t
;

247 
	suc⁄ãxt_t


249 
__˘x
(
uc_Êags
);

250 
uc⁄ãxt_t
 *
	muc_lök
;

251 
°ack_t
 
	muc_°ack
;

252 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

253 
sig£t_t
 
	muc_sigmask
;

254 
_libc_Â°©e
 
	m__Âªgs_mem
;

255 
	m__s•
[4];

256 } 
	tuc⁄ãxt_t
;

260 #unde‡
__˘x


	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_MISC


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_MISC


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_MISC


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_MISC


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

205 
	#F_ADD_SEALS
 1033

	)

206 
	#F_GET_SEALS
 1034

	)

208 
	#F_GET_RW_HINT
 1035

	)

209 
	#F_SET_RW_HINT
 1036

	)

210 
	#F_GET_FILE_RW_HINT
 1037

	)

211 
	#F_SET_FILE_RW_HINT
 1038

	)

213 #ifde‡
__USE_XOPEN2K8


214 
	#F_DUPFD_CLOEXEC
 1030

	)

219 
	#FD_CLOEXEC
 1

	)

221 #i‚de‡
F_RDLCK


223 
	#F_RDLCK
 0

	)

224 
	#F_WRLCK
 1

	)

225 
	#F_UNLCK
 2

	)

230 #i‚de‡
F_EXLCK


231 
	#F_EXLCK
 4

	)

232 
	#F_SHLCK
 8

	)

235 #ifde‡
__USE_MISC


237 
	#LOCK_SH
 1

	)

238 
	#LOCK_EX
 2

	)

239 
	#LOCK_NB
 4

	)

241 
	#LOCK_UN
 8

	)

244 #ifde‡
__USE_GNU


245 
	#LOCK_MAND
 32

	)

246 
	#LOCK_READ
 64

	)

247 
	#LOCK_WRITE
 128

	)

248 
	#LOCK_RW
 192

	)

251 #ifde‡
__USE_GNU


253 
	#DN_ACCESS
 0x00000001

	)

254 
	#DN_MODIFY
 0x00000002

	)

255 
	#DN_CREATE
 0x00000004

	)

256 
	#DN_DELETE
 0x00000008

	)

257 
	#DN_RENAME
 0x00000010

	)

258 
	#DN_ATTRIB
 0x00000020

	)

259 
	#DN_MULTISHOT
 0x80000000

	)

263 #ifde‡
__USE_GNU


265 
	e__pid_ty≥


267 
	mF_OWNER_TID
 = 0,

268 
	mF_OWNER_PID
,

269 
	mF_OWNER_PGRP
,

270 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


274 
	sf_ow√r_ex


276 
__pid_ty≥
 
	mty≥
;

277 
__pid_t
 
	mpid
;

281 #ifde‡
__USE_GNU


283 
	#F_SEAL_SEAL
 0x0001

	)

284 
	#F_SEAL_SHRINK
 0x0002

	)

285 
	#F_SEAL_GROW
 0x0004

	)

286 
	#F_SEAL_WRITE
 0x0008

	)

287 
	#F_SEAL_FUTURE_WRITE
 0x0010

	)

291 #ifde‡
__USE_GNU


293 
	#RWF_WRITE_LIFE_NOT_SET
 0

	)

294 
	#RWH_WRITE_LIFE_NONE
 1

	)

295 
	#RWH_WRITE_LIFE_SHORT
 2

	)

296 
	#RWH_WRITE_LIFE_MEDIUM
 3

	)

297 
	#RWH_WRITE_LIFE_LONG
 4

	)

298 
	#RWH_WRITE_LIFE_EXTREME
 5

	)

303 #ifdef 
__USE_MISC


304 
	#FAPPEND
 
O_APPEND


	)

305 
	#FFSYNC
 
O_FSYNC


	)

306 
	#FASYNC
 
O_ASYNC


	)

307 
	#FNONBLOCK
 
O_NONBLOCK


	)

308 
	#FNDELAY
 
O_NDELAY


	)

311 #i‚de‡
__POSIX_FADV_DONTNEED


312 
	#__POSIX_FADV_DONTNEED
 4

	)

313 
	#__POSIX_FADV_NOREUSE
 5

	)

316 #ifde‡
__USE_XOPEN2K


317 
	#POSIX_FADV_NORMAL
 0

	)

318 
	#POSIX_FADV_RANDOM
 1

	)

319 
	#POSIX_FADV_SEQUENTIAL
 2

	)

320 
	#POSIX_FADV_WILLNEED
 3

	)

321 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

322 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

326 #ifde‡
__USE_GNU


328 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

331 
	#SYNC_FILE_RANGE_WRITE
 2

	)

334 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

339 
	#SYNC_FILE_RANGE_WRITE_AND_WAIT
 (
SYNC_FILE_RANGE_WRITE
 \

340 | 
SYNC_FILE_RANGE_WAIT_BEFORE
 \

341 | 
SYNC_FILE_RANGE_WAIT_AFTER
)

	)

344 
	#SPLICE_F_MOVE
 1

	)

345 
	#SPLICE_F_NONBLOCK
 2

	)

348 
	#SPLICE_F_MORE
 4

	)

349 
	#SPLICE_F_GIFT
 8

	)

353 
	~<löux/ÁŒoc.h
>

357 
	sfûe_h™dÀ


359 
	mh™dÀ_byãs
;

360 
	mh™dÀ_ty≥
;

362 
	mf_h™dÀ
[0];

366 
	#MAX_HANDLE_SZ
 128

	)

370 #ifde‡
__USE_ATFILE


371 
	#AT_FDCWD
 -100

	)

374 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

375 
	#AT_REMOVEDIR
 0x200

	)

377 
	#AT_SYMLINK_FOLLOW
 0x400

	)

378 #ifde‡
__USE_GNU


379 
	#AT_NO_AUTOMOUNT
 0x800

	)

381 
	#AT_EMPTY_PATH
 0x1000

	)

382 
	#AT_STATX_SYNC_TYPE
 0x6000

	)

383 
	#AT_STATX_SYNC_AS_STAT
 0x0000

	)

384 
	#AT_STATX_FORCE_SYNC
 0x2000

	)

385 
	#AT_STATX_DONT_SYNC
 0x4000

	)

386 
	#AT_RECURSIVE
 0x8000

	)

388 
	#AT_EACCESS
 0x200

	)

392 
	g__BEGIN_DECLS


394 #ifde‡
__USE_GNU


397 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

398 
__THROW
;

405 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

406 
__Êags
);

413 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

414 
size_t
 
__cou¡
, 
__Êags
);

420 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

421 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

422 
__Êags
);

428 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

429 
__Êags
);

435 #i‚de‡
__USE_FILE_OFFSET64


436 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

438 #ifde‡
__REDIRECT


439 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

440 
__off64_t
 
__Àn
),

441 
ÁŒoˇã64
);

443 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

446 #ifde‡
__USE_LARGEFILE64


447 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

448 
__off64_t
 
__Àn
);

453 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

454 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

455 
__Êags
Ë
__THROW
;

461 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

462 
__Êags
);

466 
__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/siginfo-arch.h

2 #i‚de‡
_BITS_SIGINFO_ARCH_H


3 
	#_BITS_SIGINFO_ARCH_H
 1

	)

5 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

12 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

13 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

14 
	#__SI_CLOCK_T
 
__sigchld_˛ock_t


	)

	@/usr/include/bits/siginfo-consts-arch.h

2 #i‚de‡
_BITS_SIGINFO_CONSTS_ARCH_H


3 
	#_BITS_SIGINFO_CONSTS_ARCH_H
 1

	)

	@/usr/include/bits/signum-generic.h

19 #i‚def 
_BITS_SIGNUM_GENERIC_H


20 
	#_BITS_SIGNUM_GENERIC_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

29 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

30 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

32 #ifde‡
__USE_XOPEN


33 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

48 
	#SIGINT
 2

	)

49 
	#SIGILL
 4

	)

50 
	#SIGABRT
 6

	)

51 
	#SIGFPE
 8

	)

52 
	#SIGSEGV
 11

	)

53 
	#SIGTERM
 15

	)

56 
	#SIGHUP
 1

	)

57 
	#SIGQUIT
 3

	)

58 
	#SIGTRAP
 5

	)

59 
	#SIGKILL
 9

	)

60 
	#SIGBUS
 10

	)

61 
	#SIGSYS
 12

	)

62 
	#SIGPIPE
 13

	)

63 
	#SIGALRM
 14

	)

66 
	#SIGURG
 16

	)

67 
	#SIGSTOP
 17

	)

68 
	#SIGTSTP
 18

	)

69 
	#SIGCONT
 19

	)

70 
	#SIGCHLD
 20

	)

71 
	#SIGTTIN
 21

	)

72 
	#SIGTTOU
 22

	)

73 
	#SIGPOLL
 23

	)

74 
	#SIGXCPU
 24

	)

75 
	#SIGXFSZ
 25

	)

76 
	#SIGVTALRM
 26

	)

77 
	#SIGPROF
 27

	)

78 
	#SIGUSR1
 30

	)

79 
	#SIGUSR2
 31

	)

83 
	#SIGWINCH
 28

	)

86 
	#SIGIO
 
SIGPOLL


	)

87 
	#SIGIOT
 
SIGABRT


	)

88 
	#SIGCLD
 
SIGCHLD


	)

96 
	#__SIGRTMIN
 32

	)

97 
	#__SIGRTMAX
 
__SIGRTMIN


	)

100 
	#_NSIG
 (
__SIGRTMAX
 + 1)

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

40 
	#_SS_SIZE
 128

	)

	@/usr/include/bits/socket-constants.h

19 #i‚de‡
_SYS_SOCKET_H


23 
	#SOL_SOCKET
 1

	)

24 
	#SO_ACCEPTCONN
 30

	)

25 
	#SO_BROADCAST
 6

	)

26 
	#SO_DONTROUTE
 5

	)

27 
	#SO_ERROR
 4

	)

28 
	#SO_KEEPALIVE
 9

	)

29 
	#SO_LINGER
 13

	)

30 
	#SO_OOBINLINE
 10

	)

31 
	#SO_RCVBUF
 8

	)

32 
	#SO_RCVLOWAT
 18

	)

33 
	#SO_RCVTIMEO
 20

	)

34 
	#SO_REUSEADDR
 2

	)

35 
	#SO_SNDBUF
 7

	)

36 
	#SO_SNDLOWAT
 19

	)

37 
	#SO_SNDTIMEO
 21

	)

38 
	#SO_TYPE
 3

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/statx-generic.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
-
gíîic
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

25 
	~<bôs/ty≥s/°ru˘_°©x_time°amp.h
>

26 
	~<bôs/ty≥s/°ru˘_°©x.h
>

28 #i‚de‡
STATX_TYPE


29 
	#STATX_TYPE
 0x0001U

	)

30 
	#STATX_MODE
 0x0002U

	)

31 
	#STATX_NLINK
 0x0004U

	)

32 
	#STATX_UID
 0x0008U

	)

33 
	#STATX_GID
 0x0010U

	)

34 
	#STATX_ATIME
 0x0020U

	)

35 
	#STATX_MTIME
 0x0040U

	)

36 
	#STATX_CTIME
 0x0080U

	)

37 
	#STATX_INO
 0x0100U

	)

38 
	#STATX_SIZE
 0x0200U

	)

39 
	#STATX_BLOCKS
 0x0400U

	)

40 
	#STATX_BASIC_STATS
 0x07ffU

	)

41 
	#STATX_ALL
 0x0fffU

	)

42 
	#STATX_BTIME
 0x0800U

	)

43 
	#STATX__RESERVED
 0x80000000U

	)

45 
	#STATX_ATTR_COMPRESSED
 0x0004

	)

46 
	#STATX_ATTR_IMMUTABLE
 0x0010

	)

47 
	#STATX_ATTR_APPEND
 0x0020

	)

48 
	#STATX_ATTR_NODUMP
 0x0040

	)

49 
	#STATX_ATTR_ENCRYPTED
 0x0800

	)

50 
	#STATX_ATTR_AUTOMOUNT
 0x1000

	)

53 
__BEGIN_DECLS


56 
	$°©x
 (
__dúfd
, c⁄° *
__ª°ri˘
 
__∑th
, 
__Êags
,

57 
__mask
, 
°©x
 *
__ª°ri˘
 
__buf
)

58 
__THROW
 
	`__n⁄nuŒ
 ((2, 5));

60 
__END_DECLS


	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/termios.h

19 #i‚de‡
_TERMIOS_H


23 
	tcc_t
;

24 
	t•ìd_t
;

25 
	ttcÊag_t
;

27 
	~<bôs/ãrmios-°ru˘.h
>

28 
	~<bôs/ãrmios-c_cc.h
>

29 
	~<bôs/ãrmios-c_iÊag.h
>

30 
	~<bôs/ãrmios-c_oÊag.h
>

33 
	#B0
 0000000

	)

34 
	#B50
 0000001

	)

35 
	#B75
 0000002

	)

36 
	#B110
 0000003

	)

37 
	#B134
 0000004

	)

38 
	#B150
 0000005

	)

39 
	#B200
 0000006

	)

40 
	#B300
 0000007

	)

41 
	#B600
 0000010

	)

42 
	#B1200
 0000011

	)

43 
	#B1800
 0000012

	)

44 
	#B2400
 0000013

	)

45 
	#B4800
 0000014

	)

46 
	#B9600
 0000015

	)

47 
	#B19200
 0000016

	)

48 
	#B38400
 0000017

	)

49 #ifde‡
__USE_MISC


50 
	#EXTA
 
B19200


	)

51 
	#EXTB
 
B38400


	)

53 
	~<bôs/ãrmios-baud.h
>

55 
	~<bôs/ãrmios-c_cÊag.h
>

56 
	~<bôs/ãrmios-c_lÊag.h
>

58 #ifde‡
__USE_MISC


60 
	#TIOCSER_TEMT
 0x01

	)

64 
	#TCOOFF
 0

	)

65 
	#TCOON
 1

	)

66 
	#TCIOFF
 2

	)

67 
	#TCION
 3

	)

70 
	#TCIFLUSH
 0

	)

71 
	#TCOFLUSH
 1

	)

72 
	#TCIOFLUSH
 2

	)

74 
	~<bôs/ãrmios-tcÊow.h
>

76 
	~<bôs/ãrmios-misc.h
>

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

49 
	s__±hªad_öã∫Æ_li°


51 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

52 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

53 } 
	t__±hªad_li°_t
;

55 
	s__±hªad_öã∫Æ_¶i°


57 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

58 } 
	t__±hªad_¶i°_t
;

74 
	~<bôs/°ru˘_muãx.h
>

87 
	~<bôs/°ru˘_rwlock.h
>

92 
	s__±hªad_c⁄d_s


94 
__exãnsi⁄__
 union

96 
__exãnsi⁄__
 
	m__w£q
;

99 
	m__low
;

100 
	m__high
;

101 } 
	m__w£q32
;

103 
__exãnsi⁄__
 union

105 
__exãnsi⁄__
 
	m__g1_°¨t
;

108 
	m__low
;

109 
	m__high
;

110 } 
	m__g1_°¨t32
;

112 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

113 
	m__g_size
[2];

114 
	m__g1_‹ig_size
;

115 
	m__wªfs
;

116 
	m__g_sig«ls
[2];

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


21 
	#__TIMESIZE
 64

	)

24 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 \

108 | 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/__sigval_t.h

19 #i‚de‡
____sigvÆ_t_deföed


20 
	#____sigvÆ_t_deföed


	)

23 #ifde‡
__USE_POSIX199309


24 
	usigvÆ


26 
	msivÆ_öt
;

27 *
	msivÆ_±r
;

30 
sigvÆ
 
	t__sigvÆ_t
;

32 
	u__sigvÆ


34 
	m__sivÆ_öt
;

35 *
	m__sivÆ_±r
;

38 
__sigvÆ
 
	t__sigvÆ_t
;

	@/usr/include/bits/types/struct_rusage.h

19 #i‚de‡
__rußge_deföed


20 
	#__rußge_deföed
 1

	)

22 
	~<bôs/ty≥s.h
>

23 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

33 
	srußge


36 
timevÆ
 
	mru_utime
;

38 
timevÆ
 
	mru_°ime
;

40 
__exãnsi⁄__
 union

42 
	mru_maxrss
;

43 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

47 
__exãnsi⁄__
 union

49 
	mru_ixrss
;

50 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

53 
__exãnsi⁄__
 union

55 
	mru_idrss
;

56 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

59 
__exãnsi⁄__
 union

61 
	mru_i§ss
;

62 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

66 
__exãnsi⁄__
 union

68 
	mru_möÊt
;

69 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

72 
__exãnsi⁄__
 union

74 
	mru_majÊt
;

75 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

78 
__exãnsi⁄__
 union

80 
	mru_nsw≠
;

81 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

85 
__exãnsi⁄__
 union

87 
	mru_öblock
;

88 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

91 
__exãnsi⁄__
 union

93 
	mru_oublock
;

94 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

97 
__exãnsi⁄__
 union

99 
	mru_msg¢d
;

100 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

103 
__exãnsi⁄__
 union

105 
	mru_msgrcv
;

106 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

109 
__exãnsi⁄__
 union

111 
	mru_nsig«ls
;

112 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

117 
__exãnsi⁄__
 union

119 
	mru_nvcsw
;

120 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

124 
__exãnsi⁄__
 union

126 
	mru_nivcsw
;

127 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

89 
	#__STATFS_MATCHES_STATFS64
 1

	)

91 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

93 
	#__STATFS_MATCHES_STATFS64
 0

	)

97 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/const.h

4 #i‚de‡
_LINUX_CONST_H


5 
	#_LINUX_CONST_H


	)

16 #ifde‡
__ASSEMBLY__


17 
	#_AC
(
X
,
Y
Ë
	)
X

18 
	#_AT
(
T
,
X
Ë
	)
X

20 
	#__AC
(
X
,
Y
Ë(X##Y)

	)

21 
	#_AC
(
X
,
Y
Ë
	`__AC
(X,Y)

	)

22 
	#_AT
(
T
,
X
Ë((T)(X))

	)

25 
	#_UL
(
x
Ë(
	`_AC
(x, 
UL
))

	)

26 
	#_ULL
(
x
Ë(
	`_AC
(x, 
ULL
))

	)

28 
	#_BITUL
(
x
Ë(
	`_UL
(1Ë<< (x))

	)

29 
	#_BITULL
(
x
Ë(
	`_ULL
(1Ë<< (x))

	)

31 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`__ty≥of__
(x))◊Ë- 1)

	)

32 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

34 
	#__KERNEL_DIV_ROUND_UP
(
n
, 
d
Ë((“Ë+ (dË- 1Ë/ (d))

	)

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

2 #i‚de‡
_LINUX_PARAM_H


3 
	#_LINUX_PARAM_H


	)

5 
	~<asm/∑øm.h
>

	@/usr/include/linux/stat.h

2 #i‚de‡
_LINUX_STAT_H


3 
	#_LINUX_STAT_H


	)

5 
	~<löux/ty≥s.h
>

7 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

9 
	#S_IFMT
 00170000

	)

10 
	#S_IFSOCK
 0140000

	)

11 
	#S_IFLNK
 0120000

	)

12 
	#S_IFREG
 0100000

	)

13 
	#S_IFBLK
 0060000

	)

14 
	#S_IFDIR
 0040000

	)

15 
	#S_IFCHR
 0020000

	)

16 
	#S_IFIFO
 0010000

	)

17 
	#S_ISUID
 0004000

	)

18 
	#S_ISGID
 0002000

	)

19 
	#S_ISVTX
 0001000

	)

21 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

22 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

23 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

24 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

25 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

26 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

27 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

29 
	#S_IRWXU
 00700

	)

30 
	#S_IRUSR
 00400

	)

31 
	#S_IWUSR
 00200

	)

32 
	#S_IXUSR
 00100

	)

34 
	#S_IRWXG
 00070

	)

35 
	#S_IRGRP
 00040

	)

36 
	#S_IWGRP
 00020

	)

37 
	#S_IXGRP
 00010

	)

39 
	#S_IRWXO
 00007

	)

40 
	#S_IROTH
 00004

	)

41 
	#S_IWOTH
 00002

	)

42 
	#S_IXOTH
 00001

	)

56 
	s°©x_time°amp
 {

57 
__s64
 
	mtv_£c
;

58 
__u32
 
	mtv_n£c
;

59 
__s32
 
	m__ª£rved
;

99 
	s°©x
 {

101 
__u32
 
	m°x_mask
;

102 
__u32
 
	m°x_blksize
;

103 
__u64
 
	m°x_©åibuãs
;

105 
__u32
 
	m°x_∆ök
;

106 
__u32
 
	m°x_uid
;

107 
__u32
 
	m°x_gid
;

108 
__u16
 
	m°x_mode
;

109 
__u16
 
	m__•¨e0
[1];

111 
__u64
 
	m°x_öo
;

112 
__u64
 
	m°x_size
;

113 
__u64
 
	m°x_blocks
;

114 
__u64
 
	m°x_©åibuãs_mask
;

116 
°©x_time°amp
 
	m°x_©ime
;

117 
°©x_time°amp
 
	m°x_btime
;

118 
°©x_time°amp
 
	m°x_˘ime
;

119 
°©x_time°amp
 
	m°x_mtime
;

121 
__u32
 
	m°x_rdev_maj‹
;

122 
__u32
 
	m°x_rdev_mö‹
;

123 
__u32
 
	m°x_dev_maj‹
;

124 
__u32
 
	m°x_dev_mö‹
;

126 
__u64
 
	m__•¨e2
[14];

138 
	#STATX_TYPE
 0x00000001U

	)

139 
	#STATX_MODE
 0x00000002U

	)

140 
	#STATX_NLINK
 0x00000004U

	)

141 
	#STATX_UID
 0x00000008U

	)

142 
	#STATX_GID
 0x00000010U

	)

143 
	#STATX_ATIME
 0x00000020U

	)

144 
	#STATX_MTIME
 0x00000040U

	)

145 
	#STATX_CTIME
 0x00000080U

	)

146 
	#STATX_INO
 0x00000100U

	)

147 
	#STATX_SIZE
 0x00000200U

	)

148 
	#STATX_BLOCKS
 0x00000400U

	)

149 
	#STATX_BASIC_STATS
 0x000007ffU

	)

150 
	#STATX_BTIME
 0x00000800U

	)

151 
	#STATX_ALL
 0x00000fffU

	)

152 
	#STATX__RESERVED
 0x80000000U

	)

165 
	#STATX_ATTR_COMPRESSED
 0x00000004

	)

166 
	#STATX_ATTR_IMMUTABLE
 0x00000010

	)

167 
	#STATX_ATTR_APPEND
 0x00000020

	)

168 
	#STATX_ATTR_NODUMP
 0x00000040

	)

169 
	#STATX_ATTR_ENCRYPTED
 0x00000800

	)

171 
	#STATX_ATTR_AUTOMOUNT
 0x00001000

	)

	@/usr/include/linux/sysinfo.h

2 #i‚de‡
_LINUX_SYSINFO_H


3 
	#_LINUX_SYSINFO_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#SI_LOAD_SHIFT
 16

	)

8 
	ssysöfo
 {

9 
__kî√l_l⁄g_t
 
	mu±ime
;

10 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

11 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

12 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

13 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

14 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

15 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

16 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

17 
__u16
 
	m¥ocs
;

18 
__u16
 
	m∑d
;

19 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

20 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

21 
__u32
 
	mmem_unô
;

22 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 #i‡(
deföed
 
__˝lu•lus
 \

76 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

77 
	#__ölöe
 
ölöe


	)

79 
	#__ölöe


	)

82 
	#__THROW


	)

83 
	#__THROWNL


	)

84 
	#__NTH
(
f˘
Ë
	)
fct

91 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


92 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

94 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

99 
	#__P
(
¨gs
Ë
	)
args

100 
	#__PMT
(
¨gs
Ë
	)
args

105 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

106 
	#__STRING
(
x
Ë#x

	)

109 
	#__±r_t
 *

	)

113 #ifdef 
__˝lu•lus


114 
	#__BEGIN_DECLS
 "C" {

	)

115 
	#__END_DECLS
 }

	)

117 
	#__BEGIN_DECLS


	)

118 
	#__END_DECLS


	)

123 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

124 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

126 #i‡
__GNUC_PREREQ
 (4,3)

127 
	#__w¨nde˛
(
«me
, 
msg
) \

128 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

129 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

130 
	#__îr‹de˛
(
«me
, 
msg
) \

131 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

133 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

134 
	#__w¨«âr
(
msg
)

	)

135 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

142 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
__GNUC_PREREQ
 (2,97)

148 
	#__Êex¨r
 []

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

150 #ñi‡
deföed
 
__GNUC__


153 
	#__Êex¨r
 [0]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

157 
	#__Êex¨r
 [1]

	)

158 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

172 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

174 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

175 #ifde‡
__˝lu•lus


176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

183 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

184 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

186 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

187 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

200 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

201 
	#__©åibuã__
(
xyz
Ë

	)

207 #i‡
__GNUC_PREREQ
 (2,96)

208 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

210 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (4, 3)

216 
	#__©åibuã_Æloc_size__
(
∑øms
) \

217 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

219 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

225 #i‡
__GNUC_PREREQ
 (2,96)

226 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

228 
	#__©åibuã_puª__


	)

232 #i‡
__GNUC_PREREQ
 (2,5)

233 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

235 
	#__©åibuã_c⁄°__


	)

241 #i‡
__GNUC_PREREQ
 (3,1)

242 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

243 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

246 
	#__©åibuã_noölöe__


	)

250 #i‡
__GNUC_PREREQ
 (3,2)

251 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

253 
	#__©åibuã_dïªˇãd__


	)

259 #i‡
__GNUC_PREREQ
 (4,5) \

260 || 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

261 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

262 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

264 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

273 #i‡
	`__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
	`__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
	`__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
	`__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
	`__GNUC_PREREQ
 (3,2)

318 #unde‡
__Æways_ölöe


319 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

321 #unde‡
__Æways_ölöe


322 
	#__Æways_ölöe
 
__ölöe


	)

327 #i‡
	`__GNUC_PREREQ
 (4,3)

328 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

330 
	#__©åibuã_¨tificül__


	)

342 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

344 || 
deföed
 
__GNUC_GNU_INLINE__
)))

345 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


346 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

347 
	#__exã∫_Æways_ölöe
 \

348 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

350 
	#__exã∫_ölöe
 
__ölöe


	)

351 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

355 #ifde‡
__exã∫_Æways_ölöe


356 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

361 #i‡
	`__GNUC_PREREQ
 (4,3)

362 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

363 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

370 #i‡!
	`__GNUC_PREREQ
 (2,8)

371 
	#__exãnsi⁄__


	)

375 #i‡!
	`__GNUC_PREREQ
 (2,92)

376 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

377 
	#__ª°ri˘
 
ª°ri˘


	)

379 
	#__ª°ri˘


	)

386 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


387 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

389 #ifde‡
__GNUC__


390 
	#__ª°ri˘_¨r


	)

392 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

393 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

396 
	#__ª°ri˘_¨r


	)

401 #i‡
__GNUC__
 >= 3

402 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

403 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

405 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

406 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

409 #ifde‡
__has_©åibuã


410 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

412 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

415 #i‡(!
deföed
 
_N‹ëu∫
 \

416 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

417 && !
	$__GNUC_PREREQ
 (4,7))

418 #i‡
	`__GNUC_PREREQ
 (2,8)

419 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

421 
	#_N‹ëu∫


	)

425 #i‡
	`__GNUC_PREREQ
 (8, 0)

429 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

431 
	#__©åibuã_n⁄°rög__


	)

435 #unde‡
__©åibuã_c›y__


436 #i‡
	`__GNUC_PREREQ
 (9, 0)

439 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

441 
	#__©åibuã_c›y__
(
¨g
)

	)

444 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

445 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

446 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

447 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

448 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

449 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

452 
	~<bôs/w‹dsize.h
>

453 
	~<bôs/l⁄g-doubÀ.h
>

455 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


456 
	#__LDBL_COMPAT
 1

	)

457 #ifde‡
__REDIRECT


458 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

459 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

460 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

461 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

462 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

463 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

464 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

465 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

466 
	#__LDBL_REDIR_DECL
(
«me
) \

467 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

468 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

469 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

470 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

471 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

474 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


475 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

476 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

477 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

478 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

479 
	#__LDBL_REDIR_DECL
(
«me
)

	)

480 #ifde‡
__REDIRECT


481 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

482 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

483 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

492 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

493 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

494 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

495 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

497 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

507 #i‡!
deföed
 
__˝lu•lus
 \

508 && (
	`__GNUC_PREREQ
 (4, 9) \

509 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

510 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

511 && 
__STDC_VERSION__
 >= 201112L))

512 
	#__HAVE_GENERIC_SELECTION
 1

	)

514 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/asm-generic/ioctls.h

2 #i‚de‡
__ASM_GENERIC_IOCTLS_H


3 
	#__ASM_GENERIC_IOCTLS_H


	)

5 
	~<löux/io˘l.h
>

20 
	#TCGETS
 0x5401

	)

21 
	#TCSETS
 0x5402

	)

22 
	#TCSETSW
 0x5403

	)

23 
	#TCSETSF
 0x5404

	)

24 
	#TCGETA
 0x5405

	)

25 
	#TCSETA
 0x5406

	)

26 
	#TCSETAW
 0x5407

	)

27 
	#TCSETAF
 0x5408

	)

28 
	#TCSBRK
 0x5409

	)

29 
	#TCXONC
 0x540A

	)

30 
	#TCFLSH
 0x540B

	)

31 
	#TIOCEXCL
 0x540C

	)

32 
	#TIOCNXCL
 0x540D

	)

33 
	#TIOCSCTTY
 0x540E

	)

34 
	#TIOCGPGRP
 0x540F

	)

35 
	#TIOCSPGRP
 0x5410

	)

36 
	#TIOCOUTQ
 0x5411

	)

37 
	#TIOCSTI
 0x5412

	)

38 
	#TIOCGWINSZ
 0x5413

	)

39 
	#TIOCSWINSZ
 0x5414

	)

40 
	#TIOCMGET
 0x5415

	)

41 
	#TIOCMBIS
 0x5416

	)

42 
	#TIOCMBIC
 0x5417

	)

43 
	#TIOCMSET
 0x5418

	)

44 
	#TIOCGSOFTCAR
 0x5419

	)

45 
	#TIOCSSOFTCAR
 0x541A

	)

46 
	#FIONREAD
 0x541B

	)

47 
	#TIOCINQ
 
FIONREAD


	)

48 
	#TIOCLINUX
 0x541C

	)

49 
	#TIOCCONS
 0x541D

	)

50 
	#TIOCGSERIAL
 0x541E

	)

51 
	#TIOCSSERIAL
 0x541F

	)

52 
	#TIOCPKT
 0x5420

	)

53 
	#FIONBIO
 0x5421

	)

54 
	#TIOCNOTTY
 0x5422

	)

55 
	#TIOCSETD
 0x5423

	)

56 
	#TIOCGETD
 0x5424

	)

57 
	#TCSBRKP
 0x5425

	)

58 
	#TIOCSBRK
 0x5427

	)

59 
	#TIOCCBRK
 0x5428

	)

60 
	#TIOCGSID
 0x5429

	)

61 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

62 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

63 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

64 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

65 
	#TIOCGRS485
 0x542E

	)

66 #i‚de‡
TIOCSRS485


67 
	#TIOCSRS485
 0x542F

	)

69 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

70 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

71 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

72 
	#TCGETX
 0x5432

	)

73 
	#TCSETX
 0x5433

	)

74 
	#TCSETXF
 0x5434

	)

75 
	#TCSETXW
 0x5435

	)

76 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

77 
	#TIOCVHANGUP
 0x5437

	)

78 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

79 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

80 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#TIOCGPTPEER
 
	`_IO
('T', 0x41Ë

	)

82 
	#TIOCGISO7816
 
	`_IOR
('T', 0x42, 
£rül_iso7816
)

	)

83 
	#TIOCSISO7816
 
	`_IOWR
('T', 0x43, 
£rül_iso7816
)

	)

85 
	#FIONCLEX
 0x5450

	)

86 
	#FIOCLEX
 0x5451

	)

87 
	#FIOASYNC
 0x5452

	)

88 
	#TIOCSERCONFIG
 0x5453

	)

89 
	#TIOCSERGWILD
 0x5454

	)

90 
	#TIOCSERSWILD
 0x5455

	)

91 
	#TIOCGLCKTRMIOS
 0x5456

	)

92 
	#TIOCSLCKTRMIOS
 0x5457

	)

93 
	#TIOCSERGSTRUCT
 0x5458

	)

94 
	#TIOCSERGETLSR
 0x5459

	)

95 
	#TIOCSERGETMULTI
 0x545A

	)

96 
	#TIOCSERSETMULTI
 0x545B

	)

98 
	#TIOCMIWAIT
 0x545C

	)

99 
	#TIOCGICOUNT
 0x545D

	)

105 #i‚de‡
FIOQSIZE


106 
	#FIOQSIZE
 0x5460

	)

110 
	#TIOCPKT_DATA
 0

	)

111 
	#TIOCPKT_FLUSHREAD
 1

	)

112 
	#TIOCPKT_FLUSHWRITE
 2

	)

113 
	#TIOCPKT_STOP
 4

	)

114 
	#TIOCPKT_START
 8

	)

115 
	#TIOCPKT_NOSTOP
 16

	)

116 
	#TIOCPKT_DOSTOP
 32

	)

117 
	#TIOCPKT_IOCTL
 64

	)

119 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

2 #i‚de‡
__ASM_GENERIC_SOCKET_H


3 
	#__ASM_GENERIC_SOCKET_H


	)

5 
	~<löux/posix_ty≥s.h
>

6 
	~<asm/sockios.h
>

9 
	#SOL_SOCKET
 1

	)

11 
	#SO_DEBUG
 1

	)

12 
	#SO_REUSEADDR
 2

	)

13 
	#SO_TYPE
 3

	)

14 
	#SO_ERROR
 4

	)

15 
	#SO_DONTROUTE
 5

	)

16 
	#SO_BROADCAST
 6

	)

17 
	#SO_SNDBUF
 7

	)

18 
	#SO_RCVBUF
 8

	)

19 
	#SO_SNDBUFFORCE
 32

	)

20 
	#SO_RCVBUFFORCE
 33

	)

21 
	#SO_KEEPALIVE
 9

	)

22 
	#SO_OOBINLINE
 10

	)

23 
	#SO_NO_CHECK
 11

	)

24 
	#SO_PRIORITY
 12

	)

25 
	#SO_LINGER
 13

	)

26 
	#SO_BSDCOMPAT
 14

	)

27 
	#SO_REUSEPORT
 15

	)

28 #i‚de‡
SO_PASSCRED


29 
	#SO_PASSCRED
 16

	)

30 
	#SO_PEERCRED
 17

	)

31 
	#SO_RCVLOWAT
 18

	)

32 
	#SO_SNDLOWAT
 19

	)

33 
	#SO_RCVTIMEO_OLD
 20

	)

34 
	#SO_SNDTIMEO_OLD
 21

	)

38 
	#SO_SECURITY_AUTHENTICATION
 22

	)

39 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

40 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

42 
	#SO_BINDTODEVICE
 25

	)

45 
	#SO_ATTACH_FILTER
 26

	)

46 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

49 
	#SO_PEERNAME
 28

	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

56 
	#SO_MARK
 36

	)

58 
	#SO_PROTOCOL
 38

	)

59 
	#SO_DOMAIN
 39

	)

61 
	#SO_RXQ_OVFL
 40

	)

63 
	#SO_WIFI_STATUS
 41

	)

64 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

65 
	#SO_PEEK_OFF
 42

	)

68 
	#SO_NOFCS
 43

	)

70 
	#SO_LOCK_FILTER
 44

	)

72 
	#SO_SELECT_ERR_QUEUE
 45

	)

74 
	#SO_BUSY_POLL
 46

	)

76 
	#SO_MAX_PACING_RATE
 47

	)

78 
	#SO_BPF_EXTENSIONS
 48

	)

80 
	#SO_INCOMING_CPU
 49

	)

82 
	#SO_ATTACH_BPF
 50

	)

83 
	#SO_DETACH_BPF
 
SO_DETACH_FILTER


	)

85 
	#SO_ATTACH_REUSEPORT_CBPF
 51

	)

86 
	#SO_ATTACH_REUSEPORT_EBPF
 52

	)

88 
	#SO_CNX_ADVICE
 53

	)

90 
	#SCM_TIMESTAMPING_OPT_STATS
 54

	)

92 
	#SO_MEMINFO
 55

	)

94 
	#SO_INCOMING_NAPI_ID
 56

	)

96 
	#SO_COOKIE
 57

	)

98 
	#SCM_TIMESTAMPING_PKTINFO
 58

	)

100 
	#SO_PEERGROUPS
 59

	)

102 
	#SO_ZEROCOPY
 60

	)

104 
	#SO_TXTIME
 61

	)

105 
	#SCM_TXTIME
 
SO_TXTIME


	)

107 
	#SO_BINDTOIFINDEX
 62

	)

109 
	#SO_TIMESTAMP_OLD
 29

	)

110 
	#SO_TIMESTAMPNS_OLD
 35

	)

111 
	#SO_TIMESTAMPING_OLD
 37

	)

113 
	#SO_TIMESTAMP_NEW
 63

	)

114 
	#SO_TIMESTAMPNS_NEW
 64

	)

115 
	#SO_TIMESTAMPING_NEW
 65

	)

117 
	#SO_RCVTIMEO_NEW
 66

	)

118 
	#SO_SNDTIMEO_NEW
 67

	)

120 
	#SO_DETACH_REUSEPORT_BPF
 68

	)

123 #i‡
__BITS_PER_LONG
 =64 || (
deföed
(
__x86_64__
Ë&& deföed(
__ILP32__
))

125 
	#SO_TIMESTAMP
 
SO_TIMESTAMP_OLD


	)

126 
	#SO_TIMESTAMPNS
 
SO_TIMESTAMPNS_OLD


	)

127 
	#SO_TIMESTAMPING
 
SO_TIMESTAMPING_OLD


	)

129 
	#SO_RCVTIMEO
 
SO_RCVTIMEO_OLD


	)

130 
	#SO_SNDTIMEO
 
SO_SNDTIMEO_OLD


	)

132 
	#SO_TIMESTAMP
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMP_OLD
 : 
SO_TIMESTAMP_NEW
)

	)

133 
	#SO_TIMESTAMPNS
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMPNS_OLD
 : 
SO_TIMESTAMPNS_NEW
)

	)

134 
	#SO_TIMESTAMPING
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMPING_OLD
 : 
SO_TIMESTAMPING_NEW
)

	)

136 
	#SO_RCVTIMEO
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_RCVTIMEO_OLD
 : 
SO_RCVTIMEO_NEW
)

	)

137 
	#SO_SNDTIMEO
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_SNDTIMEO_OLD
 : 
SO_SNDTIMEO_NEW
)

	)

140 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

141 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

142 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/long-double.h

21 
	#__LONG_DOUBLE_USES_FLOAT128
 0

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/termios-baud.h

19 #i‚de‡
_TERMIOS_H


23 #ifde‡
__USE_MISC


24 
	#CBAUD
 000000010017

	)

25 
	#CBAUDEX
 000000010000

	)

27 
	#CIBAUD
 002003600000

	)

28 
	#CMSPAR
 010000000000

	)

29 
	#CRTSCTS
 020000000000

	)

33 
	#B57600
 0010001

	)

34 
	#B115200
 0010002

	)

35 
	#B230400
 0010003

	)

36 
	#B460800
 0010004

	)

37 
	#B500000
 0010005

	)

38 
	#B576000
 0010006

	)

39 
	#B921600
 0010007

	)

40 
	#B1000000
 0010010

	)

41 
	#B1152000
 0010011

	)

42 
	#B1500000
 0010012

	)

43 
	#B2000000
 0010013

	)

44 
	#B2500000
 0010014

	)

45 
	#B3000000
 0010015

	)

46 
	#B3500000
 0010016

	)

47 
	#B4000000
 0010017

	)

48 
	#__MAX_BAUD
 
B4000000


	)

	@/usr/include/bits/termios-c_cc.h

19 #i‚de‡
_TERMIOS_H


24 
	#VINTR
 0

	)

25 
	#VQUIT
 1

	)

26 
	#VERASE
 2

	)

27 
	#VKILL
 3

	)

28 
	#VEOF
 4

	)

29 
	#VTIME
 5

	)

30 
	#VMIN
 6

	)

31 
	#VSWTC
 7

	)

32 
	#VSTART
 8

	)

33 
	#VSTOP
 9

	)

34 
	#VSUSP
 10

	)

35 
	#VEOL
 11

	)

36 
	#VREPRINT
 12

	)

37 
	#VDISCARD
 13

	)

38 
	#VWERASE
 14

	)

39 
	#VLNEXT
 15

	)

40 
	#VEOL2
 16

	)

	@/usr/include/bits/termios-c_cflag.h

19 #i‚de‡
_TERMIOS_H


24 
	#CSIZE
 0000060

	)

25 
	#CS5
 0000000

	)

26 
	#CS6
 0000020

	)

27 
	#CS7
 0000040

	)

28 
	#CS8
 0000060

	)

29 
	#CSTOPB
 0000100

	)

30 
	#CREAD
 0000200

	)

31 
	#PARENB
 0000400

	)

32 
	#PARODD
 0001000

	)

33 
	#HUPCL
 0002000

	)

34 
	#CLOCAL
 0004000

	)

	@/usr/include/bits/termios-c_iflag.h

19 #i‚de‡
_TERMIOS_H


24 
	#IGNBRK
 0000001

	)

25 
	#BRKINT
 0000002

	)

26 
	#IGNPAR
 0000004

	)

27 
	#PARMRK
 0000010

	)

28 
	#INPCK
 0000020

	)

29 
	#ISTRIP
 0000040

	)

30 
	#INLCR
 0000100

	)

31 
	#IGNCR
 0000200

	)

32 
	#ICRNL
 0000400

	)

33 
	#IUCLC
 0001000

	)

35 
	#IXON
 0002000

	)

36 
	#IXANY
 0004000

	)

37 
	#IXOFF
 0010000

	)

38 
	#IMAXBEL
 0020000

	)

40 
	#IUTF8
 0040000

	)

	@/usr/include/bits/termios-c_lflag.h

19 #i‚de‡
_TERMIOS_H


24 
	#ISIG
 0000001

	)

25 
	#ICANON
 0000002

	)

26 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

27 
	#XCASE
 0000004

	)

29 
	#ECHO
 0000010

	)

30 
	#ECHOE
 0000020

	)

32 
	#ECHOK
 0000040

	)

33 
	#ECHONL
 0000100

	)

34 
	#NOFLSH
 0000200

	)

35 
	#TOSTOP
 0000400

	)

36 #ifde‡
__USE_MISC


37 
	#ECHOCTL
 0001000

	)

42 
	#ECHOPRT
 0002000

	)

45 
	#ECHOKE
 0004000

	)

48 
	#FLUSHO
 0010000

	)

50 
	#PENDIN
 0040000

	)

54 
	#IEXTEN
 0100000

	)

56 #ifde‡
__USE_MISC


57 
	#EXTPROC
 0200000

	)

	@/usr/include/bits/termios-c_oflag.h

19 #i‚de‡
_TERMIOS_H


24 
	#OPOST
 0000001

	)

25 
	#OLCUC
 0000002

	)

27 
	#ONLCR
 0000004

	)

28 
	#OCRNL
 0000010

	)

29 
	#ONOCR
 0000020

	)

30 
	#ONLRET
 0000040

	)

31 
	#OFILL
 0000100

	)

32 
	#OFDEL
 0000200

	)

33 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


34 
	#NLDLY
 0000400

	)

35 
	#NL0
 0000000

	)

36 
	#NL1
 0000400

	)

37 
	#CRDLY
 0003000

	)

38 
	#CR0
 0000000

	)

39 
	#CR1
 0001000

	)

40 
	#CR2
 0002000

	)

41 
	#CR3
 0003000

	)

42 
	#TABDLY
 0014000

	)

43 
	#TAB0
 0000000

	)

44 
	#TAB1
 0004000

	)

45 
	#TAB2
 0010000

	)

46 
	#TAB3
 0014000

	)

47 
	#BSDLY
 0020000

	)

48 
	#BS0
 0000000

	)

49 
	#BS1
 0020000

	)

50 
	#FFDLY
 0100000

	)

51 
	#FF0
 0000000

	)

52 
	#FF1
 0100000

	)

55 
	#VTDLY
 0040000

	)

56 
	#VT0
 0000000

	)

57 
	#VT1
 0040000

	)

59 #ifde‡
__USE_MISC


60 
	#XTABS
 0014000

	)

	@/usr/include/bits/termios-misc.h

19 #i‚de‡
_TERMIOS_H


	@/usr/include/bits/termios-struct.h

19 #i‚de‡
_TERMIOS_H


23 
	#NCCS
 32

	)

24 
	sãrmios


26 
tcÊag_t
 
	mc_iÊag
;

27 
tcÊag_t
 
	mc_oÊag
;

28 
tcÊag_t
 
	mc_cÊag
;

29 
tcÊag_t
 
	mc_lÊag
;

30 
cc_t
 
	mc_löe
;

31 
cc_t
 
	mc_cc
[
NCCS
];

32 
•ìd_t
 
	mc_i•ìd
;

33 
•ìd_t
 
	mc_o•ìd
;

34 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

35 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

	@/usr/include/bits/termios-tcflow.h

19 #i‚de‡
_TERMIOS_H


24 
	#TCSANOW
 0

	)

25 
	#TCSADRAIN
 1

	)

26 
	#TCSAFLUSH
 2

	)

	@/usr/include/bits/types/struct_statx.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_deföed


24 
	#__°©x_deföed
 1

	)

30 
	s°©x


32 
__uöt32_t
 
	m°x_mask
;

33 
__uöt32_t
 
	m°x_blksize
;

34 
__uöt64_t
 
	m°x_©åibuãs
;

35 
__uöt32_t
 
	m°x_∆ök
;

36 
__uöt32_t
 
	m°x_uid
;

37 
__uöt32_t
 
	m°x_gid
;

38 
__uöt16_t
 
	m°x_mode
;

39 
__uöt16_t
 
	m__°©x_∑d1
[1];

40 
__uöt64_t
 
	m°x_öo
;

41 
__uöt64_t
 
	m°x_size
;

42 
__uöt64_t
 
	m°x_blocks
;

43 
__uöt64_t
 
	m°x_©åibuãs_mask
;

44 
°©x_time°amp
 
	m°x_©ime
;

45 
°©x_time°amp
 
	m°x_btime
;

46 
°©x_time°amp
 
	m°x_˘ime
;

47 
°©x_time°amp
 
	m°x_mtime
;

48 
__uöt32_t
 
	m°x_rdev_maj‹
;

49 
__uöt32_t
 
	m°x_rdev_mö‹
;

50 
__uöt32_t
 
	m°x_dev_maj‹
;

51 
__uöt32_t
 
	m°x_dev_mö‹
;

52 
__uöt64_t
 
	m__°©x_∑d2
[14];

	@/usr/include/bits/types/struct_statx_timestamp.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x_time°amp
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_time°amp_deföed


24 
	#__°©x_time°amp_deföed
 1

	)

26 
	s°©x_time°amp


28 
__öt64_t
 
	mtv_£c
;

29 
__uöt32_t
 
	mtv_n£c
;

30 
__öt32_t
 
	m__°©x_time°amp_∑d1
[1];

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_lchmod


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_s°k


	)

18 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_lchmod


	)

15 
	#__°ub_ªvoke


	)

16 
	#__°ub_£éogö


	)

17 
	#__°ub_sigªtu∫


	)

18 
	#__°ub_s°k


	)

19 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_nfs£rv˘l


	)

14 
	#__°ub___com∑t_quîy_moduÀ


	)

15 
	#__°ub___com∑t_u£lib


	)

16 
	#__°ub_chÊags


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

2 #i‚de‡
_FALLOC_H_


3 
	#_FALLOC_H_


	)

5 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

6 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

7 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

29 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

43 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

60 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

78 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/linux/types.h

2 #i‚de‡
_LINUX_TYPES_H


3 
	#_LINUX_TYPES_H


	)

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__ASSEMBLY__


9 
	~<löux/posix_ty≥s.h
>

17 #ifde‡
__CHECKER__


18 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

20 
	#__bôwi£__


	)

22 
	#__bôwi£
 
__bôwi£__


	)

24 
__u16
 
	t__bôwi£
 
	t__À16
;

25 
__u16
 
	t__bôwi£
 
	t__be16
;

26 
__u32
 
	t__bôwi£
 
	t__À32
;

27 
__u32
 
	t__bôwi£
 
	t__be32
;

28 
__u64
 
	t__bôwi£
 
	t__À64
;

29 
__u64
 
	t__bôwi£
 
	t__be64
;

31 
__u16
 
	t__bôwi£
 
	t__sum16
;

32 
__u32
 
	t__bôwi£
 
	t__wsum
;

43 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

44 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

45 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	t__bôwi£
 
	t__pﬁl_t
;

	@/usr/include/asm-generic/errno.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_H


3 
	#_ASM_GENERIC_ERRNO_H


	)

5 
	~<asm-gíîic/î∫o-ba£.h
>

7 
	#EDEADLK
 35

	)

8 
	#ENAMETOOLONG
 36

	)

9 
	#ENOLCK
 37

	)

18 
	#ENOSYS
 38

	)

20 
	#ENOTEMPTY
 39

	)

21 
	#ELOOP
 40

	)

22 
	#EWOULDBLOCK
 
EAGAIN


	)

23 
	#ENOMSG
 42

	)

24 
	#EIDRM
 43

	)

25 
	#ECHRNG
 44

	)

26 
	#EL2NSYNC
 45

	)

27 
	#EL3HLT
 46

	)

28 
	#EL3RST
 47

	)

29 
	#ELNRNG
 48

	)

30 
	#EUNATCH
 49

	)

31 
	#ENOCSI
 50

	)

32 
	#EL2HLT
 51

	)

33 
	#EBADE
 52

	)

34 
	#EBADR
 53

	)

35 
	#EXFULL
 54

	)

36 
	#ENOANO
 55

	)

37 
	#EBADRQC
 56

	)

38 
	#EBADSLT
 57

	)

40 
	#EDEADLOCK
 
EDEADLK


	)

42 
	#EBFONT
 59

	)

43 
	#ENOSTR
 60

	)

44 
	#ENODATA
 61

	)

45 
	#ETIME
 62

	)

46 
	#ENOSR
 63

	)

47 
	#ENONET
 64

	)

48 
	#ENOPKG
 65

	)

49 
	#EREMOTE
 66

	)

50 
	#ENOLINK
 67

	)

51 
	#EADV
 68

	)

52 
	#ESRMNT
 69

	)

53 
	#ECOMM
 70

	)

54 
	#EPROTO
 71

	)

55 
	#EMULTIHOP
 72

	)

56 
	#EDOTDOT
 73

	)

57 
	#EBADMSG
 74

	)

58 
	#EOVERFLOW
 75

	)

59 
	#ENOTUNIQ
 76

	)

60 
	#EBADFD
 77

	)

61 
	#EREMCHG
 78

	)

62 
	#ELIBACC
 79

	)

63 
	#ELIBBAD
 80

	)

64 
	#ELIBSCN
 81

	)

65 
	#ELIBMAX
 82

	)

66 
	#ELIBEXEC
 83

	)

67 
	#EILSEQ
 84

	)

68 
	#ERESTART
 85

	)

69 
	#ESTRPIPE
 86

	)

70 
	#EUSERS
 87

	)

71 
	#ENOTSOCK
 88

	)

72 
	#EDESTADDRREQ
 89

	)

73 
	#EMSGSIZE
 90

	)

74 
	#EPROTOTYPE
 91

	)

75 
	#ENOPROTOOPT
 92

	)

76 
	#EPROTONOSUPPORT
 93

	)

77 
	#ESOCKTNOSUPPORT
 94

	)

78 
	#EOPNOTSUPP
 95

	)

79 
	#EPFNOSUPPORT
 96

	)

80 
	#EAFNOSUPPORT
 97

	)

81 
	#EADDRINUSE
 98

	)

82 
	#EADDRNOTAVAIL
 99

	)

83 
	#ENETDOWN
 100

	)

84 
	#ENETUNREACH
 101

	)

85 
	#ENETRESET
 102

	)

86 
	#ECONNABORTED
 103

	)

87 
	#ECONNRESET
 104

	)

88 
	#ENOBUFS
 105

	)

89 
	#EISCONN
 106

	)

90 
	#ENOTCONN
 107

	)

91 
	#ESHUTDOWN
 108

	)

92 
	#ETOOMANYREFS
 109

	)

93 
	#ETIMEDOUT
 110

	)

94 
	#ECONNREFUSED
 111

	)

95 
	#EHOSTDOWN
 112

	)

96 
	#EHOSTUNREACH
 113

	)

97 
	#EALREADY
 114

	)

98 
	#EINPROGRESS
 115

	)

99 
	#ESTALE
 116

	)

100 
	#EUCLEAN
 117

	)

101 
	#ENOTNAM
 118

	)

102 
	#ENAVAIL
 119

	)

103 
	#EISNAM
 120

	)

104 
	#EREMOTEIO
 121

	)

105 
	#EDQUOT
 122

	)

107 
	#ENOMEDIUM
 123

	)

108 
	#EMEDIUMTYPE
 124

	)

109 
	#ECANCELED
 125

	)

110 
	#ENOKEY
 126

	)

111 
	#EKEYEXPIRED
 127

	)

112 
	#EKEYREVOKED
 128

	)

113 
	#EKEYREJECTED
 129

	)

116 
	#EOWNERDEAD
 130

	)

117 
	#ENOTRECOVERABLE
 131

	)

119 
	#ERFKILL
 132

	)

121 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/param.h

2 #i‚de‡
__ASM_GENERIC_PARAM_H


3 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm/types.h

1 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/linux/ioctl.h

2 #i‚de‡
_LINUX_IOCTL_H


3 
	#_LINUX_IOCTL_H


	)

5 
	~<asm/io˘l.h
>

	@/usr/include/linux/posix_types.h

2 #i‚de‡
_LINUX_POSIX_TYPES_H


3 
	#_LINUX_POSIX_TYPES_H


	)

5 
	~<löux/°ddef.h
>

22 #unde‡
__FD_SETSIZE


23 
	#__FD_SETSIZE
 1024

	)

26 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

27 } 
	t__kî√l_fd_£t
;

30 (*
	t__kî√l_sigh™dÀr_t
)();

33 
	t__kî√l_key_t
;

34 
	t__kî√l_mqd_t
;

36 
	~<asm/posix_ty≥s.h
>

	@/usr/include/asm-generic/errno-base.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


3 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

5 
	#EPERM
 1

	)

6 
	#ENOENT
 2

	)

7 
	#ESRCH
 3

	)

8 
	#EINTR
 4

	)

9 
	#EIO
 5

	)

10 
	#ENXIO
 6

	)

11 
	#E2BIG
 7

	)

12 
	#ENOEXEC
 8

	)

13 
	#EBADF
 9

	)

14 
	#ECHILD
 10

	)

15 
	#EAGAIN
 11

	)

16 
	#ENOMEM
 12

	)

17 
	#EACCES
 13

	)

18 
	#EFAULT
 14

	)

19 
	#ENOTBLK
 15

	)

20 
	#EBUSY
 16

	)

21 
	#EEXIST
 17

	)

22 
	#EXDEV
 18

	)

23 
	#ENODEV
 19

	)

24 
	#ENOTDIR
 20

	)

25 
	#EISDIR
 21

	)

26 
	#EINVAL
 22

	)

27 
	#ENFILE
 23

	)

28 
	#EMFILE
 24

	)

29 
	#ENOTTY
 25

	)

30 
	#ETXTBSY
 26

	)

31 
	#EFBIG
 27

	)

32 
	#ENOSPC
 28

	)

33 
	#ESPIPE
 29

	)

34 
	#EROFS
 30

	)

35 
	#EMLINK
 31

	)

36 
	#EPIPE
 32

	)

37 
	#EDOM
 33

	)

38 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

2 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


3 
	#__ASM_GENERIC_SOCKIOS_H


	)

6 
	#FIOSETOWN
 0x8901

	)

7 
	#SIOCSPGRP
 0x8902

	)

8 
	#FIOGETOWN
 0x8903

	)

9 
	#SIOCGPGRP
 0x8904

	)

10 
	#SIOCATMARK
 0x8905

	)

11 
	#SIOCGSTAMP_OLD
 0x8906

	)

12 
	#SIOCGSTAMPNS_OLD
 0x8907

	)

	@/usr/include/asm-generic/types.h

2 #i‚de‡
_ASM_GENERIC_TYPES_H


3 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types.h

2 #ifde‡
__i386__


3 
	~<asm/posix_ty≥s_32.h
>

4 #ñi‡
deföed
(
__ILP32__
)

5 
	~<asm/posix_ty≥s_x32.h
>

7 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/linux/stddef.h

4 #i‚de‡
__Æways_ölöe


5 
	#__Æways_ölöe
 
__ölöe__


	)

	@/usr/include/asm-generic/int-ll64.h

9 #i‚de‡
_ASM_GENERIC_INT_LL64_H


10 
	#_ASM_GENERIC_INT_LL64_H


	)

12 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__ASSEMBLY__


20 
__sig√d__
 
	t__s8
;

21 
	t__u8
;

23 
__sig√d__
 
	t__s16
;

24 
	t__u16
;

26 
__sig√d__
 
	t__s32
;

27 
	t__u32
;

29 #ifde‡
__GNUC__


30 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

31 
__exãnsi⁄__
 
	t__u64
;

33 
__sig√d__
 
	t__s64
;

34 
	t__u64
;

	@/usr/include/asm-generic/ioctl.h

2 #i‚de‡
_ASM_GENERIC_IOCTL_H


3 
	#_ASM_GENERIC_IOCTL_H


	)

23 
	#_IOC_NRBITS
 8

	)

24 
	#_IOC_TYPEBITS
 8

	)

31 #i‚de‡
_IOC_SIZEBITS


32 
	#_IOC_SIZEBITS
 14

	)

35 #i‚de‡
_IOC_DIRBITS


36 
	#_IOC_DIRBITS
 2

	)

39 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

40 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

41 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

42 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

44 
	#_IOC_NRSHIFT
 0

	)

45 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

46 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

47 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

57 #i‚de‡
_IOC_NONE


58 
	#_IOC_NONE
 0U

	)

61 #i‚de‡
_IOC_WRITE


62 
	#_IOC_WRITE
 1U

	)

65 #i‚de‡
_IOC_READ


66 
	#_IOC_READ
 2U

	)

69 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

70 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

71 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

72 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

73 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

75 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

83 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

84 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

85 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

86 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

87 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

88 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

89 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

92 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

93 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

94 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

95 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

99 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

100 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

101 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

102 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

103 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/posix_types_32.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


3 
	#_ASM_X86_POSIX_TYPES_32_H


	)

11 
	t__kî√l_mode_t
;

12 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

14 
	t__kî√l_ùc_pid_t
;

15 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

17 
	t__kî√l_uid_t
;

18 
	t__kî√l_gid_t
;

19 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

21 
	t__kî√l_ﬁd_dev_t
;

22 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

24 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


3 
	#_ASM_X86_POSIX_TYPES_64_H


	)

11 
	t__kî√l_ﬁd_uid_t
;

12 
	t__kî√l_ﬁd_gid_t
;

13 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

15 
	t__kî√l_ﬁd_dev_t
;

16 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

18 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


3 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

16 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

18 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm-generic/posix_types.h

2 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


3 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

5 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__kî√l_l⁄g_t


15 
	t__kî√l_l⁄g_t
;

16 
	t__kî√l_ul⁄g_t
;

19 #i‚de‡
__kî√l_öo_t


20 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

23 #i‚de‡
__kî√l_mode_t


24 
	t__kî√l_mode_t
;

27 #i‚de‡
__kî√l_pid_t


28 
	t__kî√l_pid_t
;

31 #i‚de‡
__kî√l_ùc_pid_t


32 
	t__kî√l_ùc_pid_t
;

35 #i‚de‡
__kî√l_uid_t


36 
	t__kî√l_uid_t
;

37 
	t__kî√l_gid_t
;

40 #i‚de‡
__kî√l_su£c⁄ds_t


41 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

44 #i‚de‡
__kî√l_daddr_t


45 
	t__kî√l_daddr_t
;

48 #i‚de‡
__kî√l_uid32_t


49 
	t__kî√l_uid32_t
;

50 
	t__kî√l_gid32_t
;

53 #i‚de‡
__kî√l_ﬁd_uid_t


54 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

55 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

58 #i‚de‡
__kî√l_ﬁd_dev_t


59 
	t__kî√l_ﬁd_dev_t
;

66 #i‚de‡
__kî√l_size_t


67 #i‡
__BITS_PER_LONG
 != 64

68 
	t__kî√l_size_t
;

69 
	t__kî√l_ssize_t
;

70 
	t__kî√l_±rdiff_t
;

72 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

74 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

78 #i‚de‡
__kî√l_fsid_t


80 
	mvÆ
[2];

81 } 
	t__kî√l_fsid_t
;

87 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

88 
	t__kî√l_loff_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

90 
	t__kî√l_time64_t
;

91 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

92 
	t__kî√l_timî_t
;

93 
	t__kî√l_˛ockid_t
;

94 * 
	t__kî√l_ˇddr_t
;

95 
	t__kî√l_uid16_t
;

96 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

2 #i‚de‡
__ASM_X86_BITSPERLONG_H


3 
	#__ASM_X86_BITSPERLONG_H


	)

5 #i‡
deföed
(
__x86_64__
Ë&& !deföed(
__ILP32__
)

6 
	#__BITS_PER_LONG
 64

	)

8 
	#__BITS_PER_LONG
 32

	)

11 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

2 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


3 
	#__ASM_GENERIC_BITS_PER_LONG


	)

12 #i‚de‡
__BITS_PER_LONG


13 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
355
8960
bitmap.h
bpred.c
bpred.h
cache.c
cache.h
dlite.c
dlite.h
eio.c
eio.h
endian.c
endian.h
eval.c
eval.h
eventq.c
eventq.h
host.h
libcheetah/dmvl.c
libcheetah/faclru.c
libcheetah/facopt.c
libcheetah/libcheetah.c
libcheetah/libcheetah.h
libcheetah/ppopt.c
libcheetah/saclru.c
libcheetah/sacopt.c
libcheetah/util.c
libcheetah/util.h
libexo/exo-test.c
libexo/exolex.c
libexo/exolex.l
libexo/libexo.c
libexo/libexo.h
loader.h
main.c
makedepend/cppsetup.c
makedepend/def.h
makedepend/imakemdep.h
makedepend/include.c
makedepend/main.c
makedepend/parse.c
makedepend/pr.c
mase-checker.c
mase-checker.h
mase-commit.c
mase-commit.h
mase-debug.c
mase-debug.h
mase-decode.h
mase-exec.c
mase-exec.h
mase-fe.c
mase-fe.h
mase-macros-exec.h
mase-macros-oracle.h
mase-mem.c
mase-mem.h
mase-opts.c
mase-opts.h
mase-structs.h
mase.c
mase.h
memory.c
memory.h
misc.c
misc.h
options.c
options.h
ptrace.c
ptrace.h
range.c
range.h
regs.c
regs.h
resource.c
resource.h
sim-bpred.c
sim-cache.c
sim-cheetah.c
sim-eio.c
sim-fast.c
sim-outorder.c
sim-profile.c
sim-safe.c
sim.h
stats.c
stats.h
symbol.h
syscall.h
sysprobe.c
target-alpha-linux/alpha.c
target-alpha-linux/alpha.h
target-alpha-linux/config.h
target-alpha-linux/ecoff.h
target-alpha-linux/elf64.h
target-alpha-linux/loader.c
target-alpha-linux/symbol.c
target-alpha-linux/syscall.c
target-alpha/alpha.c
target-alpha/alpha.h
target-alpha/config.h
target-alpha/ecoff.h
target-alpha/loader.c
target-alpha/symbol.c
target-alpha/syscall.c
target-pisa/config.h
target-pisa/configbig.h
target-pisa/configlit.h
target-pisa/ecoff.h
target-pisa/loader.c
target-pisa/pisa.c
target-pisa/pisa.h
target-pisa/symbol.c
target-pisa/syscall.c
tests-alpha/src/anagram.c
tests-alpha/src/test-dirent.c
tests-alpha/src/test-fmath.c
tests-alpha/src/test-llong.c
tests-alpha/src/test-lswlr.c
tests-alpha/src/test-math.c
tests-alpha/src/test-printf.c
tests-pisa/src/anagram.c
tests-pisa/src/test-fmath.c
tests-pisa/src/test-llong.c
tests-pisa/src/test-lswlr.c
tests-pisa/src/test-math.c
tests-pisa/src/test-printf.c
version.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/netinet/udp.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/dir.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/mount.h
/usr/include/sys/param.h
/usr/include/sys/poll.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statfs.h
/usr/include/sys/statvfs.h
/usr/include/sys/sysinfo.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/unistd.h
/usr/include/sys/utsname.h
/usr/include/sys/vfs.h
/usr/include/termio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/dirent_ext.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls-narrow.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathinline.h
/usr/include/bits/param.h
/usr/include/bits/poll.h
/usr/include/bits/poll2.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/sigevent-consts.h
/usr/include/bits/siginfo-consts.h
/usr/include/bits/signal_ext.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/ss_flags.h
/usr/include/bits/stat.h
/usr/include/bits/statfs.h
/usr/include/bits/statvfs.h
/usr/include/bits/statx.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/error_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/sig_atomic_t.h
/usr/include/bits/types/sigevent_t.h
/usr/include/bits/types/siginfo_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/sigval_t.h
/usr/include/bits/types/stack_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_iovec.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_osockaddr.h
/usr/include/bits/types/struct_sigstack.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/uio-ext.h
/usr/include/bits/uio_lim.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/linux/kernel.h
/usr/include/strings.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/termios.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/endianness.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/siginfo-arch.h
/usr/include/bits/siginfo-consts-arch.h
/usr/include/bits/signum-generic.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket-constants.h
/usr/include/bits/socket_type.h
/usr/include/bits/statx-generic.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/termios.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/__sigval_t.h
/usr/include/bits/types/struct_rusage.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/const.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/stat.h
/usr/include/linux/sysinfo.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/asm/param.h
/usr/include/bits/long-double.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/termios-baud.h
/usr/include/bits/termios-c_cc.h
/usr/include/bits/termios-c_cflag.h
/usr/include/bits/termios-c_iflag.h
/usr/include/bits/termios-c_lflag.h
/usr/include/bits/termios-c_oflag.h
/usr/include/bits/termios-misc.h
/usr/include/bits/termios-struct.h
/usr/include/bits/termios-tcflow.h
/usr/include/bits/types/struct_statx.h
/usr/include/bits/types/struct_statx_timestamp.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/falloc.h
/usr/include/linux/types.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm/sockios.h
/usr/include/asm/types.h
/usr/include/linux/ioctl.h
/usr/include/linux/posix_types.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm-generic/types.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
